{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/muon-spectroscopy-computational-project/muspinsim_config/muspinsim_config/1.1.0+galaxy0", "name": "MuSpinSim Configure", "version": "1.1.0+galaxy0", "description": "define simulation parameters", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "muspinsim_config", "owner": "muon-spectroscopy-computational-project", "changeset_revision": "52d3a28902e8", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "TextToolParameter", "name": "out_file_prefix", "argument": null, "type": "text", "label": "Name", "help": "A name with which to label this configuration", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "muspinsim", "area": false, "datalist": []}, {"model_class": "Section", "name": "spins", "type": "section", "title": "Spins", "help": null, "expanded": true, "inputs": [{"model_class": "Repeat", "name": "spins", "type": "repeat", "title": "Spins to simulate", "help": "Specify the spins to be used in the system. This should include a muon (mu) and one or more electrons (e)", "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "spin_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "TextToolParameter", "name": "spin", "argument": null, "type": "text", "label": "Species name", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "atomic_mass", "argument": null, "type": "integer", "label": "Atomic mass", "help": "Leave blank to use default mass - whole numbers only", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mu", "inputs": []}, {"model_class": "ConditionalWhen", "value": "e", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "spin_preset", "argument": null, "type": "select", "label": "Species", "help": "Select 'custom' to define own", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "mu", "options": [["mu", "mu", true], ["e", "e", false], ["custom", "custom", false]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "Section", "name": "interaction_params", "type": "section", "title": "Spin Interactions", "help": "", "expanded": true, "inputs": [{"model_class": "Repeat", "name": "interactions", "type": "repeat", "title": "Interactions to simulate", "help": "Add couplings between spins, and/or dissipation terms. Interaction terms available: Zeeman, hyperfine, dipolar, quadrupolar or dissipation. See muspinsim docs for more info", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "interaction_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "zeeman", "inputs": [{"model_class": "IntegerToolParameter", "name": "zeeman_index", "argument": null, "type": "integer", "label": "Index of coupled spin", "help": "Index refers to the order of the spins listed in 'spins' section.  The first spin in the list has index 1, the second has index 2, and so on.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "zeeman_vector", "argument": null, "type": "text", "label": "Zeeman coupling vector", "help": "Define 1X3 vector for local magnetic field coupling (T).                             Allows default expressions, constants and functions (see help)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "hyperfine", "inputs": [{"model_class": "IntegerToolParameter", "name": "hfine_index", "argument": null, "type": "integer", "label": "Index of nuclear coupled spin", "help": "Non-electronic spin - muon or otherwise.                                Index refers to the order of the spins listed in 'spins' section.  The first spin in the list has index 1, the second has index 2, and so on.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "hfine_e_index", "argument": null, "type": "integer", "label": "Index of electronic coupled spin", "help": "Optional, will use first defined electronic spin if unspecified", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "hfine_matrix", "argument": null, "type": "text", "label": "Hyperfine coupling tensor", "help": "Define 3X3 tensor for coupling between electron and non-electron spins (in MHz).                                Allows default expressions, constants and functions (see help)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": true, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dipolar", "inputs": [{"model_class": "IntegerToolParameter", "name": "di_index", "argument": null, "type": "integer", "label": "Index of 1st coupled spin", "help": "Index refers to the order of the spins listed in 'spins' section.  The first spin in the list has index 1, the second has index 2, and so on.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "di_index_2", "argument": null, "type": "integer", "label": "Index of 2nd coupled spin", "help": "Index refers to the order of the spins listed in 'spins' section.  The first spin in the list has index 1, the second has index 2, and so on.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "di_vector", "argument": null, "type": "text", "label": "Dipole coupling vector", "help": "Define 1X3 vector for coupling between two spins (Angstrom).                                Allows default expressions, constants and functions (see help)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "quadrupolar", "inputs": [{"model_class": "IntegerToolParameter", "name": "quad_index", "argument": null, "type": "integer", "label": "Index of coupled spin", "help": "Index refers to the order of the spins listed in 'spins' section.  The first spin in the list has index 1, the second has index 2, and so on.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "quad_matrix", "argument": null, "type": "text", "label": "Electric Field Gradient tensor", "help": "Define 3X3 tensor (in atomic units) for quadrupolar coupling.                                Allows default expressions, constants and functions (see help).                                Warning: spins with zero quadrupole moment will have zero coupling regardless of the input", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": true, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dissipation", "inputs": [{"model_class": "IntegerToolParameter", "name": "dis_index", "argument": null, "type": "integer", "label": "Index of spin with dissipation", "help": "Index refers to the order of the spins listed in 'spins' section.  The first spin in the list has index 1, the second has index 2, and so on.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "dis_val", "argument": null, "type": "text", "label": "Dissipation", "help": "Define dissipation term (MHz).                                Allows default expressions, constants and functions (see help)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "interaction", "argument": null, "type": "select", "label": "Choose interaction type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "zeeman", "options": [["Zeeman", "zeeman", false], ["hyperfine", "hyperfine", false], ["dipolar", "dipolar", false], ["quadrupolar", "quadrupolar", false], ["dissipation", "dissipation", false]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "Section", "name": "experiment_params", "type": "section", "title": "Experiment Parameters", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "experiment", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "alc", "inputs": [{"model_class": "Repeat", "name": "fields", "type": "repeat", "title": "Fields", "help": "Magnetic fields", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "field", "argument": null, "type": "text", "label": "Field", "help": "Optional, (default is 0).                             Accepts 1X3 vector, or scalar value. Scalar value means field is assumed to be aligned with z axis.                             Allows default expressions, constants and functions, plus MHz, muon_gyr constants and special 'range()' function (see help section)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "zero_field", "inputs": [{"model_class": "SelectToolParameter", "name": "x_axis", "argument": null, "type": "select", "label": "X axis", "help": "Range to use as X axis for output file(s)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "time", "options": [["time", "time", true], ["field", "field", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "y_axis", "argument": null, "type": "select", "label": "Y axis", "help": "Range to use as y axis for output file(s)                                 Asymmetry: use muon's polarization.                                 Integral: use muon's polarization integral over time.                                 WARNING: if integral chosen, 'time' parameter is ignored, and cannot be used as x-axis parameter ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "asymmetry", "options": [["integral", "integral", false], ["asymmetry", "asymmetry", true]], "display": "radio", "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "SelectToolParameter", "name": "x_axis", "argument": null, "type": "select", "label": "X axis", "help": "Range to use as X axis for output file(s)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "time", "options": [["time", "time", true], ["field", "field", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "y_axis", "argument": null, "type": "select", "label": "Y axis", "help": "Range to use as y axis for output file(s)                                 Asymmetry: use muon's polarization.                                 Integral: use muon's polarization integral over time.                                 WARNING: if integral chosen, 'time' parameter is ignored, and cannot be used as x-axis parameter ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "asymmetry", "options": [["integral", "integral", false], ["asymmetry", "asymmetry", true]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "Repeat", "name": "fields", "type": "repeat", "title": "Fields", "help": "Magnetic fields", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "field", "argument": null, "type": "text", "label": "Field (T)", "help": "Optional, (default is 0).                             Accepts 1X3 vector, or scalar value. Scalar value means field is assumed to be aligned with z axis.                             Allows default expressions, constants and functions, plus MHz, muon_gyr constants and special 'range()' function (see help section)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "Repeat", "name": "polarizations", "type": "repeat", "title": "Polarizations", "help": "The direction along which the muon                     should be polarized when starting, as well as the one in which it will be measured.                     Each entry will generate a separate calculation when muspinsim is run", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "polarization_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "TextToolParameter", "name": "polarization", "argument": null, "type": "text", "label": "Enter custom vector for polarization", "help": "Accepts 1X3 vector.                                        Allows default expressions, constants and functions (see help section)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "longitudinal", "inputs": []}, {"model_class": "ConditionalWhen", "value": "transverse", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "polarization_preset", "argument": null, "type": "select", "label": "Polarization", "help": "transverse: along x-axis, longitudinal: along z-axis, custom: define vector", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "custom", "options": [["longditudinal", "longitudinal", false], ["transverse", "transverse", false], ["custom", "custom", true]], "display": "radio", "multiple": false, "textable": false}}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "experiment_preset", "argument": null, "type": "select", "label": "Experiment type", "help": "Experiment preset to use. Avoided Level Crossing (ALC): sets polarization to longitudinal, x-axis to field and y-axis to integral.                              Zero field: sets polarization to transverse and field to 0. Choose custom for no preset", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "custom", "options": [["Avoided Level Crossing (ALC)", "alc", false], ["Zero Field", "zero_field", false], ["Custom", "custom", true]], "display": "radio", "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "average_axes", "argument": null, "type": "select", "label": "Average axes", "help": "Keywords that should have an average carried out over them. Each keyword ticked should have a range specified.                    Keywords not ticked or set as X axis, but which have a range set, will generate separate calculations for each value in the range when muspinsim is run.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "orientation", "options": [["orientation", "orientation", true], ["polarization", "polarization", false], ["field", "field", false], ["time", "time", false], ["temperature", "temperature", false]], "display": "checkboxes", "multiple": true, "textable": false}, {"model_class": "Repeat", "name": "orientations", "type": "repeat", "title": "Orientations", "help": "Orientations to use for crystallites - (define powder averages)", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "orientation_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "eulrange", "inputs": [{"model_class": "TextToolParameter", "name": "eul_n", "argument": null, "type": "text", "label": "n", "help": "value for n for eulrange(n),                                Allows default expressions, constants and functions.                                WARNING: large values are more computationally expensive.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "zcw", "inputs": [{"model_class": "TextToolParameter", "name": "zcw_n", "argument": null, "type": "text", "label": "n", "help": "value for n for zcw(n)                                Allows default expressions, constants and functions.                                WARNING: large values are more computationally expensive.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "2_polar", "inputs": [{"model_class": "TextToolParameter", "name": "theta", "argument": null, "type": "text", "label": "\u03b8 (theta/inclination) angle", "help": "All polar angle entries allow default expressions, constants and functions", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "phi", "argument": null, "type": "text", "label": "\u03d5 (phi/azimuth) angle", "help": "All polar angle entries allow default expressions, constants and functions", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "3_euler", "inputs": [{"model_class": "TextToolParameter", "name": "eul_1", "argument": null, "type": "text", "label": "Euler angle 1", "help": "All Euler angle entries allow default expressions, constants and functions", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "eul_2", "argument": null, "type": "text", "label": "Euler angle 2", "help": "All Euler angle entries allow default expressions, constants and functions", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "eul_3", "argument": null, "type": "text", "label": "Euler angle 3", "help": "All Euler angle entries allow default expressions, constants and functions", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "4_euler", "inputs": [{"model_class": "TextToolParameter", "name": "eul_1", "argument": null, "type": "text", "label": "Euler angle 1", "help": "All Euler angle entries allow default expressions and constants", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "eul_2", "argument": null, "type": "text", "label": "Euler angle 2", "help": "All Euler angle entries allow default expressions and constants", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "eul_3", "argument": null, "type": "text", "label": "Euler angle 3", "help": "All Euler angle entries allow default expressions and constants", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "weight", "argument": null, "type": "float", "label": "Weight", "help": "Allows only floating point value, weights will automatically be normalised", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "orientation_preset", "argument": null, "type": "select", "label": "Orientation", "help": "Polar angles: Define two polar angles \u03b8 and \u03d5, defining only the direction of the z-axis (recommended for powder averages).                                 Euler angles: Define 3 Euler angles defining a new frame, convention used is ZYZ by default.                                 Euler angles with weight: define 3 Euler angles and a weight (will be normalized automatically).                                 Euler angles helper function: eulrange(n).                                 Zaremba-Conroy-Wolfsberg helper function: zcw(n)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "zcw", "options": [["Polar angles", "2_polar", false], ["Euler angles", "3_euler", false], ["Euler angles with weight", "4_euler", false], ["Euler angles helper function (eulrange(n))", "eulrange", false], ["Zaremba-Conroy-Wolfsberg helper function (zcw(n))", "zcw", true]], "display": "radio", "multiple": false, "textable": false}}]}, {"model_class": "SelectToolParameter", "name": "euler_convention", "argument": null, "type": "select", "label": "Euler Convention", "help": "Euler angle convention to use for orientation definitions (ignored if Euler angles not defined)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "zyz", "options": [["ZYZ", "zyz", true], ["ZXZ", "zxz", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "Repeat", "name": "times", "type": "repeat", "title": "Time", "help": "A time or range of times (\u03bcs)", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "time", "argument": null, "type": "text", "label": "Time", "help": "Either a single time value or `range` function                        Allows default expressions, default constants, and special 'range()' function (see help section)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "range(0, 10, 101)", "area": false, "datalist": []}]}, {"model_class": "Repeat", "name": "temperatures", "type": "repeat", "title": "Temperature", "help": "Temperature or range of temperatures (K)", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "temperature", "argument": null, "type": "text", "label": "", "help": "Either single value or 'range()' function                        Allows default expressions, default constants, and special 'range()' function (see help section).                        Warning: both density matrices and dissipative couplings for finite temperatures are only calculated approximatively, see muspinsim docs.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "inf", "area": false, "datalist": []}]}]}, {"model_class": "Section", "name": "fitting_params", "type": "section", "title": "Fitting Parameters", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "fitting_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "SelectToolParameter", "name": "fitting_method", "argument": null, "type": "select", "label": "Method to use to fit the data", "help": "See the help section for a description of each method", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "nelder-mead", "options": [["Nelder-Mead", "nelder-mead", true], ["L-BFGS", "lbfgs", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "Repeat", "name": "fitting_variables", "type": "repeat", "title": "Variable to fit to the experimental data", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "var_name", "argument": null, "type": "text", "label": "Name of the variable", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "start_val", "argument": null, "type": "text", "label": "Starting value", "help": "Allows default expressions, constants and functions, plus MHz, muon_gyr constants. Cannot contain names of other variables", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "min_bound", "argument": null, "type": "text", "label": "minimum bound", "help": "Allows default expressions, constants and functions, plus MHz, muon_gyr constants", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "-inf", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "max_bound", "argument": null, "type": "text", "label": "maximum bound", "help": "Allows default expressions, constants and functions, plus MHz, muon_gyr constants", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "inf", "area": false, "datalist": []}]}, {"model_class": "FloatToolParameter", "name": "fitting_tolerance", "argument": null, "type": "float", "label": "Fitting Tolerance", "help": "Used as the tol parameter in Scipy's scipy.optimize.minimize method. Will use scipy defaults if left blank.                            Does not accept expressions/functions/constants", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "fitting", "argument": null, "type": "select", "label": "Fit experimental data with simulations", "help": "Fitting requires a file with data to fit. File must be given in muspinsim tool, or by manually setting filepath for keyword 'fitting_data' if running muspinsim externally", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Yes", "true", false], ["No", "", true]], "display": "radio", "multiple": false, "textable": false}}]}], "outputs": [{"model_class": "ToolOutput", "name": "out_file", "format": "txt", "label": "muspinsim input file $out_file_prefix", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outfile.in", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "muon_spectroscopy", "panel_section_name": "Muon Spectroscopy", "form_style": "regular"}