{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/melpetera/acorf/Analytic_correlation_filtration/2019-06-20", "name": "Analytic correlation filtration", "version": "2019-06-20", "description": ": Detect analytic correlation among data and remove them.", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "acorf", "owner": "melpetera", "changeset_revision": "15430e89c97d", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "file_in", "argument": null, "type": "data", "label": "Correlation table file", "help": "The .txt similarity table (you can obtain it by using the Between-table Correlation tool or for exemple the cor() function in R) ", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "dataMatrix_in", "argument": null, "type": "data", "label": "dataMatrix file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "variableMetadata_in", "argument": null, "type": "data", "label": "variableMetadata file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "FloatToolParameter", "name": "correl_threshold", "argument": null, "type": "float", "label": "Correlation threshold", "help": "Define the minimum similarity threshold accepted to determine analytic correlation", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.9", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "mass_file", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "Conditional", "name": "liste", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "false", "inputs": []}, {"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "DataToolParameter", "name": "mass_file_in", "argument": null, "type": "data", "label": "Mass differences table (format: tabular or csv) ", "help": "The file containing all your report and known mass differences (cf help for file example) ", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "csv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "BooleanToolParameter", "name": "mass_list", "argument": null, "type": "boolean", "label": "Do you have your own list of mass differences or do you want to use a default list ?", "help": "'YES' if you have your own list to upload; 'NO' if you want to use a default list", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "FloatToolParameter", "name": "mass_threshold", "argument": null, "type": "float", "label": "Mass difference range", "help": "2 ions need to have a difference mass included in the list at +/- mass difference range to be considered as analytically correlated | Value recommendation : 0.005", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.005", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "mass_choice", "argument": null, "type": "boolean", "label": "Do you want to take into account mass differences between 2 ions?", "help": "'YES' if you want to take it into account; 'NO' if you don't want to take into account mass information", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "rt_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "FloatToolParameter", "name": "rt_threshold", "argument": null, "type": "float", "label": "Retention time difference threshold", "help": "Choose a retention time difference threshold between 2 ions considered as analytically correlated | Value recommendation : 0.1", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "rt_choice", "argument": null, "type": "boolean", "label": "Do you want to take into account retention time differences between 2 ions? ", "help": "'YES' if want to take into account retention time information; 'NO' if you don't want to take into account retention time information", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "repres_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "max_intensity_max_mass", "inputs": [{"model_class": "FloatToolParameter", "name": "int_threshold", "argument": null, "type": "float", "label": "Minimum intensity threshold for the representative ion", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "int_percentage", "argument": null, "type": "float", "label": "Percentage of highest intensity of the group accept for the new representative ion. This option allow to avoid isotope selection. ", "help": "Example: ion A have the highest intensity of a group but not the highest mass, B is an ion that have the second highest intensity in the group and a highest mass than A, to choose B as a representative ion for the group his intensity need to be at list 50% of the A intensity.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "intensity", "inputs": []}, {"model_class": "ConditionalWhen", "value": "mass", "inputs": []}, {"model_class": "ConditionalWhen", "value": "mixt", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "repres_opt_selector", "argument": null, "type": "select", "label": "Which representative ion do you want to select for each group", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "intensity", "options": [["Highest intensity", "intensity", false], ["Highest mass", "mass", false], ["Highest (mass2 x intensity) ", "mixt", false], ["Highest mass between the 3 highest intensity (following intensity threshold and rules ==> see help) ", "max_intensity_max_mass", false]], "display": "radio", "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "sif_out", "format": "sif", "label": "${file_in.name}_sif", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "variableMetadata_out", "format": "tabular", "label": "${variableMetadata_in.name}_representative_ion", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "metabolomics_quality_processing_ms", "panel_section_name": "Quality processing MS", "form_style": "regular"}