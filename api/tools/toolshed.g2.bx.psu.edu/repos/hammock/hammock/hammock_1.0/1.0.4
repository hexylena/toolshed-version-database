{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/hammock/hammock/hammock_1.0/1.0.4", "name": "Hammock - cluster peptides", "version": "1.0.4", "description": "Clusters short peptide sequences", "labels": [], "edam_operations": ["operation_0291"], "edam_topics": ["topic_3510", "topic_0154"], "hidden": false, "is_workflow_compatible": true, "xrefs": [{"value": "hammock", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "hammock", "owner": "hammock", "changeset_revision": "4db310b7e37c", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Source sequence file", "help": "File with sequences to cluster in fasta format. See -i, --input in manual for details.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "label_params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "auto", "inputs": []}, {"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "Repeat", "name": "round_labels", "type": "repeat", "title": "Label", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "label", "argument": null, "type": "text", "label": "Sequence label", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set_labels", "argument": null, "type": "select", "label": "Specify a subset of labels to be used", "help": "Set Automatic to use all labels present in the data or choose a subset of labels to be used. See -l, --labels in manual for details.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["Automatic - all labels", "auto", false], ["Set list of labels manually", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "advanced_greedy_params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "auto", "inputs": []}, {"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_shift", "argument": null, "type": "integer", "label": "Maximal sequence shift", "help": "Maximal number of positions sequences are allowed to shift for during greedy clustering. See -x, --max shift in manual for details.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "shift_penalty", "argument": null, "type": "integer", "label": "Sequence shift penalty", "help": "Score penalty added to to each alignment score during greedy clustering. This penalty is added for every amino acid aligned towards a (trailing) gap. This value should typically be non-positive (With a positive value, sequences benefit from containing more gaps). See -p, --gap penalty in manual for details.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "set_order", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "size", "inputs": []}, {"model_class": "ConditionalWhen", "value": "alphabetic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "random", "inputs": [{"model_class": "IntegerToolParameter", "name": "seed", "argument": null, "type": "integer", "label": "Seed for random number generation", "help": "Set a seed value for the pseudorandom sequence order. See -S, --seed in manual for details.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "42", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "order", "argument": null, "type": "select", "label": "Greedy clustering order", "help": "Select the order of sequences during the greedy clustering. See -R, --order in manual for details.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "size", "options": [["Size", "size", false], ["Alphabetic", "alphabetic", false], ["Random", "random", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "scoring_matrix", "argument": null, "type": "select", "label": "Substitiution matrix schema.", "help": "Select a substitution matrix to be used to score alignments during glreedy clustering. See -m, --matrix in manual for details.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "blosum62", "options": [["Blosum 62", "blosum62", false], ["Blosum 30", "blosum30", false], ["Blosum 35", "blosum35", false], ["Blosum 40", "blosum40", false], ["Blosum 45", "blosum45", false], ["Blosum 50", "blosum50", false], ["Blosum 55", "blosum55", false], ["Blosum 60", "blosum60", false], ["Blosum 65", "blosum65", false], ["Blosum 70", "blosum70", false], ["Blosum 75", "blosum75", false], ["Blosum 80", "blosum80", false], ["Blosum 85", "blosum85", false], ["Blosum 90", "blosum90", false], ["Blosum 100", "blosum100", false], ["Gonnet 250", "gonnet250", false], ["Pam 250", "pam250", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "greedy_params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "auto", "inputs": []}, {"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "IntegerToolParameter", "name": "greedy_threshold", "argument": null, "type": "integer", "label": "Greedy clustering threshold", "help": "Minimal alignment score needed for a sequence to join a cluster during greedy clustering.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "24", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set_greedy", "argument": null, "type": "select", "label": "Set greedy clustering threshold", "help": "Minimal alignment score needed for a sequence to join a cluster during greedy clustering. Can be either user defined or set automatically based on mean sequence length. See -g, --greedy threshold in manual for details.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["Auto detection", "auto", false], ["Set manually", "set", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set_greedy_params", "argument": null, "type": "select", "label": "Greedy clustering options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["Default - automatic settings", "auto", false], ["Set manually", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "advanced_hmm_params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "auto", "inputs": []}, {"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "Conditional", "name": "threshold_params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "auto", "inputs": []}, {"model_class": "ConditionalWhen", "value": "part", "inputs": [{"model_class": "FloatToolParameter", "name": "part_threshold", "argument": null, "type": "float", "label": "The proporiton of the largest greedy clusters to be used as cluster cores in subsquent clustering procedure.", "help": "See -a, --part threshold in manual for details.", "refresh_on_change": false, "min": 1e-05, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.025", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "size", "inputs": [{"model_class": "IntegerToolParameter", "name": "size_threshold", "argument": null, "type": "integer", "label": "Minimum size of a greedy cluster needed for it to be used as cluster core in subsquent clustering procedure.", "help": "See -s, --size threshold in manual for details.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "count", "inputs": [{"model_class": "IntegerToolParameter", "name": "count_threshold", "argument": null, "type": "integer", "label": "The number of greedy clusters to be used as cluster cores in subsquent clustering procedure.", "help": "See -c, --count threshold in manual for details", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "25", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "clustering_threshold", "argument": null, "type": "select", "label": "How many initial clusters to use as cluster cores", "help": "After greedy clusering, some of the largest clusters are selected as cluster cores for subsequent clustering procedure. The number of cluster cores can be determined either automatically or manually as top x percent of largest clusters, all clusters satisfying size threshold or exact number of clusters. See -a, --part threshold, -s, --size threshold and -c, --count threshold in manual for details.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["Automatic setting", "auto", false], ["Set percentual proportion", "part", false], ["Set size threshold", "size", false], ["Set explicit count", "count", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "score_params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "auto", "inputs": []}, {"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "SelectToolParameter", "name": "relative_scores", "argument": null, "type": "select", "label": "Relative/absolute scores", "help": "All score thresholds in all clustering rounds can be interpreted either as relative values (per HMM match-state) or absolute values. See -e, --relative thresholds in manual for details.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "absolute", "options": [["Scores are absolute values", "absolute", false], ["Scores are relative, i.e. per match state", "relative", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Repeat", "name": "round", "type": "repeat", "title": "Round", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "FloatToolParameter", "name": "assign_score", "argument": null, "type": "float", "label": "Assign threshold", "help": "Minimal score needed for a sequence to be assigned to a cluster. See -n, --assign thresholds in manual for details.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "overlap_score", "argument": null, "type": "float", "label": "Overlap threshold", "help": "Minimal score needed for two clusters to be considered overlapping. This affects cluster merging step heuristic speedup. If this is set to 0.0, full cluster merging routine will be performed, which is the most precise but the slowest. It is suggested to perform full cluster merging routine at least in the last round. See -v, --overlap thresholds in manual for details.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "8.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "merge_score", "argument": null, "type": "float", "label": "Merge threshold", "help": "Minimal score needed for two clusters to be merged. See -r, --merge thresholds in manual for details", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set_scores", "argument": null, "type": "select", "label": "Clustering rounds", "help": "Set the number of clustering rounds and score thresholds used. Automatic mode means 3 rounds and score thresholds defined based on mean sequence length.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["Automatic settings", "auto", false], ["Set manually", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "min_match_states", "argument": null, "type": "integer", "label": "Minimal number of HMM match states.", "help": " Minimal number of match states maintained for each cluster's HMM throughout the computation. This parameter can be also viewed as minimal motif length. See -h, --min match states in manual for details.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_gap_proportion", "argument": null, "type": "float", "label": "Maximal proportion of gaps allowed in a match state", "help": "Maximal proportion of gaps in HMM match states. Any multiple sequence alignment column containing more gaps will not be considered a match state. See -y, --max gap proportion in manual for details.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_ic", "argument": null, "type": "float", "label": "Minimal information content allowed in a match state", "help": "Minimal information content (In terms of Shannon information theory) of HMM match states. Any multiple sequence alignment column having lower information content will not be considered a match state. Minimum: 0.0 (any MSA column composition), maximum: 4.32 (MSA column containing the same amino acid on each line). See -k, --min ic in manual for details.", "refresh_on_change": false, "min": 0.0, "max": 4.321928, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.2", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "match_state_params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "auto", "inputs": []}, {"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_aln_length", "argument": null, "type": "integer", "label": "Maximal alignment length", "help": "Maximal multiple sequence alignment length for every cluster.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "24", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set_max_aln_length", "argument": null, "type": "select", "label": "Maximal alignment length", "help": "Maximal multiple sequence alignment length for every cluster. Can be either user defined or specify automatically based on mean sequence length. See -j, --max aln length in manual for details.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["Auto detection", "auto", false], ["Set manually", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "max_inner_gaps", "argument": null, "type": "integer", "label": "Maximum number of inner gaps", "help": "Maximum number of inner gaps in any line of any cluster's multiple sequence alignment. See -u, --max inner gaps in manual for details.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "extension_increase_length", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": []}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "set_max_aln_length", "argument": null, "type": "select", "label": "Can MSA length be increased during extension step?", "help": "By default, only cluster merging can increase cluster's multiple sequence alignment length. Setting this option to 'Yes' will allow also sequence insertions to icrease the MSA length. See -q, --extension increase length in manual for details.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["No", "false", false], ["Yes", "true", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set_hmm_params", "argument": null, "type": "select", "label": "HMM-clustering options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["Default - automatic settings", "auto", false], ["Set manually", "set", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "output_clusters", "format": "tsv", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "output_sequences", "format": "tsv", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "output_sequences_ordered", "format": "tsv", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "multiple_alignments", "panel_section_name": "Multiple Alignments", "form_style": "regular"}