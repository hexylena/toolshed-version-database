{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/richard-burhans/segalign/segalign/0.1.2.1+galaxy0", "name": "SegAlign", "version": "0.1.2.1+galaxy0", "description": "A Scalable GPU System for Pairwise Whole Genome Alignments based on LASTZ's seed-filter-extend paradigm", "labels": [], "edam_operations": ["operation_0491"], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "segalign", "owner": "richard-burhans", "changeset_revision": "d3f11ae6790c", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "mode", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "segalign", "inputs": [{"model_class": "DataToolParameter", "name": "target", "argument": null, "type": "data", "label": "Target sequence file in FASTA format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "query", "argument": null, "type": "data", "label": "Query sequence file in FASTA format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "sequence_options", "type": "section", "title": "Sequence Options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "strand_selector", "argument": null, "type": "select", "label": "Strand to search", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "both", "options": [["plus", "plus", false], ["minus", "minus", false], ["both", "both", true]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "Section", "name": "scoring_options", "type": "section", "title": "Scoring Options", "help": null, "expanded": false, "inputs": [{"model_class": "DataToolParameter", "name": "scoring", "argument": "--scoring", "type": "data", "label": "Scoring file in LASTZ format", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "ambiguous_selector", "argument": null, "type": "select", "label": "Ambiguous Nucleotides", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "x", "options": [["None", "x", true], ["N", "n", false], ["IUPAC", "iupac", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "ambiguous_params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "false", "inputs": []}, {"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "IntegerToolParameter", "name": "ambiguous_reward", "argument": null, "type": "integer", "label": "Ambiguous Nucleotide Reward", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ambiguous_penalty", "argument": null, "type": "integer", "label": "Ambiguous Nucleotide Penalty", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set_ambiguous_params_selector", "argument": null, "type": "select", "label": "Set Ambiguous Nucleotide Scoring Parameters", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["No", "false", true], ["Yes", "true", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Section", "name": "seeding_options", "type": "section", "title": "Seeding Options", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "seed", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "12of19", "inputs": []}, {"model_class": "ConditionalWhen", "value": "14of22", "inputs": []}, {"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "TextToolParameter", "name": "custom_seed", "argument": null, "type": "text", "label": "Custom seed pattern", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "seed_selector", "argument": null, "type": "select", "label": "Seed patern", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "12of19", "options": [["12of19 (1110100110010101111)", "12of19", true], ["14of22 (1110101100110010101111)", "14of22", false], ["custom", "custom", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "step", "argument": "--step", "type": "integer", "label": "Offset between the starting positions of successive target words considered for generating seed table", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "notransition", "argument": "--notransition", "type": "boolean", "label": "Don't allow one transition in a seed hit", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "Section", "name": "ungapped_extension_options", "type": "section", "title": "Ungapped Extension Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "xdrop", "argument": "--xdrop", "type": "integer", "label": "X-drop value for gap-free extension", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "910", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "hspthresh", "argument": "--hspthresh", "type": "integer", "label": "Segment score threshold for high scoring pairs", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "noentropy", "argument": "--noentropy", "type": "boolean", "label": "Don't adjust low score segment pair scores using entropy factor after filtering stage", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "Section", "name": "gapped_extension_options", "type": "section", "title": "Gapped Extension Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "nogapped", "argument": "--nogapped", "type": "boolean", "label": "Don't perform gapped extension stage", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "IntegerToolParameter", "name": "ydrop", "argument": "--ydrop", "type": "integer", "label": "Y-drop value for gapped extension", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "9430", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "gappedthresh", "argument": "--gappedthresh", "type": "integer", "label": "Score threshold for gapped alignments", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "notrivial", "argument": "--notrivial", "type": "boolean", "label": "Don't output a trivial self-alignment block if the target and query sequences are identical", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "Section", "name": "output_options", "type": "section", "title": "Output Options", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "format", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "bam", "inputs": [{"model_class": "SelectToolParameter", "name": "bam_options", "argument": "--format=sam, --format=softsam", "type": "select", "label": "Select a BAM flavor to output", "help": "Lastz actually outputs SAM data but Galaxy converts it into BAM to save space. For alignments that don't reach the end of a query, \u2011\u2011format=sam uses 'hard clipping', while \u2011\u2011format=softsam uses 'soft clipping'. See the section on 'clipped alignment' in the SAM specification for an explanation of what this means. The options \u2011\u2011format=sam- and \u2011\u2011format=softsam- suppress the SAM header lines. This makes them suitable for concatenating output from multiple runs. If you need to specify readgroup information: use AddOrEplaceReadGroups from Picard package", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "sam", "options": [["BAM", "sam", false], ["soft-clipped BAM", "softsam", false], ["BAM without header", "sam-", false], ["soft-clipped BAM without header", "softsam-", false]], "display": "radio", "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "general_def", "inputs": []}, {"model_class": "ConditionalWhen", "value": "general_full", "inputs": [{"model_class": "SelectToolParameter", "name": "fields", "argument": "--format=general-[:fields]", "type": "select", "label": "Select which fields to include", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["score", "name1", "strand1", "size1", "zstart1", "end1", "name2", "strand2", "size2", "zstart2", "end2", "identity", "id%", "coverage", "cov%"], "options": [["score: Score of the alignment block", "score", true], ["name1: Name of the target sequence", "name1", true], ["number1: Number of the target sequence within the target file", "number1", false], ["strand1: Target sequence strand ", "strand1", true], ["size1: Size of the entire target sequence", "size1", true], ["start1: Starting position of the alignment block in the target, origin-one", "start1", false], ["zstart1: Starting position of the alignment block in the target, origin-zero", "zstart1", true], ["end1: Ending position of the alignment block in the target", "end1", true], ["length1: Length of the alignment block in the target (excluding gaps)", "length1", false], ["text1: Aligned characters in the target, including gap characters", "text1", false], ["qalign1: The target quality sequence (if there is one) correpsonding to aligned characters", "qalign1", false], ["nucs1: The entire target sequence", "nucs1", false], ["name2: Name of the query sequence", "name2", true], ["number2: Number of the query sequence within the query file", "number2", false], ["strand2: Query sequence strand", "strand2", true], ["size2: Size of the entire query sequence", "size2", true], ["start2: Starting position of the alignment block in the query, origin-one", "start2", false], ["zstart2: Starting position of the alignment block in the query, origin-one", "zstart2", true], ["end2: Ending position of the alignment block in the query", "end2", true], ["length2: Length of the alignment block in the query (excluding gaps)", "length2", false], ["text2: Aligned characters in the query, including gap characters", "text2", false], ["qalign2: The query quality sequence (if there is one) correpsonding to aligned characters", "qalign2", false], ["nucs2: The entire query sequence", "nucs2", false], ["nmatch: Match count", "nmatch", false], ["nmismatch: Mismatch count", "nmismatch", false], ["ncolumn: Number of columns in the block. This includes matches, mismatches (substitutions), and gaps", "ncolumn", false], ["npair: Number of aligned bases in the block that are matches or mismatches (substitutions)", "npair", false], ["ngap: Gap count, the number of gaps in the block, counting each run of gapped columns as a single gap", "ngap", false], ["cgap: Gap column count, the number of gaps in the block, counting each gapped column as a separate gap", "cgap", false], ["diff: Differences between what would be written for text1 and text2", "diff", false], ["cigar: A CIGAR-like representation of the alignment\u2019s path", "cigar", false], ["cigarx: Same as cigar, but uses a newer syntax that distinguishes matches from substitutions", "cigarx", false], ["identity: Fraction of aligned bases in the block that are matches ", "identity", true], ["idfrac: Fraction of aligned bases in the block that are matches ", "idfrac", false], ["id% Fraction of aligned bases in the block that are matches (as %)", "id%", true], ["blastid%: Fraction of the alignment block that is matches, as would be reported by NCBI BLAST", "blastid%", false], ["continuity: Rate of non-gaps (non-indels) in the alignment block", "continuity", false], ["confrac: Rate of non-gaps (non-indels) in the alignment block (as fraction)", "confrac", false], ["con%: Rate of non-gaps (non-indels) in the alignment block (as %)", "con%", false], ["coverage: Fraction of the entire input sequence (target or query, whichever is shorter) that is covered by the alignment block", "coverage", true], ["covfrac: Fraction of the entire input sequence (target or query, whichever is shorter) that is covered by the alignment block (as fraction)", "covfrac", false], ["cov%: Fraction of the entire input sequence (target or query, whichever is shorter) that is covered by the alignment block (as %)", "cov%", true], ["diagonal: The diagonal of the start of the alignment block in the DP matrix, expressed as an identifying number start1-start2", "diagonal", false], ["shingle: A measurement of the shingle overlap between the target and the query", "shingle", false], ["number: The alignment number, counted as alignments are written to output (1-base)", "number", false], ["znumber: The alignment number, counted as alignments are written to output (0-base)", "znumber", false]], "display": "checkboxes", "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "maf", "inputs": [{"model_class": "SelectToolParameter", "name": "maf_type", "argument": "--format=maf", "type": "select", "label": "Select MAF flavor", "help": "MAF is a multiple alignment format developed at UCSC", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "maf-", "options": [["MAF", "maf", false], ["MAF with additional stats", "maf+", false], ["MAF without header and comments", "maf-", true]], "display": "radio", "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "blastn", "inputs": []}, {"model_class": "ConditionalWhen", "value": "differences", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "format_selector", "argument": null, "type": "select", "label": "Specify the output format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "maf", "options": [["BAM --format=sam)", "bam", false], ["General default (--format=general)", "general_def", false], ["Customized general (--format=general[:fields])", "general_full", false], ["MAF (--format=maf)", "maf", true], ["blastn (--format=BLASTN)", "blastn", false], ["Differences (--format=differences)", "differences", false]], "display": "radio", "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "markend", "argument": "--markend", "type": "boolean", "label": "Write a marker line just before completion", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "Section", "name": "system_options", "type": "section", "title": "System Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "wga_chunk_size", "argument": "--wga_chunk_size", "type": "integer", "label": "Chunk sizes for GPU calls for Xdrop - \u26a0 change only if you are a developer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "250000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "lastz_interval_size", "argument": "--lastz_interval_size", "type": "integer", "label": "LASTZ interval for Ydrop - \u26a0 change only if you are a developer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seq_block_size", "argument": "--seq_block_size", "type": "integer", "label": "LASTZ interval for Ydrop - \u26a0 change only if you are a developer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500000000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "num_gpu", "argument": "--num_gpu", "type": "integer", "label": "Specify number of GPUs to use - -1 if all the GPUs should be used", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "debug", "argument": "--debug", "type": "boolean", "label": "Print debug messages", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "Section", "name": "diagonal_partition_options", "type": "section", "title": "Diagonal Partition Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "diagonal_partition", "argument": "--diagonal_partition", "type": "boolean", "label": "Enable diagonal partition optimization", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "IntegerToolParameter", "name": "max_segments", "argument": "--max_segments", "type": "integer", "label": "Max segments", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20000", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "segalign_repeat_masker", "inputs": [{"model_class": "DataToolParameter", "name": "seq_file", "argument": null, "type": "data", "label": "Sequence file in FASTA format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "sequence_options", "type": "section", "title": "Sequence Options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "strand_selector", "argument": null, "type": "select", "label": "Strand to search", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "both", "options": [["plus", "plus", false], ["minus", "minus", false], ["both", "both", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "neighbor_proportion", "argument": "--neighbor_proportion", "type": "float", "label": "Proportion of neighbouring intervals to align the query interval to", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.2", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "scoring_options", "type": "section", "title": "Scoring Options", "help": null, "expanded": false, "inputs": [{"model_class": "DataToolParameter", "name": "scoring", "argument": "--scoring", "type": "data", "label": "Scoring file in LASTZ format", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "ambiguous_selector", "argument": null, "type": "select", "label": "Ambiguous Nucleotides", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "x", "options": [["None", "x", true], ["N", "n", false], ["IUPAC", "iupac", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "ambiguous_params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "false", "inputs": []}, {"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "IntegerToolParameter", "name": "ambiguous_reward", "argument": null, "type": "integer", "label": "Ambiguous Nucleotide Reward", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ambiguous_penalty", "argument": null, "type": "integer", "label": "Ambiguous Nucleotide Penalty", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set_ambiguous_params_selector", "argument": null, "type": "select", "label": "Set Ambiguous Nucleotide Scoring Parameters", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["No", "false", true], ["Yes", "true", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Section", "name": "seeding_options", "type": "section", "title": "Seeding Options", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "seed", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "12of19", "inputs": []}, {"model_class": "ConditionalWhen", "value": "14of22", "inputs": []}, {"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "TextToolParameter", "name": "custom_seed", "argument": null, "type": "text", "label": "Custom seed pattern", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "seed_selector", "argument": null, "type": "select", "label": "Seed patern", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "12of19", "options": [["12of19 (1110100110010101111)", "12of19", true], ["14of22 (1110101100110010101111)", "14of22", false], ["custom", "custom", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "step", "argument": "--step", "type": "integer", "label": "Offset between the starting positions of successive target words considered for generating seed table", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "notransition", "argument": "--notransition", "type": "boolean", "label": "Don't allow one transition in a seed hit", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "Section", "name": "ungapped_extension_options", "type": "section", "title": "Ungapped Extension Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "xdrop", "argument": "--xdrop", "type": "integer", "label": "X-drop value for gap-free extension", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "910", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "hspthresh", "argument": "--hspthresh", "type": "integer", "label": "Segment score threshold for high scoring pairs", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "noentropy", "argument": "--noentropy", "type": "boolean", "label": "Don't adjust low score segment pair scores using entropy factor after filtering stage", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "Section", "name": "output_options", "type": "section", "title": "Output Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "M", "argument": "--M", "type": "integer", "label": "report any position that is covered by at least this many alignments; the maximum allowed depth is 255", "help": "", "refresh_on_change": false, "min": null, "max": 255, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "markend", "argument": "--markend", "type": "boolean", "label": "Write a marker line just before completion", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "Section", "name": "system_options", "type": "section", "title": "System Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "wga_chunk_size", "argument": "--wga_chunk_size", "type": "integer", "label": "Chunk sizes for GPU calls for Xdrop - \u26a0 change only if you are a developer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "250000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "lastz_interval_size", "argument": "--lastz_interval_size", "type": "integer", "label": "LASTZ interval for Ydrop - \u26a0 change only if you are a developer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seq_block_size", "argument": "--seq_block_size", "type": "integer", "label": "LASTZ interval for Ydrop - \u26a0 change only if you are a developer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500000000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "num_gpu", "argument": "--num_gpu", "type": "integer", "label": "Specify number of GPUs to use - -1 if all the GPUs should be used", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "debug", "argument": "--debug", "type": "boolean", "label": "Print debug messages", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mode_selector", "argument": null, "type": "select", "label": "Choose the mode", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "segalign", "options": [["SegAlign", "segalign", true], ["SegAlign repeat masker", "segalign_repeat_masker", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "segalign_output", "format": "tabular", "label": "SegAlign on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "segalign_diagonal_partition_output", "format": "tgz", "label": "SegAlign Diagonal Partition on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "data_package.tgz", "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "segalign_repeat_masker_output", "format": "tabular", "label": "SegAlign Repeat Masker on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "mapping", "panel_section_name": "Mapping", "form_style": "regular"}