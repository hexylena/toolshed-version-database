{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/recetox/spec2vec_training/spec2vec_training/0.8.0+galaxy0", "name": "spec2vec model training", "version": "0.8.0+galaxy0", "description": "Train a Spec2Vec model for mass spectra similarity scoring", "labels": [], "edam_operations": ["operation_2421", "operation_3803", "operation_3860", "operation_3801"], "edam_topics": ["topic_3172", "topic_0218", "topic_0121", "topic_3520"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "spec2vec", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "spec2vec_training", "owner": "recetox", "changeset_revision": "9d917de87cca", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "spectra_filename", "argument": null, "type": "data", "label": "Training spectra", "help": "Spectra file to train a Spec2Vec model.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["msp", "mgf"], "edam": {"edam_formats": ["format_2330", "format_3651"], "edam_data": ["data_0006", "data_2536"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "output_parameters", "type": "section", "title": "Output parameters", "help": null, "expanded": true, "inputs": [{"model_class": "BooleanToolParameter", "name": "as_pickle", "argument": null, "type": "boolean", "label": "Save model as Pickle file", "help": "Add a Pickle output besides default JSON.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "TRUE", "falsevalue": "FALSE"}, {"model_class": "Conditional", "name": "model_checkpoints", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "TRUE", "inputs": [{"model_class": "TextToolParameter", "name": "checkpoints", "argument": null, "type": "text", "label": "Number of training epochs with checkpoints", "help": "Comma-separated epoch numbers after which to save a model. The highest number will be used as a total number of epochs for training.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "10,20,50", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "FALSE", "inputs": [{"model_class": "IntegerToolParameter", "name": "epochs", "argument": null, "type": "integer", "label": "Number of training epochs", "help": "Number of epochs to train the model.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "save_checkpoints", "argument": null, "type": "select", "label": "Model checkpoints", "help": "Epochs after which to save a model.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "FALSE", "options": [["Yes", "TRUE", false], ["No", "FALSE", true]], "display": "radio", "multiple": false, "textable": false}}]}, {"model_class": "Section", "name": "training_parameters", "type": "section", "title": "Training hyperparameters", "help": null, "expanded": true, "inputs": [{"model_class": "IntegerToolParameter", "name": "vector_size", "argument": null, "type": "integer", "label": "Vector size", "help": "Dimensionality of the feature vectors (i.e., into how many dimensions to encode each m/z and neutral loss peak.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "300", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "alpha", "argument": null, "type": "float", "label": "Alpha", "help": "The initial learning rate.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.025", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_alpha", "argument": null, "type": "float", "label": "Minimum Alpha", "help": "Learning rate will linearly drop to this value as training progresses.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.00025", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "window", "argument": null, "type": "integer", "label": "Window", "help": "Maximum distance between the current and predicted peak within a spectrum.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_count", "argument": null, "type": "integer", "label": "Minimum peak count", "help": "Ignores all peaks with absolute frequency lower than this.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "sample", "argument": null, "type": "float", "label": "Sample", "help": "The threshold for configuring which higher-frequency peaks are randomly downsampled.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.001", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seed", "argument": null, "type": "integer", "label": "Seed", "help": "Seed of random number generator for model reproducibility.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "sg_param", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "0", "inputs": [{"model_class": "SelectToolParameter", "name": "cbow_mean", "argument": null, "type": "select", "label": "CBOW mean", "help": "Whether to use the sum of the context word vectors or their mean.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["Sum", "0", false], ["Mean", "1", true]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "1", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "sg", "argument": null, "type": "select", "label": "Word-Embedding type", "help": "Embedding type: Skip-gram or Continuous Bag of Words", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "options": [["CBOW", "0", false], ["Skip-gram", "1", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "hs_param", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "0", "inputs": [{"model_class": "IntegerToolParameter", "name": "negative", "argument": null, "type": "integer", "label": "Negative Samples", "help": "Specify how many 'negative' examples should be drawn for each peak and neutral loss (usually between 5-20).", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "ns_exponent", "argument": null, "type": "float", "label": "Negative Sample Exponent", "help": "The exponent used to shape the negative sampling distribution. A value of 1.0 samples exactly in proportion to the frequencies,                         0.0 samples all peaks and neutral losses equally, while a negative value samples low-frequency peaks more often than high-requency peaks.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.75", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "1", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "hs", "argument": null, "type": "select", "label": "Last Layer Activation", "help": "Activation function of the last layer of the neural network. Negative sampling is more computationally efficient.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "options": [["Negative Sampling", "0", false], ["Hierarchical Softmax", "1", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "sorted_vocab", "argument": null, "type": "boolean", "label": "Sort the vocabulary of spectra", "help": "If true, sort the vocabulary by descending frequency before assigning peak and neutral loss indices.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "TRUE", "falsevalue": "FALSE"}, {"model_class": "IntegerToolParameter", "name": "batch_words", "argument": null, "type": "integer", "label": "Batch size", "help": "Target size (in peaks and neutral losses) for batches of examples passed to worker threads (and thus cython routines).                    Larger batches will be passed if individual peak sequences are longer than 10000 words, but the standard cython code truncates to that maximum.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "shrink_windows", "argument": null, "type": "boolean", "label": "Shrink windows", "help": "EXPERIMENTAL. If true, the effective window size is uniformly sampled in range [1,Window] for each target peak during training.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "TRUE", "falsevalue": "FALSE"}, {"model_class": "Conditional", "name": "trim_vocab", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "TRUE", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_vocab_size", "argument": null, "type": "integer", "label": "Maximum unique peaks and neutral losses", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "FALSE", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "max_vocab_size_bool", "argument": null, "type": "select", "label": "Limit unique peaks and neutral losses in the spectral vocabulary", "help": "Limits the RAM during vocabulary building; if there are more unique peaks and neutral losses than this, then prune the infrequent ones. Disable for no limit (default).", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "FALSE", "options": [["No limit", "FALSE", false], ["Limit", "TRUE", false]], "display": "radio", "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "n_decimals", "argument": null, "type": "integer", "label": "Number of decimals to round m/z values", "help": "Rounds peak position to this number of decimals.", "refresh_on_change": false, "min": 0, "max": 5, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}]}], "outputs": [{"model_class": "ToolOutputCollection", "name": "model_checkpoints", "format": null, "label": "Spec2Vec model checkpoints on ${on_string}", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.*)\\.(?P<ext>[^\\.]+)?", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "model_filename", "format": "json", "label": "Spec2Vec model on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3464", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "weights_filename", "format": "binary", "label": "Spec2Vec weights on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "model_filename_pickle", "format": "binary", "label": "Spec2Vec pickle model on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "metabolomics", "panel_section_name": "Metabolomics", "form_style": "regular"}