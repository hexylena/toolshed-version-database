{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/recetox/matchms_similarity/matchms_similarity/0.20.0+galaxy0", "name": "matchms similarity", "version": "0.20.0+galaxy0", "description": "calculate the similarity score and matched peaks", "labels": [], "edam_operations": ["operation_0336", "operation_3801", "operation_3695"], "edam_topics": ["topic_3172"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "matchms", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "matchms_similarity", "owner": "recetox", "changeset_revision": "e5010b19d64d", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "queries", "argument": null, "type": "data", "label": "Queries spectra", "help": "Query mass spectra to match against references.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["msp", "mgf"], "edam": {"edam_formats": ["format_2330", "format_3651"], "edam_data": ["data_0006", "data_2536"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "symmetric", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "FALSE", "inputs": [{"model_class": "DataToolParameter", "name": "references", "argument": null, "type": "data", "label": "Reference spectra", "help": "Reference mass spectra to match against as library.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["msp", "mgf"], "edam": {"edam_formats": ["format_2330", "format_3651"], "edam_data": ["data_0006", "data_2536"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "TRUE", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "is_symmetric", "argument": null, "type": "boolean", "label": "Symmetric", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "TRUE", "falsevalue": "FALSE"}}, {"model_class": "SelectToolParameter", "name": "array_type", "argument": null, "type": "select", "label": "Scores array type", "help": "Matrix type for storing scores objects. Sparse type more memory-efficient and better for large arrays.                     Note that whatever is selected the output might still be sprase array if scores have too much 0-entries.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "numpy", "options": [["dense", "numpy", true], ["sparse", "sparse", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "metric", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "CosineGreedy", "inputs": [{"model_class": "Section", "name": "algorithm", "type": "section", "title": "Algorithm Parameters", "help": null, "expanded": true, "inputs": [{"model_class": "FloatToolParameter", "name": "tolerance", "argument": null, "type": "float", "label": "tolerance [Da]", "help": "Peaks will be considered a match when less than tolerance apart. Absolute m/z value, not in ppm.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mz_power", "argument": null, "type": "float", "label": "mz_power", "help": "The power to raise mz to in the cosine function.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "intensity_power", "argument": null, "type": "float", "label": "intensity_power", "help": "The power to raise intensity to in the cosine function.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "CosineHungarian", "inputs": [{"model_class": "Section", "name": "algorithm", "type": "section", "title": "Algorithm Parameters", "help": null, "expanded": true, "inputs": [{"model_class": "FloatToolParameter", "name": "tolerance", "argument": null, "type": "float", "label": "tolerance [Da]", "help": "Peaks will be considered a match when less than tolerance apart. Absolute m/z value, not in ppm.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mz_power", "argument": null, "type": "float", "label": "mz_power", "help": "The power to raise mz to in the cosine function.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "intensity_power", "argument": null, "type": "float", "label": "intensity_power", "help": "The power to raise intensity to in the cosine function.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "ModifiedCosine", "inputs": [{"model_class": "Section", "name": "algorithm", "type": "section", "title": "Algorithm Parameters", "help": null, "expanded": true, "inputs": [{"model_class": "FloatToolParameter", "name": "tolerance", "argument": null, "type": "float", "label": "tolerance [Da]", "help": "Peaks will be considered a match when less than tolerance apart. Absolute m/z value, not in ppm.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mz_power", "argument": null, "type": "float", "label": "mz_power", "help": "The power to raise mz to in the cosine function.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "intensity_power", "argument": null, "type": "float", "label": "intensity_power", "help": "The power to raise intensity to in the cosine function.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "NeutralLossesCosine", "inputs": [{"model_class": "Section", "name": "algorithm", "type": "section", "title": "Algorithm Parameters", "help": null, "expanded": true, "inputs": [{"model_class": "FloatToolParameter", "name": "tolerance", "argument": null, "type": "float", "label": "tolerance [Da]", "help": "Peaks will be considered a match when less than tolerance apart. Absolute m/z value, not in ppm.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mz_power", "argument": null, "type": "float", "label": "mz_power", "help": "The power to raise mz to in the cosine function.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "intensity_power", "argument": null, "type": "float", "label": "intensity_power", "help": "The power to raise intensity to in the cosine function.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "Spec2Vec", "inputs": [{"model_class": "DataToolParameter", "name": "model_metadata", "argument": null, "type": "data", "label": "Model JSON file", "help": "Model JSON file to use for Spec2Vec similarity computing.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["json"], "edam": {"edam_formats": ["format_3464"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "model_weights", "argument": null, "type": "data", "label": "Model NPY file", "help": "Model NPY file to use for Spec2Vec similarity computing.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["binary"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "algorithm", "type": "section", "title": "Algorithm Parameters", "help": null, "expanded": true, "inputs": [{"model_class": "FloatToolParameter", "name": "intensity_power", "argument": null, "type": "float", "label": "intensity_power", "help": "Spectrum vectors are a weighted sum of the word vectors. The given word intensities will be raised to the given power.                             The default is 0, which means that no weighing will be done.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "allow_missing_percentage", "argument": null, "type": "float", "label": "Maximum share of new peaks", "help": "Maximum allowed share of the peaks that are new to the model in relation to the whole peak corpus.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "similarity_metric", "argument": null, "type": "select", "label": "Similarity metric", "help": "Similarity metric to use for score computation.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "CosineGreedy", "options": [["CosineGreedy", "CosineGreedy", true], ["CosineHungarian", "CosineHungarian", false], ["ModifiedCosine", "ModifiedCosine", false], ["NeutralLossesCosine", "NeutralLossesCosine", false], ["Spec2Vec", "Spec2Vec", false]], "display": "radio", "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "ri_filtering", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "TRUE", "inputs": [{"model_class": "FloatToolParameter", "name": "tolerance", "argument": null, "type": "float", "label": "tolerance", "help": "Peaks will be considered a match when less than tolerance apart.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "60.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "FALSE", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "is_true", "argument": null, "type": "boolean", "label": "Apply RI filtering", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "TRUE", "falsevalue": "FALSE"}}], "outputs": [{"model_class": "ToolOutput", "name": "similarity_scores", "format": "json", "label": "$metric.similarity_metric scores of ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3464", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "metabolomics", "panel_section_name": "Metabolomics", "form_style": "regular"}