{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa_wrappers/bwa_wrapper/1.2.3", "name": "Map with BWA for Illumina", "version": "1.2.3", "description": "", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": true, "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "bwa_wrappers", "owner": "devteam", "changeset_revision": "b4427dbb6ced", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "genomeSource", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "indexed", "inputs": [{"model_class": "SelectToolParameter", "name": "indices", "argument": null, "type": "select", "label": "Select a reference genome", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "dm3", "options": [["Drosophila melanogaster: dm3", "dm3", false], ["Human (Homo sapiens): hg18", "hg18", false], ["Human (Homo sapiens): hg19", "hg19", false], ["Human Dec. 2013 (GRCh38/hg38) (hg38)", "hg38", false], ["Mouse (Mus musculus): mm10", "mm10", false], ["Mouse (Mus musculus): mm9", "mm9", false], ["Physcomitrella patens assembly version 1.2b (2014/03/27): pp1.2b", "pp1.2b", false], ["Rat (Rattus norvegicus): rn5", "rn5", false], ["S. cerevisiae Apr. 2011 (SacCer_Apr2011/sacCer3) (sacCer3)", "sacCer3", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "ownFile", "argument": null, "type": "data", "label": "Select a reference from history", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "refGenomeSource", "argument": null, "type": "select", "label": "Will you select a reference genome from your history or use a built-in index?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "indexed", "options": [["Use a built-in index", "indexed", false], ["Use one from the history", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "paired", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "input1", "argument": null, "type": "data", "label": "FASTQ file", "help": "FASTQ with either Sanger-scaled quality values (fastqsanger) or Illumina-scaled quality values (fastqillumina)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqillumina"], "edam": {"edam_formats": ["format_1932", "format_1931"], "edam_data": ["data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "input1", "argument": null, "type": "data", "label": "Forward FASTQ file", "help": "FASTQ with either Sanger-scaled quality values (fastqsanger) or Illumina-scaled quality values (fastqillumina)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqillumina"], "edam": {"edam_formats": ["format_1932", "format_1931"], "edam_data": ["data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input2", "argument": null, "type": "data", "label": "Reverse FASTQ file", "help": "FASTQ with either Sanger-scaled quality values (fastqsanger) or Illumina-scaled quality values (fastqillumina)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqillumina"], "edam": {"edam_formats": ["format_1932", "format_1931"], "edam_data": ["data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "sPaired", "argument": null, "type": "select", "label": "Is this library mate-paired?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "single", "options": [["Single-end", "single", false], ["Paired-end", "paired", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "pre_set", "inputs": []}, {"model_class": "ConditionalWhen", "value": "full", "inputs": [{"model_class": "IntegerToolParameter", "name": "maxEditDist", "argument": null, "type": "integer", "label": "Maximum edit distance (aln -n)", "help": "Enter this value OR a fraction of missing alignments, not both", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "fracMissingAligns", "argument": null, "type": "float", "label": "Fraction of missing alignments given 2% uniform base error rate (aln -n)", "help": "Enter this value OR maximum edit distance, not both", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.04", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maxGapOpens", "argument": null, "type": "integer", "label": "Maximum number of gap opens (aln -o)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maxGapExtens", "argument": null, "type": "integer", "label": "Maximum number of gap extensions (aln -e)", "help": "-1 for k-difference mode (disallowing long gaps)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "disallowLongDel", "argument": null, "type": "integer", "label": "Disallow long deletion within [value] bp towards the 3'-end (aln -d)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "16", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "disallowIndel", "argument": null, "type": "integer", "label": "Disallow insertion/deletion within [value] bp towards the end (aln -i)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seed", "argument": null, "type": "integer", "label": "Number of first subsequences to take as seed (aln -l)", "help": "Enter -1 for infinity", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maxEditDistSeed", "argument": null, "type": "integer", "label": "Maximum edit distance in the seed (aln -k)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "mismatchPenalty", "argument": null, "type": "integer", "label": "Mismatch penalty (aln -M)", "help": "BWA will not search for suboptimal hits with a score lower than [value]", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "gapOpenPenalty", "argument": null, "type": "integer", "label": "Gap open penalty (aln -O)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "11", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "gapExtensPenalty", "argument": null, "type": "integer", "label": "Gap extension penalty (aln -E)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "suboptAlign", "argument": null, "type": "integer", "label": "Proceed with suboptimal alignments if there are no more than INT equally best hits. (aln -R)", "help": "For paired-end reads only. By default, BWA only searches for suboptimal alignments if the top hit is unique. Using this option has no effect on accuracy for single-end reads. It is mainly designed for improving the alignment accuracy of paired-end reads. However, the pairing procedure will be slowed down, especially for very short reads (~32bp)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "noIterSearch", "argument": null, "type": "boolean", "label": "Disable iterative search (aln -N)", "help": "All hits with no more than maxDiff differences will be found. This mode is much slower than the default", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "IntegerToolParameter", "name": "outputTopN", "argument": null, "type": "integer", "label": "Maximum number of alignments to output in the XA tag for reads paired properly (samse/sampe -n)", "help": "If a read has more than INT hits, the XA tag will not be written", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "outputTopNDisc", "argument": null, "type": "integer", "label": "Maximum number of alignments to output in the XA tag for disconcordant read pairs (excluding singletons) (sampe -N)", "help": "For paired-end reads only. If a read has more than INT hits, the XA tag will not be written", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maxInsertSize", "argument": null, "type": "integer", "label": "Maximum insert size for a read pair to be considered as being mapped properly (sampe -a)", "help": "For paired-end reads only. Only used when there are not enough good alignments to infer the distribution of insert sizes", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maxOccurPairing", "argument": null, "type": "integer", "label": "Maximum occurrences of a read for pairing (sampe -o)", "help": "For paired-end reads only. A read with more occurrences will be treated as a single-end read. Reducing this parameter helps faster pairing", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "readGroup", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "TextToolParameter", "name": "rgid", "argument": null, "type": "text", "label": "Read group identi\ufb01er (ID). Each @RG line must have a unique ID. The value of ID is used in the RG  tags of alignment records. Must be unique among all read groups in header section.", "help": "Required if RG specified. Read group  IDs may be modi\ufb01ed when merging SAM \ufb01les in order to handle collisions.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "rgcn", "argument": null, "type": "text", "label": "Sequencing center that produced the read (CN)", "help": "Optional", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "rgds", "argument": null, "type": "text", "label": "Description (DS)", "help": "Optional", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "rgdt", "argument": null, "type": "text", "label": "Date that run was produced (DT)", "help": "Optional. ISO8601 format date or date/time, like YYYY-MM-DD", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "rgfo", "argument": null, "type": "text", "label": "Flow order (FO). The array of nucleotide bases that correspond to the nucleotides used for each  \ufb02ow of each read.", "help": "Optional. Multi-base \ufb02ows are encoded in IUPAC format, and non-nucleotide \ufb02ows by  various other characters. Format : /\\*|[ACMGRSVTWYHKDBN]+/", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "rgks", "argument": null, "type": "text", "label": "The array of nucleotide bases that correspond to the key sequence of each read (KS)", "help": "Optional", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "rglb", "argument": null, "type": "text", "label": "Library name (LB)", "help": "Required if RG specified", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "rgpg", "argument": null, "type": "text", "label": "Programs used for processing the read group (PG)", "help": "Optional", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "rgpi", "argument": null, "type": "text", "label": "Predicted median insert size (PI)", "help": "Optional", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "rgpl", "argument": null, "type": "text", "label": "Platform/technology used to produce the reads (PL)", "help": "Required if RG specified. Valid values : CAPILLARY, LS454, ILLUMINA,  SOLID, HELICOS, IONTORRENT and PACBIO", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "rgpu", "argument": null, "type": "text", "label": "Platform unit (PU)", "help": "Optional. Unique identi\ufb01er (e.g. \ufb02owcell-barcode.lane for Illumina or slide for SOLiD)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "rgsm", "argument": null, "type": "text", "label": "Sample (SM)", "help": "Required if RG specified. Use pool name where a pool is being sequenced", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "specReadGroup", "argument": null, "type": "select", "label": "Specify the read group for this file? (samse/sampe -r)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["Yes", "yes", false], ["No", "no", true]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "source_select", "argument": null, "type": "select", "label": "BWA settings to use", "help": "For most mapping needs use Commonly Used settings. If you want full control use Full Parameter List", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "pre_set", "options": [["Commonly Used", "pre_set", false], ["Full Parameter List", "full", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "suppressHeader", "argument": null, "type": "boolean", "label": "Suppress the header in the output SAM file", "help": "BWA produces SAM with several lines of header information", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}], "outputs": [{"model_class": "ToolOutput", "name": "output", "format": "sam", "label": "${tool.name} on ${on_string}: mapped reads", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2573", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "mapping", "panel_section_name": "Mapping", "form_style": "regular"}