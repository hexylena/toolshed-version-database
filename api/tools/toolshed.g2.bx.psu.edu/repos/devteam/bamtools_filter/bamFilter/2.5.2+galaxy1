{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/devteam/bamtools_filter/bamFilter/2.5.2+galaxy1", "name": "Filter BAM", "version": "2.5.2+galaxy1", "description": "datasets on a variety of attributes", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "bamtools_filter", "owner": "devteam", "changeset_revision": "108db6635177", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input_bam", "argument": null, "type": "data", "label": "BAM dataset(s) to filter", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam"], "edam": {"edam_formats": ["format_2572"], "edam_data": ["data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Repeat", "name": "conditions", "type": "repeat", "title": "Condition", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "Repeat", "name": "filters", "type": "repeat", "title": "Filter", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "bam_property", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "alignmentFlag", "inputs": [{"model_class": "IntegerToolParameter", "name": "bam_property_value", "argument": null, "type": "integer", "label": "Filter on this alignment flag", "help": "Default (3) is for a paired read mapped in a proper pair", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cigar", "inputs": [{"model_class": "TextToolParameter", "name": "bam_property_value", "argument": null, "type": "text", "label": "Filter on this CIGAR string", "help": "Default (101M) is for 101 continuously matched bases", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "101M", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "insertSize", "inputs": [{"model_class": "TextToolParameter", "name": "bam_property_value", "argument": null, "type": "text", "label": "Filter on insert size", "help": "You can use >, <, =, and ! (not) in your expression. E.g., to select pairs with insert size above 250 nt use \">=250\"", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ">=250", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isDuplicate", "inputs": [{"model_class": "BooleanToolParameter", "name": "bam_property_value", "argument": null, "type": "boolean", "label": "Select reads marked as duplicates", "help": "Checked = Read IS Duplicate, Empty = Read is NOT Duplicate", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "isFailedQC", "inputs": [{"model_class": "BooleanToolParameter", "name": "bam_property_value", "argument": null, "type": "boolean", "label": "Select reads failing QC", "help": "Checked = Failed QC, Empty = Passed QC", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "isFirstMate", "inputs": [{"model_class": "BooleanToolParameter", "name": "bam_property_value", "argument": null, "type": "boolean", "label": "Select first mate in a read pair", "help": "Checked = is first mate, Empty = is NOT first mate", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "isMapped", "inputs": [{"model_class": "BooleanToolParameter", "name": "bam_property_value", "argument": null, "type": "boolean", "label": "Selected mapped reads", "help": "Checked = Mapped, Empty = NOT mapped", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "isMateMapped", "inputs": [{"model_class": "BooleanToolParameter", "name": "bam_property_value", "argument": null, "type": "boolean", "label": "Select reads with mapped mate", "help": "Checked = Mate IS mapped Empty = Mate is NOT mapped", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "isMateReverseStrand", "inputs": [{"model_class": "BooleanToolParameter", "name": "bam_property_value", "argument": null, "type": "boolean", "label": "Select reads with mate on the reverse strand", "help": "Checked = Mate IS on reverse strand, Empty = Mate is NOT on the reverse strand", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "isPaired", "inputs": [{"model_class": "BooleanToolParameter", "name": "bam_property_value", "argument": null, "type": "boolean", "label": "Select paired reads", "help": "Checked = Read IS paired, Empty = Read is NOT paired", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "isPrimaryAlignment", "inputs": [{"model_class": "BooleanToolParameter", "name": "bam_property_value", "argument": null, "type": "boolean", "label": "Select BAM records for primary alignments", "help": "Checked = Alignment IS primary, Empty = Alignment is NOT primary", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "isProperPair", "inputs": [{"model_class": "BooleanToolParameter", "name": "bam_property_value", "argument": null, "type": "boolean", "label": "Select properly paired reads", "help": "Checked = Read IS in proper pair, Empty = Read is NOT in the proper pair", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "isReverseStrand", "inputs": [{"model_class": "BooleanToolParameter", "name": "bam_property_value", "argument": null, "type": "boolean", "label": "Select reads in the reverse strand only", "help": "Checked = Read IS on the reverse strand, Empty = Read is NOT on the reverse strand", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "isSecondMate", "inputs": [{"model_class": "BooleanToolParameter", "name": "bam_property_value", "argument": null, "type": "boolean", "label": "Select second mate in a read pair", "help": "Checked = Read IS second mate, Empty = Read is NOT second mate", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "mapQuality", "inputs": [{"model_class": "TextToolParameter", "name": "bam_property_value", "argument": null, "type": "text", "label": "Filter on read mapping quality (phred scale)", "help": "You can use >, <, =, and ! (not) in your expression. E.g., to select reads with mapping quality of at least 30 use \">=30\"", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "matePosition", "inputs": [{"model_class": "TextToolParameter", "name": "bam_property_value", "argument": null, "type": "text", "label": "Filter on the position of the mate", "help": "You can use >, <, =, and ! (not) in your expression. E.g., to select reads with mate (second end) mapping after position 1,000,000 use \">1000000\"", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "1000000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mateReference", "inputs": [{"model_class": "TextToolParameter", "name": "bam_property_value", "argument": null, "type": "text", "label": "Filter on reference name for the mate", "help": "You can use = and ! (not) in your expression. E.g., to select reads with mates mapping to chrM use \"chr22\"", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "chr22", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "name", "inputs": [{"model_class": "TextToolParameter", "name": "bam_property_value", "argument": null, "type": "text", "label": "Filter on read name", "help": "You can use = and ! (not) in your expression.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "position", "inputs": [{"model_class": "TextToolParameter", "name": "bam_property_value", "argument": null, "type": "text", "label": "Filter on the position of the read", "help": "You can use >, <, =, and ! (not) in your expression. E.g., to select reads mapping after position 5,000 use \">5000\"", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "500000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "queryBases", "inputs": [{"model_class": "TextToolParameter", "name": "bam_property_value", "argument": null, "type": "text", "label": "Filter on a sequence motif", "help": "You can use ! (not) in your expression", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "ttagggttagg", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "reference", "inputs": [{"model_class": "TextToolParameter", "name": "bam_property_value", "argument": null, "type": "text", "label": "Filter on the reference name for the read", "help": "You can use ! (not) in your expression", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "chr22", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tag", "inputs": [{"model_class": "TextToolParameter", "name": "bam_property_value", "argument": null, "type": "text", "label": "Filter on a particular tag", "help": "You can use +, -, >, <, =, and ! (not).  Tag name and its value must be separated by \":\". E.g., to obtain reads with at least one mismatch use \"NM:>1\"", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "NM:>1", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "bam_property_selector", "argument": null, "type": "select", "label": "Select BAM property to filter on", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "mapQuality", "options": [["Alignment flag", "alignmentFlag", false], ["CIGAR string", "cigar", false], ["Insert size", "insertSize", false], ["Duplicate", "isDuplicate", false], ["Quality check", "isFailedQC", false], ["First mate", "isFirstMate", false], ["Mapped", "isMapped", false], ["Mate mapped", "isMateMapped", false], ["Mate is on reverse strand", "isMateReverseStrand", false], ["Paired", "isPaired", false], ["Primary alignment", "isPrimaryAlignment", false], ["Proper pair", "isProperPair", false], ["Reverse strand", "isReverseStrand", false], ["Second mate", "isSecondMate", false], ["Mapping quality", "mapQuality", true], ["Position of the mate", "matePosition", false], ["Reference name of the mate", "mateReference", false], ["Read name", "name", false], ["Position of the read", "position", false], ["Sequence motif", "queryBases", false], ["Reference name of the read", "reference", false], ["Tag", "tag", false]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "Conditional", "name": "rule_configuration", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "false", "inputs": []}, {"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "rules", "argument": null, "type": "text", "label": "Enter rules here", "help": "This option can only be used with at least two conditions. Read help below (Example 4) to understand how it works.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "BooleanToolParameter", "name": "rules_selector", "argument": null, "type": "boolean", "label": "Would you like to set rules?", "help": "Allows complex logical constructs. See Example 4 below.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}], "outputs": [{"model_class": "ToolOutput", "name": "out_file2", "format": "txt", "label": "${tool.name} on ${on_string}: JSON filter rules", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "out_file1", "format": "bam", "label": "${tool.name} on ${on_string}: Filtered BAM", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "sam_bam", "panel_section_name": "SAM/BAM", "form_style": "regular"}