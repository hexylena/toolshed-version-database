{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa/0.7.18", "name": "Map with BWA", "version": "0.7.18", "description": "- map short reads (< 100 bp) against reference genome", "labels": [], "edam_operations": ["operation_0292", "operation_3211", "operation_3198", "operation_3429"], "edam_topics": ["topic_0102"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "bwa", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "bwa", "owner": "devteam", "changeset_revision": "2477830927ec", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "reference_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "cached", "inputs": [{"model_class": "SelectToolParameter", "name": "ref_file", "argument": null, "type": "select", "label": "Using reference genome", "help": "Select genome from the list", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "GCF_001704415.2", "options": [["ARS1 Aug. 2016 Capra hircus (goat) (San Clemente 2016 USDA) (GCF_001704415.2)", "GCF_001704415.2", false], ["Actinidia chinensis FEI Lab v1.0", "Actinidia_chinensis_FEI_Lab_v1.0", false], ["African Clawed Frog (xenLae9.2)", "xenLae9.2", false], ["Amborella trichopoda Amborella V1.0", "Amborella_trichopoda_Amborella_V1.0", false], ["Amborella trichopoda JGI v1.0", "Amborella_trichopoda_JGI_v1.0", false], ["Apostasia shenzhenica v1.0", "Apostasia_shenzhenica_v1.0", false], ["Arabidopsis lyrata JGI v1.0", "Arabidopsis_lyrata_JGI_v1.0", false], ["Arabidopsis lyrata JGI v2.1", "Arabidopsis_lyrata_JGI_v2.1", false], ["Arabidopsis thaliana (TAIR10)", "TAIR10", false], ["Asparagus officinalis v1.1", "Asparagus_officinalis_v1.1", false], ["Brachypodium distachyon JGI v3.1", "Brachypodium_distachyon_JGI_v3.1", false], ["Brassica rapa JGI FPsc1.3", "Brassica_rapa_JGI_FPsc1.3", false], ["Caenorhabditis elegans Feb. 2013 (WBcel235/ce11)", "ce11", false], ["Cat Nov. 2017 (Felis catus, domestic cat): felCat9", "felCat9", false], ["Cenchrus americanus v1.0", "Cenchrus_americanus_v1.0", false], ["Chenopodium quinoa JGI v1.0", "Chenopodium_quinoa_JGI_v1.0", false], ["Chicken (Gallus gallus): galGal6", "galGal6", false], ["Chicken Oct. 2021 (bGalGal1.pat.whiteleghornlayer.GRCg7w_WZ) (GCF_016700215.2)", "GCF_016700215.2", false], ["Chlamydomonas reinhardtii JGI v5.0 assembly, annot v5.3.1 based on Augustus u11.6", "Chlamydomonas_reinhardtii_JGI_v5.0_assembly_annot_v5.3.1_based_on_Augustus_u11.6", false], ["Chlamydomonas reinhardtii JGI v5.5", "Chlamydomonas_reinhardtii_JGI_v5.5", false], ["Citrullus lanatus Cucurbit Genomics Database", "Citrullus_lanatus_Cucurbit_Genomics_Database", false], ["Cucumis melo Melonomics v3.5", "Cucumis_melo_Melonomics_v3.5", false], ["Dog Oct. 2020 (Dog10K_Boxer_Tasha/canFam6) (canFam6)", "canFam6", false], ["Fly (Drosophila melanogaster): dm3 Full", "dm3", false], ["Fly (Drosophila melanogaster): dm6 Full", "dm6", false], ["Foshan strain genomic contigs sequences, AaloF1 assembly. ", "AaloF1", false], ["Fragaria vesca JGI v1.1", "Fragaria_vesca_JGI_v1.1", false], ["Glycine max JGI Glyma1.1 annotation of the chromosome-based Glyma1 assembly", "Glycine_max_JGI_Glyma1.1_annotation_of_the_chromosome-based_Glyma1_assembly", false], ["Gossypium raimondii JGI annotation v2.1 on assembly v2.0", "Gossypium_raimondii_JGI_annotation_v2.1_on_assembly_v2.0", false], ["Gossypium raimondii JGI v2.1", "Gossypium_raimondii_JGI_v2.1", false], ["Hevea brasiliensis NCBI Genomes v1", "Hevea_brasiliensis_NCBI_Genomes_v1", false], ["Homo sapiens isolate CHM13 (T2T Consortium) female (chr1-X)", "CHM13_T2T_v1.0", false], ["Horse Jan. 2018 (EquCab3.0/equCab3)", "equCab3", false], ["Human (Homo sapiens): hg19 Full", "hg19", false], ["Human CHM13 2.0 (T2T Consortium) Jan. 2022", "CHM13_T2T_v2.0", false], ["Human Dec. 2013 (GRCh38/hg38) (hg38)", "hg38", false], ["Lotus japonicus Kazusa 2.5", "Lotus_japonicus_Kazusa_2.5", false], ["Malus domestica Penguin Genomics v2", "Malus_domestica_Penguin_Genomics_v2", false], ["Manihot esculenta JGI v6.1", "Manihot_esculenta_JGI_v6.1", false], ["Mouse (Mus Musculus): mm10 Full", "mm10", false], ["Mouse (Mus Musculus): mm39 Full", "mm39", false], ["Mouse (Mus Musculus): mm9 Full", "mm9", false], ["Mouse (Mus musculus): mm9 with ERCC spike-in", "mm9_ERCC", false], ["Musa acuminata Banana Genome v2.0", "Musa_acuminata_Banana_Genome_v2.0", false], ["Musa acuminata Genescope-Cirad", "Musa_acuminata_Genescope-Cirad", false], ["Nelumbo nucifera LOTUS-DB v1.1", "Nelumbo_nucifera_LOTUS-DB_v1.1", false], ["Oikopleura dioica (od01)", "od01", false], ["Oropetium thomaeum JGI v1.0", "Oropetium_thomaeum_JGI_v1.0", false], ["Oryza brachyantha Ensembl Plants v1.4b", "Oryza_brachyantha_Ensembl_Plants_v1.4b", false], ["Oryza sativa ssp. indica 9311_BGF_2005", "Oryza_sativa_ssp._indica_9311_BGF_2005", false], ["Oryza sativa ssp. japonica JGI v7.0", "Oryza_sativa_ssp._japonica_JGI_v7.0", false], ["Ostreococcus lucimarinus JGI 2.0", "Ostreococcus_lucimarinus_JGI_2.0", false], ["Physcomitrella patens JGI assembly release v1.1 and COSMOSS annotation v1.6", "Physcomitrella_patens_JGI_assembly_release_v1.1_and_COSMOSS_annotation_v1.6", false], ["Physcomitrella patens JGI v3.3", "Physcomitrella_patens_JGI_v3.3", false], ["Pig Feb. 2017 (Sscrofa11.1/susScr11) (susScr11)", "susScr11", false], ["Populus trichocarpa JGI v3.1", "Populus_trichocarpa_JGI_v3.1", false], ["Prunus persica JGI release v1.0", "Prunus_persica_JGI_release_v1.0", false], ["Prunus persica JGI v2.1", "Prunus_persica_JGI_v2.1", false], ["Rattus norvegicus Nov. 2020 (mRatBN7.2/rn7)", "rn7", false], ["Ricinus communis JGI v0.1", "Ricinus_communis_JGI_v0.1", false], ["Rock pigeon Dec 2017 (Cliv_2.1/colLiv2)", "colLiv2.1", false], ["S. cerevisiae Apr. 2011 (SacCer_Apr2011/sacCer3) (sacCer3)", "sacCer3", false], ["S. lycopersicum (Tomato) Feb 2019 (SL4.0)", "SL4.0", false], ["SARS-CoV-2 isolate Wuhan-Hu-1, complete genome (NC_045512)", "NC_045512.2", false], ["Schrenkiella parvula Thellungiella v2.0 (TpV84)", "Schrenkiella_parvula_Thellungiella_v2.0_TpV84", false], ["Selaginella moellendorffii JGI v1.0", "Selaginella_moellendorffii_JGI_v1.0", false], ["Selaginella moellendorffii NCBIr100", "Selaginella_moellendorffii_NCBIr100", false], ["Setaria italica JGI 8.3X chromosome-scale assembly release 2.0, annotation version 2.1", "Setaria_italica_JGI_8.3X_chromosome-scale_assembly_release_2.0_annotation_version_2.1", false], ["Solanum lycopersicum Sol Genomics itag2.4", "Solanum_lycopersicum_Sol_Genomics_itag2.4", false], ["Solanum tuberosum JGI v4.03", "Solanum_tuberosum_JGI_v4.03", false], ["Sorghum bicolor JGI 1.4", "Sorghum_bicolor_JGI_1.4", false], ["Spirodela polyrhiza JGI v2.0", "Spirodela_polyrhiza_JGI_v2.0", false], ["Tarenaya hassleriana RefSeq v1", "Tarenaya_hassleriana_RefSeq_v1", false], ["Thellungiella parvula TpV84", "Thellungiella_parvula_TpV84", false], ["Theobroma cacao RefSeq v1.1", "Theobroma_cacao_RefSeq_v1.1", false], ["Trifolium pratense JGI v2", "Trifolium_pratense_JGI_v2", false], ["Triticum aestivum IWGSC1.1", "Triticum_aestivum_IWGSC1.1", false], ["Triticum turgidum Svevo v1.0", "Triticum_turgidum_Svevo_v1.0", false], ["Vitis vinifera genescope v1", "Vitis_vinifera_genescope_v1", false], ["West African lungfish Jul 2021 (Protopterus annectens, PAN1.0) (GCF_019279795.1)", "GCF_019279795.1", false], ["White-tailed deer Apr 2017 (Odocoileus virginianus) (GCF_002102435.1, Ovir.te_1.0)", "GCF_002102435.1", false], ["Xenopus tropicalis (xenTro9.1)", "xenTro9.1", false], ["Zea mays B73 AGP v4.0", "Zea_mays_B73_AGP_v4.0", false], ["Zebrafish (GRCz11/danRer11) without alt contigs", "danRer11_wo_alt", false], ["Zebrafish Jul. 2010 (Zv9/danRer7) (danRer7)", "danRer7", false], ["Zebrafish May 2017 (GRCz11/danRer11) (danRer11)", "danRer11", false], ["Zebrafish Sep. 2014 (GRCz10/danRer10) (danRer10)", "danRer10", false], ["Zostera marina JGI v2.2", "Zostera_marina_JGI_v2.2", false], ["anoGam3", "anoGam3", false], ["bosTau8", "bosTau8", false], ["canFam3", "canFam3", false], ["oviAri4 Sheep (oviAri4, International Sheep Genome Consortium) ((Oar_v4.0/oviAri4))", "oviAri4", false], ["rheMac10", "rheMac10", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "ref_file", "argument": null, "type": "data", "label": "Use the following dataset as the reference sequence", "help": "You can upload a FASTA sequence to the history and use it as reference", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "index_a", "argument": null, "type": "select", "label": "Algorithm for constructing the BWT index", "help": "(-a)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["Auto. Let BWA decide the best algorithm to use", "auto", false], ["IS linear-time algorithm for constructing suffix array. It requires 5.37N memory where N is the size of the database. IS is moderately fast, but does not work with database larger than 2GB", "is", false], ["BWT-SW algorithm. This method works also with big genomes", "bwtsw", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "reference_source_selector", "argument": null, "type": "select", "label": "Will you select a reference genome from your history or use a built-in index?", "help": "Built-ins were indexed using default options. See `Indexes` section of help below", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "cached", "options": [["Use a built-in genome index", "cached", false], ["Use a genome from history and build index", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "input_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "fastq_input1", "argument": null, "type": "data", "label": "Select first set of reads", "help": "Specify dataset with forward reads", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqsanger.gz", "fasta"], "edam": {"edam_formats": ["format_1932", "format_1932", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "fastq_input2", "argument": null, "type": "data", "label": "Select second set of reads", "help": "Specify dataset with reverse reads", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqsanger.gz", "fasta"], "edam": {"edam_formats": ["format_1932", "format_1932", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "adv_pe_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "IntegerToolParameter", "name": "a", "argument": null, "type": "integer", "label": "Maximum insert size for a read pair to be considered being mapped properly.", "help": "sampe -a; This option is only used when there are not enough good alignment to infer the distribution of insert sizes; default=500", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "o", "argument": null, "type": "integer", "label": "Maximum occurrences of a read for pairing. A read with more occurrences will be treated as a single-end read.", "help": "sampe -o; Reducing this parameter helps faster pairing; default=100000", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n", "argument": null, "type": "integer", "label": "Maximum number of alignments to output in the XA tag for reads paired properly.", "help": "sampe -n; If a read has more than this many hits, the XA tag will not be written; default=3", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "N", "argument": null, "type": "integer", "label": "Maximum number of alignments to output in the XA tag for disconcordant read pairs (excluding singletons).", "help": "sampe -N; If a read has more than this many hits, the XA tag will not be written; default=10", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "c", "argument": null, "type": "float", "label": "Prior of chimeric rate (lower bound)", "help": "sampe -c", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5e-05", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "adv_pe_options_selector", "argument": null, "type": "select", "label": "Set advanced paired end options?", "help": "Provides additional controls", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Set", "set", false], ["Do not set", "do_not_set", true]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "paired_collection", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "fastq_input1", "argument": null, "type": "data_collection", "label": "Select a paired collection", "help": "See help section for an explanation of dataset collections", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqsanger.gz"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}, {"model_class": "Conditional", "name": "adv_pe_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "IntegerToolParameter", "name": "a", "argument": null, "type": "integer", "label": "Maximum insert size for a read pair to be considered being mapped properly.", "help": "sampe -a; This option is only used when there are not enough good alignment to infer the distribution of insert sizes; default=500", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "o", "argument": null, "type": "integer", "label": "Maximum occurrences of a read for pairing. A read with more occurrences will be treated as a single-end read.", "help": "sampe -o; Reducing this parameter helps faster pairing; default=100000", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n", "argument": null, "type": "integer", "label": "Maximum number of alignments to output in the XA tag for reads paired properly.", "help": "sampe -n; If a read has more than this many hits, the XA tag will not be written; default=3", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "N", "argument": null, "type": "integer", "label": "Maximum number of alignments to output in the XA tag for disconcordant read pairs (excluding singletons).", "help": "sampe -N; If a read has more than this many hits, the XA tag will not be written; default=10", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "c", "argument": null, "type": "float", "label": "Prior of chimeric rate (lower bound)", "help": "sampe -c", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5e-05", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "adv_pe_options_selector", "argument": null, "type": "select", "label": "Set advanced paired end options?", "help": "Provides additional controls", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Set", "set", false], ["Do not set", "do_not_set", true]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "fastq_input1", "argument": null, "type": "data", "label": "Select fastq dataset", "help": "Specify dataset with single reads", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqsanger.gz", "fasta"], "edam": {"edam_formats": ["format_1932", "format_1932", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "adv_se_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "IntegerToolParameter", "name": "n", "argument": null, "type": "integer", "label": "Maximum number of alignments to output in the XA tag.", "help": "-n; If a read has more than this many hits, the XA tag will not be written; default=3", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "adv_se_options_selector", "argument": null, "type": "select", "label": "Set advanced single end options?", "help": "Provides additional controls", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Set", "set", false], ["Do not set", "do_not_set", true]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "paired_bam", "inputs": [{"model_class": "DataToolParameter", "name": "bam_input", "argument": null, "type": "data", "label": "Select BAM dataset", "help": "Specify BAM dataset with paired reads", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam"], "edam": {"edam_formats": ["format_2572"], "edam_data": ["data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "adv_bam_pe_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "IntegerToolParameter", "name": "a", "argument": null, "type": "integer", "label": "Maximum insert size for a read pair to be considered being mapped properly.", "help": "sampe -a; This option is only used when there are not enough good alignment to infer the distribution of insert sizes; default=500", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "o", "argument": null, "type": "integer", "label": "Maximum occurrences of a read for pairing. A read with more occurrences will be treated as a single-end read.", "help": "sampe -o; Reducing this parameter helps faster pairing; default=100000", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n", "argument": null, "type": "integer", "label": "Maximum number of alignments to output in the XA tag for reads paired properly.", "help": "sampe -n; If a read has more than this many hits, the XA tag will not be written; default=3", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "N", "argument": null, "type": "integer", "label": "Maximum number of alignments to output in the XA tag for disconcordant read pairs (excluding singletons).", "help": "sampe -N; If a read has more than this many hits, the XA tag will not be written; default=10", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "c", "argument": null, "type": "float", "label": "Prior of chimeric rate (lower bound)", "help": "sampe -c", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5e-05", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "adv_pe_options_selector", "argument": null, "type": "select", "label": "Set advanced paired end options?", "help": "Provides additional controls", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Set", "set", false], ["Do not set", "do_not_set", true]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "single_bam", "inputs": [{"model_class": "DataToolParameter", "name": "bam_input", "argument": null, "type": "data", "label": "Select BAM dataset", "help": "Specify BAM dataset with single reads", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam"], "edam": {"edam_formats": ["format_2572"], "edam_data": ["data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "adv_bam_se_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "IntegerToolParameter", "name": "n", "argument": null, "type": "integer", "label": "Maximum number of alignments to output in the XA tag.", "help": "-n; If a read has more than this many hits, the XA tag will not be written; default=3", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "adv_se_options_selector", "argument": null, "type": "select", "label": "Set advanced single end options?", "help": "Provides additional controls", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Set", "set", false], ["Do not set", "do_not_set", true]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "input_type_selector", "argument": null, "type": "select", "label": "Select input type", "help": "Select between fastq and bam datasets and between paired and single end data", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "paired", "options": [["Paired fastq", "paired", false], ["Paired fastq collection", "paired_collection", false], ["Single fastq", "single", false], ["Paired BAM", "paired_bam", false], ["Single BAM", "single_bam", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "rg", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set_picard", "inputs": [{"model_class": "Conditional", "name": "read_group_id_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": []}, {"model_class": "ConditionalWhen", "value": "false", "inputs": [{"model_class": "TextToolParameter", "name": "ID", "argument": null, "type": "text", "label": "Read group identifier (ID)", "help": "This value must be unique among multiple samples in your experiment", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "BooleanToolParameter", "name": "do_auto_name", "argument": null, "type": "boolean", "label": "Auto-assign", "help": "Use dataset name or collection information to automatically assign this value", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "read_group_sm_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": []}, {"model_class": "ConditionalWhen", "value": "false", "inputs": [{"model_class": "TextToolParameter", "name": "SM", "argument": null, "type": "text", "label": "Read group sample name (SM)", "help": "This value should be descriptive. Use pool name where a pool is being sequenced", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "BooleanToolParameter", "name": "do_auto_name", "argument": null, "type": "boolean", "label": "Auto-assign", "help": "Use dataset name or collection information to automatically assign this value", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "read_group_lb_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": []}, {"model_class": "ConditionalWhen", "value": "false", "inputs": [{"model_class": "TextToolParameter", "name": "LB", "argument": null, "type": "text", "label": "Library name (LB)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "BooleanToolParameter", "name": "do_auto_name", "argument": null, "type": "boolean", "label": "Auto-assign", "help": "Use dataset name or collection information to automatically assign this value", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "SelectToolParameter", "name": "PL", "argument": null, "type": "select", "label": "Platform/technology used to produce the reads (PL)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ILLUMINA", "options": [["CAPILLARY", "CAPILLARY", false], ["LS454", "LS454", false], ["ILLUMINA", "ILLUMINA", true], ["SOLID", "SOLID", false], ["HELICOS", "HELICOS", false], ["IONTORRENT", "IONTORRENT", false], ["PACBIO", "PACBIO", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "PU", "argument": null, "type": "text", "label": "Platform unit (PU)", "help": "Unique identifier (e.g. flowcell-barcode.lane for Illumina or slide for SOLiD)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "run", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "CN", "argument": null, "type": "text", "label": "Sequencing center that produced the read (CN)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "DS", "argument": null, "type": "text", "label": "Description (DS)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "PI", "argument": null, "type": "integer", "label": "Predicted median insert size (PI)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "DT", "argument": null, "type": "text", "label": "Date that run was produced (DT)", "help": "ISO8601 format date or date/time, like YYYY-MM-DD", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "Conditional", "name": "read_group_id_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": []}, {"model_class": "ConditionalWhen", "value": "false", "inputs": [{"model_class": "TextToolParameter", "name": "ID", "argument": null, "type": "text", "label": "Read group identifier (ID)", "help": "This value must be unique among multiple samples in your experiment", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "BooleanToolParameter", "name": "do_auto_name", "argument": null, "type": "boolean", "label": "Auto-assign", "help": "Use dataset name or collection information to automatically assign this value", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "read_group_sm_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": []}, {"model_class": "ConditionalWhen", "value": "false", "inputs": [{"model_class": "TextToolParameter", "name": "SM", "argument": null, "type": "text", "label": "Read group sample name (SM)", "help": "This value should be descriptive. Use pool name where a pool is being sequenced", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "BooleanToolParameter", "name": "do_auto_name", "argument": null, "type": "boolean", "label": "Auto-assign", "help": "Use dataset name or collection information to automatically assign this value", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "SelectToolParameter", "name": "PL", "argument": null, "type": "select", "label": "Platform/technology used to produce the reads (PL)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ILLUMINA", "options": [["CAPILLARY", "CAPILLARY", false], ["LS454", "LS454", false], ["ILLUMINA", "ILLUMINA", true], ["SOLID", "SOLID", false], ["HELICOS", "HELICOS", false], ["IONTORRENT", "IONTORRENT", false], ["PACBIO", "PACBIO", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "read_group_lb_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": []}, {"model_class": "ConditionalWhen", "value": "false", "inputs": [{"model_class": "TextToolParameter", "name": "LB", "argument": null, "type": "text", "label": "Library name (LB)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "BooleanToolParameter", "name": "do_auto_name", "argument": null, "type": "boolean", "label": "Auto-assign", "help": "Use dataset name or collection information to automatically assign this value", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "TextToolParameter", "name": "CN", "argument": null, "type": "text", "label": "Sequencing center that produced the read (CN)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "DS", "argument": null, "type": "text", "label": "Description (DS)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "DT", "argument": null, "type": "text", "label": "Date that run was produced (DT)", "help": "ISO8601 format date or date/time, like YYYY-MM-DD", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "FO", "argument": null, "type": "text", "label": "Flow order (FO)", "help": "The array of nucleotide bases that correspond to the nucleotides used for each flow of each read. Multi-base flows are encoded in IUPAC format, and non-nucleotide flows by various other characters. Format: /\\*|[ACMGRSVTWYHKDBN]+/", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "KS", "argument": null, "type": "text", "label": "The array of nucleotide bases that correspond to the key sequence of each read (KS)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "PG", "argument": null, "type": "text", "label": "Programs used for processing the read group (PG)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "PI", "argument": null, "type": "integer", "label": "Predicted median insert size (PI)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "PU", "argument": null, "type": "text", "label": "Platform unit (PU)", "help": "Unique identifier (e.g. flowcell-barcode.lane for Illumina or slide for SOLiD)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "set_id_auto", "inputs": []}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "rg_selector", "argument": null, "type": "select", "label": "Set read groups information?", "help": "Specifying read group information can greatly simplify your downstream analyses by allowing combining multiple datasets.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Set read groups (SAM/BAM specification)", "set", false], ["Set read groups (Picard style)", "set_picard", false], ["Automatically assign ID", "set_id_auto", false], ["Do not set", "do_not_set", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "analysis_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "illumina", "inputs": []}, {"model_class": "ConditionalWhen", "value": "full", "inputs": [{"model_class": "TextToolParameter", "name": "n", "argument": null, "type": "text", "label": "maximum edit distance if the value is integer, or the fraction of missing alignments given 2% uniform base error rate if float. In the latter case, the maximum edit distance is automatically chosen for different read lengths.", "help": "aln -n; default=0.04", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.04", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "o", "argument": null, "type": "integer", "label": "maximum number or gap openings", "help": "aln -o; default=1", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "e", "argument": null, "type": "integer", "label": "maximum number of gap extensions", "help": "aln -e; -1 disables long gaps and invokes k-difference mode; default=-1", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "i", "argument": null, "type": "integer", "label": "do not put an indel within this many bp towards the ends", "help": "aln -i; default=5", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "d", "argument": null, "type": "integer", "label": "maximum occurrences for extending a long deletion", "help": "aln -d; default=10", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "l", "argument": null, "type": "integer", "label": "seed length", "help": "aln -l; default=32", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "32", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "k", "argument": null, "type": "integer", "label": "maximum differences in the seed", "help": "aln -k; default=2", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "m", "argument": null, "type": "integer", "label": "maximum entries in the queue", "help": "aln -m; default=2000000", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2000000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "M", "argument": null, "type": "integer", "label": "mismatch penalty", "help": "aln -M; default=3", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "O", "argument": null, "type": "integer", "label": "gap open penalty", "help": "aln -O; default=11", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "11", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "E", "argument": null, "type": "integer", "label": "gap extension penalty", "help": "aln -E; default=4", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "R", "argument": null, "type": "integer", "label": "stop searching when there are more than this value of equally best hits", "help": "aln -R; default=30", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "30", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "q", "argument": null, "type": "integer", "label": "quality threshold for read trimming down to 35bp", "help": "aln -q; default=0", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "B", "argument": null, "type": "integer", "label": "length of barcode", "help": "aln -B; optional parameter", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "L", "argument": null, "type": "float", "label": "log-scaled gap penalty for long deletions", "help": "aln -L; optional parameter", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "analysis_type_selector", "argument": null, "type": "select", "label": "Select analysis mode", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "illumina", "options": [["1.Simple Illumina mode", "illumina", false], ["2.Full list of options", "full", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "bam_output", "format": "bam", "label": "${tool.name} on ${on_string} (mapped reads in BAM format)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": []}], "panel_section_id": "mapping", "panel_section_name": "Mapping", "form_style": "regular"}