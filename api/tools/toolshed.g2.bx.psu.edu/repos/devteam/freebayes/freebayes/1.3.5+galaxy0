{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/devteam/freebayes/freebayes/1.3.6+galaxy0", "name": "FreeBayes", "version": "1.3.6+galaxy0", "description": "bayesian genetic variant detector", "labels": [], "edam_operations": ["operation_3227", "operation_2238"], "edam_topics": ["topic_0622", "topic_3325", "topic_0199"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "freebayes", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "freebayes", "owner": "devteam", "changeset_revision": "a5937157062f", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "reference_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "cached", "inputs": [{"model_class": "Conditional", "name": "batchmode", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "individual", "inputs": [{"model_class": "DataToolParameter", "name": "input_bams", "argument": null, "type": "data", "label": "BAM or CRAM dataset", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam", "cram"], "edam": {"edam_formats": ["format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "merge", "inputs": [{"model_class": "DataToolParameter", "name": "input_bams", "argument": null, "type": "data", "label": "BAM or CRAM dataset(s)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam", "cram"], "edam": {"edam_formats": ["format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "processmode", "argument": null, "type": "select", "label": "Run in batch mode?", "help": "Selecting individual mode will generate one VCF dataset for each input BAM dataset. Selecting the merge option will produce one VCF dataset for all input BAM datasets", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "individual", "options": [["Run individually", "individual", true], ["Merge output VCFs", "merge", false]], "display": "radio", "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "ref_file", "argument": null, "type": "select", "label": "Using reference genome", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "hg19", "options": [["Human (Homo sapiens): hg19", "hg19", false], ["Human (Homo sapiens): hg18 Full", "hg18full", false], ["Mouse (Mus musculus): mm10 Full", "mm10full", false], ["Mouse (Mus musculus): mm9 Full", "mm9full", false], ["Fly (Drosophila melanogaster): dm3 Full", "dm3full", false], ["Fly (Drosophila melanogaster): dm6 Full", "dm6full", false], ["Zebrafish Jul. 2010 (Zv9/danRer7) (danRer7)", "danRer7", false], ["Zebrafish Sep. 2014 (GRCz10/danRer10) (danRer10)", "danRer10", false], ["Arabidopsis thaliana (TAIR10)", "TAIR10", false], ["Mouse (Mus Musculus): mm9 Full", "mm9", false], ["Mouse (Mus musculus): mm9 with ERCC spike-in", "mm9_ERCC", false], ["Human Dec. 2013 (GRCh38/hg38) (hg38)", "hg38", false], ["Human (Homo sapiens): hg19 Canonical", "hg19canon", false], ["Human (Homo sapiens): hg19 Full", "hg19full", false], ["Mouse (Mus musculus): mm9 Canonical", "mm9canon", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "Conditional", "name": "batchmode", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "individual", "inputs": [{"model_class": "DataToolParameter", "name": "input_bams", "argument": null, "type": "data", "label": "BAM or CRAM dataset", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam", "cram"], "edam": {"edam_formats": ["format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "merge", "inputs": [{"model_class": "DataToolParameter", "name": "input_bams", "argument": null, "type": "data", "label": "BAM or CRAM dataset(s)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam", "cram"], "edam": {"edam_formats": ["format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "processmode", "argument": null, "type": "select", "label": "Run in batch mode?", "help": "Selecting individual mode will generate one VCF dataset for each input BAM dataset. Selecting the merge option will produce one VCF dataset for all input BAM datasets", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "individual", "options": [["Run individually", "individual", true], ["Merge output VCFs", "merge", false]], "display": "radio", "multiple": false, "textable": false}}, {"model_class": "DataToolParameter", "name": "ref_file", "argument": null, "type": "data", "label": "Use the following dataset as the reference sequence", "help": "You can upload a FASTA sequence to the history and use it as reference", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "reference_source_selector", "argument": null, "type": "select", "label": "Choose the source for the reference genome", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "cached", "options": [["Locally cached", "cached", false], ["History", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "target_limit_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "do_not_limit", "inputs": []}, {"model_class": "ConditionalWhen", "value": "limit_by_target_file", "inputs": [{"model_class": "DataToolParameter", "name": "input_target_bed", "argument": "--targets", "type": "data", "label": "Limit analysis to regions in this BED dataset", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed"], "edam": {"edam_formats": ["format_3003"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "limit_by_region", "inputs": [{"model_class": "TextToolParameter", "name": "region_chromosome", "argument": "--region", "type": "text", "label": "Region Chromosome", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "region_start", "argument": null, "type": "integer", "label": "Region Start", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "region_end", "argument": null, "type": "integer", "label": "Region End", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "target_limit_type_selector", "argument": null, "type": "select", "label": "Limit variant calling to a set of regions?", "help": "Sets --targets or --region options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_limit", "options": [["Do not limit", "do_not_limit", true], ["Limit by target file", "limit_by_target_file", false], ["Limit to region", "limit_by_region", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "coverage_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_coverage", "argument": "--min-coverage", "type": "integer", "label": "Require at least this coverage to process a site", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "limit_coverage", "argument": "--limit-coverage", "type": "integer", "label": "Downsample per-sample coverage to this level if greater than this coverage", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "skip_coverage", "argument": "--skip-coverage", "type": "integer", "label": "Skip processing of alignments overlapping positions with coverage greater than this", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "coverage_options_selector", "argument": null, "type": "select", "label": "Read coverage", "help": "Sets --min-coverage, --limit-coverage, and --skip-coverage", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Use defaults", "do_not_set", true], ["Specify coverage options", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "options_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "full", "inputs": [{"model_class": "Conditional", "name": "optional_inputs", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "BooleanToolParameter", "name": "output_failed_alleles_option", "argument": "--failed-alleles", "type": "boolean", "label": "Write out failed alleles file", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--failed-alleles", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "output_trace_option", "argument": "--trace", "type": "boolean", "label": "Write out algorithm trace file", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--trace", "falsevalue": ""}, {"model_class": "DataToolParameter", "name": "samples", "argument": "--samples", "type": "data", "label": "Limit analysis to samples listed (one per line) in this dataset", "help": "By default FreeBayes will analyze all samples in its input BAM datasets", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "populations", "argument": "--populations", "type": "data", "label": "Populations dataset", "help": "Each line of this dataset should list a sample and a population which it is part of. The population-based bayesian inference model will then be partitioned on the basis of the populations", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "A", "argument": "--cnv-map", "type": "data", "label": "Read a copy number map from a BED dataset", "help": "The BED dataset should have the format: 'reference sequence, start, end, sample name, copy number' for each region in each sample which does not have the default copy number as set by --ploidy. If not specified, copy number is set to as specified by --ploidy", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed"], "edam": {"edam_formats": ["format_3003"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "input_variant_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "do_not_provide", "inputs": []}, {"model_class": "ConditionalWhen", "value": "provide_vcf", "inputs": [{"model_class": "DataToolParameter", "name": "input_variant_vcf", "argument": "--variant-input", "type": "data", "label": "Use variants reported in this VCF dataset as input to the algorithm", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf_bgzip"], "edam": {"edam_formats": ["format_3016"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "only_use_input_alleles", "argument": "--only-use-input-alleles", "type": "boolean", "label": "Only provide variant calls and genotype likelihoods for sites in VCF", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--only-use-input-alleles", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "input_variant_type_selector", "argument": null, "type": "select", "label": "Provide variants dataset", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_provide", "options": [["Do not provide", "do_not_provide", true], ["Provide VCF dataset", "provide_vcf", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "DataToolParameter", "name": "haplotype_basis_alleles", "argument": "--haplotype-basis-alleles", "type": "data", "label": "Only use variant alleles provided in this input VCF for the construction of complex or haplotype alleles", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf"], "edam": {"edam_formats": ["format_3016"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "report_monomorphic", "argument": "--report-monomorphic", "type": "boolean", "label": "Report even loci which appear to be monomorphic, and report all considered alleles, even those which are not in called genotypes", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--report-monomorphic", "falsevalue": ""}, {"model_class": "DataToolParameter", "name": "observation_bias", "argument": "--observation-bias", "type": "data", "label": "Load read length-dependent allele observation biases from", "help": "The format is [length] [alignment efficiency relative to reference] where the efficiency is 1 if there is no relative observation bias", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "contamination_estimates", "argument": "--contamination-estimates", "type": "data", "label": "Upload per-sample estimates of contamination from", "help": "The format should be: sample p(read=R|genotype=AR) p(read=A|genotype=AA) Sample '*' can be used to set default contamination estimates", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "trim_complex_tail", "argument": "--trim-complex-tail", "type": "boolean", "label": "Trim trailing reference matches", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--trim-complex-tail", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "optional_inputs_selector", "argument": null, "type": "select", "label": "Additional inputs", "help": "Sets --samples, --populations, --cnv-map, --trace, --failed-alleles, --variant-input, --only-use-input-alleles, --haplotype-basis-alleles, --report-all-haplotype-alleles, --report-monomorphic options, --observation-bias, --contamination-estimates and --trim-complex-tail", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Do not provide additional inputs", "do_not_set", true], ["Provide additional inputs", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "reporting", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "FloatToolParameter", "name": "pvar", "argument": "--pvar", "type": "float", "label": "Report sites if the probability that there is a polymorphism at the site is greater than", "help": "Note that post-filtering is generally recommended over the use of this parameter", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "reporting_selector", "argument": null, "type": "select", "label": "Reporting options", "help": "Sets -P --pvar option", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Use defaults", "do_not_set", true], ["Set reporting options", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "population_model", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "FloatToolParameter", "name": "T", "argument": "--theta", "type": "float", "label": "The expected mutation rate or pairwise nucleotide diversity among the population under analysis", "help": "This serves as the single parameter to the Ewens Sampling Formula prior model", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.001", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "P", "argument": "--ploidy", "type": "integer", "label": "Set ploidy for the analysis", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "J", "argument": "--pooled-discrete", "type": "boolean", "label": "Assume that samples result from pooled sequencing", "help": "Model pooled samples using discrete genotypes across pools. When using this flag, set --ploidy to the number of alleles in each sample or use the --cnv-map to define per-sample ploidy", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-J", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "K", "argument": "--poled-continuous", "type": "boolean", "label": "Output all alleles which pass input filters, regardles of genotyping outcome or model", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-K", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "population_model_selector", "argument": null, "type": "select", "label": "Population model options", "help": "Sets --theta, --ploidy, --pooled-discrete, and --pooled-continuous options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Use defaults", "do_not_set", true], ["Set population model options", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "reference_allele", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "BooleanToolParameter", "name": "Z", "argument": "--use-reference-allele", "type": "boolean", "label": "Include the reference allele in the analysis as if it is another sample from the same population", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-Z", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "reference_quality", "argument": "--reference-quality", "type": "text", "label": "Assign mapping quality of MQ (100) to the reference allele at each site and base quality of BQ (60)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "100,60", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "reference_allele_selector", "argument": null, "type": "select", "label": "Reference allele options", "help": "Sets --use-reference-allele and --reference-quality options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Use defaults", "do_not_set", true], ["Set reference allele options", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "allele_scope", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "BooleanToolParameter", "name": "I", "argument": "--no-snps", "type": "boolean", "label": "Ignore SNP alleles", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-I", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "i", "argument": "--no-indels", "type": "boolean", "label": "Ignore indels alleles", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-i", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "X", "argument": "--no-mnps", "type": "boolean", "label": "Ignore multi-nucleotide polymorphisms, MNPs", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-X", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "u", "argument": "--no-complex", "type": "boolean", "label": "Ignore complex events (composites of other classes)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-u", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "n", "argument": "--use-best-n-alleles", "type": "integer", "label": "How many best SNP alleles to evaluate", "help": "Alleles are ranked by the sum of supporting quality scores. Set to 0 to evaluate all", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "haplotype_length", "argument": "--haplotype-length", "type": "integer", "label": "Allow haplotype calls with contiguous embedded matches of up to (nucleotides)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_repeat_length", "argument": "--min-repeat-size", "type": "integer", "label": "When assembling observations across repeats, require the total repeat length at least this many bp", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_repeat_entropy", "argument": "--min-repeat-entropy", "type": "integer", "label": "To detect interrupted repeats, build across sequence until it has entropy > (bits per bp)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "no_partial_observations", "argument": "--no-partial-observations", "type": "boolean", "label": "Exclude observations which do not fully span the dynamically-determined detection window", "help": "By default, FreeBayes uses all observations, dividing partial support across matching haplotypes when generating haplotypes", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-partial-observations", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "allele_scope_selector", "argument": null, "type": "select", "label": "Allelic scope options", "help": "Sets -I, i, -X, -u, -n, --haplotype-length, --min-repeat-size, --min-repeat-entropy, and --no-partial-observations options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Use defaults", "do_not_set", true], ["Set alleic scope options", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "O", "argument": "--dont-left-align-indels", "type": "boolean", "label": "Turn off left-alignment of indels", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-O", "falsevalue": ""}, {"model_class": "Conditional", "name": "input_filters", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "BooleanToolParameter", "name": "standard_filters", "argument": "--standard-filters", "type": "boolean", "label": "Use stringent input base and mapping quality filters", "help": "--min-mapping-quality 30 --min-base-quality 20, --min-supporting-allele-qsum 0 --genotype-variant-threshold 0", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--standard-filters", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "use_duplicate_reads", "argument": "--use-duplicate-reads", "type": "boolean", "label": "Include duplicate-marked alignments in the analysis", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--use-duplicate-reads", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "min_mapping_quality", "argument": "--min-mapping-quality", "type": "integer", "label": "Exclude alignments from analysis if they have a mapping quality less than", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_base_quality", "argument": "--min-base-quality", "type": "integer", "label": "Exclude alleles from analysis if their supporting base quality less than", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_supporting_allele_qsum", "argument": "--min-supporting-allele-qsum", "type": "integer", "label": "Consider any allele in which the sum of qualities of supporting observations is at least", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_supporting_mapping_qsum", "argument": "--min-supporting-mapping-qsum", "type": "integer", "label": "Consider any allele in which and the sum of mapping qualities of supporting reads is at least", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "mismatch_filters", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "IntegerToolParameter", "name": "mismatch_base_quality_threshold", "argument": "--mismatch-base-quality-threshold", "type": "integer", "label": "Count mismatches toward -U (option below) if the base quality of the mismatch is >=", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "read_mismatch_limit", "argument": "--read-mismatch-limit", "type": "integer", "label": "Exclude reads with more than N mismatches where each mismatch has base quality >= mismatch-base-quality-threshold (option above)", "help": "default=~unbounded", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "read_max_mismatch_fraction", "argument": "--read-max-mismatch-fraction", "type": "float", "label": "Exclude reads with more than N [0,1] fraction of mismatches where each mismatch has base quality >= mismatch-base-quality-threshold (second option above)", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "read_snp_limit", "argument": "--read-snp-limit", "type": "integer", "label": "Exclude reads with more than N base mismatches, ignoring gaps with quality >= mismatch-base-quality-threshold (third option above)", "help": "default=~unbounded", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "mismatch_filters_selector", "argument": null, "type": "select", "label": "Mismatch filters", "help": "Sets -Q, -U, -z, and $ options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["No mismatch filters (default)", "do_not_set", true], ["Set mismatch filters", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "read_indel_limit", "argument": "--read-indel-limit", "type": "integer", "label": "Exclude reads with more than this number of separate gaps", "help": "default=~unbounded", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_alternate_fraction", "argument": "--min-alternate-fraction", "type": "float", "label": "Require at least this fraction of observations supporting an alternate allele within a single individual in the in order to evaluate the position", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_alternate_qsum", "argument": "--min-alternate-qsum", "type": "integer", "label": "Require at least this sum of quality of observations supporting an alternate allele within a single individual in order to evaluate the position", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_alternate_count", "argument": "--min-alternate-count", "type": "integer", "label": "Require at least this count of observations supporting an alternate allele within a single individual in order to evaluate the position", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_alternate_total", "argument": "--min-alternate-total", "type": "integer", "label": "Require at least this count of observations supporting an alternate allele within the total population in order to use the allele in analysis", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "input_filters_selector", "argument": null, "type": "select", "label": "Input filters", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["No input filters (default)", "do_not_set", true], ["Set input filters", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "population_mappability_priors", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "BooleanToolParameter", "name": "k", "argument": "--no-population-priors", "type": "boolean", "label": "No population priors", "help": "Equivalent to --pooled-discrete --hwe-priors-off and removal of Ewens Sampling Formula component of priors", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-k", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "w", "argument": "--hwe-priors-off", "type": "boolean", "label": "Disable estimation of the probability of the combination arising under HWE given the allele frequency as estimated by observation frequency", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-w", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "V", "argument": "--binomial-obs-priors-off", "type": "boolean", "label": "Disable incorporation of prior expectations about observations", "help": "Uses read placement probability, strand balance probability, and read position (5''-3'') probability", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-V", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "a", "argument": "--allele-balance-priors-off", "type": "boolean", "label": "Disable use of aggregate probability of observation balance between alleles as a component of the priors", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-a", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "population_mappability_priors_selector", "argument": null, "type": "select", "label": "Population and mappability priors", "help": "Sets -k, -w, -V, and -a options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Use defaults", "do_not_set", true], ["Set population and mappability priors", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "genotype_likelihoods", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "IntegerToolParameter", "name": "base_quality_cap", "argument": "--base-quality-cap", "type": "integer", "label": "Limit estimated observation quality by capping base quality at", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "experimental_gls", "argument": "--experimental-gls", "type": "boolean", "label": "Generate genotype likelihoods using 'effective base depth' metric qual = 1-BaseQual * 1-MapQual", "help": "Incorporate partial observations. This is the default when contamination estimates are provided. Optimized for diploid samples", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--experimental-gls", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "prob_contamination", "argument": "--prob-contamination", "type": "float", "label": "An estimate of contamination to use for all samples", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1e-08", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "genotype_likelihoods_selector", "argument": null, "type": "select", "label": "Genotype likelihood options", "help": "Sets --base-quality-cap, --experimental-gls, and --prob-contamination options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Use defaults", "do_not_set", true], ["Set genotype likelihood options", "set", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "algorithmic_features", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "set", "inputs": [{"model_class": "BooleanToolParameter", "name": "report_genotype_likelihood_max", "argument": "--report-genotype-likelihood-max", "type": "boolean", "label": "Report genotypes using the maximum-likelihood estimate provided from genotype likelihoods", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--report-genotype-likelihood-max", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "B", "argument": "--genotyping-max-iterations", "type": "integer", "label": "Iterate no more than N times during genotyping step", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "genotyping_max_banddepth", "argument": "--genotyping-max-banddepth", "type": "integer", "label": "Integrate no deeper than the Nth best genotype by likelihood when genotyping", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "6", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "W", "argument": "--posterior-integration-limits", "type": "text", "label": "Integrate all genotype combinations in our posterior space which include no more than N (1) samples with their Mth (3) best data likelihood", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "1,3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "N", "argument": "--exclude-unobserved-genotypes", "type": "boolean", "label": "Skip sample genotypings for which the sample has no supporting reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--exclude-unobserved-genotypes", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "genotype_variant_threshold", "argument": "--genotype-variant-threshold", "type": "integer", "label": "Limit posterior integration to samples where the second-best genotype likelihood is no more than log(N) from the highest genotype likelihood for the sample", "help": "default=~unbounded", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "j", "argument": "--use-mapping-quality", "type": "boolean", "label": "Use mapping quality of alleles when calculating data likelihoods", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-j", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "H", "argument": "--harmonic-indel-quality", "type": "boolean", "label": "Use a weighted sum of base qualities around an indel, scaled by the distance from the indel", "help": "By default, FreeBayes uses a minimum Base Quality in flanking sequence", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-H", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "D", "argument": "--read-dependence-factor", "type": "float", "label": "Incorporate non-independence of reads by scaling successive observations by this factor during data likelihood calculations", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.9", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "genotype_qualities", "argument": "--genotype-qualities", "type": "boolean", "label": "Calculate the marginal probability of genotypes and report as GQ in each sample field in the VCF output", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--genotype-qualities", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "do_not_set", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "algorithmic_features_selector", "argument": null, "type": "select", "label": "Algorithmic features", "help": "Sets --report-genotypes-likelihood-max, -B, --genotyping-max-banddepth, -W, -N, S, -j, -H, -D, -= options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "do_not_set", "options": [["Use defaults", "do_not_set", true], ["Set algorithmic features", "set", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "simple", "inputs": []}, {"model_class": "ConditionalWhen", "value": "simple_w_filters", "inputs": []}, {"model_class": "ConditionalWhen", "value": "naive", "inputs": []}, {"model_class": "ConditionalWhen", "value": "naive_w_filters", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "options_type_selector", "argument": null, "type": "select", "label": "Choose parameter selection level", "help": "Select how much control over the freebayes run you need", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "simple", "options": [["1. Simple diploid calling", "simple", true], ["2. Simple diploid calling with filtering and coverage", "simple_w_filters", false], ["3. Frequency-based pooled calling", "naive", false], ["4. Frequency-based pooled calling with filtering and coverage", "naive_w_filters", false], ["5. Full list of options", "full", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "output_vcf", "format": "vcf", "label": "${tool.name} on ${on_string} (variants)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3016", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "output_failed_alleles_bed", "format": "bed", "label": "${tool.name} on ${on_string} (failed alleles)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3003", "edam_data": "data_3002", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "output_trace", "format": "txt", "label": "${tool.name} on ${on_string} (trace)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "variant_calling", "panel_section_name": "Variant Calling", "form_style": "regular"}