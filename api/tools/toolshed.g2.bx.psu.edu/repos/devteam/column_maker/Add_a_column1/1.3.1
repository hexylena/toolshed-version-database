{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/2.0", "name": "Compute", "version": "2.0", "description": "on rows", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "column_maker", "owner": "devteam", "changeset_revision": "6595517c2dd8", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Input file", "help": "Dataset missing? See TIP below", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "ops", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": [{"model_class": "Repeat", "name": "expressions", "type": "repeat", "title": "Expressions", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "cond", "argument": null, "type": "text", "label": "Add expression", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "c3-c2", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "add_column", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": [{"model_class": "HiddenToolParameter", "name": "pos", "argument": null, "type": "hidden", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": ""}]}, {"model_class": "ConditionalWhen", "value": "I", "inputs": [{"model_class": "IntegerToolParameter", "name": "pos", "argument": null, "type": "integer", "label": "Insert new column before existing column number", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "R", "inputs": [{"model_class": "IntegerToolParameter", "name": "pos", "argument": null, "type": "integer", "label": "Use new column to replace column number", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mode", "argument": null, "type": "select", "label": "Mode of the operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Append", "", false], ["Insert", "I", false], ["Replace", "R", false]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "Repeat", "name": "expressions", "type": "repeat", "title": "Expressions", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "cond", "argument": null, "type": "text", "label": "Add expression", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "c3-c2", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "add_column", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": [{"model_class": "HiddenToolParameter", "name": "pos", "argument": null, "type": "hidden", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": ""}]}, {"model_class": "ConditionalWhen", "value": "I", "inputs": [{"model_class": "IntegerToolParameter", "name": "pos", "argument": null, "type": "integer", "label": "Insert new column before existing column number", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "R", "inputs": [{"model_class": "IntegerToolParameter", "name": "pos", "argument": null, "type": "integer", "label": "Use new column to replace column number", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mode", "argument": null, "type": "select", "label": "Mode of the operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Append", "", false], ["Insert", "I", false], ["Replace", "R", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "TextToolParameter", "name": "new_column_name", "argument": null, "type": "text", "label": "The new column name", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "New Column", "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "header_lines_select", "argument": null, "type": "select", "label": "Input has a header line with column names?", "help": "Select Yes to be able to specify names for new columns and have them added to the header line. If you select No, the first line will be treated as a regular line: If it is empty or starts with a # character it will be skipped, otherwise the tool will attempt to compute the specified expression on it.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", false], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "avoid_scientific_notation", "argument": null, "type": "boolean", "label": "Avoid scientific notation in any newly computed columns", "help": "If yes, use fully expanded decimal representation when writing new columns with floating point values. To prevent scientific notation in just specific new columns, you can use numpy's format_float_positional function in the corresponding expression.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--avoid-scientific-notation", "falsevalue": ""}, {"model_class": "Section", "name": "error_handling", "type": "section", "title": "Error handling", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "auto_col_types", "argument": null, "type": "boolean", "label": "Autodetect column types", "help": "By default, try to use the column types that Galaxy has recorded for the input. This simplifies expressions, but can occasionally cause problems on its own. If disabled all column values are assumed to be strings and you will have to handle conversions to different types explicitly in the expression.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "on", "falsevalue": "off"}, {"model_class": "BooleanToolParameter", "name": "fail_on_non_existent_columns", "argument": "--fail-on-non-existent-columns", "type": "boolean", "label": "Fail on references to non-existent columns", "help": "If any expression references a column number that does not exist when that expression gets computed, the tool run will fail. Uncheck to have such a situation handled as a case of a non-computable expression as configured below.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "--fail-on-non-existent-columns", "falsevalue": ""}, {"model_class": "Conditional", "name": "non_computable", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "--fail-on-non-computable", "inputs": []}, {"model_class": "ConditionalWhen", "value": "--skip-non-computable", "inputs": []}, {"model_class": "ConditionalWhen", "value": "--keep-non-computable", "inputs": []}, {"model_class": "ConditionalWhen", "value": "--non-computable-blank", "inputs": []}, {"model_class": "ConditionalWhen", "value": "--non-computable-default", "inputs": [{"model_class": "TextToolParameter", "name": "default_value", "argument": null, "type": "text", "label": "Replacement value", "help": "Pick from suggestions or enter your own.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": [{"label": "nan (not a number)", "value": "nan"}, {"label": "inf (infinity)", "value": "inf"}, {"label": "-inf (negative infinity)", "value": "-inf"}, {"label": "NA (not available)", "value": "NA"}, {"label": ".", "value": "."}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "action", "argument": null, "type": "select", "label": "If an expression cannot be computed for a row", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "--fail-on-non-computable", "options": [["Fail the entire tool run", "--fail-on-non-computable", false], ["Skip the row", "--skip-non-computable", false], ["Keep the row unchanged", "--keep-non-computable", false], ["Produce an empty column value for the row", "--non-computable-blank", false], ["Fill in a replacement value", "--non-computable-default", false]], "display": null, "multiple": false, "textable": false}}]}], "outputs": [{"model_class": "ToolOutput", "name": "out_file1", "format": "data", "label": "", "hidden": false, "output_type": "data", "format_source": "input", "default_identifier_source": "None", "metadata_source": "input", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "text_manipulation", "panel_section_name": "Text Manipulation", "form_style": "regular"}