{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/devteam/clustalw/clustalw/2.1+galaxy1", "name": "ClustalW", "version": "2.1+galaxy1", "description": "multiple sequence alignment program for DNA or proteins", "labels": [], "edam_operations": ["operation_0492"], "edam_topics": ["topic_0080", "topic_0084"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "clustal2", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "clustalw", "owner": "devteam", "changeset_revision": "5b097fde95dd", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "type_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "DNA", "inputs": [{"model_class": "Conditional", "name": "algorithm_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": [{"model_class": "Section", "name": "slow_pairwise_alignments", "type": "section", "title": "Slow pairwise alignments options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "PWDNAMATRIX", "argument": "-PWDNAMATRIX", "type": "select", "label": "DNA weigth matrix", "help": "Default: IUB", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "IUB", "options": [["IUB", "IUB", true], ["CLUSTALW", "CLUSTALW", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "PWGAPOPEN", "argument": "-PWGAPOPEN", "type": "integer", "label": "Gap opening penalty", "help": "Default: 10", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "PWGAPEXT", "argument": "-PWGAPEXT", "type": "float", "label": "Gap extension penalty", "help": "Default: 0.1", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "-QUICKTREE", "inputs": [{"model_class": "Section", "name": "fast_pairwise_alignments", "type": "section", "title": "Fast pairwise alignments options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "KTUPLE", "argument": "-KTUPLE", "type": "integer", "label": "Word size", "help": "Size of exactly matching fragment that is used. Increase for speed, decrease for sensitivity. Maximum value for proteins is 2, and for DNA 4.Default: 1", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "TOPDIAGS", "argument": "-TOPDIAGS", "type": "integer", "label": "Number of best diagonals", "help": "Number of k-tuple matches on each diagonal. Decrease for speed; increase for sensitivity. Default: 5", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "WINDOW", "argument": "-WINDOW", "type": "integer", "label": "Window length", "help": "This is the number of diagonals around each of the best diagonals that will be used. Decrease for speed; increase for sensitivity. Default: 5", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "PAIRGAP", "argument": "-PAIRGAP", "type": "integer", "label": "Gap penalty", "help": "Fast pairwise alignment gap penalty for each gap created. Default: 3", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "SCORE", "argument": "-SCORE", "type": "select", "label": "Score type", "help": "Score type to output. Default: percent", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "PERCENT", "options": [["Percent", "PERCENT", false], ["Absolute", "ABSOLUTE", false]], "display": null, "multiple": false, "textable": false}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selector", "argument": null, "type": "select", "label": "Algorithm for the alignment guide tree", "help": "Default: slow", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Slow: dynamic programming (accurate)", "", false], ["Fast: method of Wilbur and Lipman (approximate)", "-QUICKTREE", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "multiple_alignments", "type": "section", "title": "Multiple alignments options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "DNAMATRIX", "argument": "-DNAMATRIX", "type": "select", "label": "DNA weigth matrix", "help": "Default: IUB", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "IUB", "options": [["IUB", "IUB", true], ["CLUSTALW", "CLUSTALW", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "GAPOPEN", "argument": "-GAPOPEN", "type": "integer", "label": "Gap opening penalty", "help": "Default: 10", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "GAPEXT", "argument": "-GAPEXT", "type": "float", "label": "Gap extension penalty", "help": "Default: 0.2", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "ENDGAPS", "argument": "-ENDGAPS", "type": "boolean", "label": "End gap separation penalty", "help": "End gap separation treats end gaps just like internal gaps for the purposes of avoiding gaps that are too close. If you turn this off, end gaps will be ignored for this purpose.                      This is useful when you wish to align fragments where the end gaps are not biologically meaningful", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-ENDGAPS", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "GAPDIST", "argument": "-GAPDIST", "type": "integer", "label": "Gap separation penalty range", "help": "Gap separation distance tries to decrease the chances of gaps being too close to each other. Gaps that are less than this distance apart are penalised more than other gaps.                      This does not prevent close gaps; it makes them less frequent, promoting a block-like appearance of the alignment", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "NOPGAP", "argument": "-NOPGAP", "type": "boolean", "label": "Residue specific penalties", "help": "Residue specific penalties are amino acid specific gap penalties that reduce or increase the gap opening penalties at each position in the alignment or sequence. As an example,                      positions that are rich in glycine are more likely to have an adjacent gap than positions that are rich in valine", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-NOPGAP", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "NOHGAP", "argument": "-NOHGAP", "type": "boolean", "label": "Hydrophilic gaps", "help": "Hydrophilic gap penalties are used to increase the chances of a gap                  within a run (5 or more residues) of hydrophilic amino acids; these are likely to be loop or random coil regions where gaps are more common", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-NOHGAP", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "MAXDIV", "argument": "-MAXDIV", "type": "integer", "label": "Delay divergent sequences", "help": "Percentage identity for delay", "refresh_on_change": false, "min": 0, "max": 100, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "NEGATIVE", "argument": "-NEGATIVE", "type": "boolean", "label": "Negative values in matrix", "help": "Delays the alignment of the most distantly related sequences                  until after the most closely related sequences have been aligned. The setting shows the percent identity level required to delay the addition of a sequence; sequences that are less identical                  than this level to any other sequences will be aligned later", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-NEGATIVE", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "TRANSWEIGHT", "argument": "-TRANSWEIGHT", "type": "float", "label": "Transition weight", "help": "The transition weight option for aligning nucleotide sequences has been changed in version                  1.7 from an on/off toggle to a weight between 0 and 1. A weight of zero means that the transitions are scored as mismatches; a weight of 1 gives transitions the full match score. For distantly                  related DNA sequences, the weight should be near to zero; for closely related sequences it can be useful to assign a higher score", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "PROTEIN", "inputs": [{"model_class": "Conditional", "name": "algorithm_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": [{"model_class": "Section", "name": "slow_pairwise_alignments", "type": "section", "title": "Slow pairwise alignments options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "PWMATRIX", "argument": "-PWMATRIX", "type": "select", "label": "Protein weigth matrix", "help": "Default: GONNET", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "GONNET", "options": [["BLOSUM", "BLOSUM", false], ["PAM", "PAM", false], ["GONNET", "GONNET", true], ["ID", "ID", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "PWGAPOPEN", "argument": "-PWGAPOPEN", "type": "integer", "label": "Gap opening penalty", "help": "Default: 10", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "PWGAPEXT", "argument": "-PWGAPEXT", "type": "float", "label": "Gap extension penalty", "help": "Default: 0.1", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "-QUICKTREE", "inputs": [{"model_class": "Section", "name": "fast_pairwise_alignments", "type": "section", "title": "Fast pairwise alignments options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "KTUPLE", "argument": "-KTUPLE", "type": "integer", "label": "Word size", "help": "Size of exactly matching fragment that is used. Increase for speed, decrease for sensitivity. Maximum value for proteins is 2, and for DNA 4.Default: 1", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "TOPDIAGS", "argument": "-TOPDIAGS", "type": "integer", "label": "Number of best diagonals", "help": "Number of k-tuple matches on each diagonal. Decrease for speed; increase for sensitivity. Default: 5", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "WINDOW", "argument": "-WINDOW", "type": "integer", "label": "Window length", "help": "This is the number of diagonals around each of the best diagonals that will be used. Decrease for speed; increase for sensitivity. Default: 5", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "PAIRGAP", "argument": "-PAIRGAP", "type": "integer", "label": "Gap penalty", "help": "Fast pairwise alignment gap penalty for each gap created. Default: 3", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "SCORE", "argument": "-SCORE", "type": "select", "label": "Score type", "help": "Score type to output. Default: percent", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "PERCENT", "options": [["Percent", "PERCENT", false], ["Absolute", "ABSOLUTE", false]], "display": null, "multiple": false, "textable": false}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selector", "argument": null, "type": "select", "label": "Algorithm for the alignment guide tree", "help": "Default: slow", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Slow: dynamic programming (accurate)", "", false], ["Fast: method of Wilbur and Lipman (approximate)", "-QUICKTREE", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "multiple_alignments", "type": "section", "title": "Multiple alignments options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "MATRIX", "argument": "-MATRIX", "type": "select", "label": "Protein weigth matrix", "help": "Default: GONNET", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "GONNET", "options": [["BLOSUM", "BLOSUM", false], ["PAM", "PAM", false], ["GONNET", "GONNET", true], ["ID", "ID", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "GAPOPEN", "argument": "-GAPOPEN", "type": "integer", "label": "Gap opening penalty", "help": "Default: 10", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "GAPEXT", "argument": "-GAPEXT", "type": "float", "label": "Gap extension penalty", "help": "Default: 0.2", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "ENDGAPS", "argument": "-ENDGAPS", "type": "boolean", "label": "End gap separation penalty", "help": "End gap separation treats end gaps just like internal gaps for the purposes of avoiding gaps that are too close. If you turn this off, end gaps will be ignored for this purpose.                      This is useful when you wish to align fragments where the end gaps are not biologically meaningful", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-ENDGAPS", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "GAPDIST", "argument": "-GAPDIST", "type": "integer", "label": "Gap separation penalty range", "help": "Gap separation distance tries to decrease the chances of gaps being too close to each other. Gaps that are less than this distance apart are penalised more than other gaps.                      This does not prevent close gaps; it makes them less frequent, promoting a block-like appearance of the alignment", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "NOPGAP", "argument": "-NOPGAP", "type": "boolean", "label": "Residue specific penalties", "help": "Residue specific penalties are amino acid specific gap penalties that reduce or increase the gap opening penalties at each position in the alignment or sequence. As an example,                      positions that are rich in glycine are more likely to have an adjacent gap than positions that are rich in valine", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-NOPGAP", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "NOHGAP", "argument": "-NOHGAP", "type": "boolean", "label": "Hydrophilic gaps", "help": "Hydrophilic gap penalties are used to increase the chances of a gap                  within a run (5 or more residues) of hydrophilic amino acids; these are likely to be loop or random coil regions where gaps are more common", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-NOHGAP", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "MAXDIV", "argument": "-MAXDIV", "type": "integer", "label": "Delay divergent sequences", "help": "Percentage identity for delay", "refresh_on_change": false, "min": 0, "max": 100, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "NEGATIVE", "argument": "-NEGATIVE", "type": "boolean", "label": "Negative values in matrix", "help": "Delays the alignment of the most distantly related sequences                  until after the most closely related sequences have been aligned. The setting shows the percent identity level required to delay the addition of a sequence; sequences that are less identical                  than this level to any other sequences will be aligned later", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-NEGATIVE", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "TRANSWEIGHT", "argument": "-TRANSWEIGHT", "type": "float", "label": "Transition weight", "help": "The transition weight option for aligning nucleotide sequences has been changed in version                  1.7 from an on/off toggle to a weight between 0 and 1. A weight of zero means that the transitions are scored as mismatches; a weight of 1 gives transitions the full match score. For distantly                  related DNA sequences, the weight should be near to zero; for closely related sequences it can be useful to assign a higher score", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "dnarna", "argument": null, "type": "select", "label": "Data type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "DNA", "options": [["DNA nucleotide sequences", "DNA", true], ["Protein sequences", "PROTEIN", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "tree_calculation", "type": "section", "title": "Tree calculation/BOOTSTRAP options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "OUTPUTTREE", "argument": "-OUTPUTTREE", "type": "select", "label": "Output tree/distance forma", "help": "Specify the output format. Default: phylip", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "PHYLIP", "options": [["PHYLIP", "PHYLIP", false], ["DIST", "DIST", false], ["NJ", "NJ", false], ["NEXUS", "NEXUS", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "KIMURA", "argument": "-KIMURA", "type": "boolean", "label": "Use Kimura correction", "help": "For small divergence (say inferior 10%) this option makes no difference. For greater divergence, this option corrects for the fact that observed distances underestimate actual evolutionary distances.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-KIMURA", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "TOSSGAPS", "argument": "-TOSSGAPS", "type": "boolean", "label": "Ignore positions with gaps", "help": "Default: No", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-TOSSGAPS", "falsevalue": ""}]}, {"model_class": "Conditional", "name": "outcontrol", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}, {"model_class": "ConditionalWhen", "value": "phylip", "inputs": []}, {"model_class": "ConditionalWhen", "value": "clustal", "inputs": [{"model_class": "BooleanToolParameter", "name": "out_seqnos", "argument": null, "type": "boolean", "label": "Show residue numbers in clustal format output", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "ON", "falsevalue": "OFF"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "outform", "argument": null, "type": "select", "label": "Output alignment format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "clustal", "options": [["Native Clustal output format", "clustal", true], ["PHYLIP format", "phylip", false], ["FASTA format", "fasta", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "out_order", "argument": null, "type": "select", "label": "Output order", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ALIGNED", "options": [["Aligned", "ALIGNED", false], ["Same order as input file", "INPUT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "range", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "complete", "inputs": []}, {"model_class": "ConditionalWhen", "value": "part", "inputs": [{"model_class": "IntegerToolParameter", "name": "seq_range_start", "argument": null, "type": "integer", "label": "Start point", "help": "Sequence range to write", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seq_range_end", "argument": null, "type": "integer", "label": "End point", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "99999", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mode", "argument": null, "type": "select", "label": "Output complete alignment (or specify part to output)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "complete", "options": [["Complete alignment", "complete", false], ["Only part of the alignment", "part", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "output", "format": "clustal", "label": "${tool.name} on ${on_string}: ${outcontrol.outform}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "dnd", "format": "nhx", "label": "${tool.name} on ${on_string}: dnd", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "input.dnd", "edam_format": "format_1910", "edam_data": "data_0872", "discover_datasets": []}], "panel_section_id": "multiple_alignments", "panel_section_name": "Multiple Alignments", "form_style": "regular"}