{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/devteam/tophat/tophat/1.5.0", "name": "TopHat for Illumina", "version": "1.5.0", "description": "Find splice junctions using RNA-seq data", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": true, "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "tophat", "owner": "devteam", "changeset_revision": "2ad64c5bb5f4", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input1", "argument": null, "type": "data", "label": "RNA-Seq FASTQ file", "help": "Nucleotide-space: Must have Sanger-scaled quality values with ASCII offset 33", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger"], "edam": {"edam_formats": ["format_1932"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "refGenomeSource", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "indexed", "inputs": [{"model_class": "SelectToolParameter", "name": "index", "argument": null, "type": "select", "label": "Select a reference genome", "help": "If your genome of interest is not listed, contact the Galaxy team", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "Araly1", "options": [["Arabidopsis lyrata: Araly1", "Araly1", false], ["Arabidopsis thaliana: Arabidopsis_thaliana_TAIR10", "Arabidopsis_thaliana_TAIR10", false], ["Arabidopsis thaliana: Arabidopsis_thaliana_TAIR9", "Arabidopsis_thaliana_TAIR9", false], ["Armadillo (Dasypus novemcinctus): dasNov1", "dasNov1", false], ["Baboon (Papio anubis): papHam1", "papHam1", false], ["Bacillus subtilis subsp. subtilis str. 168: baciSubt", "baciSubt", false], ["Bordetella bronchiseptica str. RB50: bordBron", "bordBron", false], ["Boreoeutherian (UCSC Recon): borEut13", "borEut13", false], ["Budgerigar (Melopsittacus undulatus): melUnd1", "melUnd1", false], ["Burkholderia pseudomallei 1106a: burkPseu_1106A", "burkPseu_1106A", false], ["Burkholderia pseudomallei 1710b: 13954", "burkPseu_1710B", false], ["Burkholderia pseudomallei 668: 13953", "burkPseu_668", false], ["Burkholderia pseudomallei K96243: 178", "burkPseu_K96243", false], ["Bushbaby (Otolemur garnetti): otoGar1", "otoGar1", false], ["Bushbaby (Otolemur garnetti): otoGar3", "otoGar3", false], ["C. elegans (WS120): ce2", "ce2", false], ["C. elegans (WS140): ce3", "ce3", false], ["C. elegans (WS170): ce4", "ce4", false], ["C. elegans (WS180): ce5", "ce5", false], ["C. elegans (WS190): ce6", "/cvmfs/data.galaxyproject.org/byhand/ce6/bowtie_index/ce6", false], ["C. elegans (WS200): ce7", "ce7", false], ["C. elegans (WS204): ce8", "ce8", false], ["C. elegans (WS210): ce9", "ce9", false], ["C. elegans (WS220): ce10", "ce10", false], ["Caenorhabditis brenneri: caePb1", "caePb1", false], ["Caenorhabditis brenneri: caePb2", "caePb2", false], ["Caenorhabditis brenneri: caePb3", "caePb3", false], ["Caenorhabditis briggsae: cb3", "cb3full", false], ["Caenorhabditis briggsae: cb3 Canonical", "cb3canon", false], ["Caenorhabditis japonica: caeJap1", "caeJap1", false], ["Caenorhabditis japonica: caeJap2", "caeJap2", false], ["Caenorhabditis japonica: caeJap3", "caeJap3", false], ["Caenorhabditis japonica: caeJap4", "caeJap4", false], ["Caenorhabditis remanei: caeRem1", "caeRem1", false], ["Caenorhabditis remanei: caeRem2", "caeRem2", false], ["Caenorhabditis remanei: caeRem3", "caeRem3", false], ["Caenorhabditis remanei: caeRem4", "caeRem4", false], ["Cat (Felis catus): felCat3", "/cvmfs/data.galaxyproject.org/byhand/felCat3/bowtie_index/felCat3", false], ["Cat (Felis catus): felCat4", "felCat4full", false], ["Cat (Felis catus): felCat4 Canonical", "felCat4canon", false], ["Cat (Felis catus): felCat5", "felCat5", false], ["Chicken (Gallus gallus): galGal3", "/cvmfs/data.galaxyproject.org/byhand/galGal3/bowtie_index/galGal3", false], ["Chicken (Gallus gallus): galGal3 Canonical", "galGal3canon", false], ["Chicken (Gallus gallus): galGal4", "galGal4", false], ["Chimpanzee (Pan troglodytes): panTro1", "panTro1", false], ["Chimpanzee (Pan troglodytes): panTro2", "panTro2full", false], ["Chimpanzee (Pan troglodytes): panTro2 Canonical", "panTro2canon", false], ["Chimpanzee (Pan troglodytes): panTro3", "panTro3full", false], ["Chimpanzee (Pan troglodytes): panTro3 Canonical", "panTro3canon", false], ["Chimpanzee (Pan troglodytes): panTro4", "panTro4", false], ["Ciona intestinalis: ci2", "ci2full", false], ["Ciona intestinalis: ci2 Canonical", "ci2canon", false], ["Common Shrew (Sorex araneus): sorAra1", "sorAra1", false], ["Cow (Bos taurus): bosTau2", "bosTau2", false], ["Cow (Bos taurus): bosTau3", "bosTau3", false], ["Cow (Bos taurus): bosTau4", "/cvmfs/data.galaxyproject.org/byhand/bosTau4/bowtie_index/bosTau4", false], ["Cow (Bos taurus): bosTau5", "bosTau5", false], ["Cow (Bos taurus): bosTau6", "bosTau6", false], ["Cow (Bos taurus): bosTau7", "bosTau7", false], ["Cow (Bos taurus): bosTauMd3", "bosTauMd3", false], ["Deer Tick (Ixodes scapularis): IscaW1", "IscaW1", false], ["Dog (Canis lupus familiaris): canFam1", "canFam1", false], ["Dog (Canis lupus familiaris): canFam2", "/cvmfs/data.galaxyproject.org/byhand/canFam2/bowtie_index/canFam2", false], ["Dog (Canis lupus familiaris): canFam3", "canFam3", false], ["Dolphin (Tursiops truncatus): turTru2", "turTru2", false], ["Elephant (Loxodonta africana africana): loxAfr1", "loxAfr1", false], ["Elephant (Loxodonta africana africana): loxAfr3", "loxAfr3", false], ["Enterobacter sp. 638: ente638", "ente638", false], ["Escherichia coli (APEC O1): eschColi_APEC_O1", "eschColi_APEC_O1", false], ["Escherichia coli (CFT073): eschColi_CFT073", "eschColi_CFT073", false], ["Escherichia coli (str. K-12 substr. DH10B): 20079", "eschColi_K12_DH10B", false], ["Escherichia coli (str. K-12 substr. MG1655): eschColi_K12", "eschColi_K12", false], ["Escherichia coli (str. K-12 substr. W3110): 16351", "eschColi_K12_W3110", false], ["Escherichia coli (str. O157H7 substr. EC4115): eschColi_EC4115", "eschColi_O157H7_EC4115", false], ["Escherichia coli (str. O157H7 substr. EDL933): 259", "eschColi_O157H7_EDL933", false], ["Escherichia coli (str. O157H7 substr. Sakai): eschColi_O157H7", "eschColi_O157H7_Sakai", false], ["Escherichia coli (str. O157H7 substr. TW14359): eschColi_TW14359", "eschColi_O157H7_TW14359", false], ["Fission Yeast (Schizosaccharomyces pombe): Schizosaccharomyces_pombe_1.1", "Schizosaccharomyces_pombe_1.1", false], ["Frog (Xenopus tropicalis): xenTro1", "xenTro1", false], ["Frog (Xenopus tropicalis): xenTro2", "/cvmfs/data.galaxyproject.org/byhand/xenTro2/bowtie_index/xenTro2", false], ["Frog (Xenopus tropicalis): xenTro3", "xenTro3", false], ["Fruit Fly (Drosophila ananassae): droAna3", "droAna3", false], ["Fruit Fly (Drosophila erecta): droEre2", "droEre2", false], ["Fruit Fly (Drosophila grimshawi): droGri2", "droGri2", false], ["Fruit Fly (Drosophila melanogaster): dm3", "/cvmfs/data.galaxyproject.org/byhand/dm3/bowtie_index/dm3", false], ["Fruit Fly (Drosophila mojavensis): droMoj3", "droMoj3", false], ["Fruit Fly (Drosophila persimilis): droPer1", "droPer1", false], ["Fruit Fly (Drosophila pseudoobscura): dp4", "dp4", false], ["Fruit Fly (Drosophila sechellia): droSec1", "droSec1", false], ["Fruit Fly (Drosophila simulans): droSim1", "droSim1", false], ["Fruit Fly (Drosophila virilis): droVir2", "droVir2", false], ["Fruit Fly (Drosophila virilis): droVir3", "droVir3", false], ["Fruit Fly (Drosophila willistoni): droWil1", "droWil1", false], ["Fruit Fly (Drosophila yakuba): droYak2", "droYak2", false], ["Gorilla gorilla: gorGor3", "gorGor3", false], ["Guinea Pig (Cavia porcellus): cavPor3", "cavPor3", false], ["Head Louse (Pediculus humanus): PhumU1", "PhumU1", false], ["Honeybee (Apis mellifera): apiMel1", "apiMel1", false], ["Honeybee (Apis mellifera): apiMel2", "apiMel2", false], ["Honeybee (Apis mellifera): apiMel3", "/cvmfs/data.galaxyproject.org/byhand/apiMel3/bowtie_index/apiMel3", false], ["Horse (Equus caballus): equCab2", "/cvmfs/data.galaxyproject.org/byhand/equCab2/bowtie_index/equCab2", false], ["Horse (Equus caballus): equCab2 chrM", "/cvmfs/data.galaxyproject.org/byhand/equCab2_chrM/bowtie_index/chrM", false], ["Human (Homo sapiens) (J. Craig Venter): venter1", "venter1", false], ["Human (Homo sapiens) (Korean Man AK1): Homo_sapiens_AK1", "Homo_sapiens_AK1", false], ["Human (Homo sapiens) (b36): hg18", "/cvmfs/data.galaxyproject.org/byhand/hg18/bowtie_index/hg18", false], ["Human (Homo sapiens) (b36): hg18 Canonical", "hg18canon", false], ["Human (Homo sapiens) (b37) (hg19 with mtDNA replaced with rCRS): Homo_sapiens_nuHg19_mtrCRS", "Homo_sapiens_nuHg19_mtrCRS", false], ["Human (Homo sapiens) (b37): hg19", "/cvmfs/data.galaxyproject.org/byhand/hg19/bowtie_index/hg19", false], ["Human (Homo sapiens) (b37): hg19 Canonical", "hg19canon", false], ["Human (Homo sapiens) (b37): hg19 Canonical Female", "hg19female", false], ["Human (Homo sapiens) (b37): hg_g1k_v37", "hg_g1k_v37", false], ["Human (Homo sapiens) (b38): hg38", "hg38", false], ["Human (Homo sapiens) (b38): hg38 Canonical", "hg38canon", false], ["Human (Homo sapiens) (b38): hg38 Canonical Female", "hg38female", false], ["Hydra magnipapillata: Hydra_JCVI", "Hydra_JCVI", false], ["Kangaroo rat (Dipodomys ordii): dipOrd1", "dipOrd1", false], ["Lamprey (Petromyzon marinus): petMar1", "petMar1", false], ["Lancelet (Branchiostoma floridae): braFlo1", "braFlo1", false], ["Little Brown Bat (Myotis lucifugus): myoLuc2", "myoLuc2", false], ["Lizard (Anolis carolinensis): anoCar1", "anoCar1", false], ["Lizard (Anolis carolinensis): anoCar2", "anoCar2", false], ["Maize (Zea mays): Zea_mays_B73_RefGen_v2", "Zea_mays_B73_RefGen_v2", false], ["Marmoset (Callithrix jacchus): calJac1", "calJac1", false], ["Marmoset (Callithrix jacchus): calJac3", "calJac3full", false], ["Marmoset (Callithrix jacchus): calJac3 Canonical", "calJac3canon", false], ["Medaka (Oryzias latipes): oryLat2", "oryLat2full", false], ["Medaka (Oryzias latipes): oryLat2 Canonical", "oryLat2canon", false], ["Medium ground finch (Geospiza fortis): geoFor1", "geoFor1", false], ["Microcystis aeruginosa NIES-843: 27835", "27835", false], ["Mosquito (Aedes aegypti): AaegL1", "AaegL1", false], ["Mosquito (Anopheles gambiae): AgamP3", "AgamP3", false], ["Mosquito (Anopheles gambiae): anoGam1", "anoGam1", false], ["Mosquito (Culex quinquefasciatus): CpipJ1", "CpipJ1", false], ["Mouse (Mus musculus): mm10", "mm10", false], ["Mouse (Mus musculus): mm8", "/cvmfs/data.galaxyproject.org/byhand/mm8/bowtie_index/mm8", false], ["Mouse (Mus musculus): mm8 Canonical", "mm8canon", false], ["Mouse (Mus musculus): mm9", "/cvmfs/data.galaxyproject.org/byhand/mm9/bowtie_index/mm9", false], ["Mouse (Mus musculus): mm9 Canonical", "mm9canon", false], ["Mouse (Mus musculus): mm9 Canonical Female", "mm9female", false], ["Mouse lemur (Microcebus murinus):  micMur1", "micMur1", false], ["Naked mole-rat (Heterocephalus glaber): hetGla1", "hetGla1", false], ["Northern White-cheeked Gibbon (Nomascus leucogenys): nomLeu1", "nomLeu1", false], ["Northern White-cheeked Gibbon (Nomascus leucogenys): nomLeu2", "nomLeu2", false], ["Opossum (Monodelphis domestica): monDom1", "monDom1", false], ["Opossum (Monodelphis domestica): monDom4", "monDom4", false], ["Opossum (Monodelphis domestica): monDom5", "monDom5", false], ["Orangutan (Pongo pygmaeus abelii): ponAbe2", "ponAbe2", false], ["Painted turtle (Chrysemys picta bellii): chrPic1", "chrPic1", false], ["Panda (Ailuropoda melanoleuca): ailMel1", "ailMel1", false], ["Pig (Sus scrofa): Sscrofa9.58 (SGSC)", "/cvmfs/data.galaxyproject.org/byhand/Sscrofa9.58/bowtie_index/Sscrofa9.58", false], ["Pig (Sus scrofa): susScr1", "susScr1", false], ["Pig (Sus scrofa): susScr2", "/cvmfs/data.galaxyproject.org/byhand/susScr2/bowtie_index/susScr2", false], ["Pig (Sus scrofa): susScr3", "susScr3", false], ["Platypus (Ornithorhynchus anatinus): ornAna1", "ornAna1", false], ["Poplar (Populus trichocarpa): Ptrichocarpa_156", "Ptrichocarpa_156", false], ["Pristionchus pacificus: priPac1", "priPac1", false], ["Pseudomonas aeruginos (str. PA7): 16720", "pseuAeru_PA7", false], ["Pseudomonas aeruginos (str. PAO1): pseuAeru", "pseuAeru_PAO1", false], ["Pseudomonas aeruginos (str. UCBPP-PA14): 386", "pseuAeru_UCBPP_PA14", false], ["Purple Sea Urchin (Strongylocentrotus purpuratus): Spur_v2.6", "Spur_v2.6", false], ["Purple Sea Urchin (Strongylocentrotus purpuratus): strPur2", "/cvmfs/data.galaxyproject.org/byhand/strPur2/bowtie_index/strPur2", false], ["Purple Sea Urchin (Strongylocentrotus purpuratus): strPur3", "strPur3", false], ["Rabbit (Oryctolagus cuniculus): oryCun1", "oryCun1", false], ["Rabbit (Oryctolagus cuniculus): oryCun2", "oryCun2", false], ["Rat (Rattus norvegicus): rn3", "rn3", false], ["Rat (Rattus norvegicus): rn4", "/cvmfs/data.galaxyproject.org/byhand/rn4/bowtie_index/rn4", false], ["Rat (Rattus norvegicus): rn4 Canonical", "rn4canon", false], ["Rat (Rattus norvegicus): rn5", "rn5", false], ["Rhesus Macaque (Macaca mulatta): rheMac2", "/cvmfs/data.galaxyproject.org/byhand/rheMac2/bowtie_index/rheMac2", false], ["Rhesus Macaque (Macaca mulatta): rheMac3", "rheMac3", false], ["Rice (Oryza sativa): oryza_sativa_japonica_nipponbare_IRGSP4.0", "oryza_sativa_japonica_nipponbare_IRGSP4.0", false], ["Sea Hare (Aplysia californica): aplCal1", "aplCal1", false], ["Sheep (Ovis aries): oviAri1", "oviAri1", false], ["Silkworm (Bombyx mori str. p50T): Bombyx_mori_p50T_2.0", "Bombyx_mori_p50T_2.0", false], ["Sloth (Choloepus hoffmanni): choHof1", "choHof1", false], ["Squirrel (Spermophilus tridecemlineatus): speTri2", "speTri2", false], ["Squirrel monkey (Saimiri boliviensis): saiBol1", "saiBol1", false], ["Stickleback (Gasterosteus aculeatus): gasAcu1", "gasAcu1", false], ["Streptococcus pneumoniae (str. R6): 278", "strePneu_R6", false], ["Tarsier (Tarsius syrichta): tarSyr1", "tarSyr1", false], ["Tasmanian devil (Sarcophilus harrisii): sarHar1", "sarHar1", false], ["Tenrec (Echinops telfairi): echTel1", "echTel1", false], ["Tetraodon (Tetraodon nigroviridis): tetNig1", "tetNig1full", false], ["Tetraodon (Tetraodon nigroviridis): tetNig1 Canonical", "tetNig1canon", false], ["Tetraodon (Tetraodon nigroviridis): tetNig2", "tetNig2full", false], ["Tetraodon (Tetraodon nigroviridis): tetNig2 Canonical", "tetNig2canon", false], ["Theobroma cacao Dec 2010 (CIRAD/Theobroma cacao Belizian Criollo)", "Tcacao_1.0", false], ["Tree Shrew (Tupaia belangeri): tupBel1", "tupBel1", false], ["Tribolium castaneum: Tcas_3.0", "Tcas_3.0", false], ["Tribolium castaneum: triCas2", "triCas2", false], ["Turkey (Meleagris gallopavo): melGal1", "melGal1", false], ["Xanthomonas oryzae str. KACC10331: 12931", "Xanthomonas_oryzae_KACC10331", false], ["Xanthomonas oryzae str. MAFF_311018: 16297", "Xanthomonas_oryzae_MAFF_311018", false], ["Xanthomonas oryzae str. PXO99A: Xanthomonas_oryzae_PXO99A", "Xanthomonas_oryzae_PXO99A", false], ["Yeast (Saccharomyces cerevisiae): sacCer2", "/cvmfs/data.galaxyproject.org/byhand/sacCer2/bowtie_index/sacCer2", false], ["Yeast (Saccharomyces cerevisiae): sacCer3", "sacCer3", false], ["Zebra Finch (Taeniopygia guttata): taeGut1", "/cvmfs/data.galaxyproject.org/byhand/taeGut1/bowtie_index/taeGut1", false], ["Zebra Finch (Taeniopygia guttata): taeGut1 Canonical", "taeGut1canon", false], ["Zebrafish (Danio rerio): danRer5", "/cvmfs/data.galaxyproject.org/byhand/danRer5/bowtie_index/danRer5", false], ["Zebrafish (Danio rerio): danRer6", "/cvmfs/data.galaxyproject.org/byhand/danRer6/bowtie_index/danRer6", false], ["Zebrafish (Danio rerio): danRer7", "danRer7", false], ["phiX174 (AF176034)", "/cvmfs/data.galaxyproject.org/byhand/phiX/bowtie_index/phiX", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "ownFile", "argument": null, "type": "data", "label": "Select the reference genome", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "genomeSource", "argument": null, "type": "select", "label": "Use a built in reference genome or own from your history", "help": "Built-ins genomes were created using default options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "indexed", "options": [["Use a built-in genome", "indexed", true], ["Use a genome from history", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "singlePaired", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "Conditional", "name": "sParams", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "preSet", "inputs": []}, {"model_class": "ConditionalWhen", "value": "full", "inputs": [{"model_class": "SelectToolParameter", "name": "library_type", "argument": null, "type": "select", "label": "Library Type", "help": "TopHat will treat the reads as strand specific. Every read alignment will have an XS attribute tag. Consider supplying library type options below to select the correct RNA-seq protocol.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "fr-unstranded", "options": [["FR Unstranded", "fr-unstranded", false], ["FR First Strand", "fr-firststrand", false], ["FR Second Strand", "fr-secondstrand", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "anchor_length", "argument": null, "type": "integer", "label": "Anchor length (at least 3)", "help": "Report junctions spanned by reads with at least this many bases on each side of the junction.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "8", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "splice_mismatches", "argument": null, "type": "integer", "label": "Maximum number of mismatches that can appear in the anchor region of spliced alignment", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_intron_length", "argument": null, "type": "integer", "label": "The minimum intron length", "help": "TopHat will ignore donor/acceptor pairs closer than this many bases apart.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "70", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_intron_length", "argument": null, "type": "integer", "label": "The maximum intron length", "help": "When searching for junctions ab initio, TopHat will ignore donor/acceptor pairs farther than this many bases apart, except when such a pair is supported by a split segment alignment of a long read.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500000", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "indel_search", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_insertion_length", "argument": null, "type": "integer", "label": "Max insertion length.", "help": "The maximum insertion length.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_deletion_length", "argument": null, "type": "integer", "label": "Max deletion length.", "help": "The maximum deletion length.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "allow_indel_search", "argument": null, "type": "select", "label": "Allow indel search", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "max_multihits", "argument": null, "type": "integer", "label": "Maximum number of alignments to be allowed", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_segment_intron", "argument": null, "type": "integer", "label": "Minimum intron length that may be found during split-segment (default) search", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_segment_intron", "argument": null, "type": "integer", "label": "Maximum intron length that may be found during split-segment (default) search", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "initial_read_mismatches", "argument": null, "type": "integer", "label": "Number of mismatches allowed in the initial read mapping", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seg_mismatches", "argument": null, "type": "integer", "label": "Number of mismatches allowed in each segment alignment for reads mapped independently", "help": "", "refresh_on_change": false, "min": 0, "max": 3, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seg_length", "argument": null, "type": "integer", "label": "Minimum length of read segments", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "25", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "own_junctions", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "Conditional", "name": "gene_model_ann", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "DataToolParameter", "name": "gene_annotation_model", "argument": null, "type": "data", "label": "Gene Model Annotations", "help": "TopHat will use the exon records in this file to build a set of known splice junctions for each gene, and will attempt to align reads to these junctions even if they would not normally be covered by the initial mapping.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gtf", "gff3"], "edam": {"edam_formats": ["format_2306", "format_1975"], "edam_data": ["data_1255", "data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "use_annotations", "argument": null, "type": "select", "label": "Use Gene Annotation Model", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "raw_juncs", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "DataToolParameter", "name": "raw_juncs", "argument": null, "type": "data", "label": "Raw Junctions", "help": "Supply TopHat with a list of raw junctions. Junctions are specified one per line, in a tab-delimited format. Records look like: [chrom] [left] [right] [+/-] left and right are zero-based coordinates, and specify the last character of the left sequenced to be spliced to the first character of the right sequence, inclusive.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["interval"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "use_juncs", "argument": null, "type": "select", "label": "Use Raw Junctions", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "no_novel_juncs", "argument": null, "type": "select", "label": "Only look for supplied junctions", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_junctions", "argument": null, "type": "select", "label": "Use Own Junctions", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "closure_search", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_closure_exon", "argument": null, "type": "integer", "label": "During closure search for paired end reads, exonic hops in the potential splice graph must be at least this long. The default is 50.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_closure_intron", "argument": null, "type": "integer", "label": "Minimum intron length that may be found during closure search", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_closure_intron", "argument": null, "type": "integer", "label": "Maximum intron length that may be found during closure search", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_search", "argument": null, "type": "select", "label": "Use Closure Search", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "coverage_search", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_coverage_intron", "argument": null, "type": "integer", "label": "Minimum intron length that may be found during coverage search", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_coverage_intron", "argument": null, "type": "integer", "label": "Maximum intron length that may be found during coverage search", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_search", "argument": null, "type": "select", "label": "Use Coverage Search", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", true], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "microexon_search", "argument": null, "type": "select", "label": "Use Microexon Search", "help": "With this option, the pipeline will attempt to find alignments incident to microexons. Works only for reads 50bp or longer.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "sSettingsType", "argument": null, "type": "select", "label": "TopHat settings to use", "help": "Use the Full parameter list to change default settings.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "preSet", "options": [["Default settings", "preSet", false], ["Full parameter list", "full", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "input2", "argument": null, "type": "data", "label": "RNA-Seq FASTQ file", "help": "Nucleotide-space: Must have Sanger-scaled quality values with ASCII offset 33", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger"], "edam": {"edam_formats": ["format_1932"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "mate_inner_distance", "argument": null, "type": "integer", "label": "Mean Inner Distance between Mate Pairs", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "pParams", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "preSet", "inputs": []}, {"model_class": "ConditionalWhen", "value": "full", "inputs": [{"model_class": "SelectToolParameter", "name": "library_type", "argument": null, "type": "select", "label": "Library Type", "help": "TopHat will treat the reads as strand specific. Every read alignment will have an XS attribute tag. Consider supplying library type options below to select the correct RNA-seq protocol.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "fr-unstranded", "options": [["FR Unstranded", "fr-unstranded", false], ["FR First Strand", "fr-firststrand", false], ["FR Second Strand", "fr-secondstrand", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "mate_std_dev", "argument": null, "type": "integer", "label": "Std. Dev for Distance between Mate Pairs", "help": "The standard deviation for the distribution on inner distances between mate pairs.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "anchor_length", "argument": null, "type": "integer", "label": "Anchor length (at least 3)", "help": "Report junctions spanned by reads with at least this many bases on each side of the junction.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "8", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "splice_mismatches", "argument": null, "type": "integer", "label": "Maximum number of mismatches that can appear in the anchor region of spliced alignment", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_intron_length", "argument": null, "type": "integer", "label": "The minimum intron length", "help": "TopHat will ignore donor/acceptor pairs closer than this many bases apart.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "70", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_intron_length", "argument": null, "type": "integer", "label": "The maximum intron length", "help": "When searching for junctions ab initio, TopHat will ignore donor/acceptor pairs farther than this many bases apart, except when such a pair is supported by a split segment alignment of a long read.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500000", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "indel_search", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_insertion_length", "argument": null, "type": "integer", "label": "Max insertion length.", "help": "The maximum insertion length.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_deletion_length", "argument": null, "type": "integer", "label": "Max deletion length.", "help": "The maximum deletion length.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "allow_indel_search", "argument": null, "type": "select", "label": "Allow indel search", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "max_multihits", "argument": null, "type": "integer", "label": "Maximum number of alignments to be allowed", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_segment_intron", "argument": null, "type": "integer", "label": "Minimum intron length that may be found during split-segment (default) search", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_segment_intron", "argument": null, "type": "integer", "label": "Maximum intron length that may be found during split-segment (default) search", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "initial_read_mismatches", "argument": null, "type": "integer", "label": "Number of mismatches allowed in the initial read mapping", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seg_mismatches", "argument": null, "type": "integer", "label": "Number of mismatches allowed in each segment alignment for reads mapped independently", "help": "", "refresh_on_change": false, "min": 0, "max": 3, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seg_length", "argument": null, "type": "integer", "label": "Minimum length of read segments", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "25", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "own_junctions", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "Conditional", "name": "gene_model_ann", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "DataToolParameter", "name": "gene_annotation_model", "argument": null, "type": "data", "label": "Gene Model Annotations", "help": "TopHat will use the exon records in this file to build a set of known splice junctions for each gene, and will attempt to align reads to these junctions even if they would not normally be covered by the initial mapping.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gtf", "gff3"], "edam": {"edam_formats": ["format_2306", "format_1975"], "edam_data": ["data_1255", "data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "use_annotations", "argument": null, "type": "select", "label": "Use Gene Annotation Model", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "raw_juncs", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "DataToolParameter", "name": "raw_juncs", "argument": null, "type": "data", "label": "Raw Junctions", "help": "Supply TopHat with a list of raw junctions. Junctions are specified one per line, in a tab-delimited format. Records look like: [chrom] [left] [right] [+/-] left and right are zero-based coordinates, and specify the last character of the left sequenced to be spliced to the first character of the right sequence, inclusive.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["interval"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "use_juncs", "argument": null, "type": "select", "label": "Use Raw Junctions", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "no_novel_juncs", "argument": null, "type": "select", "label": "Only look for supplied junctions", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_junctions", "argument": null, "type": "select", "label": "Use Own Junctions", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "closure_search", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_closure_exon", "argument": null, "type": "integer", "label": "During closure search for paired end reads, exonic hops in the potential splice graph must be at least this long. The default is 50.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_closure_intron", "argument": null, "type": "integer", "label": "Minimum intron length that may be found during closure search", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_closure_intron", "argument": null, "type": "integer", "label": "Maximum intron length that may be found during closure search", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_search", "argument": null, "type": "select", "label": "Use Closure Search", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "coverage_search", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_coverage_intron", "argument": null, "type": "integer", "label": "Minimum intron length that may be found during coverage search", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_coverage_intron", "argument": null, "type": "integer", "label": "Maximum intron length that may be found during coverage search", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_search", "argument": null, "type": "select", "label": "Use Coverage Search", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", true], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "microexon_search", "argument": null, "type": "select", "label": "Use Microexon Search", "help": "With this option, the pipeline will attempt to find alignments incident to microexons. Works only for reads 50bp or longer.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "pSettingsType", "argument": null, "type": "select", "label": "TopHat settings to use", "help": "Use the Full parameter list to change default settings.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "preSet", "options": [["Default settings", "preSet", false], ["Full parameter list", "full", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "sPaired", "argument": null, "type": "select", "label": "Is this library mate-paired?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "single", "options": [["Single-end", "single", false], ["Paired-end", "paired", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "insertions", "format": "bed", "label": "${tool.name} on ${on_string}: insertions", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "tophat_out/insertions.bed", "edam_format": "format_3003", "edam_data": "data_3002", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "deletions", "format": "bed", "label": "${tool.name} on ${on_string}: deletions", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "tophat_out/deletions.bed", "edam_format": "format_3003", "edam_data": "data_3002", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "junctions", "format": "bed", "label": "${tool.name} on ${on_string}: splice junctions", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "tophat_out/junctions.bed", "edam_format": "format_3003", "edam_data": "data_3002", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "accepted_hits", "format": "bam", "label": "${tool.name} on ${on_string}: accepted_hits", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "tophat_out/accepted_hits.bam", "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "rna_seq", "panel_section_name": "RNA-seq", "form_style": "regular"}