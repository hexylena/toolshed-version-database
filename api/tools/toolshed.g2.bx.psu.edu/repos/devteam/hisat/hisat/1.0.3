{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/devteam/hisat/hisat/1.0.3", "name": "HISAT", "version": "1.0.3", "description": "spliced aligner", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": true, "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "hisat", "owner": "devteam", "changeset_revision": "4d91675e16e8", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "input_format", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "fasta", "inputs": [{"model_class": "Conditional", "name": "paired", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "paired_collection", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "reads", "argument": null, "type": "data_collection", "label": "Paired reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired_list", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "reads", "argument": null, "type": "data_collection", "label": "Paired reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "reads_f", "argument": null, "type": "data", "label": "Forward reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "reads_r", "argument": null, "type": "data", "label": "Reverse reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "reads", "argument": null, "type": "data", "label": "Reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "paired_selector", "argument": null, "type": "select", "label": "Single end or paired reads?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "paired_collection", "options": [["Single collection of paired reads", "paired_collection", false], ["List of paired reads", "paired_list", false], ["Reads are paired", "paired", false], ["Reads are unpaired", "single", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": [{"model_class": "Conditional", "name": "paired", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "paired_collection", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "reads", "argument": null, "type": "data_collection", "label": "Paired reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "reads_f", "argument": null, "type": "data", "label": "Forward reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq"], "edam": {"edam_formats": ["format_1930"], "edam_data": ["data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "reads_r", "argument": null, "type": "data", "label": "Reverse reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq"], "edam": {"edam_formats": ["format_1930"], "edam_data": ["data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "reads", "argument": null, "type": "data", "label": "Reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq"], "edam": {"edam_formats": ["format_1930"], "edam_data": ["data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired_list", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "paired_selector", "argument": null, "type": "select", "label": "Single end or paired reads?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "paired_collection", "options": [["Single collection of paired reads", "paired_collection", false], ["List of paired reads", "paired_list", false], ["Reads are paired", "paired", false], ["Reads are unpaired", "single", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "input_format_selector", "argument": null, "type": "select", "label": "Input data format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "fastq", "options": [["FASTQ", "fastq", false], ["FASTA", "fasta", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "reference_genome", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "indexed", "inputs": [{"model_class": "SelectToolParameter", "name": "index", "argument": null, "type": "select", "label": "Select a reference genome", "help": "If your genome of interest is not listed, contact the Galaxy team", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "dm3", "options": [["Fly (Drosophila melanogaster): dm3 Full", "dm3", false], ["Human (Homo sapiens): hg19 Full", "hg19", false], ["Mouse (Mus Musculus): mm10 Full", "mm10", false], ["Mouse (Mus Musculus): mm9 Full", "mm9", false], ["Rat Jul. 2014 (RGSC 6.0/rn6) (rn6)", "rn6", false], ["canFam3", "canFam3", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "history_item", "argument": null, "type": "data", "label": "Select the reference genome", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "reference_genome_source", "argument": null, "type": "select", "label": "Source for the reference genome to align against", "help": "Built-in references were created using default options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "indexed", "options": [["Use a built-in genome", "indexed", true], ["Use a genome from history", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "alignment_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "SelectToolParameter", "name": "function_type", "argument": null, "type": "select", "label": "Function type", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "C", "options": [["Constant", "C", false], ["Linear [f(x) = y + z * x]", "L", false], ["Square root [f(x) = y + z * x\u00b2]", "S", false], ["Natural logarithm [f(x) = y + z * log(x)]", "G", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "constant_term", "argument": null, "type": "integer", "label": "Constant term (y)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "coefficient_term", "argument": null, "type": "integer", "label": "Coefficient (z)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "ignore_quals", "argument": null, "type": "boolean", "label": "Ignore quality values", "help": "(--ignore-quals) When calculating a mismatch penalty, always consider the quality value at the mismatched position to be the highest possible, regardless of the actual value. I.e. input is treated as though all quality values are high. This is also the default behavior when the input doesn't specify quality values.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--ignore-quals", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "skip_forward", "argument": null, "type": "boolean", "label": "Skip forward strand of reference", "help": "(--nofw) If --nofw is specified, hisat will not attempt to align unpaired reads to the forward (Watson) reference strand. In paired-end mode, --nofw and --norc pertain to the fragments; i.e. specifying --nofw causes hisat to explore only those paired-end configurations corresponding to fragments from the reverse-complement (Crick) strand.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--nofw", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "skip_reverse", "argument": null, "type": "boolean", "label": "Skip reference strand of reference", "help": "(--norc) If --norc is specified, hisat will not attempt to align unpaired reads against the reverse-complement (Crick) reference strand. In paired-end mode, --nofw and --norc pertain to the fragments; i.e. specifying --nofw causes hisat to explore only those paired-end configurations corresponding to fragments from the reverse-complement (Crick) strand.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--norc", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "alignment_options_selector", "argument": null, "type": "select", "label": "Alignment options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify alignment parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "input_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "IntegerToolParameter", "name": "skip", "argument": null, "type": "integer", "label": "Skip the first N reads or pairs in the input", "help": "-s", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "stop_after", "argument": null, "type": "integer", "label": "Stop after aligning N reads", "help": "(-u) Align the first N reads or read pairs from the input (after the first N reads or pairs have been skipped), then stop.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "trim_five", "argument": null, "type": "integer", "label": "Trim 5' end", "help": "(-5) Trim N bases from 5' (left) end of each read before alignment", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "trim_three", "argument": null, "type": "integer", "label": "Trim 3' end", "help": "(-3) Trim N bases from 3' (right) end of each read before alignment", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "input_options_selector", "argument": null, "type": "select", "label": "Input options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify input parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "scoring_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "IntegerToolParameter", "name": "match_bonus", "argument": null, "type": "integer", "label": "Set match bonus", "help": "(--ma) In local mode N is added to the alignment score for each position where a read character aligns to a reference character and the characters match. Not used in end-to-end mode", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_mismatch", "argument": null, "type": "integer", "label": "Maximum mismatch penalty", "help": "(--mp) Sets the maximum mismatch penalty. A number less than or equal to MX and greater than or equal to MN is subtracted from the alignment score for each position where a read character aligns to a reference character, the characters do not match, and neither is an N. If --ignore-quals is specified, the number subtracted quals MX. Otherwise, the number subtracted is MN + floor( (MX-MN)(MIN(Q, 40.0)/40.0) ) where Q is the Phred quality value.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "6", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_mismatch", "argument": null, "type": "integer", "label": "Minimum mismatch penalty", "help": "(--mp) Sets the minimum mismatch penalty. A number less than or equal to MX and greater than or equal to MN is subtracted from the alignment score for each position where a read character aligns to a reference character, the characters do not match, and neither is an N. If --ignore-quals is specified, the number subtracted quals MX. Otherwise, the number subtracted is MN + floor( (MX-MN)(MIN(Q, 40.0)/40.0) ) where Q is the Phred quality value.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ambiguous_penalty", "argument": null, "type": "integer", "label": "Ambiguous read penalty", "help": "(--np) Sets penalty for positions where the read, reference, or both, contain an ambiguous character such as N", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "read_open_penalty", "argument": null, "type": "integer", "label": "Read gap open penalty.", "help": "(--rdg) A read gap of length N gets a penalty of [open_penalty] + N * [extend_penalty]", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "read_extend_penalty", "argument": null, "type": "integer", "label": "Read gap extend penalty.", "help": "(--rdg) A read gap of length N gets a penalty of [open_penalty] + N * [extend_penalty]", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ref_open_penalty", "argument": null, "type": "integer", "label": "Reference gap open penalty.", "help": "(--rfg) A reference gap of length N gets a penalty of [open_penalty] + N * [extend_penalty]", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ref_extend_penalty", "argument": null, "type": "integer", "label": "Reference gap extend penalty.", "help": "(--rfg) A reference gap of length N gets a penalty of [open_penalty] + N * [extend_penalty]", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "scoring_options_selector", "argument": null, "type": "select", "label": "Scoring options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify scoring parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "spliced_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "IntegerToolParameter", "name": "canonical_penalty", "argument": null, "type": "integer", "label": "Penalty for canonical splice sites", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "noncanonical_penalty", "argument": null, "type": "integer", "label": "Penalty for non-canonical splice sites", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "function_type", "argument": null, "type": "select", "label": "Function type", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "C", "options": [["Constant", "C", false], ["Linear [f(x) = y + z * x]", "L", false], ["Square root [f(x) = y + z * x\u00b2]", "S", false], ["Natural logarithm [f(x) = y + z * log(x)]", "G", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "constant_term", "argument": null, "type": "integer", "label": "Constant term (y)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "coefficient_term", "argument": null, "type": "integer", "label": "Coefficient (z)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_intron", "argument": null, "type": "integer", "label": "Minimum intron length", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_intron", "argument": null, "type": "integer", "label": "Maximum intron length", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500000", "area": false, "datalist": []}, {"model_class": "DataToolParameter", "name": "known_splice_gtf", "argument": null, "type": "data", "label": "GTF file with known splice sites", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gtf"], "edam": {"edam_formats": ["format_2306"], "edam_data": ["data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "spliced_options_selector", "argument": null, "type": "select", "label": "Spliced alignment parameters", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify spliced alignment parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "output_alignments", "format": "bam", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "mapping", "panel_section_name": "Mapping", "form_style": "regular"}