{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/artbio/rsem/rsembowtie/1.0.1", "name": "RSEM-Bowtie", "version": "1.0.1", "description": "", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "rsem", "owner": "artbio", "changeset_revision": "e00a79cf5f8c", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "job", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "index", "inputs": [{"model_class": "Conditional", "name": "self_reference", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "transcripts", "inputs": [{"model_class": "DataToolParameter", "name": "reference_fasta_file", "argument": null, "type": "data", "label": "reference fasta file", "help": "The files should contain the sequences of transcripts.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "genomic", "inputs": [{"model_class": "DataToolParameter", "name": "reference_fasta_file", "argument": null, "type": "data", "label": "reference fasta file", "help": "The file should contain the sequence of an entire genome.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "gtf", "argument": null, "type": "data", "label": "gtf", "help": "extract transcript reference sequences using the gene annotations specified in this GTF", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gtf"], "edam": {"edam_formats": ["format_2306"], "edam_data": ["data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "ref_type", "argument": null, "type": "select", "label": "Reference source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "transcripts", "options": [["transcript fasta", "transcripts", false], ["reference genome and gtf", "genomic", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "DataToolParameter", "name": "transcript_to_gene_map", "argument": null, "type": "data", "label": "Map of gene ids to transcript (isoform) ids", "help": "Each line of should be of the form: gene_id transcript_id ( with the two fields separated by a tab character )            The map can be obtained from the UCSC table browser                group: Genes and Gene Prediction Tracks               table: knownIsoforms            Without a map:              If a reference genome and gtf is used, then RSEM uses the \"gene_id\" and \"transcript_id\" attributes in the GTF file.               Otherwise, RSEM assumes that each sequence in the reference sequence files is a separate gene.", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "reference_name", "argument": null, "type": "text", "label": "reference name", "help": "A one word name for this RSEM reference containing only letters, digits, and underscore characters", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "rsem_ref_name", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "polya", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "add", "inputs": [{"model_class": "IntegerToolParameter", "name": "polya_length", "argument": null, "type": "integer", "label": "The length of the poly(A) tails to be added. (Default: 125)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "125", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "subset", "inputs": [{"model_class": "DataToolParameter", "name": "no_polya_subset", "argument": null, "type": "data", "label": "List of transcript IDs (one per line) that should should not have polyA tails added.", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "polya_length", "argument": null, "type": "integer", "label": "The length of the poly(A) tails to be added. (Default: 125)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "125", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "none", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "polya_use", "argument": null, "type": "select", "label": "PolyA ", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "add", "options": [["Add poly(A) tails to all transcripts", "add", true], ["Exclude poly(A) tails from selected transcripts", "subset", false], ["Do not add poly(A) tails to any transcripts", "none", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "ntog", "argument": null, "type": "boolean", "label": "Disable the conversion of 'N' characters to 'G' characters in the reference sequences", "help": "Bowtie uses the automatic N to G conversion to align against all positions in the reference.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-ntog", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "no-index", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "select_job", "argument": null, "type": "select", "label": "rsem reference", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no-index", "options": [["Build rsem reference", "index", false], ["rsem reference available from history", "no-index", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "run_rsem", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "TextToolParameter", "name": "sample", "argument": null, "type": "text", "label": "Sample name", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "rsem_sample", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "reference", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "rsem_ref", "argument": null, "type": "data", "label": "RSEM reference", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["rsem_ref"], "edam": {"edam_formats": [null], "edam_data": [null]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "self", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "refSrc", "argument": null, "type": "select", "label": "RSEM Reference Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "history", "options": [["From your history", "history", false], ["RSEM Reference prepared with this tool", "self", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "input", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "fastq", "inputs": [{"model_class": "SelectToolParameter", "name": "fastq_select", "argument": null, "type": "select", "label": "FASTQ type", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "--phred33-quals", "options": [["phred33 qualities (default for sanger)", "--phred33-quals", true], ["solexa qualities", "--solexa-quals", false], ["phred64 qualities", "--phred64-quals", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "fastq", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "singlefastq", "argument": null, "type": "data", "label": "FASTQ file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz"], "edam": {"edam_formats": ["format_1930", "format_1930"], "edam_data": ["data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "fastq1", "argument": null, "type": "data", "label": "Read 1 fastq file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz"], "edam": {"edam_formats": ["format_1930", "format_1930"], "edam_data": ["data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "fastq2", "argument": null, "type": "data", "label": "Read 2 fastq file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz"], "edam": {"edam_formats": ["format_1930", "format_1930"], "edam_data": ["data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "matepair", "argument": null, "type": "select", "label": "Library type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "single", "options": [["Single End Reads", "single", false], ["Paired End Reads", "paired", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "bowtie_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "fullset", "inputs": [{"model_class": "IntegerToolParameter", "name": "bowtie_n", "argument": null, "type": "integer", "label": "Bowtie mismatches", "help": "Bowtie parameter max # of mismatches in the seed. (Range: 0-3, Default: 2) ", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "bowtie_e", "argument": null, "type": "integer", "label": "Maximum sum of quality scores at mismatched positions in read alignments.  This is also the value for the Bowtie -e option", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "99999999", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "bowtie_m", "argument": null, "type": "integer", "label": "Discard alignments for reads with number of alignments greater than", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "200", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "fullparams", "argument": null, "type": "select", "label": "bowtie settings", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["use bowtie defaults", "default", false], ["set bowtie options", "fullset", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": [{"model_class": "Conditional", "name": "fasta", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "singlefasta", "argument": null, "type": "data", "label": "fasta file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "fasta1", "argument": null, "type": "data", "label": "Read 1 fasta file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "fasta2", "argument": null, "type": "data", "label": "Read 2 fasta file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "matepair", "argument": null, "type": "select", "label": "Library Type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "single", "options": [["Single End Reads", "single", false], ["Paired End Reads", "paired", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "bowtie_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "fullset", "inputs": [{"model_class": "IntegerToolParameter", "name": "bowtie_n", "argument": null, "type": "integer", "label": "Bowtie mismatches", "help": "Bowtie parameter max # of mismatches in the seed. (Range: 0-3, Default: 2) ", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "bowtie_e", "argument": null, "type": "integer", "label": "Maximum sum of quality scores at mismatched positions in read alignments.  This is also the value for the Bowtie -e option", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "99999999", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "bowtie_m", "argument": null, "type": "integer", "label": "Discard alignments for reads with number of alignments greater than", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "200", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "fullparams", "argument": null, "type": "select", "label": "bowtie settings", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["use bowtie defaults", "default", false], ["set bowtie options", "fullset", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "format", "argument": null, "type": "select", "label": "RSEM Input file type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "fastq", "options": [["FASTQ", "fastq", false], ["FASTA", "fasta", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "seedlength", "argument": null, "type": "integer", "label": "Seed length used by the read aligner", "help": "Providing the correct value for this parameter is important for RSEM's accuracy if the data are single-end reads. RSEM uses this value for Bowtie's seed length parameter. The minimum value is 25. (Default:25)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "25", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "forward_prob", "argument": null, "type": "select", "label": "Is the library strand specific?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "options": [["No", "0.5", true], ["Yes, the reads (or first reads from paired-end libraries) are only in the forward orientation", "1", false], ["Yes, the reads (or first reads from paired-end libraries) are only in the reverse orientation", "0", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "rsem_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "fullset", "inputs": [{"model_class": "IntegerToolParameter", "name": "fragment_length_min", "argument": null, "type": "integer", "label": "Minimum read/insert length.", "help": " This is also the value for the bowtie -I option", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "fragment_length_max", "argument": null, "type": "integer", "label": "Maximum read/insert length.", "help": " This is also the value for the bowtie -X option", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "fragment_length_mean", "argument": null, "type": "float", "label": "Fragment length mean (single-end data only)", "help": "The mean of the fragment length distribution, which is assumed to be a Gaussian. (Default: -1, which disables use of the fragment length distribution)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "fragment_length_sd", "argument": null, "type": "float", "label": "The standard deviation of the fragment length distribution (single-end data only)", "help": "Default 0, which assumes that all fragments are of the same length, given by the rounded value of fragment length mean. ", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "Conditional", "name": "rspd", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "num_rspd_bins", "argument": null, "type": "integer", "label": "Number of bins in the RSPD.", "help": "Use of the default setting of 20 is recommended.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "estimate", "argument": null, "type": "select", "label": "Read Start Position Distribution (RSPD)", "help": "Set this option if you want to estimate the read start position distribution (RSPD) from data. Otherwise, RSEM will use a uniform RSPD.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["Use a uniform RSPD", "no", true], ["Estimate and correct for a non-uniform RSPD", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "useci", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "TextToolParameter", "name": "cimem", "argument": null, "type": "text", "label": "Amount of memory in (MB) for computing CI", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "1024", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "ci", "argument": null, "type": "select", "label": "Calculate 95% Credibility Intervals", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["no", "no", true], ["yes", "yes", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "fullparams", "argument": null, "type": "select", "label": "Additional RSEM options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["Use RSEM Defaults", "default", false], ["Set Additional RSEM Options", "fullset", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "rsem_outputs", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "default", "inputs": [{"model_class": "BooleanToolParameter", "name": "sampling_for_bam", "argument": null, "type": "boolean", "label": "Use sampling for BAM", "help": "When RSEM generates a BAM file, instead of outputing all alignments a read has with their posterior probabilities, one alignment is sampled according to the posterior probabilities. The sampling procedure includes the alignment to the \"noise\" transcript, which does not appear in the BAM file. Only the sampled alignment has a weight of 1. All other alignments have weight 0. If the \"noise\" transcript is sampled, all alignments appeared in the BAM file should have weight 0. (Default: off)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--sampling-for-bam", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "both", "inputs": [{"model_class": "BooleanToolParameter", "name": "sampling_for_bam", "argument": null, "type": "boolean", "label": "Use sampling for BAM", "help": "When RSEM generates a BAM file, instead of outputing all alignments a read has with their posterior probabilities, one alignment is sampled according to the posterior probabilities. The sampling procedure includes the alignment to the \"noise\" transcript, which does not appear in the BAM file. Only the sampled alignment has a weight of 1. All other alignments have weight 0. If the \"noise\" transcript is sampled, all alignments appeared in the BAM file should have weight 0. (Default: off)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--sampling-for-bam", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "result_bams", "argument": null, "type": "select", "label": "Create bam results files", "help": "In addition to the transcript-coordinate-based BAM file output, also output a BAM file with the read alignments in genomic coordinates", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["No BAM results files", "none", false], ["Transcript BAM results file", "default", true], ["Transcript and genome BAM results files", "both", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "select", "argument": null, "type": "select", "label": "calculate expression with rsem", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Just build rsem reference for latter rsem profiling", "No", false], ["profile expression with rsem", "Yes", true]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "reference_file", "format": "rsem_ref", "label": "RSEM ${job.reference_name} reference", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": null, "edam_data": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "gene_abundances", "format": "tabular", "label": "${run_rsem.sample}.gene_abundances", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "rsem_output.genes.results", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "isoform_abundances", "format": "tabular", "label": "${run_rsem.sample}.isoform_abundances", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "rsem_output.isoforms.results", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "transcript_sorted_bam", "format": "bam", "label": "${run_rsem.sample}.transcript.bam", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "rsem_output.transcript.sorted.bam", "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "genome_sorted_bam", "format": "bam", "label": "${run_rsem.sample}.genome.bam", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "rsem_output.genome.sorted.bam", "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "log", "format": "txt", "label": "${run_rsem.sample}.rsem_log", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "differential_expression", "panel_section_name": "Differential Expression", "form_style": "regular"}