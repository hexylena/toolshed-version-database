{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/rnateam/viennarna_rnaalifold/viennarna_rnaalifold/2.2.10.0", "name": "RNAalifold", "version": "2.2.10.0", "description": "Calculate minimum free energy secondary structures and partition function on a multiple alignment file", "labels": [], "edam_operations": ["operation_0570", "operation_0502", "operation_0278", "operation_2439"], "edam_topics": ["topic_0099", "topic_0082", "topic_3542", "topic_0097", "topic_3512"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "vienna_rna_package", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "viennarna_rnaalifold", "owner": "rnateam", "changeset_revision": "3bc9bd5290c1", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Clustal file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "algorithm_options", "type": "section", "title": "Algorithm Options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "pf", "argument": "-p", "type": "select", "label": "Calculate partition function", "help": "Calculate the partition function and base pairing probability matrix in addition to the mfe structure. Default is calculation of mfe structure only.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "options": [["None", "-1", true], ["0: Deactivates the calculation of the pair probabilities, saving about 50% in runtime", "0", false], ["1: Calculate the partition function and base pairing probability matrix", "1", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "mea", "argument": "--MEA", "type": "float", "label": "Gamma Value", "help": "Calculate an MEA (maximum expected accuracy) structure. The parameter gamma tunes the importance of correctly predicted pairs versus unpaired bases. Thus, for small values of gamma the MEA structure will contain only pairs with very high probability. where the expected accuracy is computed from the pair probabilities: each base pair (i,j) gets a score 2*gamma*p_ij and the score of an unpaired base is given by the probability of not forming a pair.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "mis", "argument": "--mis", "type": "boolean", "label": "Most Informative Sequence", "help": "Output 'most informative sequence' instead of simple consensu", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--mis", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "stochBT_en", "argument": "--stochBT_en", "type": "integer", "label": "Number of random structures.", "help": "Compute a certain number of random structures with a probability dependend on the partition function. Print out the energies and probabilities of the backtraced structures. ", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "pfScale", "argument": "--pfScale", "type": "float", "label": "Scaling factor", "help": "In the calculation of the pf use scale*mfe as an estimate for the ensemble free energy (used to avoid overflows). The default is 1.07, useful values are 1.0 to 1.2. Occasionally needed for long sequences.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.07", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "circular", "argument": null, "type": "boolean", "label": "Assume circular RNA structure", "help": "--circ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--circ", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "bppmThreshold", "argument": "--bppmThreshold", "type": "float", "label": "Threshold for base pair probabilities", "help": "By setting the threshold the base pair probabilities that are included in the output can be varied. By default only those exceeding 1e\u22125 in probability will be shown as squares in the dot plot. Changing the threshold to any other value allows for increase or decrease of data.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1e-06", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "gquad", "argument": null, "type": "boolean", "label": "G Quadruplex formation", "help": "Take into account G Quadruplex formation (-g)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--gquad", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "sci", "argument": "--sci", "type": "boolean", "label": "Structure conservation index", "help": "Compute the structure conservation index (SCI) for the MFE consensus structure of the alignment", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--sci", "falsevalue": ""}]}, {"model_class": "Section", "name": "general_options", "type": "section", "title": "General Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "verbose", "argument": "--v", "type": "boolean", "label": " Be verbose", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--v", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "color", "argument": "--color", "type": "boolean", "label": "Colored secondary structure image", "help": "Produce a colored version of the consensus strcture plot", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--color", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "alignment", "argument": "--aln", "type": "boolean", "label": "Colored and annotated alignment image", "help": "Produce a colored and structure annotated alignment", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--aln", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "layout_type", "argument": "--layout-type", "type": "select", "label": "Layout algorithm", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["Default: Naview layout", "1", true], ["Simple radial layout", "0", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "noPS", "argument": "--noPS", "type": "boolean", "label": "Produce postscript output", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--noPS"}]}, {"model_class": "Section", "name": "IDs", "type": "section", "title": "Naming Conventions", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "continuous_ids", "argument": "--continuous-ids", "type": "boolean", "label": "Continuous alignment ID numbering", "help": "Use continuous alignment ID numbering when no alignment ID can be retrieved from input data.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--continuous-ids", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "auto_id", "argument": "--auto-id", "type": "boolean", "label": "Automatically generate an ID for each alignment.", "help": "If this flag is active, RNAalifold ignores any IDs retrieved from the input and automatically generates an ID for each alignment.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--auto-id", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "id_prefix", "argument": "--id-prefix", "type": "text", "label": "Prefix for automatically generated IDs (as used in output file names)", "help": "If this parameter is set, each alignment will be prefixed with the provided string. Hence, the output files will obey the following naming scheme: 'prefix_xxxx_ss.ps' (secondary structure plot), 'prefix_xxxx_dp.ps' (dot\u2212plot), 'prefix_xxxx_aln.ps' (annotated alignment), etc. where xxxx is the alignment number beginning with the second alignment in the input. Use this setting in conjunction with the \u2212\u2212continuous\u2212ids flag to assign IDs beginning with the first input alignment.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "alignment", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "id_digits", "argument": "--id-digits", "type": "integer", "label": "The number of digits of the counter in automatically generated alignment IDs", "help": "When alignments IDs are automatically generated, they receive an increasing number, starting with 1. This number will always be left\u2212padded by leading zeros, such that the number takes up a certain width. Using this parameter, the width can be specified to the users need. We allow numbers in the range [1:18].", "refresh_on_change": false, "min": 1, "max": 18, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "id_start", "argument": "--id-start", "type": "integer", "label": "First number in automatically generated alignment IDs", "help": "When alignment IDs are automatically generated, they receive an increasing number, usually starting with 1. Using this parameter, the first number can be specified to the users requirements. Note: negative numbers are not allowed. Note: Setting this parameter implies continuous alignment IDs, i.e. it activates the \u2212\u2212continuous\u2212ids flag..", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "constraints", "type": "section", "title": "Structure constraints", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "maxBPspan", "argument": "--maxBPspan", "type": "integer", "label": "Set the maximum base pair span", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "constraintLocation", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "fromFile", "inputs": [{"model_class": "DataToolParameter", "name": "constraintsFile", "argument": null, "type": "data", "label": "Constraints file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "batch", "argument": "--batch", "type": "boolean", "label": "Use constraints for all alignment records", "help": "Usually, constraints provided from input file are only applied to a single sequence alignment. Therefore, RNAalifold will stop its computation and quit after the first input alignment was processed. Using this switch, RNAalifold processes all sequence alignments in the input and applies the same provided constraints to each of them.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--batch", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "ss_cons", "argument": "--SS_cons", "type": "boolean", "label": "Use consensus structures from Stockholm file (#=GF SS_cons) as constraint", "help": "Stockholm formatted alignment files have the possibility to store a secondary structure string in one of if ('#=GC') column annotation meta tags. The corresponding tag name is usually 'SS_cons', a consensus secondary structure. Activating this flag allows one to use this consensus secondary structure from the input file as structure constraint. Note: Activating this flag implies \u2212\u2212constraint.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--SS_cons", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "constraintSelector", "argument": "--constraint", "type": "select", "label": "Constraints", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["The constraints are in a seperate file", "fromFile", false], ["Don't use constraints", "none", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "shapeOption", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "isUsed", "inputs": [{"model_class": "Repeat", "name": "shape_files", "type": "repeat", "title": "Shape File", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "shape", "argument": "--shape", "type": "data", "label": "Shape file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "FloatToolParameter", "name": "m", "argument": null, "type": "float", "label": "Slope m", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.8", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "b", "argument": null, "type": "float", "label": "Intercept b", "help": "Currently, the only data conversion method available is that of to Deigan et al 2009. This method is the default. The slope 'm' and the intercept 'b' can be set to a non\u2212default value if necessary. Otherwise m=1.8 and b=\u22120.6 as stated in the paper mentioned before.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-0.6", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "notUsed", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "shapeSelector", "argument": null, "type": "select", "label": "Shape reactivity data", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "notUsed", "options": [["Use shape reactivity data", "isUsed", false], ["Don't use shape reactivity data", "notUsed", true]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Section", "name": "model_options", "type": "section", "title": "Model Options", "help": null, "expanded": true, "inputs": [{"model_class": "FloatToolParameter", "name": "temperature", "argument": null, "type": "float", "label": "temperature [\u00b0C]", "help": "-T", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "37.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "dangling", "argument": null, "type": "select", "label": "How to treat dangling end energies", "help": "-d", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "options": [["0: ignore dangling ends", "0", false], ["2: unpaired bases participate in all dangling ends", "2", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "nolp", "argument": null, "type": "boolean", "label": "Allow lonely base-pairs", "help": "(--noLP)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--noLP"}, {"model_class": "BooleanToolParameter", "name": "nogu", "argument": null, "type": "boolean", "label": "Allow GU pairing", "help": "--noGU", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--noGU"}, {"model_class": "BooleanToolParameter", "name": "noclosinggu", "argument": null, "type": "boolean", "label": "Allow GU pairing at the ends", "help": "Allow pairing of G and U at the ends of helices. --noClosingGU", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--noClosingGU"}, {"model_class": "BooleanToolParameter", "name": "notetra", "argument": null, "type": "boolean", "label": "Allow stabilization for loops, hairpins etc.", "help": " Include special tabulated stabilizing energies for tri-, tetra- and hexaloop hairpins. Mostly for testing. (--noTetra)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--noTetra"}, {"model_class": "FloatToolParameter", "name": "cfactor", "argument": null, "type": "float", "label": "Weight of the covariance term", "help": "--cfactor", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "nfactor", "argument": null, "type": "float", "label": "Penalty for non-compatible sequences in the covariance term", "help": "--nfactor", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "endgaps", "argument": null, "type": "boolean", "label": "Score pairs with endgaps same as gap-gap pairs", "help": "--endgaps", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--endgaps", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "ribosum", "argument": null, "type": "boolean", "label": "Use ribosum scoring matrix", "help": "--ribosum_scoring", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--ribosum_scoring", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "nsp", "argument": "--nsp", "type": "text", "label": "Allow other pairs in addition to the usual AU,GC,and GU pairs.", "help": "Its argument is a comma separated list of additionally allowed pairs. If the first character is '-' then AB will imply that AB and BA are allowed pairs. e.g. RNAfold -nsp -GA  will allow GA and AG pairs. Nonstandard pairs are given 0 stacking energy.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "betaScale", "argument": "--betaScale", "type": "float", "label": "Scaling of Boltzman factors", "help": " The argument provided with this option enables to scale the thermodynamic temperature used in the Boltzmann factors independently from the temperature used to scale the individual energy contributions of the loop types.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}], "outputs": [{"model_class": "ToolOutput", "name": "tabularFile", "format": "txt", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "imagesFile", "format": "tar", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "rna_analysis", "panel_section_name": "RNA Analysis", "form_style": "regular"}