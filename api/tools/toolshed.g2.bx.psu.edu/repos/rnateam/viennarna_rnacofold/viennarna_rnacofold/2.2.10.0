{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/rnateam/viennarna_rnacofold/viennarna_rnacofold/2.2.10.0", "name": "RNAcofold", "version": "2.2.10.0", "description": "Calculate secondary structures of two RNAs with dimerization", "labels": [], "edam_operations": ["operation_2439", "operation_0502", "operation_0570", "operation_0278"], "edam_topics": ["topic_3542", "topic_0097", "topic_0099", "topic_0082", "topic_3512"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "vienna_rna_package", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "viennarna_rnacofold", "owner": "rnateam", "changeset_revision": "42b7c0fd4370", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Fasta file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "general_options", "type": "section", "title": "General Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "noPS", "argument": "--noPS", "type": "boolean", "label": "Produce postscript output", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--noPS"}, {"model_class": "BooleanToolParameter", "name": "noconversion", "argument": "--noconv", "type": "boolean", "label": "Convert Thymine to Uracil (T -> U)", "help": "Avoids confusion with DNA sequences", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--noconv"}]}, {"model_class": "Section", "name": "IDs", "type": "section", "title": "Naming Conventions", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "auto_id", "argument": "--auto-id", "type": "boolean", "label": "Automatically generate an ID for each alignment.", "help": "If this flag is active, RNAalifold ignores any IDs retrieved from the input and automatically generates an ID for each alignment.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--auto-id", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "id_prefix", "argument": "--id-prefix", "type": "text", "label": "Prefix for automatically generated IDs (as used in output file names)", "help": "If this parameter is set, each alignment will be prefixed with the provided string. Hence, the output files will obey the following naming scheme: 'prefix_xxxx_ss.ps' (secondary structure plot), 'prefix_xxxx_dp.ps' (dot\u2212plot), 'prefix_xxxx_aln.ps' (annotated alignment), etc. where xxxx is the alignment number beginning with the second alignment in the input. Use this setting in conjunction with the \u2212\u2212continuous\u2212ids flag to assign IDs beginning with the first input alignment.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "alignment", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "id_digits", "argument": "--id-digits", "type": "integer", "label": "The number of digits of the counter in automatically generated alignment IDs", "help": "When alignments IDs are automatically generated, they receive an increasing number, starting with 1. This number will always be left\u2212padded by leading zeros, such that the number takes up a certain width. Using this parameter, the width can be specified to the users need. We allow numbers in the range [1:18].", "refresh_on_change": false, "min": 1, "max": 18, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "id_start", "argument": "--id-start", "type": "integer", "label": "First number in automatically generated alignment IDs", "help": "When alignment IDs are automatically generated, they receive an increasing number, usually starting with 1. Using this parameter, the first number can be specified to the users requirements. Note: negative numbers are not allowed. Note: Setting this parameter implies continuous alignment IDs, i.e. it activates the \u2212\u2212continuous\u2212ids flag..", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "model_options", "type": "section", "title": "Model Options", "help": null, "expanded": true, "inputs": [{"model_class": "FloatToolParameter", "name": "temperature", "argument": null, "type": "float", "label": "temperature [\u00b0C]", "help": "(-T)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "37.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "dangling", "argument": null, "type": "select", "label": "How to treat dangling end energies", "help": "(-d)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "options": [["0: ignore dangling ends", "0", false], ["1: only unpaired bases can participate in at most one dangling end, this is the default for mfe folding but unsupported for the partition function folding", "1", false], ["2: unpaired bases participate in all dangling ends", "2", true], ["3: mfe folding will allow coaxial stacking of adjacent helices in multi\u2212loops.", "3", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "nolp", "argument": null, "type": "boolean", "label": "Allow lonely base-pairs", "help": "(--noLP)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--noLP"}, {"model_class": "BooleanToolParameter", "name": "nogu", "argument": null, "type": "boolean", "label": "Allow GU pairing", "help": "--noGU", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--noGU"}, {"model_class": "BooleanToolParameter", "name": "noclosinggu", "argument": null, "type": "boolean", "label": "Allow GU pairing at the ends", "help": "Allow pairing of G and U at the ends of helices. --noClosingGU", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--noClosingGU"}, {"model_class": "BooleanToolParameter", "name": "notetra", "argument": null, "type": "boolean", "label": "Allow stabilization for loops, hairpins etc.", "help": " Include special tabulated stabilizing energies for tri-, tetra- and hexaloop hairpins. Mostly for testing. (--noTetra)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--noTetra"}, {"model_class": "TextToolParameter", "name": "nsp", "argument": "--nsp", "type": "text", "label": "Allow other pairs in addition to the usual AU,GC,and GU pairs.", "help": "Its argument is a comma separated list of additionally allowed pairs. If the first character is '-' then AB will imply that AB and BA are allowed pairs. e.g. RNAfold -nsp -GA  will allow GA and AG pairs. Nonstandard pairs are given 0 stacking energy.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "betaScale", "argument": "--betaScale", "type": "float", "label": "Scaling of Boltzman factors", "help": " The argument provided with this option enables to scale the thermodynamic temperature used in the Boltzmann factors independently from the temperature used to scale the individual energy contributions of the loop types.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "constraints", "type": "section", "title": "Structure constraints", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "constraintLocation", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "inFile", "inputs": []}, {"model_class": "ConditionalWhen", "value": "fromFile", "inputs": [{"model_class": "DataToolParameter", "name": "constraintsFile", "argument": "--constraint", "type": "data", "label": "Constraints file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "canonicalBPonly", "argument": "--canonicalBPonly", "type": "boolean", "label": "Remove non-canonical base pairs from he structure constraint", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--canonicalBPonly", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "enforceConstraint", "argument": "--enforceConstraint", "type": "boolean", "label": "Enforce base pair given by round brackets () in structure constraint", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--enforceConstraint", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "constraintSelector", "argument": null, "type": "select", "label": "Constraints", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["The constraints are in a seperate file", "fromFile", false], ["The constraints are in the fasta input file", "inFile", false], ["Don't use constraints", "none", true]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Section", "name": "algorithm_options", "type": "section", "title": "Algorithm Options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "pf", "argument": "-p", "type": "select", "label": "Calculate partition function", "help": "Calculate the partition function and base pairing probability matrix in addition to the mfe structure. Default is calculation of mfe structure only.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "options": [["None", "-1", true], ["0: Deactivates the calculation of the pair probabilities, saving about 50% in runtime", "0", false], ["1: Calculate the partition function and base pairing probability matrix", "1", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "allpf", "argument": null, "type": "boolean", "label": "Calculate homo-dimers as well as A and B monomers", "help": "--all_pf", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--all_pf", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "c", "argument": "-c", "type": "boolean", "label": "Concentrations", "help": "In addition to everything listed under the -a option, read in initial monomer concentrations and compute the expected equilibrium concentrations of the 5 possible species (AB, AA, BB, A, B).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-c", "falsevalue": ""}, {"model_class": "Repeat", "name": "concfiles", "type": "repeat", "title": "A file with initial concentrations for the two sequences", "help": "The table consits of arbitrary many lines with just two numbers (the concentration of sequence A and B). This option will automatically toggle the \u2212c (and thus -a and --all_pf) options", "default": 0, "min": 0, "max": 1.0, "inputs": [{"model_class": "DataToolParameter", "name": "concfile", "argument": null, "type": "data", "label": "Concentrations file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "FloatToolParameter", "name": "pfScale", "argument": "--pfScale", "type": "float", "label": "Scaling factor", "help": "In the calculation of the pf use scale*mfe as an estimate for the ensemble free energy (used to avoid overflows). The default is 1.07, useful values are 1.0 to 1.2. Occasionally needed for long sequences.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.07", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "bppmThreshold", "argument": "--bppmThreshold", "type": "float", "label": "Threshold for base pair probabilities", "help": "By setting the threshold the base pair probabilities that are included in the output can be varied. By default only those exceeding 1e\u22125 in probability will be shown as squares in the dot plot. Changing the threshold to any other value allows for increase or decrease of data.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1e-05", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "gquad", "argument": "--gquad", "type": "boolean", "label": "G Quadruplex formation", "help": "take into account G Quadruplex formation", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--gquad", "falsevalue": ""}]}], "outputs": [{"model_class": "ToolOutputCollection", "name": "sequence_outputs", "format": null, "label": "rna_eps outputs", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "eps", "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<designation>.+)_ss\\.ps", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "matrix_outputs", "format": null, "label": "rna_eps outputs", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "rna_eps", "visible": true, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<designation>.+)_dp\\.ps", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "tabularFile", "format": "txt", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "rna_analysis", "panel_section_name": "RNA Analysis", "form_style": "regular"}