{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/rnateam/rnacode/rbc_rnacode/0.3.0", "name": "RNAcode", "version": "0.3.0", "description": "Analyze the protein coding potential in MSA", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "rnacode", "owner": "rnateam", "changeset_revision": "2c51e264432a", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "alignment", "argument": null, "type": "data", "label": "Multiple Alignment", "help": "Alignment needs to be formatted in ClustalW or MAF format", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["clustal", "maf"], "edam": {"edam_formats": ["format_2330", "format_3008"], "edam_data": ["data_0006", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "FloatToolParameter", "name": "cutoff", "argument": "--cutoff", "type": "float", "label": "Cutoff", "help": "Show only regions that have a p-value below the given number. By default all hits are shown.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "num_samples", "argument": "--num_samples", "type": "integer", "label": "Number of samples", "help": "Number of random alignments that are sampled to calculate the p-value. RNAcode estimates the significance of a coding prediction by sampling a given number of random alignments. Default is 100 which gives reasonably stable p-values that are useful for assessing the relevance of a prediction.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "stop_early", "argument": "--stop_early", "type": "boolean", "label": "Stop early", "help": "Setting this option stops the sampling process as soon as it is clear that the best hit will not fall below the given p-value cutoff. For example, assume a p-value cutoff of 0.05 (see --cutoff) and a sample size of 1000 is given (see --num-samples). As soon as 50 random samples score better than the original alignment, the process is stopped and all hits in the original alignment are reported as p>0.05 (or by convention as 1.0 in gtf and tabular output).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--stop-early", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "best_region", "argument": "--best_region", "type": "boolean", "label": "Show only best non-overlapping hits", "help": "By default all positive scoring segments are shown in the output if they fall below the given p-value cutoff. If two hits overlap (different frame or different strand) and --best_region is given only the hit with the highest score is shown. Strong coding regions often lead to statistically significant signals also in other frames. These hits are suppressed by this option and only the correct reading frame is reported.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--best-region", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "best_only", "argument": "--best_only", "type": "boolean", "label": "Show only best hit", "help": "This options shows only the one single best hit for each alignment.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--best-only", "falsevalue": ""}, {"model_class": "Conditional", "name": "cond_scoringParameters", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "TextToolParameter", "name": "pars", "argument": "--pars", "type": "text", "label": "Scoring parameters as comma separated string:'DELTA,OMEGA,omega,stop_penalty'", "help": "See the appendix of the Paper for an explanation for the meaning of these parameters. Default: '-10.0,-4.0,-2.0,-8.0'", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "scoringParameters", "argument": null, "type": "select", "label": "Scoring parameters", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["Default", "default", true], ["Custom", "custom", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "cond_generateEPS", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "create", "inputs": [{"model_class": "FloatToolParameter", "name": "eps_cutoff", "argument": "--eps_cutoff", "type": "float", "label": "Create plots only for high scoring segments with p better than:", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "nocreate", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "generateEPS", "argument": null, "type": "select", "label": "Create colored plots in EPS format", "help": "The generated plots are resolution independent vector graphics that can be included in any graphics software. For each high scoring segment below a given cutoff (see --eps-cutoff) a file named hss-N.eps is created (N is the running number of the high scoring segment)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "create", "options": [["Create Plots", "create", true], ["Do not generate EPS plots", "nocreate", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "outputFormat", "argument": null, "type": "select", "label": "Output format", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "--tabular", "options": [["Default", "--tabular", true], ["GTF genome annotation file", "--gtf", false]], "display": null, "multiple": false, "textable": false}], "outputs": [{"model_class": "ToolOutputCollection", "name": "output_eps", "format": null, "label": "Plots for ${tool.name} on ${on_string}", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "eps", "visible": false, "assign_primary_output": false, "directory": "eps", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<designation>.*)\\.eps", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "outFileDefault", "format": "tabular", "label": "${tool.name} on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "outFileGTF", "format": "gtf", "label": "${tool.name} on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2306", "edam_data": "data_1255", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "rna_analysis", "panel_section_name": "RNA Analysis", "form_style": "regular"}