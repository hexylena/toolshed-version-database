{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/spapros_evaluation/spapros_evaluation/0.1.5+galaxy0", "name": "Evaluation", "version": "0.1.5+galaxy0", "description": "of marker genes with spapros", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "spapros_evaluation", "owner": "iuc", "changeset_revision": "0c1b0a3b19df", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "format", "argument": null, "type": "select", "label": "Format for saving figures", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "png", "options": [["png", "png", false], ["pdf", "pdf", false], ["svg", "svg", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "DataToolParameter", "name": "probeset", "argument": null, "type": "data", "label": "Probeset tabular file with rows=conditions (e.g., celltypes) and column=features (e.g., genes)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "header_probeset", "argument": null, "type": "select", "label": "Header in the list of probes?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "included", "options": [["Header incldued", "included", false], ["Header not included", "not_included", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "nreference", "argument": "nreference", "type": "integer", "label": "Number of selected genes to generate a reference set", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "methods_reference", "argument": null, "type": "select", "label": "Select the methods to genereate a reference probeset", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "random", "options": [["Random", "random", true], ["PCA", "PCA", false], ["Differential expressed features based on wilxocon rank genes test (DE)", "DE", false], ["Highly variable features (HVG)", "HVG", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "TextToolParameter", "name": "genes_key", "argument": null, "type": "text", "label": "adata.var key for subset of preselected genes to run the selections", "help": "This is typically highly_variable_genes. Leave empty to not subset genes.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "obs_key", "argument": null, "type": "text", "label": "Column name of adata.obs for which marker scores are calculated", "help": "Only required for method DE.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "seeds", "argument": null, "type": "text", "label": "List of random integer seeds (comma seperated, e.g., 123,999,22)", "help": "For each seed, one random gene set is selected if random in methods. Leave it empty to for one random set with a random seed.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "probeset_name", "argument": null, "type": "text", "label": "Name for your probeset that should be displayed in plots", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "probeset", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "celltype_key", "argument": null, "type": "text", "label": "Column name of adata.obs that represents groups of your cells (e.g., celltype)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "celltype", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "method", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "plot_summary", "inputs": [{"model_class": "TextToolParameter", "name": "set_ids", "argument": null, "type": "text", "label": "List of probeset ids (comma seperated, e.g., DE,HVG,random)", "help": "Kepp it with all or empty to select all probeset ids.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "all", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "forest_clfs_threshold", "argument": null, "type": "float", "label": "Assesses how many cell types (%) can be predicted with an accuracy of at least threshold", "help": "The metric gives an idea about how many cell types can be identified with high confidence with the given gene set.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.8", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "gene_corr_threshold", "argument": null, "type": "float", "label": "Percentage of features (e.g., genes) that have a maximum correlation of less than threshold with all other features", "help": "This metric gives an idea about how many features show unique expression profiles in the gene set.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.8", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ns_start", "argument": null, "type": "integer", "label": "The minimum number of leiden clusters clusters", "help": "Clusterings are calculated with different leiden resolutions to genertate clusterings of n = ns_start to ns_end clusters.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ns_end", "argument": null, "type": "integer", "label": "The maximum number of leiden clusters clusters", "help": "Clusterings are calculated with different leiden resolutions to genertate clusterings of n = ns_start to ns_end clusters.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "21", "area": false, "datalist": []}, {"model_class": "Repeat", "name": "series_auc_borders", "type": "repeat", "title": "Calculates nmi AUCs over given borders", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "IntegerToolParameter", "name": "auc_borders_start", "argument": null, "type": "integer", "label": "Calculates nmi over n ranges auc_borders_start to auc_borders_end", "help": "Defined border shouldn't exceed values in nmis.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "15", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "auc_borders_end", "argument": null, "type": "integer", "label": "Calculates nmi over n ranges auc_borders_start to auc_borders_end", "help": "Defined border shouldn't exceed values in nmis.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}]}, {"model_class": "Repeat", "name": "knn", "type": "repeat", "title": "Calculate knn graphs for each k", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "IntegerToolParameter", "name": "k", "argument": null, "type": "integer", "label": "Includes nearest neighbors for all k", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}, {"model_class": "Conditional", "name": "select_marker_corr", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "True", "inputs": [{"model_class": "DataToolParameter", "name": "markerset", "argument": null, "type": "data", "label": "Markerset tabular file with rows=conditions (e.g., celltypes) and column=features (e.g., genes)", "help": "This is beeing used to calculate the corelations betweens your probeset features and marker features. Marker features are for example genes that you know are important for your condition (e.g., celltypes).", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "header_markerset", "argument": null, "type": "select", "label": "Header in the list of markers?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "included", "options": [["Header included", "included", false], ["Header not included", "not_included", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "per_celltype", "argument": null, "type": "boolean", "label": "Wether to return columns with per cell type max correlations", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "per_marker", "argument": null, "type": "boolean", "label": "Wether to return columns with per marker max correlations", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}, {"model_class": "Conditional", "name": "select_per_celltype_min_mean", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "True", "inputs": [{"model_class": "FloatToolParameter", "name": "per_celltype_min_mean", "argument": null, "type": "float", "label": "Set per_celltype_min_mean", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "False", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_per_celltype_min_mean", "argument": null, "type": "select", "label": "Add a column for correlation per cell type that only takes into accounts markers with mean expression > per_celltype_min_mean", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "False", "options": [["No", "False", false], ["Yes", "True", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "select_per_marker_min_mean", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "True", "inputs": [{"model_class": "FloatToolParameter", "name": "per_marker_min_mean", "argument": null, "type": "float", "label": "Set per_marker_min_mean", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "False", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_per_marker_min_mean", "argument": null, "type": "select", "label": "Add a column for correlation per cell type that only takes into accounts markers with mean expression > per_celltype_min_mean", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "False", "options": [["No", "False", false], ["Yes", "True", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "False", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_marker_corr", "argument": null, "type": "select", "label": "Do you want to calculate the correlation between your probeset and marker features?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "False", "options": [["No", "False", false], ["Yes", "True", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "plot_confusion_matrix", "inputs": [{"model_class": "TextToolParameter", "name": "set_ids", "argument": null, "type": "text", "label": "List of probeset ids (comma seperated, e.g., DE,HVG,random)", "help": "Kepp it with all or empty to select all probeset ids.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "all", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "plot_coexpression", "inputs": [{"model_class": "TextToolParameter", "name": "set_ids", "argument": null, "type": "text", "label": "List of probeset ids (comma seperated, e.g., DE,HVG,random)", "help": "Kepp it with all or empty to select all probeset ids.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "all", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "plot_cluster_similarity", "inputs": [{"model_class": "TextToolParameter", "name": "set_ids", "argument": null, "type": "text", "label": "List of probeset ids (comma seperated, e.g., DE,HVG,random)", "help": "Kepp it with all or empty to select all probeset ids.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "all", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ns_start", "argument": null, "type": "integer", "label": "The minimum number of leiden clusters clusters", "help": "Clusterings are calculated with different leiden resolutions to genertate clusterings of n = ns_start to ns_end clusters.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ns_end", "argument": null, "type": "integer", "label": "The maximum number of leiden clusters clusters", "help": "Clusterings are calculated with different leiden resolutions to genertate clusterings of n = ns_start to ns_end clusters.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "21", "area": false, "datalist": []}, {"model_class": "Repeat", "name": "series_auc_borders", "type": "repeat", "title": "Calculates nmi AUCs over given borders", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "IntegerToolParameter", "name": "auc_borders_start", "argument": null, "type": "integer", "label": "Calculates nmi over n ranges auc_borders_start to auc_borders_end", "help": "Defined border shouldn't exceed values in nmis.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "15", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "auc_borders_end", "argument": null, "type": "integer", "label": "Calculates nmi over n ranges auc_borders_start to auc_borders_end", "help": "Defined border shouldn't exceed values in nmis.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "plot_knn_overlap", "inputs": [{"model_class": "TextToolParameter", "name": "set_ids", "argument": null, "type": "text", "label": "List of probeset ids (comma seperated, e.g., DE,HVG,random)", "help": "Kepp it with all or empty to select all probeset ids.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "all", "area": false, "datalist": []}, {"model_class": "Repeat", "name": "knn", "type": "repeat", "title": "Calculate knn graphs for each k", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "IntegerToolParameter", "name": "k", "argument": null, "type": "integer", "label": "Includes nearest neighbors for all k", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "plot_marker_corr", "inputs": [{"model_class": "DataToolParameter", "name": "markerset", "argument": null, "type": "data", "label": "Markerset tabular file with rows=conditions (e.g., celltypes) and column=features (e.g., genes)", "help": "This is beeing used to calculate the corelations betweens your probeset features and marker features. Marker features are for example genes that you know are important for your condition (e.g., celltypes).", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "header_markerset", "argument": null, "type": "select", "label": "Header in the list of markers?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "included", "options": [["Header included", "included", false], ["Header not included", "not_included", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "set_ids", "argument": null, "type": "text", "label": "List of probeset ids (comma seperated, e.g., DE,HVG,random)", "help": "Kepp it with all or empty to select all probeset ids.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "all", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "per_celltype", "argument": null, "type": "boolean", "label": "Wether to return columns with per cell type max correlations", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "per_marker", "argument": null, "type": "boolean", "label": "Wether to return columns with per marker max correlations", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}, {"model_class": "Conditional", "name": "select_per_celltype_min_mean", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "True", "inputs": [{"model_class": "FloatToolParameter", "name": "per_celltype_min_mean", "argument": null, "type": "float", "label": "Set per_celltype_min_mean", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "False", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_per_celltype_min_mean", "argument": null, "type": "select", "label": "Add a column for correlation per cell type that only takes into accounts markers with mean expression > per_celltype_min_mean", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "False", "options": [["No", "False", false], ["Yes", "True", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "select_per_marker_min_mean", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "True", "inputs": [{"model_class": "FloatToolParameter", "name": "per_marker_min_mean", "argument": null, "type": "float", "label": "Set per_marker_min_mean", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "False", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_per_marker_min_mean", "argument": null, "type": "select", "label": "Add a column for correlation per cell type that only takes into accounts markers with mean expression > per_celltype_min_mean", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "False", "options": [["No", "False", false], ["Yes", "True", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "method", "argument": "method", "type": "select", "label": "Method of spapros", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "plot_summary", "options": [["Plot statistic summary, using 'evaluator.plot_summary'", "plot_summary", false], ["Plot confusion matrix, using 'evaluator.plot_confusion_matrix'", "plot_confusion_matrix", false], ["Plot coexpression heatmap, using 'evaluator.plot_coexpression'", "plot_coexpression", false], ["Plot cluster similariy, using 'evaluator.plot_cluster_similarity'", "plot_cluster_similarity", false], ["Plot knn overlap, using 'evaluator.plot_knn_overlap'", "plot_knn_overlap", false], ["Plot featue marker correlation, using 'evaluator.plot_marker_corr'", "plot_marker_corr", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "figure_options", "type": "section", "title": "Figure Output Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "dpi", "argument": "dpi", "type": "integer", "label": "Dpi of figures", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "300", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "fontsize", "argument": "fontsize", "type": "integer", "label": "Font size of figures", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}, {"model_class": "BooleanToolParameter", "name": "show_log", "argument": null, "type": "boolean", "label": "Output Log?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}], "outputs": [{"model_class": "ToolOutput", "name": "out_png", "format": "png", "label": "PNG plot from ${tool.name} (${method.method}) on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "*.png", "edam_format": "format_3603", "edam_data": "data_2968", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "out_pdf", "format": "pdf", "label": "PDF plot from ${tool.name} (${method.method}) on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "*.pdf", "edam_format": "format_3508", "edam_data": "data_2968", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "out_svg", "format": "svg", "label": "SVG plot from ${tool.name} (${method.method}) on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "*.svg", "edam_format": "format_2332", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "hidden_output", "format": "txt", "label": "Log file", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "single-cell", "panel_section_name": "Single-cell", "form_style": "regular"}