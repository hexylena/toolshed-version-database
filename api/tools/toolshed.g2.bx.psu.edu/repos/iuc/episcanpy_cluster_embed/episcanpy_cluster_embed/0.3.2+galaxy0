{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/episcanpy_cluster_embed/episcanpy_cluster_embed/0.3.2+galaxy0", "name": "Cluster, embed and annotate", "version": "0.3.2+galaxy0", "description": "with EpiScanpy", "labels": [], "edam_operations": ["operation_3501", "operation_3557"], "edam_topics": ["topic_2229", "topic_0654", "topic_3173"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "episcanpy", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "episcanpy_cluster_embed", "owner": "iuc", "changeset_revision": "7340d619d7f8", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "method", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "pp.lazy", "inputs": [{"model_class": "SelectToolParameter", "name": "lazy_pp_pca", "argument": null, "type": "select", "label": "Compute PCA coordinates before the neighborhood graph", "help": "(pp_pca)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "True", "options": [["True", "True", true], ["False", "False", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "lazy_svd_solver", "argument": null, "type": "select", "label": "SVD solver to use", "help": "(svd_solver)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "arpack", "options": [["arpack (for the ARPACK wrapper in SciPy)", "arpack", true], ["randomized (for the randomized algorithm due to Halko (2009)", "randomized", false], ["auto (chooses automatically depending on the size of the problem)", "auto", false], ["lobpcg (an alternative SciPy solver)", "lobpcg", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "lazy_nb_pcs", "argument": null, "type": "integer", "label": "Number of principal component computed for PCA (and therefore neighbors, tsne and umap)", "help": "(nb_pcs)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "lazy_n_neighbors", "argument": null, "type": "integer", "label": "Size of the local neighborhood (number of neighboring data points) used for manifold approximation", "help": "(n_neighbors)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "15", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "lazy_perplexity", "argument": null, "type": "integer", "label": "Perplexity (number of nearest neighbors used in other manifold learning algorithms)", "help": "(perplexity)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "30", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "lazy_method", "argument": null, "type": "select", "label": "Kernel to use for computing connectivities", "help": "(method)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "umap", "options": [["umap", "umap", true], ["gauss", "gauss", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "lazy_metric", "argument": null, "type": "select", "label": "Metric that returns a distance", "help": "(metric)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "euclidean", "options": [["euclidean", "euclidean", true], ["cityblock", "cityblock", false], ["cosine", "cosine", false], ["l1", "l1", false], ["l2", "l2", false], ["manhattan", "manhattan", false], ["braycurtis", "braycurtis", false], ["canberra", "canberra", false], ["chebyshev", "chebyshev", false], ["correlation", "correlation", false], ["dice", "dice", false], ["hamming", "hamming", false], ["jaccard", "jaccard", false], ["kulsinski", "kulsinski", false], ["mahalanobis", "mahalanobis", false], ["minkowski", "minkowski", false], ["rogerstanimoto", "rogerstanimoto", false], ["russelrao", "russelrao", false], ["seuclidean", "seuclidean", false], ["sokalmichener", "sokalmichener", false], ["sokalsneath", "sokalsneath", false], ["sqeuclidean", "sqeuclidean", false], ["yule", "yule", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "lazy_min_dist", "argument": null, "type": "float", "label": "The effective minimum distance between embedded points", "help": "(min_dist)", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "lazy_spread", "argument": null, "type": "float", "label": "The effective scale of embedded points", "help": "(spread)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "lazy_use_highly_variable", "argument": null, "type": "select", "label": "Use highly variable genes only", "help": "(use_highly_variable)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "False", "options": [["True", "True", false], ["False", "False", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "lazy_n_components", "argument": null, "type": "integer", "label": "The number of dimensions of the UMAP embedding", "help": "(n_components)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tl.rank_features", "inputs": [{"model_class": "TextToolParameter", "name": "rank_features_groupby", "argument": null, "type": "text", "label": "The key of the observations grouping to consider", "help": "(groupby)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "louvain", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "rank_features_use_raw", "argument": null, "type": "select", "label": "Use raw attribute of Anndata if present", "help": "(use_raw)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "True", "options": [["True", "True", true], ["False", "False", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "rank_features_groups", "argument": null, "type": "text", "label": "Subset of groups, to which comparison shall be restricted", "help": "(groups)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "all", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "rank_features_reference", "argument": null, "type": "text", "label": "Compare each group with respect to this group", "help": "(reference)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "rest", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "rank_features_n_features", "argument": null, "type": "integer", "label": "The number of features that appear in the returned tables", "help": "(n_features)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "rank_features_rankby_abs", "argument": null, "type": "select", "label": "Rank genes by the absolute value of the score, not by the score", "help": "(rankby_abs)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "False", "options": [["True", "True", false], ["False", "False", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "rank_features_key_added", "argument": null, "type": "text", "label": "The key in adata.uns information is saved to", "help": "(key_added)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "rank_features_groups", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "rank_features_method", "argument": null, "type": "select", "label": "Method to use", "help": "(method)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Auto select for ATAC", "", true], ["Logistic regression", "logreg", false], ["t-test", "t-test", false], ["t-test_overestim_var", "t-test_overestim_var", false], ["Wilcoxon rank sum", "wilcoxon", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "rank_features_corr_method", "argument": null, "type": "select", "label": "p-value correction method", "help": "(corr_method)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "benjamini-hochberg", "options": [["Benjamini Hochberg", "benjamini-hochberg", false], ["Bonferroni", "bonferroni", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "tl.find_genes", "inputs": [{"model_class": "DataToolParameter", "name": "find_genes_gtf_file", "argument": null, "type": "data", "label": "Annotation GTF file", "help": "(gtf_file)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gtf"], "edam": {"edam_formats": ["format_2306"], "edam_data": ["data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "find_genes_key_added", "argument": null, "type": "text", "label": "Key added", "help": "(key_added)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "transcript_annotation", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "find_genes_upstream", "argument": null, "type": "integer", "label": "Upstream", "help": "(upstream)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2000", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "find_genes_feature_type", "argument": null, "type": "text", "label": "Feature type", "help": "(feature_type)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "transcript", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "find_genes_annotation", "argument": null, "type": "text", "label": "Annotation", "help": "(annotation)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "HAVANA", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "find_genes_raw", "argument": null, "type": "select", "label": "Raw?", "help": "(raw)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "False", "options": [["True", "True", false], ["False", "False", true]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "tl.get_n_clusters", "inputs": [{"model_class": "IntegerToolParameter", "name": "get_n_clusters_n_cluster", "argument": null, "type": "integer", "label": "Number of clusters", "help": "(n_cluster)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "14", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "get_n_clusters_method", "argument": null, "type": "select", "label": "Clustering method to use", "help": "(method)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "leiden", "options": [["leiden", "leiden", true], ["louvain", "louvain", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "get_n_clusters_range_min", "argument": null, "type": "integer", "label": "Range minimum", "help": "(range_min)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "get_n_clusters_range_max", "argument": null, "type": "integer", "label": "Range maximum", "help": "(range_max)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "get_n_clusters_max_steps", "argument": null, "type": "integer", "label": "Maximum number of steps", "help": "(max_steps)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "get_n_clusters_key_added", "argument": null, "type": "text", "label": "Variable name in obs", "help": "(key_added)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "None", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tl.kmeans", "inputs": [{"model_class": "IntegerToolParameter", "name": "kmeans_num_clusters", "argument": null, "type": "integer", "label": "Number of clusters", "help": "(num_clusters)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "14", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tl.hc", "inputs": [{"model_class": "IntegerToolParameter", "name": "hc_num_clusters", "argument": null, "type": "integer", "label": "Number of clusters", "help": "(num_clusters)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "14", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "method", "argument": "method", "type": "select", "label": "Method used for Clustering or Embedding", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "pp.lazy", "options": [["Embedding: Automatically compute PCA coordinates, loadings and variance decomposition, a neighborhood graph of observations, t-distributed stochastic neighborhood embedding (tSNE) Uniform Manifold Approximation and Projection (UMAP), using 'pp.lazy'", "pp.lazy", false], ["Rank features for characterizing groups, using 'tl.rank_features'", "tl.rank_features", false], ["Embedding: Find genes and add annotations, using 'pp.find_genes'", "tl.find_genes", false], ["Clustering: Test different settings of louvain to obtain the target number of clusters, using 'tl.getNClusters'", "tl.get_n_clusters", false], ["Clustering: Compute kmeans clustering using X_pca fits, using 'tl.kmeans'", "tl.kmeans", false], ["Clustering: Compute hierarchical clustering using X_pca fits, using 'tl.hc'", "tl.hc", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "advanced_common", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "show_log", "argument": null, "type": "boolean", "label": "Output Log?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}], "outputs": [{"model_class": "ToolOutput", "name": "anndata_out", "format": "h5ad", "label": "${tool.name} (${method.method}) on ${on_string}: Annotated data matrix", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "anndata.h5ad", "edam_format": "format_3590", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "hidden_output", "format": "txt", "label": "Log file", "hidden": true, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "single-cell-section-cell-multiomics", "panel_section_name": "Multiomics", "form_style": "regular"}