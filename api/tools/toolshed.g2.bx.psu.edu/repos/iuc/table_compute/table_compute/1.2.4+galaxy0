{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/table_compute/table_compute/1.2.4+galaxy0", "name": "Table Compute", "version": "1.2.4+galaxy0", "description": "computes operations on table data", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "table_compute", "owner": "iuc", "changeset_revision": "3bf5661c0280", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "singtabop", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Table", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tsv", "tabular"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "col_row_names", "argument": null, "type": "select", "label": "Input data has", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["has_col_names", "has_row_names"], "options": [["Column names on the first row", "has_col_names", true], ["Row names on the first column", "has_row_names", true]], "display": "checkboxes", "multiple": true, "textable": false}, {"model_class": "Section", "name": "adv", "type": "section", "title": "Advanced File Options ", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "header", "argument": null, "type": "integer", "label": "Header begins at line N", "help": "All lines before line N will be skipped. If a value is set, this will override the above 'Column names on the first row' parameter.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "nrows", "argument": null, "type": "integer", "label": "Read N lines only", "help": "Parses only N lines after the header line.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "skipfooter", "argument": null, "type": "integer", "label": "Skip N lines from bottom", "help": "Do not use this in conjunction with the 'Read N lines only' parameter.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "skip_blank_lines", "argument": null, "type": "boolean", "label": "Skip blank lines", "help": "Otherwise it will insert NaN values for every blank line detected.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}]}, {"model_class": "Conditional", "name": "user", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "precision", "inputs": []}, {"model_class": "ConditionalWhen", "value": "select", "inputs": [{"model_class": "TextToolParameter", "name": "select_cols_wanted", "argument": null, "type": "text", "label": "List of columns to select", "help": "Comma separated. (e.g. <code>3:5,10,-1,2:-2</code> will select columns <code>3,4,5,10,-1,2,1,0,-1,-2</code>, where negative indices refer to the offset from the last index). Columns can be duplicated by specifying them multiple times. Leave blank to retain all columns. See Example #1 for an example of using this mode.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "select_rows_wanted", "argument": null, "type": "text", "label": "List of rows to select", "help": "The same rules apply as above", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "select_keepdupe", "argument": null, "type": "select", "label": "Duplicate Indices", "help": "Keep duplicates when specifying ranges (e.g. if unset, <code>1:3,2:4</code> will yield <code>1,2,3,4</code> instead of <code>1,2,3,2,3,4</code>)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["select_cols_keepdupe", "select_rows_keepdupe"], "options": [["Keep duplicate columns", "select_cols_keepdupe", true], ["Keep duplicate rows", "select_rows_keepdupe", true]], "display": "checkboxes", "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "filtersumval", "inputs": [{"model_class": "SelectToolParameter", "name": "axis", "argument": null, "type": "select", "label": "Filter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["Rows", "1", false], ["Columns", "0", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filtersumval_mode", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "operation", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Keep column/row if its observed", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "min", "options": [["Minimum", "min", false], ["Maximum", "max", false], ["Sum", "sum", false], ["Number of Non-NA Values", "count", false], ["Number of Unique Observations", "nunique", false], ["Mean", "mean", false], ["Median", "median", false], ["Standard Deviation", "std", false], ["Standard Error of the Mean", "sem", false], ["Variance", "var", false], ["Mean absolute deviation", "mad", false], ["Product", "product", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "compare_op", "argument": null, "type": "select", "label": "is", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "lt", "options": [["< (Less Than)", "lt", false], ["\u2264 (Less Than or Equal to)", "le", false], ["> (Greater Than)", "gt", false], ["\u2265 (Greater Than or Equal to)", "ge", false], ["\u2261 (Equal to)", "eq", false], ["\u2260 (Not Equal to)", "ne", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "against", "argument": null, "type": "float", "label": "this value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "element", "inputs": [{"model_class": "IntegerToolParameter", "name": "minmatch", "argument": null, "type": "integer", "label": "Keep column/row if at least", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "of its element are", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "str_eq", "options": [["~ (Matching)", "str_eq", false], ["!~ (not Matching)", "str_ne", false], ["< (Less Than)", "lt", false], ["\u2264 (Less Than or Equal to)", "le", false], ["> (Greater Than)", "gt", false], ["\u2265 (Greater Than or Equal to)", "ge", false], ["\u2261 (Equal to)", "eq", false], ["\u2260 (Not Equal to)", "ne", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "against", "argument": null, "type": "text", "label": "this value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "use", "argument": null, "type": "select", "label": "Filter criterion", "help": "See Example #2 for an example of using this mode.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "operation", "options": [["Result of function applied to columns/rows", "operation", false], ["Number of column/row elements passing filter", "element", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "matrixapply", "inputs": [{"model_class": "Conditional", "name": "matrixapply_func", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "TextToolParameter", "name": "custom_func", "argument": null, "type": "text", "label": "Custom function on 'vec'", "help": "The parameter name is <code>vec</code>, referring to a vector of a specific row or column being operated on. Numpy and Pandas DataFrame operators are supported. e.g. <code>np.sum(vec) + np.median(vec)</code>, and <code>vec.sum() + vec.median()</code> are equivalent operations.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "min", "inputs": []}, {"model_class": "ConditionalWhen", "value": "max", "inputs": []}, {"model_class": "ConditionalWhen", "value": "sum", "inputs": []}, {"model_class": "ConditionalWhen", "value": "count", "inputs": []}, {"model_class": "ConditionalWhen", "value": "nunique", "inputs": []}, {"model_class": "ConditionalWhen", "value": "mean", "inputs": []}, {"model_class": "ConditionalWhen", "value": "median", "inputs": []}, {"model_class": "ConditionalWhen", "value": "std", "inputs": []}, {"model_class": "ConditionalWhen", "value": "sem", "inputs": []}, {"model_class": "ConditionalWhen", "value": "var", "inputs": []}, {"model_class": "ConditionalWhen", "value": "mad", "inputs": []}, {"model_class": "ConditionalWhen", "value": "product", "inputs": []}, {"model_class": "ConditionalWhen", "value": "rank", "inputs": []}, {"model_class": "ConditionalWhen", "value": "cumsum", "inputs": []}, {"model_class": "ConditionalWhen", "value": "cumprod", "inputs": []}, {"model_class": "ConditionalWhen", "value": "cummin", "inputs": []}, {"model_class": "ConditionalWhen", "value": "cummax", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "vector_op", "argument": null, "type": "select", "label": "Calculate", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "custom", "options": [["Custom Function", "custom", false], ["Minimum", "min", false], ["Maximum", "max", false], ["Sum", "sum", false], ["Number of Non-NA Values", "count", false], ["Number of Unique Observations", "nunique", false], ["Mean", "mean", false], ["Median", "median", false], ["Standard Deviation", "std", false], ["Standard Error of the Mean", "sem", false], ["Variance", "var", false], ["Mean absolute deviation", "mad", false], ["Product", "product", false], ["Ranks", "rank", false], ["Cumulative Sum", "cumsum", false], ["Cumulative Product", "cumprod", false], ["Cumulative Minimum", "cummin", false], ["Cumulative Maximum", "cummax", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "dimension", "argument": null, "type": "select", "label": "For each", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "options": [["Column", "0", false], ["Row", "1", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fulltable", "inputs": [{"model_class": "Conditional", "name": "general", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "transpose", "inputs": []}, {"model_class": "ConditionalWhen", "value": "melt", "inputs": [{"model_class": "TextToolParameter", "name": "id_vars", "argument": null, "type": "text", "label": "Variable IDs", "help": "Comma-delimited list of column names to use as identifiers", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "value_vars", "argument": null, "type": "text", "label": "Unpivoted IDs", "help": "Comma-delimited list of column names to un-pivot. Leave blank to use all.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pivot", "inputs": [{"model_class": "TextToolParameter", "name": "index", "argument": null, "type": "text", "label": "Index", "help": "Name of the column to use as new index", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "column", "argument": null, "type": "text", "label": "Column", "help": "Name of the column to use to generate the columns of the new table from.                                              Cannot be used in conjunction with the Column-Function Mapping parameter.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "Values", "help": "Names of the columns to use for populating the cells of the new table. Leave blank to use all.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "aggfunc", "argument": null, "type": "select", "label": "Aggregator Function", "help": "The function used to aggregate the values for each unique index.                                              Cannot be used with the Column-Function Mapping parameter below.                                              By default this value is np.mean. Leave blank for default behaviour.                                              See Example 10 for more information on its usage.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Minimum", "min", false], ["Maximum", "max", false], ["Sum", "sum", false], ["Number of Non-NA Values", "count", false], ["Number of Unique Observations", "nunique", false], ["Mean", "mean", false], ["Median", "median", false], ["Standard Deviation", "std", false], ["Standard Error of the Mean", "sem", false], ["Variance", "var", false], ["Mean absolute deviation", "mad", false], ["Product", "product", false], ["All", "all", false], ["Any", "any", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Repeat", "name": "colfun_map", "type": "repeat", "title": "Column-Function Mapping", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "column", "argument": null, "type": "text", "label": "Value Column", "help": "Either a numeric index, or a value column name.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "Repeat", "name": "functions", "type": "repeat", "title": "Aggregator Function", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "aggfunc", "argument": null, "type": "select", "label": "Function", "help": "The function used to aggregate the values for each unique index.                                                      By default this is np.mean. See Example 11 for more information on its usage.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "min", "options": [["Minimum", "min", false], ["Maximum", "max", false], ["Sum", "sum", false], ["Number of Non-NA Values", "count", false], ["Number of Unique Observations", "nunique", false], ["Mean", "mean", false], ["Median", "median", false], ["Standard Deviation", "std", false], ["Standard Error of the Mean", "sem", false], ["Variance", "var", false], ["Mean absolute deviation", "mad", false], ["Product", "product", false], ["All", "all", false], ["Any", "any", false]], "display": null, "multiple": false, "textable": false}]}]}]}, {"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "TextToolParameter", "name": "fulltable_custom_expr", "argument": null, "type": "text", "label": "Custom expression on 'table', along 'axis' (0 or 1)", "help": "The parameter name is <code>table</code> and <code>axis</code>, referring to the table being acted on and the column (<code>0</code>) or row (<code>1</code>) to perform the operation on. Numpy, math, Pandas DataFrame operators, and inline <code>if else</code> are supported (e.g. <code>np.log(table) - table.mean(0) / table.std(1)</code>). See Example #5 in the Help section. ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "use", "argument": null, "type": "select", "label": "Operation", "help": "See Examples 5, 7, and 8 for usage", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "transpose", "options": [["Transpose", "transpose", false], ["Melt", "melt", false], ["Pivot", "pivot", false], ["Custom", "custom", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "element", "inputs": [{"model_class": "Conditional", "name": "element", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "replace", "inputs": [{"model_class": "TextToolParameter", "name": "replace_value", "argument": null, "type": "text", "label": "Replacement value", "help": "If you want to reuse the current value of each element as part of the  replacement value, you can refer to it using the special <code>{elem}</code> placeholder (see Example #9 in the Help section).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "modify", "inputs": [{"model_class": "SelectToolParameter", "name": "modify_op", "argument": null, "type": "select", "label": "Transformation function", "help": "Example: to transform values to their square root, select <code>Square Root</code> here.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "log", "options": [["Ln", "log", false], ["Log10", "log10", false], ["Exponential", "exp", false], ["Floor", "floor", false], ["Ceiling", "ceil", false], ["Square root", "sqrt", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "scale", "inputs": [{"model_class": "SelectToolParameter", "name": "scale_op", "argument": null, "type": "select", "label": "Operation", "help": "The selected operation will be applied to the table elements as the first operand. The value of the second operand can be provided in the next box. Example: to raise all values to the power of 5, select <code>Power</code> here and type <code>5</code> in the box below.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "add", "options": [["Add", "add", false], ["Subtract", "sub", false], ["Multiply", "mul", false], ["True Divide", "truediv", false], ["Floor Divide", "floordiv", false], ["Power", "pow", false], ["Remainder", "mod", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "scale_value", "argument": null, "type": "float", "label": "Second operand value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "TextToolParameter", "name": "custom_expr", "argument": null, "type": "text", "label": "Custom expression on 'elem'", "help": "The parameter name is <code>elem</code>, referring to the element being acted on. Most operators and <code>if</code> <code>else</code> statements are supported. See Examples #3 and #4 in the Help section.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mode", "argument": null, "type": "select", "label": "Operation to perform", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "replace", "options": [["Replace values", "replace", false], ["Transform", "modify", false], ["Arithmetic operation", "scale", false], ["Custom", "custom", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "elem_val", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "None", "inputs": []}, {"model_class": "ConditionalWhen", "value": "lt", "inputs": [{"model_class": "TextToolParameter", "name": "element_value", "argument": null, "type": "text", "label": "Filter value", "help": "This value is converted to numeric if possible, otherwise it is treated as a string", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "le", "inputs": [{"model_class": "TextToolParameter", "name": "element_value", "argument": null, "type": "text", "label": "Filter value", "help": "This value is converted to numeric if possible, otherwise it is treated as a string", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "gt", "inputs": [{"model_class": "TextToolParameter", "name": "element_value", "argument": null, "type": "text", "label": "Filter value", "help": "This value is converted to numeric if possible, otherwise it is treated as a string", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ge", "inputs": [{"model_class": "TextToolParameter", "name": "element_value", "argument": null, "type": "text", "label": "Filter value", "help": "This value is converted to numeric if possible, otherwise it is treated as a string", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "eq", "inputs": [{"model_class": "TextToolParameter", "name": "element_value", "argument": null, "type": "text", "label": "Filter value", "help": "This value is converted to numeric if possible, otherwise it is treated as a string", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ne", "inputs": [{"model_class": "TextToolParameter", "name": "element_value", "argument": null, "type": "text", "label": "Filter value", "help": "This value is converted to numeric if possible, otherwise it is treated as a string", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "rowcol", "inputs": [{"model_class": "TextToolParameter", "name": "select_cols_wanted", "argument": null, "type": "text", "label": "List of columns to select", "help": "Comma separated. (e.g. <code>3:5,10,-1,2:-2</code> will select columns <code>3,4,5,10,-1,2,1,0,-1,-2</code>, where negative indices refer to the offset from the last index). Columns can be duplicated by specifying them multiple times. Leave blank to retain all columns. See Example #1 for an example of using this mode.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "select_rows_wanted", "argument": null, "type": "text", "label": "List of rows to select", "help": "The same rules apply as above", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "inclusive_selection", "argument": null, "type": "boolean", "label": "Inclusive Selection", "help": "If enabled, all elements that match ANY row or column given above will be acted on. Otherwise, only the elements that match BOTH a row or column given above will be acted on.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "element_op", "argument": null, "type": "select", "label": "Operate on elements", "help": "Only selected elements will be manipulated. Other elements will retain their original value.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "None", "options": [["All", "None", true], ["Specific Rows and/or Columns", "rowcol", false], ["< (Less Than)", "lt", false], ["\u2264 (Less Than or Equal to)", "le", false], ["> (Greater Than)", "gt", false], ["\u2265 (Greater Than or Equal to)", "ge", false], ["\u2261 (Equal to)", "eq", false], ["\u2260 (Not Equal to)", "ne", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mode", "argument": null, "type": "select", "label": "Type of table operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "precision", "options": [["No operation (just reformat on output)", "precision", false], ["Drop, keep or duplicate rows and columns", "select", false], ["Filter rows or columns by their properties", "filtersumval", false], ["Compute expression across rows or columns", "matrixapply", false], ["Manipulate selected table elements", "element", false], ["Perform a full table operation", "fulltable", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "multiple", "inputs": [{"model_class": "Repeat", "name": "tables", "type": "repeat", "title": "Tables", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Table", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tsv", "tabular"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "col_row_names", "argument": null, "type": "select", "label": "Input data has", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["has_col_names", "has_row_names"], "options": [["Column names on the first row", "has_col_names", true], ["Row names on the first column", "has_row_names", true]], "display": "checkboxes", "multiple": true, "textable": false}, {"model_class": "Section", "name": "adv", "type": "section", "title": "Advanced File Options ", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "header", "argument": null, "type": "integer", "label": "Header begins at line N", "help": "All lines before line N will be skipped. If a value is set, this will override the above 'Column names on the first row' parameter.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "nrows", "argument": null, "type": "integer", "label": "Read N lines only", "help": "Parses only N lines after the header line.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "skipfooter", "argument": null, "type": "integer", "label": "Skip N lines from bottom", "help": "Do not use this in conjunction with the 'Read N lines only' parameter.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "skip_blank_lines", "argument": null, "type": "boolean", "label": "Skip blank lines", "help": "Otherwise it will insert NaN values for every blank line detected.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}]}]}, {"model_class": "TextToolParameter", "name": "fulltable_custom_expr", "argument": null, "type": "text", "label": "Custom expression on 'tableN'", "help": "The parameter name is <code>tableN</code>, where <code>N</code> refers to a specific table. e.g. <code>table1 + table3 - table2</code>, will add the first and third input tables and then subtract the second. Most operators and <code>if</code> <code>else</code> statements are supported. See Example #6 in the Help section for further examples.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "use_type", "argument": null, "type": "select", "label": "Input Single or Multiple Tables", "help": "Operations on single tables are better tailored towards more general use-cases. For multiple tables usage, all tables should ideally be of the same dimensions for simple operations, although complex operations are also supported for unequally sized tables (see Help section).", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "single", "options": [["Single Table", "single", false], ["Multiple Tables", "multiple", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "out_opts", "argument": null, "type": "select", "label": "Output formatting options", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["ignore_nas", "output_headers_col", "output_headers_row"], "options": [["Ignore NA values", "ignore_nas", true], ["Output column headers", "output_headers_col", true], ["Output row headers", "output_headers_row", true]], "display": "checkboxes", "multiple": true, "textable": false}, {"model_class": "IntegerToolParameter", "name": "precision", "argument": null, "type": "integer", "label": "Output decimal precision", "help": "", "refresh_on_change": false, "min": 0, "max": 20, "optional": false, "hidden": false, "is_dynamic": false, "value": "6", "area": false, "datalist": []}], "outputs": [{"model_class": "ToolOutput", "name": "table", "format": "tabular", "label": "${tool.name} on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "text_manipulation", "panel_section_name": "Text Manipulation", "form_style": "regular"}