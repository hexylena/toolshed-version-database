{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/rna_starsolo/rna_starsolo/2.7.10b+galaxy3", "name": "RNA STARSolo", "version": "2.7.10b+galaxy3", "description": "mapping, demultiplexing and gene quantification for single cell RNA-seq", "labels": [], "edam_operations": ["operation_0292"], "edam_topics": ["topic_3170", "topic_3308"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "star", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "rna_starsolo", "owner": "iuc", "changeset_revision": "13022c3d3076", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "refGenomeSource", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "indexed", "inputs": [{"model_class": "Conditional", "name": "GTFconditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "with-gtf", "inputs": [{"model_class": "SelectToolParameter", "name": "genomeDir", "argument": "--genomeDir", "type": "select", "label": "Select reference genome", "help": "If your genome of interest is not listed, contact the Galaxy team", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "without-gtf-with-gtf", "inputs": [{"model_class": "SelectToolParameter", "name": "genomeDir", "argument": "--genomeDir", "type": "select", "label": "Select reference genome", "help": "If your genome of interest is not listed, contact the Galaxy team", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "apiMel3", "options": [["A. mellifera genome (apiMel3, Baylor HGSC Amel_3.0)", "apiMel3", false], ["ARS1 Aug. 2016 Capra hircus (goat) (San Clemente 2016 USDA) (GCF_001704415.2)", "GCF_001704415.2", false], ["African Clawed Frog (xenLae9.2)", "xenLae9.2", false], ["Arabidopsis thaliana (TAIR10)", "TAIR10", false], ["Caenorhabditis elegans Feb. 2013 (WBcel235/ce11)", "ce11", false], ["Caenorhabditis elegans: ce10", "ce10", false], ["Cat Nov. 2017 (Felis catus, domestic cat): felCat9", "felCat9", false], ["Chicken (Gallus gallus): galGal6", "galGal6", false], ["Chicken Oct. 2021 (bGalGal1.pat.whiteleghornlayer.GRCg7w_WZ) (GCF_016700215.2)", "GCF_016700215.2", false], ["Dog Oct. 2020 (Dog10K_Boxer_Tasha/canFam6) (canFam6)", "canFam6", false], ["Fly (Drosophila melanogaster): dm3 Full", "dm3full", false], ["Fly (Drosophila melanogaster): dm6 Full", "dm6full", false], ["Horse Jan. 2018 (EquCab3.0/equCab3)", "equCab3", false], ["Human (Homo sapiens): hg19 Full", "hg19full", false], ["Human CHM13 2.0 (T2T Consortium) Jan. 2022", "CHM13_T2T_v2.0", false], ["Human Dec. 2013 (GRCh38/hg38) (hg38)", "hg38", false], ["Influenza A virus (A/seal/Mass/1-SC35M/1980(H7N7))", "h7n7_360722", false], ["Macaca fascicularis Jun 2013 (macFas5)", "macFas5", false], ["Mouse (Mus Musculus): mm10 Full", "mm10full", false], ["Mouse (Mus Musculus): mm39 Full", "mm39", false], ["Mouse (Mus Musculus): mm9 Full", "mm9full", false], ["Pig Feb. 2017 (Sscrofa11.1/susScr11) (susScr11)", "susScr11", false], ["Rabbit Apr. 2009 (Broad/oryCun2)", "oryCun2", false], ["Rat Jul. 2014 (RGSC 6.0/rn6) (rn6)", "rn6", false], ["Rock pigeon Dec 2017 (Cliv_2.1/colLiv2)", "colLiv2.1", false], ["S. lycopersicum (Tomato) Feb 2019 (SL4.0)", "SL4.0", false], ["SARS-CoV-2 isolate Wuhan-Hu-1, complete genome (NC_045512)", "NC_045512.2", false], ["Triticum aestivum IWGSC1.1", "Triticum_aestivum_IWGSC1.1", false], ["White-tailed deer Apr 2017 (Odocoileus virginianus) (GCF_002102435.1, Ovir.te_1.0)", "GCF_002102435.1", false], ["Xenopus tropicalis (xenTro9.1)", "xenTro9.1", false], ["Zebrafish May 2017 (GRCz11/danRer11) (danRer11)", "danRer11", false], ["Zebrafish Sep. 2014 (GRCz10/danRer10) (danRer10)", "danRer10", false], ["bosTau8", "bosTau8", false], ["oviAri4 Sheep (oviAri4, International Sheep Genome Consortium) ((Oar_v4.0/oviAri4))", "oviAri4", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "DataToolParameter", "name": "sjdbGTFfile", "argument": "--sjdbGTFfile", "type": "data", "label": "Gene model (gff3,gtf) file for splice junctions", "help": "Exon junction information for mapping splices", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gff3", "gtf"], "edam": {"edam_formats": ["format_1975", "format_2306"], "edam_data": ["data_1255", "data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "sjdbOverhang", "argument": "--sjdbOverhang", "type": "integer", "label": "Length of the genomic sequence around annotated junctions", "help": "Used in constructing the splice junctions database. Ideal value is ReadLength-1", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "GTFselect", "argument": null, "type": "select", "label": "Reference genome with annotation", "help": "Select the '... with builtin gene-model' option to select from the list of available indexes that were built with splice junction information. Select the '... without builtin gene-model' option to select from the list of available indexes without annotated splice junctions, and provide your own splice junction annonations.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "without-gtf-with-gtf", "options": [["use genome reference without builtin gene-model", "without-gtf-with-gtf", true], ["use genome reference with builtin gene-model", "with-gtf", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "genomeFastaFiles", "argument": "--genomeFastaFiles", "type": "data", "label": "Select a reference genome", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "genomeSAindexNbases", "argument": "--genomeSAindexNbases", "type": "integer", "label": "Length of the SA pre-indexing string", "help": "Typically between 10 and 15. Longer strings will use much more memory, but allow faster searches. For small genomes, the parameter --genomeSAindexNbases must be scaled down to min(14, log2(GenomeLength)/2 - 1)", "refresh_on_change": false, "min": 2, "max": 16, "optional": false, "hidden": false, "is_dynamic": false, "value": "14", "area": false, "datalist": []}, {"model_class": "DataToolParameter", "name": "sjdbGTFfile", "argument": "--sjdbGTFfile", "type": "data", "label": "Gene model (gff3,gtf) file for splice junctions", "help": "Exon junction information for mapping splices", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gff3", "gtf"], "edam": {"edam_formats": ["format_1975", "format_2306"], "edam_data": ["data_1255", "data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "sjdbOverhang", "argument": "--sjdbOverhang", "type": "integer", "label": "Length of the genomic sequence around annotated junctions", "help": "Used in constructing the splice junctions database. Ideal value is ReadLength-1", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "geneSource", "argument": null, "type": "select", "label": "Custom or built-in reference genome", "help": "Built-ins were indexed using default options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "indexed", "options": [["Use a built-in index", "indexed", true], ["Use reference genome from history and create temporary index", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "sc", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "CB_UMI_Simple", "inputs": [{"model_class": "Conditional", "name": "input_types", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "repeat", "inputs": [{"model_class": "DataToolParameter", "name": "input1", "argument": null, "type": "data", "label": "RNA-Seq FASTQ/FASTA file, Barcode reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastqsanger.gz"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930", "format_1932"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input2", "argument": null, "type": "data", "label": "RNA-Seq FASTQ/FASTA file, cDNA reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastqsanger.gz"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930", "format_1932"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "list_paired", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "input_collection", "argument": null, "type": "data_collection", "label": "Collection of Pairs", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastqsanger.gz"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "use", "argument": null, "type": "select", "label": "Input Type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "repeat", "options": [["Separate barcode and cDNA reads", "repeat", false], ["Paired collection of barcode and cDNA reads", "list_paired", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "DataToolParameter", "name": "soloCBwhitelist", "argument": "--soloCBwhitelist", "type": "data", "label": "RNA-Seq Cell Barcode Whitelist", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt", "tsv"], "edam": {"edam_formats": ["format_2330", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Cv2", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Cv3", "inputs": []}, {"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "IntegerToolParameter", "name": "soloCBstart", "argument": "--soloCBstart", "type": "integer", "label": "Cell Barcode Start Base", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "soloCBlen", "argument": "--soloCBlen", "type": "integer", "label": "Cell Barcode Length", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "16", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "soloUMIstart", "argument": "--soloUMIstart", "type": "integer", "label": "UMI Start Base", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "17", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "soloUMIlen", "argument": "--soloUMIlen", "type": "integer", "label": "UMI Length", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "bccdna_mate", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "other_mate", "inputs": []}, {"model_class": "ConditionalWhen", "value": "same_mate", "inputs": [{"model_class": "SelectToolParameter", "name": "soloBarcodeMate", "argument": "--soloBarcodeMate", "type": "select", "label": "Barcode sequence is a part of", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["mate 1", "1", true], ["mate 2", "2", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "clip_n_bases", "argument": null, "type": "integer", "label": "Number of bases to clip (=CB+UMI+adapter)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "39", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "bc_location", "argument": null, "type": "select", "label": "Barcode and cDNA on the same mate\\?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "other_mate", "options": [["BC and cDNA are on different mates of paired-end read", "other_mate", true], ["BC and cDNA are on the same mate of paired-end read", "same_mate", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "TextToolParameter", "name": "soloAdapterSequence", "argument": "--soloAdapterSequence", "type": "text", "label": "Adapter sequence to anchor barcodes.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "-", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "soloAdapterMismatchesNmax", "argument": "--soloAdapterMismatchesNmax", "type": "integer", "label": "Maximum number of mismatches allowed in adapter sequence", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "clipAdapterType", "argument": "--clipAdapterType", "type": "select", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Hamming", "options": [["Adapter clipping based on Hamming distance", "Hamming", true], ["5p and 3p adapter clipping similar to CellRanger4", "CellRanger4", false], ["No adapter clipping", "None", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "chemistry", "argument": null, "type": "select", "label": "Configure Chemistry Options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Cv2", "options": [["Chromium chemistry v2", "Cv2", true], ["Chromium chemistry v3", "Cv3", false], ["Custom", "custom", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "soloBarcodeReadLength", "argument": "--soloBarcodeReadLength", "type": "boolean", "label": "Barcode Size is same size of the Read", "help": "Disable this if your R1 barcodes contain poly-T bases after the barcode sequence.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "1", "falsevalue": "0"}, {"model_class": "Conditional", "name": "umidedup", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "1MM_All", "inputs": []}, {"model_class": "ConditionalWhen", "value": "1MM_Directional_UMItools", "inputs": []}, {"model_class": "ConditionalWhen", "value": "1MM_Directional", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Exact", "inputs": []}, {"model_class": "ConditionalWhen", "value": "1MM_CR", "inputs": [{"model_class": "SelectToolParameter", "name": "soloUMIfiltering", "argument": "--soloUMIfiltering", "type": "select", "label": "Type of UMI filtering", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "-", "options": [["Remove UMIs with N and homopolymers (similar to CellRanger 2.2.0)", "-", true], ["Remove lower-count UMIs that map to more than one gene", "MultiGeneUMI", false], ["Remove all UMIs that map to more than one gene", "MultiGeneUMI_All", false], ["Remove lower-count UMIs that map to more than one gene, matching CellRanger > 3.0.0", "MultiGeneUMI_CR", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "soloUMIdedup", "argument": "--soloUMIdedup", "type": "select", "label": "UMI deduplication (collapsing) algorithm", "help": "All has all UMIs with 1 mismatch distance to each other collapsed, Directional follows the 'directional' method given in UMI-tools, Exact collapses only exactly matching UMIs.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "1MM_All", "options": [["Collapse all UMIs with 1 mismatch distance to each other (1MM_All)", "1MM_All", true], ["Directional method from the UMI-tool", "1MM_Directional_UMItools", false], ["Directional with stringent UMI deduplication", "1MM_Directional", false], ["Exact", "Exact", false], ["CellRanger2-4 algorithm", "1MM_CR", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "soloCBmatchWLtype", "argument": "--soloCBmatchWLtype", "type": "select", "label": "Matching the Cell Barcodes to the WhiteList", "help": "Exact: only exact matches allowed; 1MM: only one match in whitelist with 1 mismatched base allowed. Allowed     CBs have to have at least one read with exact match; 1MM_multi: multiple matches in whitelist with 1 mismatched base allowed, posterior probability calculation is used choose one of the matches; 1MM_multi_pseudocounts: same as 1MM_Multi, but pseudocounts of 1 are added to all whitelist barcodes.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "1MM_multi", "options": [["Exact", "Exact", false], ["Single match (1MM)", "1MM", false], ["Multiple matches (CellRanger 2, 1MM_multi)", "1MM_multi", true], ["Multiple matches (CellRanger 3, 1MM_multi_pseudocounts)", "1MM_multi_pseudocounts", false], ["Multimatching to WL is allowed for CBs with N-bases (CellRanger 3, 1MM_multi_Nbase_pseudocounts)", "1MM_multi_Nbase_pseudocounts", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "CB_UMI_Complex", "inputs": [{"model_class": "Conditional", "name": "input_types", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "repeat", "inputs": [{"model_class": "DataToolParameter", "name": "input1", "argument": null, "type": "data", "label": "RNA-Seq FASTQ/FASTA file, Barcode reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastqsanger.gz"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930", "format_1932"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input2", "argument": null, "type": "data", "label": "RNA-Seq FASTQ/FASTA file, cDNA reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastqsanger.gz"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930", "format_1932"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "list_paired", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "input_collection", "argument": null, "type": "data_collection", "label": "Collection of Pairs", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastqsanger.gz"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "use", "argument": null, "type": "select", "label": "Input Type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "repeat", "options": [["Separate barcode and cDNA reads", "repeat", false], ["Paired collection of barcode and cDNA reads", "list_paired", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Repeat", "name": "cb_whitelists", "type": "repeat", "title": "Cell barcode whitelist information", "help": null, "default": 0, "min": 0, "max": 2.0, "inputs": [{"model_class": "DataToolParameter", "name": "whitelist_file", "argument": null, "type": "data", "label": "RNA-Seq Cell Barcode Whitelist", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt", "tsv"], "edam": {"edam_formats": ["format_2330", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "cb_start_anchor", "argument": null, "type": "select", "label": "Start anchor base for cell barcode", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "options": [["Read start", "0", false], ["Read end", "1", false], ["Adapter start", "2", false], ["Adapter end", "3", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "cb_start_anchor_pos", "argument": null, "type": "integer", "label": "0-based position of the CB start with respect to the anchor base", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "cb_end_anchor", "argument": null, "type": "select", "label": "End anchor base for cell barcode", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "options": [["Read start", "0", false], ["Read end", "1", false], ["Adapter start", "2", false], ["Adapter end", "3", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "cb_end_anchor_pos", "argument": null, "type": "integer", "label": "0-based position of the CB end with respect to the anchor base", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "SelectToolParameter", "name": "umi_start_anchor", "argument": null, "type": "select", "label": "Start anchor base for UMI", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "options": [["Read start", "0", false], ["Read end", "1", false], ["Adapter start", "2", false], ["Adapter end", "3", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "umi_start_anchor_pos", "argument": null, "type": "integer", "label": "0-based position of the UMI start with respect to the anchor base", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "umi_end_anchor", "argument": null, "type": "select", "label": "End anchor base for UMI", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "options": [["Read start", "0", false], ["Read end", "1", false], ["Adapter start", "2", false], ["Adapter end", "3", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "umi_end_anchor_pos", "argument": null, "type": "integer", "label": "0-based position of the UMI end with respect to the anchor base", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "soloAdapterSequence", "argument": "--soloAdapterSequence", "type": "text", "label": "Adapter sequence to anchor barcodes.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "-", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "soloAdapterMismatchesNmax", "argument": "--soloAdapterMismatchesNmax", "type": "integer", "label": "Maximum number of mismatches allowed in adapter sequence", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "clipAdapterType", "argument": "--clipAdapterType", "type": "select", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Hamming", "options": [["Adapter clipping based on Hamming distance", "Hamming", true], ["5p and 3p adapter clipping similar to CellRanger4", "CellRanger4", false], ["No adapter clipping", "None", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "umidedup", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "1MM_All", "inputs": []}, {"model_class": "ConditionalWhen", "value": "1MM_Directional_UMItools", "inputs": []}, {"model_class": "ConditionalWhen", "value": "1MM_Directional", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Exact", "inputs": []}, {"model_class": "ConditionalWhen", "value": "1MM_CR", "inputs": [{"model_class": "SelectToolParameter", "name": "soloUMIfiltering", "argument": "--soloUMIfiltering", "type": "select", "label": "Type of UMI filtering", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "-", "options": [["Remove UMIs with N and homopolymers (similar to CellRanger 2.2.0)", "-", true], ["Remove lower-count UMIs that map to more than one gene", "MultiGeneUMI", false], ["Remove all UMIs that map to more than one gene", "MultiGeneUMI_All", false], ["Remove lower-count UMIs that map to more than one gene, matching CellRanger > 3.0.0", "MultiGeneUMI_CR", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "soloUMIdedup", "argument": "--soloUMIdedup", "type": "select", "label": "UMI deduplication (collapsing) algorithm", "help": "All has all UMIs with 1 mismatch distance to each other collapsed, Directional follows the 'directional' method given in UMI-tools, Exact collapses only exactly matching UMIs.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "1MM_All", "options": [["Collapse all UMIs with 1 mismatch distance to each other (1MM_All)", "1MM_All", true], ["Directional method from the UMI-tool", "1MM_Directional_UMItools", false], ["Directional with stringent UMI deduplication", "1MM_Directional", false], ["Exact", "Exact", false], ["CellRanger2-4 algorithm", "1MM_CR", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "soloCBmatchWLtype", "argument": "--soloCBmatchWLtype", "type": "select", "label": "Matching the Cell Barcodes to the WhiteList", "help": "Exact: only exact matches allowed; 1MM: only one match in whitelist with 1 mismatched base allowed. Allowed     CBs have to have at least one read with exact match; 1MM_multi: multiple matches in whitelist with 1 mismatched base allowed, posterior probability calculation is used choose one of the matches; 1MM_multi_pseudocounts: same as 1MM_Multi, but pseudocounts of 1 are added to all whitelist barcodes.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Exact", "options": [["Exact", "Exact", false], ["Single match (1MM)", "1MM", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "SmartSeq", "inputs": [{"model_class": "Conditional", "name": "input_types_smart_seq", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "list_single_end", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "single_end_collection", "argument": null, "type": "data_collection", "label": "List of single-end FASTQ files", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastqsanger.gz"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "list_paired_end", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "paired_end_collection", "argument": null, "type": "data_collection", "label": "List of paired-end FASTQ files", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastqsanger.gz"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "use", "argument": null, "type": "select", "label": "Input Type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "list_single_end", "options": [["Single-end FASTQ collection", "list_single_end", false], ["Paired FASTQ collection", "list_paired_end", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "DataToolParameter", "name": "cell_ids", "argument": null, "type": "data", "label": "File containing cell IDs of the samples. One ID per line in order of samples in the above collection.", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt", "tsv"], "edam": {"edam_formats": ["format_2330", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "umidedup", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "1MM_All", "inputs": []}, {"model_class": "ConditionalWhen", "value": "1MM_Directional_UMItools", "inputs": []}, {"model_class": "ConditionalWhen", "value": "1MM_Directional", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Exact", "inputs": []}, {"model_class": "ConditionalWhen", "value": "NoDedup", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "soloUMIdedup", "argument": "--soloUMIdedup", "type": "select", "label": "UMI deduplication (collapsing) algorithm", "help": "All has all UMIs with 1 mismatch distance to each other collapsed, Directional follows the 'directional' method given in UMI-tools, Exact collapses only exactly matching UMIs.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "1MM_All", "options": [["Collapse all UMIs with 1 mismatch distance to each other (1MM_All)", "1MM_All", true], ["Directional method from the UMI-tool", "1MM_Directional_UMItools", false], ["Directional with stringent UMI deduplication", "1MM_Directional", false], ["Exact", "Exact", false], ["Do not deduplicate UMIs", "NoDedup", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "solo_type", "argument": null, "type": "select", "label": "Type of single-cell RNA-seq", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "CB_UMI_Simple", "options": [["Drop-seq or 10X Chromium", "CB_UMI_Simple", false], ["inDrop", "CB_UMI_Complex", false], ["Smart-Seq", "SmartSeq", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "solo", "type": "section", "title": "Advanced Settings", "help": null, "expanded": true, "inputs": [{"model_class": "SelectToolParameter", "name": "soloStrand", "argument": "--soloStrand", "type": "select", "label": "Strandedness of Library", "help": "Unstranded has no strand information, Forward has the read strand the same as the original RNA molecule, Reverse has the read strand opposite to the original RNA molecule", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Forward", "options": [["No strand information", "Unstranded", false], ["Read strand same as the original RNA molecule", "Forward", true], ["Read strand opposite to the original RNA molecule", "Reverse", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "soloFeatures", "argument": "--soloFeatures", "type": "select", "label": "Collect UMI counts for these genomic features", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Gene", "options": [["Gene: Count reads matching the Gene Transcript", "Gene", true], ["Splice Junctions: Count reads at exon-intron junctions", "SJ", false], ["Full: Count all reads overlapping genes' exons and introns", "GeneFull", false], ["Full: Count all reads overlapping genes' exons and introns: prioritize 100% overlap with exons", "GeneFull_ExonOverIntron", false], ["Full: Count all reads overlapping genes' exons and introns: prioritize 50% overlap with exons. Do not count reads with 100% exonic overlap in the antisense direction.", "GeneFull_Ex50pAS", false], ["Velocyto: calculate spliced, unspliced, and ambiguous counts per cell per gene similar to the velocyto tool", "Gene Velocyto", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "cellranger2", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_expected", "argument": null, "type": "integer", "label": "Number of expected cells", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3000", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_perc", "argument": null, "type": "float", "label": "Robust maximum percentile for UMI count", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.99", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_min_ratio", "argument": null, "type": "float", "label": "Maximum to minimum ratio for UMI count", "help": "", "refresh_on_change": false, "min": 1.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "output_raw", "argument": null, "type": "boolean", "label": "Output raw matrix in addition to filtered one", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "emptydrops", "inputs": [{"model_class": "IntegerToolParameter", "name": "nExpectedCells", "argument": null, "type": "integer", "label": "Number of expected cells", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3000", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "maxPercentile", "argument": null, "type": "float", "label": "Robust maximum percentile for UMI count", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.99", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "maxMinRatio", "argument": null, "type": "float", "label": "Maximum to minimum ratio for UMI count", "help": "", "refresh_on_change": false, "min": 1.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "indMin", "argument": null, "type": "integer", "label": "Minimum number of barcodes (used as partition parameter for ambient estimation)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "45000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "indMax", "argument": null, "type": "integer", "label": "Maximum number of barcodes (used as partition parameter for ambient estimation)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "90000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "umiMin", "argument": null, "type": "integer", "label": "Consider at least these many UMIs per barcode after initial cell calling", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "umiMinFracMedian", "argument": null, "type": "float", "label": "Minimum UMI:median ratio after initial cell calling", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "candMaxN", "argument": null, "type": "integer", "label": "Number of extra barcodes after initial cell calling", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20000", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "FDR", "argument": null, "type": "float", "label": "Maximum adjusted p-value for determining a barcode as non-ambient", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "simN", "argument": null, "type": "integer", "label": "Number of log likelihood simulations", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "output_raw", "argument": null, "type": "boolean", "label": "Output raw matrix in addition to filtered one", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "topcells", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_cells", "argument": null, "type": "integer", "label": "Number of top cells to report sorted by UMI count", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "output_raw", "argument": null, "type": "boolean", "label": "Output raw matrix in addition to filtered one", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "no_filter", "inputs": [{"model_class": "HiddenToolParameter", "name": "output_raw", "argument": null, "type": "hidden", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": "true"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "filter_type", "argument": null, "type": "select", "label": "Cell filtering type and parameters", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "cellranger2", "options": [["Simple filtering of CellRanger v2", "cellranger2", true], ["EmptyDrops filtering in CellRanger flavor", "emptydrops", false], ["Filter top N cells", "topcells", false], ["Do not filter", "no_filter", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "TextToolParameter", "name": "soloOutFormatFeaturesGeneField3", "argument": "--soloOutFormatFeaturesGeneField3", "type": "text", "label": "Field 3 in the Genes output.", "help": "Input '-' to remove the 3rd column from the output.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "Gene Expression", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "outSAMattributes", "argument": "--outSAMattributes", "type": "select", "label": "Read alignment tags to include in the BAM output", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["NH", "HI", "AS", "nM"], "options": [["NH (number of reported alignments/hits for the read)", "NH", true], ["HI (query hit index)", "HI", true], ["AS (local alignment score)", "AS", true], ["nM (number of mismatches per (paired) alignment)", "nM", true], ["NM (edit distance of the aligned read to the reference)", "NM", false], ["MD (string for mismatching positions)", "MD", false], ["jM (intron motifs for all junctions)", "jM", false], ["jI (1-based start and end of introns for all junctions)", "jI", false], ["CR Cellular barcode sequence bases (uncorrected)", "CR", false], ["CY Phred quality of the cellular barcode sequence in the CR tag", "CY", false], ["UR UMI (uncorrected)", "UR", false], ["UY Phred quality of the UMI", "UY", false], ["GX Gene ID", "GX", false], ["GN Gene name", "GN", false], ["CB Cell identifier (corrected)", "CB", false], ["UB UMI (corrected)", "UB", false], ["sM assessment of CB and UMI", "sM", false], ["sS sequence of the entire barcode (CB,UMI,adapter...)", "sS", false], ["quality of the entire barcode", "sQ", false]], "display": "checkboxes", "multiple": true, "textable": false}, {"model_class": "BooleanToolParameter", "name": "quantModeGene", "argument": null, "type": "boolean", "label": "Output global gene count", "help": "Can be used by MultiQC", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "GeneCounts", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "outSAMunmapped", "argument": "--outSAMunmapped", "type": "boolean", "label": "Output unmapped reads in the BAM", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--outSAMunmapped Within", "falsevalue": "--outSAMunmapped None"}, {"model_class": "IntegerToolParameter", "name": "outSAMmapqUnique", "argument": "--outSAMmapqUnique", "type": "integer", "label": "MAPQ value for unique mappers", "help": "STAR bases the mapping quality scores of alignment records in its BAM output on the number of alternative mappings for the read. If a read maps to multiple locations on the reference genome, the following MAPQ scoring scheme is used: >=5 mappings => MAPQ=0; 3-4 mappings => MAPQ=1; 2 mappings => MAPQ=3. This setting lets you control the MAPQ used for reads mapped to a single location. Set to 255 for compatibility with Cufflink (default in STAR) but keep to 60 for modern downstream tools like mutect2.", "refresh_on_change": false, "min": 0, "max": 255, "optional": false, "hidden": false, "is_dynamic": false, "value": "60", "area": false, "datalist": []}, {"model_class": "Section", "name": "junction_limits", "type": "section", "title": "Junction Limits", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "limitOutSJoneRead", "argument": "--limitOutSJoneRead", "type": "integer", "label": "Maximum number of junctions for one read (including all multimappers)", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "limitOutSJcollapsed", "argument": "--limitOutSJcollapsed", "type": "integer", "label": "Maximum number of collapsed junctions", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "limitSjdbInsertNsj", "argument": "--limitSjdbInsertNsj", "type": "integer", "label": "Maximum number of inserts to be inserted into the genome on the fly.", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000000", "area": false, "datalist": []}]}]}, {"model_class": "Conditional", "name": "outWig", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "None", "inputs": [{"model_class": "HiddenToolParameter", "name": "outWigStrand", "argument": null, "type": "hidden", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": "false"}]}, {"model_class": "ConditionalWhen", "value": "bedGraph", "inputs": [{"model_class": "SelectToolParameter", "name": "outWigTypeSecondWord", "argument": null, "type": "select", "label": "Input for coverage", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Default (everything that mapped)", "", false], ["signal from only 5\u2019 of the 1st read", "read_5p", false], ["signal from only 2nd read", "read2", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "outWigStrand", "argument": "--outWigStrand", "type": "boolean", "label": "Generate a coverage for each strand (stranded coverage)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "Stranded", "falsevalue": "Unstranded"}, {"model_class": "TextToolParameter", "name": "outWigReferencesPrefix", "argument": "--outWigReferencesPrefix", "type": "text", "label": "prefix matching reference name", "help": "For example, set 'chr' if you mapped on an ensembl genome but you want to display on UCSC", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "-", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "outWigNorm", "argument": "--outWigNorm", "type": "boolean", "label": "Normalize coverage to million of mapped reads (RPM)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "RPM", "falsevalue": "None"}]}, {"model_class": "ConditionalWhen", "value": "wiggle", "inputs": [{"model_class": "SelectToolParameter", "name": "outWigTypeSecondWord", "argument": null, "type": "select", "label": "Input for coverage", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Default (everything that mapped)", "", false], ["signal from only 5\u2019 of the 1st read", "read_5p", false], ["signal from only 2nd read", "read2", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "outWigStrand", "argument": "--outWigStrand", "type": "boolean", "label": "Generate a coverage for each strand (stranded coverage)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "Stranded", "falsevalue": "Unstranded"}, {"model_class": "TextToolParameter", "name": "outWigReferencesPrefix", "argument": "--outWigReferencesPrefix", "type": "text", "label": "prefix matching reference name", "help": "For example, set 'chr' if you mapped on an ensembl genome but you want to display on UCSC", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "-", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "outWigNorm", "argument": "--outWigNorm", "type": "boolean", "label": "Normalize coverage to million of mapped reads (RPM)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "RPM", "falsevalue": "None"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "outWigType", "argument": null, "type": "select", "label": "Compute coverage", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "None", "options": [["No coverage", "None", false], ["Yes in bedgraph format", "bedGraph", false], ["Yes in wiggle format", "wiggle", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "output_log", "format": "txt", "label": "${tool.name} on ${on_string}: log", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Log.final.out", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_genes", "format": "tsv", "label": "${tool.name} on ${on_string}: Genes raw", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Solo.out/soloFeatures/raw/features.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_genes_filtered", "format": "tsv", "label": "${tool.name} on ${on_string}: Genes filtered", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Solo.out/soloFeatures/filtered/features.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_barcodes", "format": "tsv", "label": "${tool.name} on ${on_string}: Barcodes raw", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Solo.out/soloFeatures/raw/barcodes.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_barcodes_filtered", "format": "tsv", "label": "${tool.name} on ${on_string}: Barcodes filtered", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Solo.out/soloFeatures/filtered/barcodes.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_matrix", "format": "mtx", "label": "${tool.name} on ${on_string}: Matrix Gene Counts raw", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Solo.out/soloFeatures/raw/matrix.mtx", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_matrix_filtered", "format": "mtx", "label": "${tool.name} on ${on_string}: Matrix Gene Counts filtered", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Solo.out/soloFeatures/filtered/matrix.mtx", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_matrixSJ", "format": "mtx", "label": "${tool.name} on ${on_string}: Matrix Splice Junction Counts", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Solo.out/soloFeatures/raw/matrix.mtx", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_matrixGeneFull", "format": "mtx", "label": "${tool.name} on ${on_string}: Matrix Full Gene Counts raw", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Solo.out/soloFeatures/raw/matrix.mtx", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_matrixGeneFull_filtered", "format": "mtx", "label": "${tool.name} on ${on_string}: Matrix Full Gene Counts filtered", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Solo.out/soloFeatures/filtered/matrix.mtx", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_BAM", "format": "bam", "label": "${tool.name} on ${on_string}: Alignments", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_stats", "format": "txt", "label": "${tool.name} on ${on_string}: Barcode/Feature Statistic Summaries", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "reads_per_gene", "format": "tabular", "label": "${tool.name} on ${on_string}: combined reads per gene", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ReadsPerGene.out.tab", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "signal_unique_str1", "format": "bedgraph", "label": "${tool.name} on ${on_string}: Coverage Uniquely mapped strand 1", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Signal.Unique.str1.out", "edam_format": "format_3583", "edam_data": "data_3002", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "signal_uniquemultiple_str1", "format": "bedgraph", "label": "${tool.name} on ${on_string}: Coverage Uniquely + Multiple mapped strand 1", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Signal.UniqueMultiple.str1.out", "edam_format": "format_3583", "edam_data": "data_3002", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "signal_unique_str2", "format": "bedgraph", "label": "${tool.name} on ${on_string}: Coverage Uniquely mapped strand 2", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Signal.Unique.str2.out", "edam_format": "format_3583", "edam_data": "data_3002", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "signal_uniquemultiple_str2", "format": "bedgraph", "label": "${tool.name} on ${on_string}: Coverage Uniquely + Multiple mapped strand 2", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Signal.UniqueMultiple.str2.out", "edam_format": "format_3583", "edam_data": "data_3002", "discover_datasets": []}], "panel_section_id": "mapping", "panel_section_name": "Mapping", "form_style": "regular"}