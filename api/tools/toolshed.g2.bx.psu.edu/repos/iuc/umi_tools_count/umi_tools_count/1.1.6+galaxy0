{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_count/umi_tools_count/1.1.6+galaxy0", "name": "UMI-tools count", "version": "1.1.6+galaxy0", "description": "performs quantification of UMIs from BAM files", "labels": [], "edam_operations": ["operation_3218"], "edam_topics": ["topic_3393", "topic_0160", "topic_3168"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "umi-tools", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "umi_tools_count", "owner": "iuc", "changeset_revision": "437d5c72f2e3", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Reads to deduplicate in SAM or BAM format", "help": "Please use the samtools sort tool to ensure a correct BAM input", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["sam", "bam"], "edam": {"edam_formats": ["format_2573", "format_2572"], "edam_data": ["data_0863", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "wide_format_cell_counts", "argument": null, "type": "boolean", "label": "Output a matrix of genes and cells, instead of a flat file", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "--wide-format-cell-counts", "falsevalue": ""}, {"model_class": "Conditional", "name": "bc", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "read_id", "inputs": [{"model_class": "TextToolParameter", "name": "umi_separator", "argument": "--umi-separator", "type": "text", "label": "Delimiter between read id and the UMI", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "_", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tag", "inputs": [{"model_class": "TextToolParameter", "name": "umi_tag", "argument": "--umi-tag", "type": "text", "label": "Tag which contains the UMI", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "RX", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "umi_tag_split", "argument": "--umi-tag-split", "type": "text", "label": "Separate the UMI in tag by SPLIT", "help": "and take the first element", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "umi_tag_delimiter", "argument": "--umi-tag-delimiter", "type": "text", "label": "Separate the UMI in tag by DELIMITER", "help": "and concatenate the elements", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "cell_tag", "argument": "--cell-tag", "type": "text", "label": "Tag which contains the cell barcode", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "cell_tag_split", "argument": "--cell-tag-split", "type": "text", "label": "Separate the cell barcode in tag by SPLIT", "help": "and take the first element", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "cell_tag_delimiter", "argument": "--cell-tag-delimiter", "type": "text", "label": "Separate the cell barcode in tag by DELIMITER", "help": "and concatenate the elements", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "umis", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "extract_umi_method", "argument": "--extract-umi-method", "type": "select", "label": "Umi Extract Method", "help": "How are the barcodes encoded in the read?", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "read_id", "options": [["Barcodes are contained at the end of the read seperated by a delimiter", "read_id", true], ["Barcodes are contained in tags", "tag", false], ["Barcodes were extracted using umis", "umis", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "umi", "type": "section", "title": "UMI grouping options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "method", "argument": "--method", "type": "select", "label": "Method used to identify PCR duplicates within reads", "help": "All methods start by identifying the reads with the same mapping position", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "unique", "options": [["Reads group share the exact same UMI", "unique", false], ["Reads group share the exact same UMI. UMIs with counts less than 1% of the median counts for UMIs at the same position are ignored", "percentile", false], ["Identify clusters based on hamming distance", "cluster", false], ["Identify clusters based on hamming distance and resolve networks by using the node counts", "adjacency", false], ["Identify clusters based on distance and counts, restrict network expansion by threshold", "directional", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "edit_distance_threshold", "argument": "--edit-distance-threshold", "type": "integer", "label": "Edit distance threshold", "help": "For the adjacency and cluster methods the threshold for the edit distance to connect two UMIs in the network can be increased. The default value of 1 works best unless the UMI is very long (>14bp)", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "spliced_is_unique", "argument": "--spliced-is-unique", "type": "boolean", "label": "Spliced reads are unique", "help": "Causes two reads that start in the same position on the same strand and having the same UMI to be considered unique if one is spliced and the other is not. (Uses the 'N' cigar operation to test for splicing)", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--spliced-is-unique", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "soft_clip_threshold", "argument": "--soft-clip-threshold", "type": "integer", "label": "Soft clip threshold", "help": "Mappers that soft clip, will sometimes do so rather than mapping a spliced read if there is only a small overhang over the exon junction. By setting this option, you can treat reads with at least this many bases soft-clipped at the 3' end as spliced", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "read_length", "argument": "--read-length", "type": "boolean", "label": "Use the read length as as a criterion when deduping", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--read-length", "falsevalue": ""}]}, {"model_class": "Section", "name": "sambam", "type": "section", "title": "SAM/BAM options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "mapping_quality", "argument": "--mapping-quality", "type": "integer", "label": "Minimum mapping quality for a read to be retained", "help": "", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "unmapped_reads", "argument": "--unmapped-reads", "type": "select", "label": "How to handle unmapped reads", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "discard", "options": [["discard", "discard", false], ["use", "use", false], ["correct", "correct", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "chimeric_pairs", "argument": "--chimeric-pairs", "type": "select", "label": "How to handle chimeric read pairs (default: use)", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["discard", "discard", false], ["use", "use", false], ["correct", "correct", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "unpaired_reads", "argument": "--unpaired-reads", "type": "select", "label": "How to handle unpaired reads (default: use)", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["discard", "discard", false], ["use", "use", false], ["correct", "correct", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "ignore_umi", "argument": "--ignore-umi", "type": "boolean", "label": "Ignore UMI and dedup only on position", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--ignore-umi", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "ignore_tlen", "argument": "--ignore-tlen", "type": "boolean", "label": "Dedup paired end reads based solely on read1", "help": "whether or not the template length is the same", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--ignore-tlen", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "chrom", "argument": "--chrom", "type": "text", "label": "Consider only chromosome", "help": "If a value is given only a single chromosome with the given name is considered", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "subset", "argument": "--subset", "type": "float", "label": "Only consider a random selection of the reads", "help": "", "help_format": "html", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "paired", "argument": "--paired", "type": "boolean", "label": "BAM is paired end", "help": "This will also force the use of the template length to determine reads with the same mapping coordinates", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--paired", "falsevalue": ""}]}, {"model_class": "Section", "name": "sc", "type": "section", "title": "Single-cell RNA-Seq options", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "gene_tag", "argument": "--gene-tag", "type": "text", "label": "Deduplicate by this gene tag", "help": "As --per-gene except here the gene information is encoded in the bam read tag specified so you do not need to supply the mapping file", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "assigned_status_tag", "argument": "--assigned-status-tag", "type": "text", "label": "Bam tag describing whether read is assigned to a gene", "help": "By default, this is set as the same tag as --gene-tag", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "skip_tags_regex", "argument": "--skip-tags-regex", "type": "text", "label": "Skip any reads where the gene matches this tag", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "per_contig", "argument": "--per-contig", "type": "boolean", "label": "Deduplicate per contig", "help": "Field 3 in BAM; RNAME. All reads with the same contig will be considered to have the same alignment position. This is useful if your library prep generates PCR duplicates with non identical alignment positions such as CEL-Seq. In this case, you would align to a reference transcriptome with one transcript per gene", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--per-contig", "falsevalue": ""}, {"model_class": "DataToolParameter", "name": "gene_transcript_map", "argument": "--gene-transcript-map", "type": "data", "label": "Tabular file mapping genes to transripts", "help": "", "help_format": "html", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "per_cell", "argument": "--per-cell", "type": "boolean", "label": "Group reads only if they have the same cell barcode", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--per-cell", "falsevalue": ""}]}, {"model_class": "Section", "name": "advanced", "type": "section", "title": "Extra parameters", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "random_seed", "argument": "--random-seed", "type": "integer", "label": "Random Seed", "help": "", "help_format": "html", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "Conditional", "name": "cond_extra", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "dataset name", "inputs": []}, {"model_class": "ConditionalWhen", "value": "string", "inputs": [{"model_class": "TextToolParameter", "name": "custom_label", "argument": null, "type": "text", "label": "Label to Prepend", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "prepender", "argument": null, "type": "select", "label": "Prepend a label to all column headers", "help": "This preserves uniqueness when merging with other files with the same headers. Note: filename must not contain a '.' character", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["No modifications", "none", true], ["Custom Label", "string", false], ["Dataset Name", "dataset name", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "log", "argument": "--log", "type": "boolean", "label": "Output log?", "help": "Choose if you want to generate a text file containing logging information", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--log", "falsevalue": ""}], "outputs": [{"model_class": "ToolOutput", "name": "out_counts", "format": "tabular", "label": null, "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "out_log", "format": "txt", "label": "${tool.name} on ${on_string}: logfile", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "fasta_fastq", "panel_section_name": "FASTA/FASTQ", "form_style": "regular"}