{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/baredsc_1d/baredsc_1d/1.1.1+galaxy0", "name": "baredSC 1d", "version": "1.1.1+galaxy0", "description": "Compute distribution for a single gene", "labels": [], "edam_operations": ["operation_2495"], "edam_topics": ["topic_3170", "topic_4028", "topic_2269"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "baredsc", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "baredsc_1d", "owner": "iuc", "changeset_revision": "02b1fe7aed76", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "input_counts", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "tabular", "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": "--input", "type": "data", "label": "Input table (with header)", "help": "Expected format is one line per cell, columns with raw counts and one column 'nCount_RNA' with the total number of UMI per cell (optionally other meta data to filter)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "anndata", "inputs": [{"model_class": "DataToolParameter", "name": "inputAnnData", "argument": "--inputAnnData", "type": "data", "label": "AnnData containing raw counts", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["anndata"], "edam": {"edam_formats": [null], "edam_data": [null]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "filetype", "argument": null, "type": "select", "label": "Input type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "tabular", "options": [["Tabular", "tabular", false], ["Anndata (for example from Scanpy)", "anndata", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "TextToolParameter", "name": "geneColName", "argument": "--geneColName", "type": "text", "label": "Name of the column with gene counts.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "filter", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "0", "inputs": []}, {"model_class": "ConditionalWhen", "value": "1", "inputs": [{"model_class": "TextToolParameter", "name": "metadata1ColName", "argument": "--metadata1ColName", "type": "text", "label": "Name of the column with first filter.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "metadata1Values", "argument": "--metadata1Values", "type": "text", "label": "Values accepted in this column (separated by comma).", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "2", "inputs": [{"model_class": "TextToolParameter", "name": "metadata1ColName", "argument": "--metadata1ColName", "type": "text", "label": "Name of the column with first filter.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "metadata1Values", "argument": "--metadata1Values", "type": "text", "label": "Values accepted in this column (separated by comma).", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "metadata2ColName", "argument": "--metadata2ColName", "type": "text", "label": "Name of the column with second filter.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "metadata2Values", "argument": "--metadata2Values", "type": "text", "label": "Values accepted in this column (separated by comma).", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "3", "inputs": [{"model_class": "TextToolParameter", "name": "metadata1ColName", "argument": "--metadata1ColName", "type": "text", "label": "Name of the column with first filter.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "metadata1Values", "argument": "--metadata1Values", "type": "text", "label": "Values accepted in this column (separated by comma).", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "metadata2ColName", "argument": "--metadata2ColName", "type": "text", "label": "Name of the column with second filter.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "metadata2Values", "argument": "--metadata2Values", "type": "text", "label": "Values accepted in this column (separated by comma).", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "metadata3ColName", "argument": "--metadata3ColName", "type": "text", "label": "Name of the column with third filter.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "metadata3Values", "argument": "--metadata3Values", "type": "text", "label": "Values accepted in this column (separated by comma).", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "nb", "argument": null, "type": "select", "label": "How many filters columns do you need?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "options": [["0 (keep all cells from file)", "0", false], ["1", "1", false], ["2", "2", false], ["3", "3", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "MCMC", "type": "section", "title": "MCMC parameters", "help": null, "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "xmin", "argument": "--xmin", "type": "float", "label": "Minimum value to consider in x axis.", "help": "Choose value small enough to go below smallest value.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "xmax", "argument": "--xmax", "type": "float", "label": "Maximum value to consider in x axis.", "help": "Choose value large enough to go above largest value.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2.5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "nx", "argument": "--nx", "type": "integer", "label": "Number of values in x to check how your evaluated PDF is compatible with the model.", "help": "Larger values will increase computing time while smaller values will decrease the resolution of your PDF.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "minScalex", "argument": "--minScalex", "type": "float", "label": "Minimal value of the scale of Gaussians on x", "help": "Cannot be smaller than max of twice the bin size of PDF evaluation and half the bin size on x axis.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "scale", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Seurat", "inputs": [{"model_class": "FloatToolParameter", "name": "targetSum", "argument": "--targetSum", "type": "float", "label": "targetSum", "help": "use 0 for the median of nRNA_Counts", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "log", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "type", "argument": null, "type": "select", "label": "Scale for gene expression", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Seurat", "options": [["Like in Seurat (log(1+targetSum*X))", "Seurat", false], ["simply log", "log", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "seed", "argument": "--seed", "type": "integer", "label": "Seed value to control randomness.", "help": "Change seed value to get new result", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "nnorm", "argument": "--nnorm", "type": "integer", "label": "Number of Gaussians to fit.", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "nsampMCMC", "argument": "--nsampMCMC", "type": "integer", "label": "Number of samplings (iterations) of MCMC.", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "automaticRestart", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "FloatToolParameter", "name": "minNeff", "argument": "--minNeff", "type": "float", "label": "Minimum number of effective samples to output result.", "help": "If the number of effective samples is below this threshold, the MCMC is automatically rerun with 10 times more samples", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "200.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "set_minNeff", "argument": null, "type": "select", "label": "Auto-rerun in case of obvious non-convergence", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["Yes (the job may never stop)", "yes", false], ["No", "no", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Section", "name": "plots", "type": "section", "title": "Customize plots", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "image_file_format", "argument": null, "type": "select", "label": "Image output format", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "png", "options": [["png", "png", false], ["svg", "svg", false], ["pdf", "pdf", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "title", "argument": "--title", "type": "text", "label": "Title to set to all figures.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "removeFirstSamples", "argument": "--removeFirstSamples", "type": "integer", "label": "Number of samples to ignore before making the plots", "help": "Use -1 to use a fourth of the number of samples", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "nsampInPlot", "argument": "--nsampInPlot", "type": "integer", "label": "Approximate number of samples to use in plots", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "prettyBins", "argument": "--prettyBins", "type": "integer", "label": "Number of bins to use in plots.", "help": "Use -1 to use the number of bins used in MCMC", "refresh_on_change": false, "min": -1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "advanced", "type": "section", "title": "Advanced parameters", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "osampx", "argument": "--osampx", "type": "integer", "label": "Oversampling factor of x values when evaluating PDF of Poisson distribution.", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "osampxpdf", "argument": "--osampxpdf", "type": "integer", "label": "Oversampling factor of x values when evaluating PDF at each step of the MCMC.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "coviscale", "argument": "--coviscale", "type": "float", "label": "Scale factor to apply to covariance of parameters to get random parameters in logevidence evaluation.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "nis", "argument": "--nis", "type": "integer", "label": "Size of sampling of random parameters in logevidence evaluation.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "burn", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "nsampBurnMCMC", "argument": "--nsampBurnMCMC", "type": "integer", "label": "Number of samplings (iterations) in the burning phase of mcmc (Set -1 for a fourth of total number of samples)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "T0BurnMCMC", "argument": "--T0BurnMCMC", "type": "float", "label": "Initial temperature in the burning phase of MCMC", "help": "", "refresh_on_change": false, "min": 1.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100.0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "custom", "argument": null, "type": "select", "label": "Custom parameters of the burning phase of MCMC", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", false], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}]}], "outputs": [{"model_class": "ToolOutputCollection", "name": "qc_plots", "format": null, "label": "${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: QC plots", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": "QC", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "baredSC_(?P<identifier_0>\\S+)\\.(?P<ext>.*)", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "other_outputs", "format": null, "label": "${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: plots and txt", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "baredSC_(?P<identifier_0>\\S+)\\.(?P<ext>.*)", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "output", "format": "npz", "label": "${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: Numpy archive", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output.npz", "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "neff", "format": "txt", "label": "${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: Neff", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/baredSC_neff.txt", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "pdf", "format": "tabular", "label": "${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: PDF with error bar", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/baredSC_pdf.txt", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "plot", "format": "png", "label": "${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: plot", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "baredSC", "edam_format": "format_3603", "edam_data": "data_2968", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "logevidence", "format": "txt", "label": "${tool.name} on $getVar('input_counts.input', 'input_counts.inputAnnData') for ${geneColName}: Log evidence", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "logevidence.txt", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "single-cell", "panel_section_name": "Single-cell", "form_style": "regular"}