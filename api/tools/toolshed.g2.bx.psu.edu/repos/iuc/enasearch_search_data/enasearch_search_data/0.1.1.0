{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/enasearch_search_data/enasearch_search_data/0.1.1.0", "name": "Search ENA data", "version": "0.1.1.0", "description": "given a query", "labels": [], "edam_operations": ["operation_3431", "operation_2422", "operation_0346", "operation_0310"], "edam_topics": ["topic_3512", "topic_0219", "topic_3511", "topic_0749"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "ena", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "enasearch_search_data", "owner": "iuc", "changeset_revision": "6e692d5a5599", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "query_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "--free_text_search", "inputs": [{"model_class": "TextToolParameter", "name": "query", "argument": "--query", "type": "text", "label": "Query", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "Conditional", "name": "res", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "noncoding_release", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["base_count", "base_count", false], ["collected_by", "collected_by", false], ["dataclass", "dataclass", false], ["first_public", "first_public", false], ["last_updated", "last_updated", false], ["location", "location", false], ["tax_division", "tax_division", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["rna_class", "rna_class", false], ["gene", "gene", false], ["gene_synonym", "gene_synonym", false], ["product", "product", false], ["anticodon", "anticodon", false], ["function", "function", false], ["locus_tag", "locus_tag", false], ["experiment", "experiment", false], ["inference", "inference", false], ["note", "note", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["organelle", "organelle", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["collection_date", "collection_date", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["topology", "topology", false], ["variety", "variety", false], ["sequence_md5", "sequence_md5", false], ["study_accession", "study_accession", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["sequence_md5", "sequence_md5", false], ["name of the person who collected the specimen", "collected_by", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["keywords associated with sequence", "keywords", false], ["cell line from which the sample was obtained", "cell_line", false], ["a structured description of non-experimental evidence", "inference", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["any comment or additional information", "note", false], ["a submitter-supplied, systematic, stable identifier for a gene and its associated features", "locus_tag", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["location of the anticodon of tRNA and the amino acid for which it codes", "anticodon", false], ["a brief description of the nature of the experimental evidence", "experiment", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["function attributed to a sequence", "function", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["name of the product associated with the feature", "product", false], ["brief sequence description", "description", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["cell type from which the sample was obtained", "cell_type", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["synonymous, replaced, obsolete or former gene symbol", "gene_synonym", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["classification of RNA", "rna_class", false], ["sequence data class", "dataclass", false], ["symbol of the gene corresponding to a sequence region", "gene", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "assembly", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["study_accession", "study_accession", false], ["sample_accession", "sample_accession", false], ["assembly_name", "assembly_name", false], ["assembly_title", "assembly_title", false], ["study_name", "study_name", false], ["study_title", "study_title", false], ["study_description", "study_description", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["strain", "strain", false], ["base_count", "base_count", false], ["assembly_level", "assembly_level", false], ["genome_representation", "genome_representation", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["genome assembly name for all live versions", "assembly_name", false], ["number of base pairs", "base_count", false], ["strain from which sample was obtained", "strain", false], ["detailed sequencing study description", "study_description", false], ["accession number", "accession", false], ["assembly level", "assembly_level", false], ["sample accession number", "sample_accession", false], ["brief genome assembly description", "assembly_title", false], ["brief sequencing study description", "study_title", false], ["whether this is a full or partial genome", "genome_representation", false], ["sequencing study name", "study_name", false], ["study accession number", "study_accession", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "sequence_release", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["base_count", "base_count", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["dataclass", "dataclass", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["last_updated", "last_updated", false], ["location", "location", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["organelle", "organelle", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tax_division", "tax_division", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["topology", "topology", false], ["variety", "variety", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["altitude", "altitude", false], ["haplotype", "haplotype", false], ["plasmid", "plasmid", false], ["study_accession", "study_accession", false], ["sequence_md5", "sequence_md5", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["sequence_md5", "sequence_md5", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["keywords associated with sequence", "keywords", false], ["name of the person who collected the specimen", "collected_by", false], ["cell line from which the sample was obtained", "cell_line", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["brief sequence description", "description", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["name of naturally occurring plasmid from which the sequence was obtained", "plasmid", false], ["sequence data class", "dataclass", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "wgs_set", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["last_updated", "last_updated", false], ["location", "location", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tax_division", "tax_division", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["variety", "variety", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["altitude", "altitude", false], ["haplotype", "haplotype", false], ["study_accession", "study_accession", false], ["set_files", "set_files", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["accession number", "accession", false], ["sex of the organism from which the sample was obtained", "sex", false], ["cell line from which the sample was obtained", "cell_line", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["brief sequence description", "description", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["name of the person who collected the specimen", "collected_by", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["keywords associated with sequence", "keywords", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "study", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["study_accession", "study_accession", false], ["secondary_study_accession", "secondary_study_accession", false], ["study_description", "study_description", false], ["study_name", "study_name", false], ["study_title", "study_title", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["strain", "strain", false], ["breed", "breed", false], ["cultivar", "cultivar", false], ["isolate", "isolate", false], ["center_name", "center_name", false], ["broker_name", "broker_name", false], ["keywords", "keywords", false], ["geo_accession", "geo_accession", false], ["last_updated", "last_updated", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["broker name", "broker_name", false], ["date when last updated", "last_updated", false], ["Submitting center", "center_name", false], ["detailed sequencing study description", "study_description", false], ["breed", "breed", false], ["individual isolate from which sample was obtained", "isolate", false], ["sequencing study name", "study_name", false], ["GEO accession", "geo_accession", false], ["strain from which sample was obtained", "strain", false], ["project accession number", "secondary_study_accession", false], ["keywords associated with sequence", "keywords", false], ["brief sequencing study description", "study_title", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["study accession number", "study_accession", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "taxon", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["tax_id", "tax_id", false], ["taxon_title", "taxon_title", false], ["scientific_name", "scientific_name", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "coding_release", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["base_count", "base_count", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["dataclass", "dataclass", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["last_updated", "last_updated", false], ["location", "location", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["organelle", "organelle", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tax_division", "tax_division", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["variety", "variety", false], ["allele", "allele", false], ["artificial_location", "artificial_location", false], ["codon_start", "codon_start", false], ["ec_number", "ec_number", false], ["exception", "exception", false], ["experiment", "experiment", false], ["function", "function", false], ["topology", "topology", false], ["gene", "gene", false], ["gene_synonym", "gene_synonym", false], ["inference", "inference", false], ["locus_tag", "locus_tag", false], ["map", "map", false], ["note", "note", false], ["old_locus_tag", "old_locus_tag", false], ["operon", "operon", false], ["partial", "partial", false], ["product", "product", false], ["protein_id", "protein_id", false], ["pseudo", "pseudo", false], ["pseudo_gene", "pseudo_gene", false], ["ribosomal_slippage", "ribosomal_slippage", false], ["standard_name", "standard_name", false], ["trans_splicing", "trans_splicing", false], ["transl_except", "transl_except", false], ["transl_table", "transl_table", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["parent_accession", "parent_accession", false], ["altitude", "altitude", false], ["haplotype", "haplotype", false], ["sequence_md5", "sequence_md5", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["name of the group of contiguous genes transcribed into a single transcript", "operon", false], ["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["a single codon translation that does not conform to genetic code", "transl_except", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["indicates exons from two RNA molecules are ligated in intermolecular reaction to form mature RNA", "trans_splicing", false], ["sex of the organism from which the sample was obtained", "sex", false], ["indicates that this feature is a pseudogene", "pseudo_gene", false], ["accepted standard name for a feature", "standard_name", false], ["name of the person who collected the specimen", "collected_by", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["cell type from which the sample was obtained", "cell_type", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["a structured description of non-experimental evidence", "inference", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["parent sequence accession number", "parent_accession", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["a submitter-supplied, systematic, stable identifier for a gene and its associated features", "locus_tag", false], ["sequence_md5", "sequence_md5", false], ["taxonomic division", "tax_division", false], ["deprecated submitter-supplied, systematic, stable identifier for a gene and its associated features", "old_locus_tag", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["Enzyme Commission number for enzyme product of sequence", "ec_number", false], ["any comment or additional information", "note", false], ["a brief description of the nature of the experimental evidence", "experiment", false], ["geographic location of isolation of the sample", "location", false], ["date that the specimen was collected", "collection_date", false], ["name of the allele for the given gene", "allele", false], ["a stable protein identifier issued by INSDC", "protein_id", false], ["differentiates between complete regions and partial ones (deprecated qualifier)", "partial", false], ["indicates location is modified to adjust for the presence of a frameshift or internal stop codon", "artificial_location", false], ["function attributed to a sequence", "function", false], ["genomic map position of feature", "map", false], ["name of the product associated with the feature", "product", false], ["brief sequence description", "description", false], ["cell line from which the sample was obtained", "cell_line", false], ["synonymous, replaced, obsolete or former gene symbol", "gene_synonym", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["indicates that the coding region cannot be translated using standard biological rules", "exception", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["the feature is non-functional", "pseudo", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["indicates the genetic code table used if other than universal genetic code table", "transl_table", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["indicates ribosomal slippage (change to an alternative reading frame) during protein translation", "ribosomal_slippage", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["keywords associated with sequence", "keywords", false], ["sequence data class", "dataclass", false], ["symbol of the gene corresponding to a sequence region", "gene", false], ["indicates the offset of the first complete codon relative to the first base of the coding feature", "codon_start", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "sample", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["secondary_sample_accession", "secondary_sample_accession", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["location", "location", false], ["mating_type", "mating_type", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["variety", "variety", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["sample_alias", "sample_alias", false], ["checklist", "checklist", false], ["center_name", "center_name", false], ["depth", "depth", false], ["elevation", "elevation", false], ["altitude", "altitude", false], ["environment_biome", "environment_biome", false], ["environment_feature", "environment_feature", false], ["environment_material", "environment_material", false], ["temperature", "temperature", false], ["salinity", "salinity", false], ["sampling_campaign", "sampling_campaign", false], ["sampling_site", "sampling_site", false], ["sampling_platform", "sampling_platform", false], ["protocol_label", "protocol_label", false], ["project_name", "project_name", false], ["host", "host", false], ["host_tax_id", "host_tax_id", false], ["host_status", "host_status", false], ["host_sex", "host_sex", false], ["submitted_host_sex", "submitted_host_sex", false], ["host_body_site", "host_body_site", false], ["host_gravidity", "host_gravidity", false], ["host_phenotype", "host_phenotype", false], ["host_genotype", "host_genotype", false], ["host_growth_conditions", "host_growth_conditions", false], ["environmental_package", "environmental_package", false], ["investigation_type", "investigation_type", false], ["experimental_factor", "experimental_factor", false], ["sample_collection", "sample_collection", false], ["sequencing_method", "sequencing_method", false], ["target_gene", "target_gene", false], ["ph", "ph", false], ["broker_name", "broker_name", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["secondary sample accession number", "secondary_sample_accession", false], ["Environment (Material)", "environment_material", false], ["physical sex of the host", "host_sex", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["Submitting center", "center_name", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["phenotype of host", "host_phenotype", false], ["the site/station where this sample was collection", "sampling_site", false], ["sequencing method used", "sequencing_method", false], ["cell line from which the sample was obtained", "cell_line", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["targeted gene or locus name for marker gene studies", "target_gene", false], ["variable aspects of the experimental design", "experimental_factor", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["Temperature (C)", "temperature", false], ["the large infrastructure from which this sample was collected", "sampling_platform", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["the study type targeted by the sequencing", "investigation_type", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["the protocol used to produce the sample", "protocol_label", false], ["geographic location of isolation of the sample", "location", false], ["genotype of host", "host_genotype", false], ["pH", "ph", false], ["broker name", "broker_name", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["name of the project within which the sequencing was organized", "project_name", false], ["Elevation (m)", "elevation", false], ["brief sequence description", "description", false], ["submitter's name for the sample", "sample_alias", false], ["checklist name (or ID)", "checklist", false], ["the activity within which this sample was collected", "sampling_campaign", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["Environment (Biome)", "environment_biome", false], ["MIGS/MIMS/MIMARKS extension for reporting (from environment where the sample was obtained)", "environmental_package", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["Environment (Feature)", "environment_feature", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["name of the person who collected the specimen", "collected_by", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["Salinity (PSU)", "salinity", false], ["condition of host (eg. diseased or healthy)", "host_status", false], ["strain from which sample was obtained", "strain", false], ["Depth (m)", "depth", false], ["NCBI taxon id of the host", "host_tax_id", false], ["name of body site from where the sample was obtained", "host_body_site", false], ["literature reference giving growth conditions of the host", "host_growth_conditions", false], ["the method or deviced employed for collecting the sample", "sample_collection", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "environmental", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["secondary_sample_accession", "secondary_sample_accession", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["marine_region", "marine_region", false], ["cultivar", "cultivar", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["first_public", "first_public", false], ["identified_by", "identified_by", false], ["isolation_source", "isolation_source", false], ["location", "location", false], ["strain", "strain", false], ["tissue_type", "tissue_type", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["sample_alias", "sample_alias", false], ["checklist", "checklist", false], ["center_name", "center_name", false], ["depth", "depth", false], ["elevation", "elevation", false], ["altitude", "altitude", false], ["environment_biome", "environment_biome", false], ["environment_feature", "environment_feature", false], ["environment_material", "environment_material", false], ["temperature", "temperature", false], ["salinity", "salinity", false], ["sampling_campaign", "sampling_campaign", false], ["sampling_site", "sampling_site", false], ["sampling_platform", "sampling_platform", false], ["protocol_label", "protocol_label", false], ["project_name", "project_name", false], ["host", "host", false], ["host_tax_id", "host_tax_id", false], ["host_status", "host_status", false], ["host_sex", "host_sex", false], ["submitted_host_sex", "submitted_host_sex", false], ["host_body_site", "host_body_site", false], ["host_gravidity", "host_gravidity", false], ["host_phenotype", "host_phenotype", false], ["host_genotype", "host_genotype", false], ["host_growth_conditions", "host_growth_conditions", false], ["environmental_package", "environmental_package", false], ["investigation_type", "investigation_type", false], ["experimental_factor", "experimental_factor", false], ["sample_collection", "sample_collection", false], ["sequencing_method", "sequencing_method", false], ["target_gene", "target_gene", false], ["ph", "ph", false], ["broker_name", "broker_name", false], ["event_label", "event_label", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["secondary sample accession number", "secondary_sample_accession", false], ["Environment (Material)", "environment_material", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["label given to sampling event", "event_label", false], ["Submitting center", "center_name", false], ["accession number", "accession", false], ["phenotype of host", "host_phenotype", false], ["cell line from which the sample was obtained", "cell_line", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["targeted gene or locus name for marker gene studies", "target_gene", false], ["variable aspects of the experimental design", "experimental_factor", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["Temperature (C)", "temperature", false], ["the large infrastructure from which this sample was collected", "sampling_platform", false], ["name of the person who collected the specimen", "collected_by", false], ["date that the specimen was collected", "collection_date", false], ["Altitude (m)", "altitude", false], ["physical sex of the host", "host_sex", false], ["the study type targeted by the sequencing", "investigation_type", false], ["geographic location of isolation of the sample", "location", false], ["genotype of host", "host_genotype", false], ["pH", "ph", false], ["broker name", "broker_name", false], ["name of the project within which the sequencing was organized", "project_name", false], ["Elevation (m)", "elevation", false], ["brief sequence description", "description", false], ["submitter's name for the sample", "sample_alias", false], ["checklist name (or ID)", "checklist", false], ["the activity within which this sample was collected", "sampling_campaign", false], ["the protocol used to produce the sample", "protocol_label", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["the site/station where this sample was collection", "sampling_site", false], ["NCBI taxon id of the host", "host_tax_id", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["Environment (Biome)", "environment_biome", false], ["MIGS/MIMS/MIMARKS extension for reporting (from environment where the sample was obtained)", "environmental_package", false], ["geographical origin of the sample as defined by the marine region", "marine_region", false], ["date when made public", "first_public", false], ["Environment (Feature)", "environment_feature", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["Salinity (PSU)", "salinity", false], ["condition of host (eg. diseased or healthy)", "host_status", false], ["strain from which sample was obtained", "strain", false], ["Depth (m)", "depth", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name of body site from where the sample was obtained", "host_body_site", false], ["literature reference giving growth conditions of the host", "host_growth_conditions", false], ["the method or deviced employed for collecting the sample", "sample_collection", false], ["sequencing method used", "sequencing_method", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "read_run", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["study_accession", "study_accession", false], ["secondary_study_accession", "secondary_study_accession", false], ["sample_accession", "sample_accession", false], ["secondary_sample_accession", "secondary_sample_accession", false], ["experiment_accession", "experiment_accession", false], ["run_accession", "run_accession", false], ["submission_accession", "submission_accession", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["instrument_platform", "instrument_platform", false], ["instrument_model", "instrument_model", false], ["library_name", "library_name", false], ["nominal_length", "nominal_length", false], ["library_layout", "library_layout", false], ["library_strategy", "library_strategy", false], ["library_source", "library_source", false], ["library_selection", "library_selection", false], ["read_count", "read_count", false], ["base_count", "base_count", false], ["center_name", "center_name", false], ["first_public", "first_public", false], ["last_updated", "last_updated", false], ["experiment_title", "experiment_title", false], ["study_title", "study_title", false], ["study_alias", "study_alias", false], ["experiment_alias", "experiment_alias", false], ["run_alias", "run_alias", false], ["fastq_bytes", "fastq_bytes", false], ["fastq_md5", "fastq_md5", false], ["fastq_ftp", "fastq_ftp", false], ["fastq_aspera", "fastq_aspera", false], ["fastq_galaxy", "fastq_galaxy", false], ["submitted_bytes", "submitted_bytes", false], ["submitted_md5", "submitted_md5", false], ["submitted_ftp", "submitted_ftp", false], ["submitted_aspera", "submitted_aspera", false], ["submitted_galaxy", "submitted_galaxy", false], ["submitted_format", "submitted_format", false], ["sra_bytes", "sra_bytes", false], ["sra_md5", "sra_md5", false], ["sra_ftp", "sra_ftp", false], ["sra_aspera", "sra_aspera", false], ["sra_galaxy", "sra_galaxy", false], ["cram_index_ftp", "cram_index_ftp", false], ["cram_index_aspera", "cram_index_aspera", false], ["cram_index_galaxy", "cram_index_galaxy", false], ["sample_alias", "sample_alias", false], ["broker_name", "broker_name", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["secondary sample accession number", "secondary_sample_accession", false], ["sequencing library name", "library_name", false], ["number of reads", "read_count", false], ["date when last updated", "last_updated", false], ["Submitting center", "center_name", false], ["submission accession number", "submission_accession", false], ["average fragmentation size of paired reads", "nominal_length", false], ["number of base pairs", "base_count", false], ["run accession number", "run_accession", false], ["method used to select or enrich the material being sequenced", "library_selection", false], ["sequencing technique intended for the library", "library_strategy", false], ["experiment accession number", "experiment_accession", false], ["submitter's name for the study", "study_alias", false], ["submitted_format", "submitted_format", false], ["broker name", "broker_name", false], ["submitter's name for the sample", "sample_alias", false], ["submitter's name for the run", "run_alias", false], ["project accession number", "secondary_study_accession", false], ["study accession number", "study_accession", false], ["sequencing library layout", "library_layout", false], ["source material being sequenced", "library_source", false], ["brief experiment title", "experiment_title", false], ["date when made public", "first_public", false], ["instrument platform used in sequencing experiment", "instrument_platform", false], ["instrument model used in sequencing experiment", "instrument_model", false], ["sample accession number", "sample_accession", false], ["submitter's name for the experiment", "experiment_alias", false], ["brief sequencing study description", "study_title", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "read_study", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["study_accession", "study_accession", false], ["secondary_study_accession", "secondary_study_accession", false], ["study_title", "study_title", false], ["study_alias", "study_alias", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["brief sequencing study description", "study_title", false], ["project accession number", "secondary_study_accession", false], ["submitter's name for the study", "study_alias", false], ["study accession number", "study_accession", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "read_experiment", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["study_accession", "study_accession", false], ["secondary_study_accession", "secondary_study_accession", false], ["experiment_accession", "experiment_accession", false], ["instrument_platform", "instrument_platform", false], ["instrument_model", "instrument_model", false], ["library_name", "library_name", false], ["library_layout", "library_layout", false], ["library_strategy", "library_strategy", false], ["library_source", "library_source", false], ["library_selection", "library_selection", false], ["experiment_title", "experiment_title", false], ["study_title", "study_title", false], ["study_alias", "study_alias", false], ["experiment_alias", "experiment_alias", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["sequencing library name", "library_name", false], ["brief sequencing study description", "study_title", false], ["instrument platform used in sequencing experiment", "instrument_platform", false], ["instrument model used in sequencing experiment", "instrument_model", false], ["submitter's name for the study", "study_alias", false], ["submitter's name for the experiment", "experiment_alias", false], ["project accession number", "secondary_study_accession", false], ["study accession number", "study_accession", false], ["method used to select or enrich the material being sequenced", "library_selection", false], ["sequencing library layout", "library_layout", false], ["sequencing technique intended for the library", "library_strategy", false], ["experiment accession number", "experiment_accession", false], ["source material being sequenced", "library_source", false], ["brief experiment title", "experiment_title", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "analysis", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["analysis_accession", "analysis_accession", false], ["study_accession", "study_accession", false], ["secondary_study_accession", "secondary_study_accession", false], ["sample_accession", "sample_accession", false], ["secondary_sample_accession", "secondary_sample_accession", false], ["analysis_title", "analysis_title", false], ["analysis_type", "analysis_type", false], ["center_name", "center_name", false], ["first_public", "first_public", false], ["last_updated", "last_updated", false], ["study_title", "study_title", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["analysis_alias", "analysis_alias", false], ["study_alias", "study_alias", false], ["submitted_bytes", "submitted_bytes", false], ["submitted_md5", "submitted_md5", false], ["submitted_ftp", "submitted_ftp", false], ["submitted_aspera", "submitted_aspera", false], ["submitted_galaxy", "submitted_galaxy", false], ["sample_alias", "sample_alias", false], ["broker_name", "broker_name", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["secondary sample accession number", "secondary_sample_accession", false], ["broker name", "broker_name", false], ["study accession number", "study_accession", false], ["date when last updated", "last_updated", false], ["date when made public", "first_public", false], ["submitter's name for the sample", "sample_alias", false], ["Submitting center", "center_name", false], ["brief sequence analysis description", "analysis_title", false], ["sample accession number", "sample_accession", false], ["analysis accession number", "analysis_accession", false], ["project accession number", "secondary_study_accession", false], ["submitter's name for the analysis", "analysis_alias", false], ["type of sequence analysis", "analysis_type", false], ["brief sequencing study description", "study_title", false], ["submitter's name for the study", "study_alias", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "sequence_update", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["base_count", "base_count", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["dataclass", "dataclass", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["last_updated", "last_updated", false], ["location", "location", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["organelle", "organelle", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tax_division", "tax_division", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["topology", "topology", false], ["variety", "variety", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["altitude", "altitude", false], ["haplotype", "haplotype", false], ["plasmid", "plasmid", false], ["study_accession", "study_accession", false], ["sequence_md5", "sequence_md5", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["sequence_md5", "sequence_md5", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["keywords associated with sequence", "keywords", false], ["name of the person who collected the specimen", "collected_by", false], ["cell line from which the sample was obtained", "cell_line", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["brief sequence description", "description", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["name of naturally occurring plasmid from which the sequence was obtained", "plasmid", false], ["sequence data class", "dataclass", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "coding_update", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["base_count", "base_count", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["dataclass", "dataclass", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["last_updated", "last_updated", false], ["location", "location", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["organelle", "organelle", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tax_division", "tax_division", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["variety", "variety", false], ["allele", "allele", false], ["artificial_location", "artificial_location", false], ["codon_start", "codon_start", false], ["ec_number", "ec_number", false], ["exception", "exception", false], ["experiment", "experiment", false], ["function", "function", false], ["topology", "topology", false], ["gene", "gene", false], ["gene_synonym", "gene_synonym", false], ["inference", "inference", false], ["locus_tag", "locus_tag", false], ["map", "map", false], ["note", "note", false], ["old_locus_tag", "old_locus_tag", false], ["operon", "operon", false], ["partial", "partial", false], ["product", "product", false], ["protein_id", "protein_id", false], ["pseudo", "pseudo", false], ["pseudo_gene", "pseudo_gene", false], ["ribosomal_slippage", "ribosomal_slippage", false], ["standard_name", "standard_name", false], ["trans_splicing", "trans_splicing", false], ["transl_except", "transl_except", false], ["transl_table", "transl_table", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["parent_accession", "parent_accession", false], ["altitude", "altitude", false], ["haplotype", "haplotype", false], ["sequence_md5", "sequence_md5", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["name of the group of contiguous genes transcribed into a single transcript", "operon", false], ["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["a single codon translation that does not conform to genetic code", "transl_except", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["indicates exons from two RNA molecules are ligated in intermolecular reaction to form mature RNA", "trans_splicing", false], ["sex of the organism from which the sample was obtained", "sex", false], ["indicates that this feature is a pseudogene", "pseudo_gene", false], ["accepted standard name for a feature", "standard_name", false], ["name of the person who collected the specimen", "collected_by", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["cell type from which the sample was obtained", "cell_type", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["a structured description of non-experimental evidence", "inference", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["parent sequence accession number", "parent_accession", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["a submitter-supplied, systematic, stable identifier for a gene and its associated features", "locus_tag", false], ["sequence_md5", "sequence_md5", false], ["taxonomic division", "tax_division", false], ["deprecated submitter-supplied, systematic, stable identifier for a gene and its associated features", "old_locus_tag", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["Enzyme Commission number for enzyme product of sequence", "ec_number", false], ["any comment or additional information", "note", false], ["a brief description of the nature of the experimental evidence", "experiment", false], ["geographic location of isolation of the sample", "location", false], ["date that the specimen was collected", "collection_date", false], ["name of the allele for the given gene", "allele", false], ["a stable protein identifier issued by INSDC", "protein_id", false], ["differentiates between complete regions and partial ones (deprecated qualifier)", "partial", false], ["indicates location is modified to adjust for the presence of a frameshift or internal stop codon", "artificial_location", false], ["function attributed to a sequence", "function", false], ["genomic map position of feature", "map", false], ["name of the product associated with the feature", "product", false], ["brief sequence description", "description", false], ["cell line from which the sample was obtained", "cell_line", false], ["synonymous, replaced, obsolete or former gene symbol", "gene_synonym", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["indicates that the coding region cannot be translated using standard biological rules", "exception", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["the feature is non-functional", "pseudo", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["indicates the genetic code table used if other than universal genetic code table", "transl_table", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["indicates ribosomal slippage (change to an alternative reading frame) during protein translation", "ribosomal_slippage", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["keywords associated with sequence", "keywords", false], ["sequence data class", "dataclass", false], ["symbol of the gene corresponding to a sequence region", "gene", false], ["indicates the offset of the first complete codon relative to the first base of the coding feature", "codon_start", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "tsa_set", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["last_updated", "last_updated", false], ["location", "location", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tax_division", "tax_division", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["variety", "variety", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["altitude", "altitude", false], ["haplotype", "haplotype", false], ["study_accession", "study_accession", false], ["set_files", "set_files", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["accession number", "accession", false], ["sex of the organism from which the sample was obtained", "sex", false], ["cell line from which the sample was obtained", "cell_line", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["brief sequence description", "description", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["name of the person who collected the specimen", "collected_by", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["keywords associated with sequence", "keywords", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "analysis_study", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["study_accession", "study_accession", false], ["secondary_study_accession", "secondary_study_accession", false], ["study_title", "study_title", false], ["study_alias", "study_alias", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["brief sequencing study description", "study_title", false], ["project accession number", "secondary_study_accession", false], ["submitter's name for the study", "study_alias", false], ["study accession number", "study_accession", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "noncoding_update", "inputs": [{"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["base_count", "base_count", false], ["collected_by", "collected_by", false], ["dataclass", "dataclass", false], ["first_public", "first_public", false], ["last_updated", "last_updated", false], ["location", "location", false], ["tax_division", "tax_division", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["rna_class", "rna_class", false], ["gene", "gene", false], ["gene_synonym", "gene_synonym", false], ["product", "product", false], ["anticodon", "anticodon", false], ["function", "function", false], ["locus_tag", "locus_tag", false], ["experiment", "experiment", false], ["inference", "inference", false], ["note", "note", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["organelle", "organelle", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["collection_date", "collection_date", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["topology", "topology", false], ["variety", "variety", false], ["sequence_md5", "sequence_md5", false], ["study_accession", "study_accession", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["sequence_md5", "sequence_md5", false], ["name of the person who collected the specimen", "collected_by", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["keywords associated with sequence", "keywords", false], ["cell line from which the sample was obtained", "cell_line", false], ["a structured description of non-experimental evidence", "inference", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["any comment or additional information", "note", false], ["a submitter-supplied, systematic, stable identifier for a gene and its associated features", "locus_tag", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["location of the anticodon of tRNA and the amino acid for which it codes", "anticodon", false], ["a brief description of the nature of the experimental evidence", "experiment", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["function attributed to a sequence", "function", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["name of the product associated with the feature", "product", false], ["brief sequence description", "description", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["cell type from which the sample was obtained", "cell_type", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["synonymous, replaced, obsolete or former gene symbol", "gene_synonym", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["classification of RNA", "rna_class", false], ["sequence data class", "dataclass", false], ["symbol of the gene corresponding to a sequence region", "gene", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "result", "argument": "--result", "type": "select", "label": "Result to return", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "noncoding_release", "options": [["Non-coding sequences (Release)", "noncoding_release", false], ["Genome assemblies", "assembly", false], ["Nucleotide sequences (Release)", "sequence_release", false], ["Genome assembly contig set", "wgs_set", false], ["Studies", "study", false], ["Taxonomic classification", "taxon", false], ["Protein-coding sequences (Release)", "coding_release", false], ["Samples", "sample", false], ["Environmental samples", "environmental", false], ["Raw reads", "read_run", false], ["Raw reads (grouped by study)", "read_study", false], ["Raw reads (grouped by experiment)", "read_experiment", false], ["Nucleotide sequence analyses from reads", "analysis", false], ["Nucleotide sequences (Update)", "sequence_update", false], ["Protein-coding sequences (Update)", "coding_update", false], ["Transcriptome assembly contig set", "tsa_set", false], ["Nucleotide sequence analyses from reads (grouped by study)", "analysis_study", false], ["Non-coding sequences (Update)", "noncoding_update", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "", "inputs": [{"model_class": "Conditional", "name": "res", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "noncoding_release", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "mol_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "last_updated", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sequence_md5", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collected_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sex", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "keywords", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_line", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "inference", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "bio_material", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "identified_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "note", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "locus_tag", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "lab_host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tax_division", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collection_date", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "specimen_voucher", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dev_stage", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolate", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "anticodon", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "experiment", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "location", "inputs": [{"model_class": "Conditional", "name": "op", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "geo_box2", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_box1", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "south-west latitude, south-west longitude, north-east latitude, north-east longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_circ", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_lat", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_south", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_point", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_north", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "geo_box2", "options": [["All locations within a box defined by a centre point and a radius in km.", "geo_box2", false], ["All locations within a box defined by the lower left (SW) and upper right (NE) points.", "geo_box1", false], ["All locations within a circle defined by a centre point and a radius in km.", "geo_circ", false], ["All locations within a latitude range given by a latitude and a radius in km.", "geo_lat", false], ["All locations south of a given latitude (inclusive).", "geo_south", false], ["An exact lat/lon position", "geo_point", false], ["All locations north of a given latitude (inclusive).", "geo_north", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "function", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "germline", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "product", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "description", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ecotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolation_source", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mating_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_lib", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cultivar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "base_count", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "topology", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_species", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environmental_sample", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "first_public", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "country", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "variety", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "gene_synonym", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "organelle", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serovar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "rna_class", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dataclass", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "gene", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "culture_collection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "mol_type", "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["sequence_md5", "sequence_md5", false], ["name of the person who collected the specimen", "collected_by", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["keywords associated with sequence", "keywords", false], ["cell line from which the sample was obtained", "cell_line", false], ["a structured description of non-experimental evidence", "inference", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["any comment or additional information", "note", false], ["a submitter-supplied, systematic, stable identifier for a gene and its associated features", "locus_tag", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["location of the anticodon of tRNA and the amino acid for which it codes", "anticodon", false], ["a brief description of the nature of the experimental evidence", "experiment", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["function attributed to a sequence", "function", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["name of the product associated with the feature", "product", false], ["brief sequence description", "description", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["cell type from which the sample was obtained", "cell_type", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["synonymous, replaced, obsolete or former gene symbol", "gene_synonym", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["classification of RNA", "rna_class", false], ["sequence data class", "dataclass", false], ["symbol of the gene corresponding to a sequence region", "gene", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["base_count", "base_count", false], ["collected_by", "collected_by", false], ["dataclass", "dataclass", false], ["first_public", "first_public", false], ["last_updated", "last_updated", false], ["location", "location", false], ["tax_division", "tax_division", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["rna_class", "rna_class", false], ["gene", "gene", false], ["gene_synonym", "gene_synonym", false], ["product", "product", false], ["anticodon", "anticodon", false], ["function", "function", false], ["locus_tag", "locus_tag", false], ["experiment", "experiment", false], ["inference", "inference", false], ["note", "note", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["organelle", "organelle", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["collection_date", "collection_date", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["topology", "topology", false], ["variety", "variety", false], ["sequence_md5", "sequence_md5", false], ["study_accession", "study_accession", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["sequence_md5", "sequence_md5", false], ["name of the person who collected the specimen", "collected_by", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["keywords associated with sequence", "keywords", false], ["cell line from which the sample was obtained", "cell_line", false], ["a structured description of non-experimental evidence", "inference", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["any comment or additional information", "note", false], ["a submitter-supplied, systematic, stable identifier for a gene and its associated features", "locus_tag", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["location of the anticodon of tRNA and the amino acid for which it codes", "anticodon", false], ["a brief description of the nature of the experimental evidence", "experiment", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["function attributed to a sequence", "function", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["name of the product associated with the feature", "product", false], ["brief sequence description", "description", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["cell type from which the sample was obtained", "cell_type", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["synonymous, replaced, obsolete or former gene symbol", "gene_synonym", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["classification of RNA", "rna_class", false], ["sequence data class", "dataclass", false], ["symbol of the gene corresponding to a sequence region", "gene", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "assembly", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "assembly_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "base_count", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_description", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "assembly_level", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sample_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "assembly_title", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_title", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "genome_representation", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "assembly_name", "options": [["genome assembly name for all live versions", "assembly_name", false], ["number of base pairs", "base_count", false], ["strain from which sample was obtained", "strain", false], ["detailed sequencing study description", "study_description", false], ["accession number", "accession", false], ["assembly level", "assembly_level", false], ["sample accession number", "sample_accession", false], ["brief genome assembly description", "assembly_title", false], ["brief sequencing study description", "study_title", false], ["whether this is a full or partial genome", "genome_representation", false], ["sequencing study name", "study_name", false], ["study accession number", "study_accession", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["study_accession", "study_accession", false], ["sample_accession", "sample_accession", false], ["assembly_name", "assembly_name", false], ["assembly_title", "assembly_title", false], ["study_name", "study_name", false], ["study_title", "study_title", false], ["study_description", "study_description", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["strain", "strain", false], ["base_count", "base_count", false], ["assembly_level", "assembly_level", false], ["genome_representation", "genome_representation", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["genome assembly name for all live versions", "assembly_name", false], ["number of base pairs", "base_count", false], ["strain from which sample was obtained", "strain", false], ["detailed sequencing study description", "study_description", false], ["accession number", "accession", false], ["assembly level", "assembly_level", false], ["sample accession number", "sample_accession", false], ["brief genome assembly description", "assembly_title", false], ["brief sequencing study description", "study_title", false], ["whether this is a full or partial genome", "genome_representation", false], ["sequencing study name", "study_name", false], ["study accession number", "study_accession", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "sequence_release", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "mol_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "last_updated", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sequence_md5", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "haplotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sex", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "keywords", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collected_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_line", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ecotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "bio_material", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "identified_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "lab_host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tax_division", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collection_date", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "specimen_voucher", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "altitude", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dev_stage", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolate", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "location", "inputs": [{"model_class": "Conditional", "name": "op", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "geo_box2", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_box1", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "south-west latitude, south-west longitude, north-east latitude, north-east longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_circ", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_lat", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_south", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_point", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_north", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "geo_box2", "options": [["All locations within a box defined by a centre point and a radius in km.", "geo_box2", false], ["All locations within a box defined by the lower left (SW) and upper right (NE) points.", "geo_box1", false], ["All locations within a circle defined by a centre point and a radius in km.", "geo_circ", false], ["All locations within a latitude range given by a latitude and a radius in km.", "geo_lat", false], ["All locations south of a given latitude (inclusive).", "geo_south", false], ["An exact lat/lon position", "geo_point", false], ["All locations north of a given latitude (inclusive).", "geo_north", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "germline", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "description", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolation_source", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mating_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_lib", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cultivar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "base_count", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "topology", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_species", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environmental_sample", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "first_public", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "country", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "variety", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "organelle", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serovar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "plasmid", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dataclass", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "culture_collection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "mol_type", "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["sequence_md5", "sequence_md5", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["keywords associated with sequence", "keywords", false], ["name of the person who collected the specimen", "collected_by", false], ["cell line from which the sample was obtained", "cell_line", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["brief sequence description", "description", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["name of naturally occurring plasmid from which the sequence was obtained", "plasmid", false], ["sequence data class", "dataclass", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["base_count", "base_count", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["dataclass", "dataclass", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["last_updated", "last_updated", false], ["location", "location", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["organelle", "organelle", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tax_division", "tax_division", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["topology", "topology", false], ["variety", "variety", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["altitude", "altitude", false], ["haplotype", "haplotype", false], ["plasmid", "plasmid", false], ["study_accession", "study_accession", false], ["sequence_md5", "sequence_md5", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["sequence_md5", "sequence_md5", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["keywords associated with sequence", "keywords", false], ["name of the person who collected the specimen", "collected_by", false], ["cell line from which the sample was obtained", "cell_line", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["brief sequence description", "description", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["name of naturally occurring plasmid from which the sequence was obtained", "plasmid", false], ["sequence data class", "dataclass", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "wgs_set", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "mol_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "last_updated", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "lab_host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "haplotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sex", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_line", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ecotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "bio_material", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "identified_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tax_division", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collection_date", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "specimen_voucher", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "altitude", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dev_stage", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolate", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "location", "inputs": [{"model_class": "Conditional", "name": "op", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "geo_box2", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_box1", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "south-west latitude, south-west longitude, north-east latitude, north-east longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_circ", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_lat", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_south", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_point", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_north", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "geo_box2", "options": [["All locations within a box defined by a centre point and a radius in km.", "geo_box2", false], ["All locations within a box defined by the lower left (SW) and upper right (NE) points.", "geo_box1", false], ["All locations within a circle defined by a centre point and a radius in km.", "geo_circ", false], ["All locations within a latitude range given by a latitude and a radius in km.", "geo_lat", false], ["All locations south of a given latitude (inclusive).", "geo_south", false], ["An exact lat/lon position", "geo_point", false], ["All locations north of a given latitude (inclusive).", "geo_north", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "germline", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "description", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_lib", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolation_source", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mating_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serovar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cultivar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collected_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_species", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "first_public", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "country", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "variety", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environmental_sample", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "tissue_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "keywords", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "culture_collection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "mol_type", "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["accession number", "accession", false], ["sex of the organism from which the sample was obtained", "sex", false], ["cell line from which the sample was obtained", "cell_line", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["brief sequence description", "description", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["name of the person who collected the specimen", "collected_by", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["keywords associated with sequence", "keywords", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["last_updated", "last_updated", false], ["location", "location", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tax_division", "tax_division", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["variety", "variety", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["altitude", "altitude", false], ["haplotype", "haplotype", false], ["study_accession", "study_accession", false], ["set_files", "set_files", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["accession number", "accession", false], ["sex of the organism from which the sample was obtained", "sex", false], ["cell line from which the sample was obtained", "cell_line", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["brief sequence description", "description", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["name of the person who collected the specimen", "collected_by", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["keywords associated with sequence", "keywords", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "study", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "broker_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "last_updated", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "center_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_description", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "breed", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolate", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "secondary_study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "keywords", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_title", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cultivar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "broker_name", "options": [["broker name", "broker_name", false], ["date when last updated", "last_updated", false], ["Submitting center", "center_name", false], ["detailed sequencing study description", "study_description", false], ["breed", "breed", false], ["individual isolate from which sample was obtained", "isolate", false], ["sequencing study name", "study_name", false], ["GEO accession", "geo_accession", false], ["strain from which sample was obtained", "strain", false], ["project accession number", "secondary_study_accession", false], ["keywords associated with sequence", "keywords", false], ["brief sequencing study description", "study_title", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["study accession number", "study_accession", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["study_accession", "study_accession", false], ["secondary_study_accession", "secondary_study_accession", false], ["study_description", "study_description", false], ["study_name", "study_name", false], ["study_title", "study_title", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["strain", "strain", false], ["breed", "breed", false], ["cultivar", "cultivar", false], ["isolate", "isolate", false], ["center_name", "center_name", false], ["broker_name", "broker_name", false], ["keywords", "keywords", false], ["geo_accession", "geo_accession", false], ["last_updated", "last_updated", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["broker name", "broker_name", false], ["date when last updated", "last_updated", false], ["Submitting center", "center_name", false], ["detailed sequencing study description", "study_description", false], ["breed", "breed", false], ["individual isolate from which sample was obtained", "isolate", false], ["sequencing study name", "study_name", false], ["GEO accession", "geo_accession", false], ["strain from which sample was obtained", "strain", false], ["project accession number", "secondary_study_accession", false], ["keywords associated with sequence", "keywords", false], ["brief sequencing study description", "study_title", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["study accession number", "study_accession", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "taxon", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "options": [], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["tax_id", "tax_id", false], ["taxon_title", "taxon_title", false], ["scientific_name", "scientific_name", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "coding_release", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "operon", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mol_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "last_updated", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "lab_host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "transl_except", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "haplotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "trans_splicing", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "sex", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pseudo_gene", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "standard_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collected_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "germline", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "cell_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "inference", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "bio_material", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "parent_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "identified_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "locus_tag", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sequence_md5", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tax_division", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "old_locus_tag", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "specimen_voucher", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "altitude", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dev_stage", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolate", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ec_number", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "note", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "experiment", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "location", "inputs": [{"model_class": "Conditional", "name": "op", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "geo_box2", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_box1", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "south-west latitude, south-west longitude, north-east latitude, north-east longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_circ", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_lat", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_south", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_point", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_north", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "geo_box2", "options": [["All locations within a box defined by a centre point and a radius in km.", "geo_box2", false], ["All locations within a box defined by the lower left (SW) and upper right (NE) points.", "geo_box1", false], ["All locations within a circle defined by a centre point and a radius in km.", "geo_circ", false], ["All locations within a latitude range given by a latitude and a radius in km.", "geo_lat", false], ["All locations south of a given latitude (inclusive).", "geo_south", false], ["An exact lat/lon position", "geo_point", false], ["All locations north of a given latitude (inclusive).", "geo_north", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "collection_date", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "allele", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "protein_id", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "partial", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "artificial_location", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "function", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "map", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "product", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "description", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_line", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "gene_synonym", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ecotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "exception", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolation_source", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mating_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_lib", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cultivar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "base_count", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "topology", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_species", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "first_public", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "country", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "variety", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pseudo", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "environmental_sample", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "transl_table", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "organelle", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ribosomal_slippage", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "serovar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "keywords", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dataclass", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "gene", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "codon_start", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "culture_collection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "operon", "options": [["name of the group of contiguous genes transcribed into a single transcript", "operon", false], ["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["a single codon translation that does not conform to genetic code", "transl_except", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["indicates exons from two RNA molecules are ligated in intermolecular reaction to form mature RNA", "trans_splicing", false], ["sex of the organism from which the sample was obtained", "sex", false], ["indicates that this feature is a pseudogene", "pseudo_gene", false], ["accepted standard name for a feature", "standard_name", false], ["name of the person who collected the specimen", "collected_by", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["cell type from which the sample was obtained", "cell_type", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["a structured description of non-experimental evidence", "inference", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["parent sequence accession number", "parent_accession", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["a submitter-supplied, systematic, stable identifier for a gene and its associated features", "locus_tag", false], ["sequence_md5", "sequence_md5", false], ["taxonomic division", "tax_division", false], ["deprecated submitter-supplied, systematic, stable identifier for a gene and its associated features", "old_locus_tag", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["Enzyme Commission number for enzyme product of sequence", "ec_number", false], ["any comment or additional information", "note", false], ["a brief description of the nature of the experimental evidence", "experiment", false], ["geographic location of isolation of the sample", "location", false], ["date that the specimen was collected", "collection_date", false], ["name of the allele for the given gene", "allele", false], ["a stable protein identifier issued by INSDC", "protein_id", false], ["differentiates between complete regions and partial ones (deprecated qualifier)", "partial", false], ["indicates location is modified to adjust for the presence of a frameshift or internal stop codon", "artificial_location", false], ["function attributed to a sequence", "function", false], ["genomic map position of feature", "map", false], ["name of the product associated with the feature", "product", false], ["brief sequence description", "description", false], ["cell line from which the sample was obtained", "cell_line", false], ["synonymous, replaced, obsolete or former gene symbol", "gene_synonym", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["indicates that the coding region cannot be translated using standard biological rules", "exception", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["the feature is non-functional", "pseudo", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["indicates the genetic code table used if other than universal genetic code table", "transl_table", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["indicates ribosomal slippage (change to an alternative reading frame) during protein translation", "ribosomal_slippage", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["keywords associated with sequence", "keywords", false], ["sequence data class", "dataclass", false], ["symbol of the gene corresponding to a sequence region", "gene", false], ["indicates the offset of the first complete codon relative to the first base of the coding feature", "codon_start", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["base_count", "base_count", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["dataclass", "dataclass", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["last_updated", "last_updated", false], ["location", "location", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["organelle", "organelle", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tax_division", "tax_division", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["variety", "variety", false], ["allele", "allele", false], ["artificial_location", "artificial_location", false], ["codon_start", "codon_start", false], ["ec_number", "ec_number", false], ["exception", "exception", false], ["experiment", "experiment", false], ["function", "function", false], ["topology", "topology", false], ["gene", "gene", false], ["gene_synonym", "gene_synonym", false], ["inference", "inference", false], ["locus_tag", "locus_tag", false], ["map", "map", false], ["note", "note", false], ["old_locus_tag", "old_locus_tag", false], ["operon", "operon", false], ["partial", "partial", false], ["product", "product", false], ["protein_id", "protein_id", false], ["pseudo", "pseudo", false], ["pseudo_gene", "pseudo_gene", false], ["ribosomal_slippage", "ribosomal_slippage", false], ["standard_name", "standard_name", false], ["trans_splicing", "trans_splicing", false], ["transl_except", "transl_except", false], ["transl_table", "transl_table", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["parent_accession", "parent_accession", false], ["altitude", "altitude", false], ["haplotype", "haplotype", false], ["sequence_md5", "sequence_md5", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["name of the group of contiguous genes transcribed into a single transcript", "operon", false], ["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["a single codon translation that does not conform to genetic code", "transl_except", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["indicates exons from two RNA molecules are ligated in intermolecular reaction to form mature RNA", "trans_splicing", false], ["sex of the organism from which the sample was obtained", "sex", false], ["indicates that this feature is a pseudogene", "pseudo_gene", false], ["accepted standard name for a feature", "standard_name", false], ["name of the person who collected the specimen", "collected_by", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["cell type from which the sample was obtained", "cell_type", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["a structured description of non-experimental evidence", "inference", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["parent sequence accession number", "parent_accession", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["a submitter-supplied, systematic, stable identifier for a gene and its associated features", "locus_tag", false], ["sequence_md5", "sequence_md5", false], ["taxonomic division", "tax_division", false], ["deprecated submitter-supplied, systematic, stable identifier for a gene and its associated features", "old_locus_tag", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["Enzyme Commission number for enzyme product of sequence", "ec_number", false], ["any comment or additional information", "note", false], ["a brief description of the nature of the experimental evidence", "experiment", false], ["geographic location of isolation of the sample", "location", false], ["date that the specimen was collected", "collection_date", false], ["name of the allele for the given gene", "allele", false], ["a stable protein identifier issued by INSDC", "protein_id", false], ["differentiates between complete regions and partial ones (deprecated qualifier)", "partial", false], ["indicates location is modified to adjust for the presence of a frameshift or internal stop codon", "artificial_location", false], ["function attributed to a sequence", "function", false], ["genomic map position of feature", "map", false], ["name of the product associated with the feature", "product", false], ["brief sequence description", "description", false], ["cell line from which the sample was obtained", "cell_line", false], ["synonymous, replaced, obsolete or former gene symbol", "gene_synonym", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["indicates that the coding region cannot be translated using standard biological rules", "exception", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["the feature is non-functional", "pseudo", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["indicates the genetic code table used if other than universal genetic code table", "transl_table", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["indicates ribosomal slippage (change to an alternative reading frame) during protein translation", "ribosomal_slippage", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["keywords associated with sequence", "keywords", false], ["sequence data class", "dataclass", false], ["symbol of the gene corresponding to a sequence region", "gene", false], ["indicates the offset of the first complete codon relative to the first base of the coding feature", "codon_start", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "sample", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "secondary_sample_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environment_material", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host_sex", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ecotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "center_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sex", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host_phenotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sampling_site", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sequencing_method", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_line", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "bio_material", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "target_gene", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "experimental_factor", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "identified_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "temperature", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sampling_platform", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "variety", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collection_date", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "specimen_voucher", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "altitude", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dev_stage", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolate", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "investigation_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serovar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "protocol_label", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "location", "inputs": [{"model_class": "Conditional", "name": "op", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "geo_box2", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_box1", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "south-west latitude, south-west longitude, north-east latitude, north-east longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_circ", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_lat", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_south", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_point", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_north", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "geo_box2", "options": [["All locations within a box defined by a centre point and a radius in km.", "geo_box2", false], ["All locations within a box defined by the lower left (SW) and upper right (NE) points.", "geo_box1", false], ["All locations within a circle defined by a centre point and a radius in km.", "geo_circ", false], ["All locations within a latitude range given by a latitude and a radius in km.", "geo_lat", false], ["All locations south of a given latitude (inclusive).", "geo_south", false], ["An exact lat/lon position", "geo_point", false], ["All locations north of a given latitude (inclusive).", "geo_north", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "host_genotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ph", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "broker_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "germline", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "project_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "elevation", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "description", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sample_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "checklist", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sampling_campaign", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolation_source", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mating_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_lib", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cultivar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environment_biome", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environmental_package", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_species", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "first_public", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environment_feature", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "country", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collected_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environmental_sample", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "salinity", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host_status", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "depth", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host_tax_id", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host_body_site", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host_growth_conditions", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sample_collection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "culture_collection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "secondary_sample_accession", "options": [["secondary sample accession number", "secondary_sample_accession", false], ["Environment (Material)", "environment_material", false], ["physical sex of the host", "host_sex", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["Submitting center", "center_name", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["phenotype of host", "host_phenotype", false], ["the site/station where this sample was collection", "sampling_site", false], ["sequencing method used", "sequencing_method", false], ["cell line from which the sample was obtained", "cell_line", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["targeted gene or locus name for marker gene studies", "target_gene", false], ["variable aspects of the experimental design", "experimental_factor", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["Temperature (C)", "temperature", false], ["the large infrastructure from which this sample was collected", "sampling_platform", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["the study type targeted by the sequencing", "investigation_type", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["the protocol used to produce the sample", "protocol_label", false], ["geographic location of isolation of the sample", "location", false], ["genotype of host", "host_genotype", false], ["pH", "ph", false], ["broker name", "broker_name", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["name of the project within which the sequencing was organized", "project_name", false], ["Elevation (m)", "elevation", false], ["brief sequence description", "description", false], ["submitter's name for the sample", "sample_alias", false], ["checklist name (or ID)", "checklist", false], ["the activity within which this sample was collected", "sampling_campaign", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["Environment (Biome)", "environment_biome", false], ["MIGS/MIMS/MIMARKS extension for reporting (from environment where the sample was obtained)", "environmental_package", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["Environment (Feature)", "environment_feature", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["name of the person who collected the specimen", "collected_by", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["Salinity (PSU)", "salinity", false], ["condition of host (eg. diseased or healthy)", "host_status", false], ["strain from which sample was obtained", "strain", false], ["Depth (m)", "depth", false], ["NCBI taxon id of the host", "host_tax_id", false], ["name of body site from where the sample was obtained", "host_body_site", false], ["literature reference giving growth conditions of the host", "host_growth_conditions", false], ["the method or deviced employed for collecting the sample", "sample_collection", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["secondary_sample_accession", "secondary_sample_accession", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["location", "location", false], ["mating_type", "mating_type", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["variety", "variety", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["sample_alias", "sample_alias", false], ["checklist", "checklist", false], ["center_name", "center_name", false], ["depth", "depth", false], ["elevation", "elevation", false], ["altitude", "altitude", false], ["environment_biome", "environment_biome", false], ["environment_feature", "environment_feature", false], ["environment_material", "environment_material", false], ["temperature", "temperature", false], ["salinity", "salinity", false], ["sampling_campaign", "sampling_campaign", false], ["sampling_site", "sampling_site", false], ["sampling_platform", "sampling_platform", false], ["protocol_label", "protocol_label", false], ["project_name", "project_name", false], ["host", "host", false], ["host_tax_id", "host_tax_id", false], ["host_status", "host_status", false], ["host_sex", "host_sex", false], ["submitted_host_sex", "submitted_host_sex", false], ["host_body_site", "host_body_site", false], ["host_gravidity", "host_gravidity", false], ["host_phenotype", "host_phenotype", false], ["host_genotype", "host_genotype", false], ["host_growth_conditions", "host_growth_conditions", false], ["environmental_package", "environmental_package", false], ["investigation_type", "investigation_type", false], ["experimental_factor", "experimental_factor", false], ["sample_collection", "sample_collection", false], ["sequencing_method", "sequencing_method", false], ["target_gene", "target_gene", false], ["ph", "ph", false], ["broker_name", "broker_name", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["secondary sample accession number", "secondary_sample_accession", false], ["Environment (Material)", "environment_material", false], ["physical sex of the host", "host_sex", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["Submitting center", "center_name", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["phenotype of host", "host_phenotype", false], ["the site/station where this sample was collection", "sampling_site", false], ["sequencing method used", "sequencing_method", false], ["cell line from which the sample was obtained", "cell_line", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["targeted gene or locus name for marker gene studies", "target_gene", false], ["variable aspects of the experimental design", "experimental_factor", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["Temperature (C)", "temperature", false], ["the large infrastructure from which this sample was collected", "sampling_platform", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["the study type targeted by the sequencing", "investigation_type", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["the protocol used to produce the sample", "protocol_label", false], ["geographic location of isolation of the sample", "location", false], ["genotype of host", "host_genotype", false], ["pH", "ph", false], ["broker name", "broker_name", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["name of the project within which the sequencing was organized", "project_name", false], ["Elevation (m)", "elevation", false], ["brief sequence description", "description", false], ["submitter's name for the sample", "sample_alias", false], ["checklist name (or ID)", "checklist", false], ["the activity within which this sample was collected", "sampling_campaign", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["Environment (Biome)", "environment_biome", false], ["MIGS/MIMS/MIMARKS extension for reporting (from environment where the sample was obtained)", "environmental_package", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["Environment (Feature)", "environment_feature", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["name of the person who collected the specimen", "collected_by", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["Salinity (PSU)", "salinity", false], ["condition of host (eg. diseased or healthy)", "host_status", false], ["strain from which sample was obtained", "strain", false], ["Depth (m)", "depth", false], ["NCBI taxon id of the host", "host_tax_id", false], ["name of body site from where the sample was obtained", "host_body_site", false], ["literature reference giving growth conditions of the host", "host_growth_conditions", false], ["the method or deviced employed for collecting the sample", "sample_collection", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "environmental", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "secondary_sample_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environment_material", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dev_stage", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "event_label", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "center_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host_phenotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_line", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "bio_material", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "target_gene", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "experimental_factor", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "identified_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "temperature", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sampling_platform", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collected_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collection_date", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "altitude", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host_sex", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "investigation_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "location", "inputs": [{"model_class": "Conditional", "name": "op", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "geo_box2", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_box1", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "south-west latitude, south-west longitude, north-east latitude, north-east longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_circ", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_lat", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_south", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_point", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_north", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "geo_box2", "options": [["All locations within a box defined by a centre point and a radius in km.", "geo_box2", false], ["All locations within a box defined by the lower left (SW) and upper right (NE) points.", "geo_box1", false], ["All locations within a circle defined by a centre point and a radius in km.", "geo_circ", false], ["All locations within a latitude range given by a latitude and a radius in km.", "geo_lat", false], ["All locations south of a given latitude (inclusive).", "geo_south", false], ["An exact lat/lon position", "geo_point", false], ["All locations north of a given latitude (inclusive).", "geo_north", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "host_genotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ph", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "broker_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "project_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "elevation", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "description", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sample_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "checklist", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sampling_campaign", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "protocol_label", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolation_source", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sampling_site", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host_tax_id", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cultivar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environment_biome", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environmental_package", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "marine_region", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "first_public", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environment_feature", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "country", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "salinity", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host_status", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "depth", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host_body_site", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host_growth_conditions", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sample_collection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sequencing_method", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "secondary_sample_accession", "options": [["secondary sample accession number", "secondary_sample_accession", false], ["Environment (Material)", "environment_material", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["label given to sampling event", "event_label", false], ["Submitting center", "center_name", false], ["accession number", "accession", false], ["phenotype of host", "host_phenotype", false], ["cell line from which the sample was obtained", "cell_line", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["targeted gene or locus name for marker gene studies", "target_gene", false], ["variable aspects of the experimental design", "experimental_factor", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["Temperature (C)", "temperature", false], ["the large infrastructure from which this sample was collected", "sampling_platform", false], ["name of the person who collected the specimen", "collected_by", false], ["date that the specimen was collected", "collection_date", false], ["Altitude (m)", "altitude", false], ["physical sex of the host", "host_sex", false], ["the study type targeted by the sequencing", "investigation_type", false], ["geographic location of isolation of the sample", "location", false], ["genotype of host", "host_genotype", false], ["pH", "ph", false], ["broker name", "broker_name", false], ["name of the project within which the sequencing was organized", "project_name", false], ["Elevation (m)", "elevation", false], ["brief sequence description", "description", false], ["submitter's name for the sample", "sample_alias", false], ["checklist name (or ID)", "checklist", false], ["the activity within which this sample was collected", "sampling_campaign", false], ["the protocol used to produce the sample", "protocol_label", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["the site/station where this sample was collection", "sampling_site", false], ["NCBI taxon id of the host", "host_tax_id", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["Environment (Biome)", "environment_biome", false], ["MIGS/MIMS/MIMARKS extension for reporting (from environment where the sample was obtained)", "environmental_package", false], ["geographical origin of the sample as defined by the marine region", "marine_region", false], ["date when made public", "first_public", false], ["Environment (Feature)", "environment_feature", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["Salinity (PSU)", "salinity", false], ["condition of host (eg. diseased or healthy)", "host_status", false], ["strain from which sample was obtained", "strain", false], ["Depth (m)", "depth", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name of body site from where the sample was obtained", "host_body_site", false], ["literature reference giving growth conditions of the host", "host_growth_conditions", false], ["the method or deviced employed for collecting the sample", "sample_collection", false], ["sequencing method used", "sequencing_method", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["secondary_sample_accession", "secondary_sample_accession", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["marine_region", "marine_region", false], ["cultivar", "cultivar", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["first_public", "first_public", false], ["identified_by", "identified_by", false], ["isolation_source", "isolation_source", false], ["location", "location", false], ["strain", "strain", false], ["tissue_type", "tissue_type", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["sample_alias", "sample_alias", false], ["checklist", "checklist", false], ["center_name", "center_name", false], ["depth", "depth", false], ["elevation", "elevation", false], ["altitude", "altitude", false], ["environment_biome", "environment_biome", false], ["environment_feature", "environment_feature", false], ["environment_material", "environment_material", false], ["temperature", "temperature", false], ["salinity", "salinity", false], ["sampling_campaign", "sampling_campaign", false], ["sampling_site", "sampling_site", false], ["sampling_platform", "sampling_platform", false], ["protocol_label", "protocol_label", false], ["project_name", "project_name", false], ["host", "host", false], ["host_tax_id", "host_tax_id", false], ["host_status", "host_status", false], ["host_sex", "host_sex", false], ["submitted_host_sex", "submitted_host_sex", false], ["host_body_site", "host_body_site", false], ["host_gravidity", "host_gravidity", false], ["host_phenotype", "host_phenotype", false], ["host_genotype", "host_genotype", false], ["host_growth_conditions", "host_growth_conditions", false], ["environmental_package", "environmental_package", false], ["investigation_type", "investigation_type", false], ["experimental_factor", "experimental_factor", false], ["sample_collection", "sample_collection", false], ["sequencing_method", "sequencing_method", false], ["target_gene", "target_gene", false], ["ph", "ph", false], ["broker_name", "broker_name", false], ["event_label", "event_label", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["secondary sample accession number", "secondary_sample_accession", false], ["Environment (Material)", "environment_material", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["label given to sampling event", "event_label", false], ["Submitting center", "center_name", false], ["accession number", "accession", false], ["phenotype of host", "host_phenotype", false], ["cell line from which the sample was obtained", "cell_line", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["targeted gene or locus name for marker gene studies", "target_gene", false], ["variable aspects of the experimental design", "experimental_factor", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["Temperature (C)", "temperature", false], ["the large infrastructure from which this sample was collected", "sampling_platform", false], ["name of the person who collected the specimen", "collected_by", false], ["date that the specimen was collected", "collection_date", false], ["Altitude (m)", "altitude", false], ["physical sex of the host", "host_sex", false], ["the study type targeted by the sequencing", "investigation_type", false], ["geographic location of isolation of the sample", "location", false], ["genotype of host", "host_genotype", false], ["pH", "ph", false], ["broker name", "broker_name", false], ["name of the project within which the sequencing was organized", "project_name", false], ["Elevation (m)", "elevation", false], ["brief sequence description", "description", false], ["submitter's name for the sample", "sample_alias", false], ["checklist name (or ID)", "checklist", false], ["the activity within which this sample was collected", "sampling_campaign", false], ["the protocol used to produce the sample", "protocol_label", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["the site/station where this sample was collection", "sampling_site", false], ["NCBI taxon id of the host", "host_tax_id", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["Environment (Biome)", "environment_biome", false], ["MIGS/MIMS/MIMARKS extension for reporting (from environment where the sample was obtained)", "environmental_package", false], ["geographical origin of the sample as defined by the marine region", "marine_region", false], ["date when made public", "first_public", false], ["Environment (Feature)", "environment_feature", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["Salinity (PSU)", "salinity", false], ["condition of host (eg. diseased or healthy)", "host_status", false], ["strain from which sample was obtained", "strain", false], ["Depth (m)", "depth", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name of body site from where the sample was obtained", "host_body_site", false], ["literature reference giving growth conditions of the host", "host_growth_conditions", false], ["the method or deviced employed for collecting the sample", "sample_collection", false], ["sequencing method used", "sequencing_method", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "read_run", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "secondary_sample_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "library_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "read_count", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "last_updated", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "center_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "submission_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "nominal_length", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "base_count", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "run_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "library_selection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "library_strategy", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "experiment_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "submitted_format", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "broker_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sample_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "run_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "secondary_study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "library_layout", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "library_source", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "experiment_title", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "first_public", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "instrument_platform", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "instrument_model", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sample_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "experiment_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_title", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "secondary_sample_accession", "options": [["secondary sample accession number", "secondary_sample_accession", false], ["sequencing library name", "library_name", false], ["number of reads", "read_count", false], ["date when last updated", "last_updated", false], ["Submitting center", "center_name", false], ["submission accession number", "submission_accession", false], ["average fragmentation size of paired reads", "nominal_length", false], ["number of base pairs", "base_count", false], ["run accession number", "run_accession", false], ["method used to select or enrich the material being sequenced", "library_selection", false], ["sequencing technique intended for the library", "library_strategy", false], ["experiment accession number", "experiment_accession", false], ["submitter's name for the study", "study_alias", false], ["submitted_format", "submitted_format", false], ["broker name", "broker_name", false], ["submitter's name for the sample", "sample_alias", false], ["submitter's name for the run", "run_alias", false], ["project accession number", "secondary_study_accession", false], ["study accession number", "study_accession", false], ["sequencing library layout", "library_layout", false], ["source material being sequenced", "library_source", false], ["brief experiment title", "experiment_title", false], ["date when made public", "first_public", false], ["instrument platform used in sequencing experiment", "instrument_platform", false], ["instrument model used in sequencing experiment", "instrument_model", false], ["sample accession number", "sample_accession", false], ["submitter's name for the experiment", "experiment_alias", false], ["brief sequencing study description", "study_title", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["study_accession", "study_accession", false], ["secondary_study_accession", "secondary_study_accession", false], ["sample_accession", "sample_accession", false], ["secondary_sample_accession", "secondary_sample_accession", false], ["experiment_accession", "experiment_accession", false], ["run_accession", "run_accession", false], ["submission_accession", "submission_accession", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["instrument_platform", "instrument_platform", false], ["instrument_model", "instrument_model", false], ["library_name", "library_name", false], ["nominal_length", "nominal_length", false], ["library_layout", "library_layout", false], ["library_strategy", "library_strategy", false], ["library_source", "library_source", false], ["library_selection", "library_selection", false], ["read_count", "read_count", false], ["base_count", "base_count", false], ["center_name", "center_name", false], ["first_public", "first_public", false], ["last_updated", "last_updated", false], ["experiment_title", "experiment_title", false], ["study_title", "study_title", false], ["study_alias", "study_alias", false], ["experiment_alias", "experiment_alias", false], ["run_alias", "run_alias", false], ["fastq_bytes", "fastq_bytes", false], ["fastq_md5", "fastq_md5", false], ["fastq_ftp", "fastq_ftp", false], ["fastq_aspera", "fastq_aspera", false], ["fastq_galaxy", "fastq_galaxy", false], ["submitted_bytes", "submitted_bytes", false], ["submitted_md5", "submitted_md5", false], ["submitted_ftp", "submitted_ftp", false], ["submitted_aspera", "submitted_aspera", false], ["submitted_galaxy", "submitted_galaxy", false], ["submitted_format", "submitted_format", false], ["sra_bytes", "sra_bytes", false], ["sra_md5", "sra_md5", false], ["sra_ftp", "sra_ftp", false], ["sra_aspera", "sra_aspera", false], ["sra_galaxy", "sra_galaxy", false], ["cram_index_ftp", "cram_index_ftp", false], ["cram_index_aspera", "cram_index_aspera", false], ["cram_index_galaxy", "cram_index_galaxy", false], ["sample_alias", "sample_alias", false], ["broker_name", "broker_name", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["secondary sample accession number", "secondary_sample_accession", false], ["sequencing library name", "library_name", false], ["number of reads", "read_count", false], ["date when last updated", "last_updated", false], ["Submitting center", "center_name", false], ["submission accession number", "submission_accession", false], ["average fragmentation size of paired reads", "nominal_length", false], ["number of base pairs", "base_count", false], ["run accession number", "run_accession", false], ["method used to select or enrich the material being sequenced", "library_selection", false], ["sequencing technique intended for the library", "library_strategy", false], ["experiment accession number", "experiment_accession", false], ["submitter's name for the study", "study_alias", false], ["submitted_format", "submitted_format", false], ["broker name", "broker_name", false], ["submitter's name for the sample", "sample_alias", false], ["submitter's name for the run", "run_alias", false], ["project accession number", "secondary_study_accession", false], ["study accession number", "study_accession", false], ["sequencing library layout", "library_layout", false], ["source material being sequenced", "library_source", false], ["brief experiment title", "experiment_title", false], ["date when made public", "first_public", false], ["instrument platform used in sequencing experiment", "instrument_platform", false], ["instrument model used in sequencing experiment", "instrument_model", false], ["sample accession number", "sample_accession", false], ["submitter's name for the experiment", "experiment_alias", false], ["brief sequencing study description", "study_title", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "read_study", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "study_title", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "secondary_study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "study_title", "options": [["brief sequencing study description", "study_title", false], ["project accession number", "secondary_study_accession", false], ["submitter's name for the study", "study_alias", false], ["study accession number", "study_accession", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["study_accession", "study_accession", false], ["secondary_study_accession", "secondary_study_accession", false], ["study_title", "study_title", false], ["study_alias", "study_alias", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["brief sequencing study description", "study_title", false], ["project accession number", "secondary_study_accession", false], ["submitter's name for the study", "study_alias", false], ["study accession number", "study_accession", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "read_experiment", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "library_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_title", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "instrument_platform", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "instrument_model", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "experiment_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "secondary_study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "library_selection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "library_layout", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "library_strategy", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "experiment_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "library_source", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "experiment_title", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "library_name", "options": [["sequencing library name", "library_name", false], ["brief sequencing study description", "study_title", false], ["instrument platform used in sequencing experiment", "instrument_platform", false], ["instrument model used in sequencing experiment", "instrument_model", false], ["submitter's name for the study", "study_alias", false], ["submitter's name for the experiment", "experiment_alias", false], ["project accession number", "secondary_study_accession", false], ["study accession number", "study_accession", false], ["method used to select or enrich the material being sequenced", "library_selection", false], ["sequencing library layout", "library_layout", false], ["sequencing technique intended for the library", "library_strategy", false], ["experiment accession number", "experiment_accession", false], ["source material being sequenced", "library_source", false], ["brief experiment title", "experiment_title", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["study_accession", "study_accession", false], ["secondary_study_accession", "secondary_study_accession", false], ["experiment_accession", "experiment_accession", false], ["instrument_platform", "instrument_platform", false], ["instrument_model", "instrument_model", false], ["library_name", "library_name", false], ["library_layout", "library_layout", false], ["library_strategy", "library_strategy", false], ["library_source", "library_source", false], ["library_selection", "library_selection", false], ["experiment_title", "experiment_title", false], ["study_title", "study_title", false], ["study_alias", "study_alias", false], ["experiment_alias", "experiment_alias", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["sequencing library name", "library_name", false], ["brief sequencing study description", "study_title", false], ["instrument platform used in sequencing experiment", "instrument_platform", false], ["instrument model used in sequencing experiment", "instrument_model", false], ["submitter's name for the study", "study_alias", false], ["submitter's name for the experiment", "experiment_alias", false], ["project accession number", "secondary_study_accession", false], ["study accession number", "study_accession", false], ["method used to select or enrich the material being sequenced", "library_selection", false], ["sequencing library layout", "library_layout", false], ["sequencing technique intended for the library", "library_strategy", false], ["experiment accession number", "experiment_accession", false], ["source material being sequenced", "library_source", false], ["brief experiment title", "experiment_title", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "analysis", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "secondary_sample_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "broker_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "last_updated", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "first_public", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sample_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "center_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "analysis_title", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sample_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "analysis_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "secondary_study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "analysis_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "analysis_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_title", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "secondary_sample_accession", "options": [["secondary sample accession number", "secondary_sample_accession", false], ["broker name", "broker_name", false], ["study accession number", "study_accession", false], ["date when last updated", "last_updated", false], ["date when made public", "first_public", false], ["submitter's name for the sample", "sample_alias", false], ["Submitting center", "center_name", false], ["brief sequence analysis description", "analysis_title", false], ["sample accession number", "sample_accession", false], ["analysis accession number", "analysis_accession", false], ["project accession number", "secondary_study_accession", false], ["submitter's name for the analysis", "analysis_alias", false], ["type of sequence analysis", "analysis_type", false], ["brief sequencing study description", "study_title", false], ["submitter's name for the study", "study_alias", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["analysis_accession", "analysis_accession", false], ["study_accession", "study_accession", false], ["secondary_study_accession", "secondary_study_accession", false], ["sample_accession", "sample_accession", false], ["secondary_sample_accession", "secondary_sample_accession", false], ["analysis_title", "analysis_title", false], ["analysis_type", "analysis_type", false], ["center_name", "center_name", false], ["first_public", "first_public", false], ["last_updated", "last_updated", false], ["study_title", "study_title", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["analysis_alias", "analysis_alias", false], ["study_alias", "study_alias", false], ["submitted_bytes", "submitted_bytes", false], ["submitted_md5", "submitted_md5", false], ["submitted_ftp", "submitted_ftp", false], ["submitted_aspera", "submitted_aspera", false], ["submitted_galaxy", "submitted_galaxy", false], ["sample_alias", "sample_alias", false], ["broker_name", "broker_name", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["secondary sample accession number", "secondary_sample_accession", false], ["broker name", "broker_name", false], ["study accession number", "study_accession", false], ["date when last updated", "last_updated", false], ["date when made public", "first_public", false], ["submitter's name for the sample", "sample_alias", false], ["Submitting center", "center_name", false], ["brief sequence analysis description", "analysis_title", false], ["sample accession number", "sample_accession", false], ["analysis accession number", "analysis_accession", false], ["project accession number", "secondary_study_accession", false], ["submitter's name for the analysis", "analysis_alias", false], ["type of sequence analysis", "analysis_type", false], ["brief sequencing study description", "study_title", false], ["submitter's name for the study", "study_alias", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "sequence_update", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "mol_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "last_updated", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sequence_md5", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "haplotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sex", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "keywords", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collected_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_line", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ecotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "bio_material", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "identified_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "lab_host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tax_division", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collection_date", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "specimen_voucher", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "altitude", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dev_stage", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolate", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "location", "inputs": [{"model_class": "Conditional", "name": "op", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "geo_box2", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_box1", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "south-west latitude, south-west longitude, north-east latitude, north-east longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_circ", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_lat", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_south", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_point", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_north", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "geo_box2", "options": [["All locations within a box defined by a centre point and a radius in km.", "geo_box2", false], ["All locations within a box defined by the lower left (SW) and upper right (NE) points.", "geo_box1", false], ["All locations within a circle defined by a centre point and a radius in km.", "geo_circ", false], ["All locations within a latitude range given by a latitude and a radius in km.", "geo_lat", false], ["All locations south of a given latitude (inclusive).", "geo_south", false], ["An exact lat/lon position", "geo_point", false], ["All locations north of a given latitude (inclusive).", "geo_north", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "germline", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "description", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolation_source", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mating_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_lib", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cultivar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "base_count", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "topology", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_species", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environmental_sample", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "first_public", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "country", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "variety", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "organelle", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serovar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "plasmid", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dataclass", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "culture_collection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "mol_type", "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["sequence_md5", "sequence_md5", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["keywords associated with sequence", "keywords", false], ["name of the person who collected the specimen", "collected_by", false], ["cell line from which the sample was obtained", "cell_line", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["brief sequence description", "description", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["name of naturally occurring plasmid from which the sequence was obtained", "plasmid", false], ["sequence data class", "dataclass", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["base_count", "base_count", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["dataclass", "dataclass", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["last_updated", "last_updated", false], ["location", "location", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["organelle", "organelle", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tax_division", "tax_division", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["topology", "topology", false], ["variety", "variety", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["altitude", "altitude", false], ["haplotype", "haplotype", false], ["plasmid", "plasmid", false], ["study_accession", "study_accession", false], ["sequence_md5", "sequence_md5", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["sequence_md5", "sequence_md5", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["keywords associated with sequence", "keywords", false], ["name of the person who collected the specimen", "collected_by", false], ["cell line from which the sample was obtained", "cell_line", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["brief sequence description", "description", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["name of naturally occurring plasmid from which the sequence was obtained", "plasmid", false], ["sequence data class", "dataclass", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "coding_update", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "operon", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mol_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "last_updated", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "lab_host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "transl_except", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "haplotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "trans_splicing", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "sex", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pseudo_gene", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "standard_name", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collected_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "germline", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "cell_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "inference", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "bio_material", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "parent_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "identified_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "locus_tag", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sequence_md5", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tax_division", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "old_locus_tag", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "specimen_voucher", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "altitude", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dev_stage", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolate", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ec_number", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "note", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "experiment", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "location", "inputs": [{"model_class": "Conditional", "name": "op", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "geo_box2", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_box1", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "south-west latitude, south-west longitude, north-east latitude, north-east longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_circ", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_lat", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_south", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_point", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_north", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "geo_box2", "options": [["All locations within a box defined by a centre point and a radius in km.", "geo_box2", false], ["All locations within a box defined by the lower left (SW) and upper right (NE) points.", "geo_box1", false], ["All locations within a circle defined by a centre point and a radius in km.", "geo_circ", false], ["All locations within a latitude range given by a latitude and a radius in km.", "geo_lat", false], ["All locations south of a given latitude (inclusive).", "geo_south", false], ["An exact lat/lon position", "geo_point", false], ["All locations north of a given latitude (inclusive).", "geo_north", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "collection_date", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "allele", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "protein_id", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "partial", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "artificial_location", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "function", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "map", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "product", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "description", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_line", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "gene_synonym", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ecotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "exception", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolation_source", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mating_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_lib", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cultivar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "base_count", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "topology", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_species", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "first_public", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "country", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "variety", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pseudo", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "environmental_sample", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "transl_table", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "organelle", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ribosomal_slippage", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "serovar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "keywords", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dataclass", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "gene", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "codon_start", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "culture_collection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "operon", "options": [["name of the group of contiguous genes transcribed into a single transcript", "operon", false], ["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["a single codon translation that does not conform to genetic code", "transl_except", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["indicates exons from two RNA molecules are ligated in intermolecular reaction to form mature RNA", "trans_splicing", false], ["sex of the organism from which the sample was obtained", "sex", false], ["indicates that this feature is a pseudogene", "pseudo_gene", false], ["accepted standard name for a feature", "standard_name", false], ["name of the person who collected the specimen", "collected_by", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["cell type from which the sample was obtained", "cell_type", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["a structured description of non-experimental evidence", "inference", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["parent sequence accession number", "parent_accession", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["a submitter-supplied, systematic, stable identifier for a gene and its associated features", "locus_tag", false], ["sequence_md5", "sequence_md5", false], ["taxonomic division", "tax_division", false], ["deprecated submitter-supplied, systematic, stable identifier for a gene and its associated features", "old_locus_tag", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["Enzyme Commission number for enzyme product of sequence", "ec_number", false], ["any comment or additional information", "note", false], ["a brief description of the nature of the experimental evidence", "experiment", false], ["geographic location of isolation of the sample", "location", false], ["date that the specimen was collected", "collection_date", false], ["name of the allele for the given gene", "allele", false], ["a stable protein identifier issued by INSDC", "protein_id", false], ["differentiates between complete regions and partial ones (deprecated qualifier)", "partial", false], ["indicates location is modified to adjust for the presence of a frameshift or internal stop codon", "artificial_location", false], ["function attributed to a sequence", "function", false], ["genomic map position of feature", "map", false], ["name of the product associated with the feature", "product", false], ["brief sequence description", "description", false], ["cell line from which the sample was obtained", "cell_line", false], ["synonymous, replaced, obsolete or former gene symbol", "gene_synonym", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["indicates that the coding region cannot be translated using standard biological rules", "exception", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["the feature is non-functional", "pseudo", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["indicates the genetic code table used if other than universal genetic code table", "transl_table", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["indicates ribosomal slippage (change to an alternative reading frame) during protein translation", "ribosomal_slippage", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["keywords associated with sequence", "keywords", false], ["sequence data class", "dataclass", false], ["symbol of the gene corresponding to a sequence region", "gene", false], ["indicates the offset of the first complete codon relative to the first base of the coding feature", "codon_start", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["base_count", "base_count", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["dataclass", "dataclass", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["last_updated", "last_updated", false], ["location", "location", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["organelle", "organelle", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tax_division", "tax_division", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["variety", "variety", false], ["allele", "allele", false], ["artificial_location", "artificial_location", false], ["codon_start", "codon_start", false], ["ec_number", "ec_number", false], ["exception", "exception", false], ["experiment", "experiment", false], ["function", "function", false], ["topology", "topology", false], ["gene", "gene", false], ["gene_synonym", "gene_synonym", false], ["inference", "inference", false], ["locus_tag", "locus_tag", false], ["map", "map", false], ["note", "note", false], ["old_locus_tag", "old_locus_tag", false], ["operon", "operon", false], ["partial", "partial", false], ["product", "product", false], ["protein_id", "protein_id", false], ["pseudo", "pseudo", false], ["pseudo_gene", "pseudo_gene", false], ["ribosomal_slippage", "ribosomal_slippage", false], ["standard_name", "standard_name", false], ["trans_splicing", "trans_splicing", false], ["transl_except", "transl_except", false], ["transl_table", "transl_table", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["parent_accession", "parent_accession", false], ["altitude", "altitude", false], ["haplotype", "haplotype", false], ["sequence_md5", "sequence_md5", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["name of the group of contiguous genes transcribed into a single transcript", "operon", false], ["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["a single codon translation that does not conform to genetic code", "transl_except", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["indicates exons from two RNA molecules are ligated in intermolecular reaction to form mature RNA", "trans_splicing", false], ["sex of the organism from which the sample was obtained", "sex", false], ["indicates that this feature is a pseudogene", "pseudo_gene", false], ["accepted standard name for a feature", "standard_name", false], ["name of the person who collected the specimen", "collected_by", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["cell type from which the sample was obtained", "cell_type", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["a structured description of non-experimental evidence", "inference", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["parent sequence accession number", "parent_accession", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["a submitter-supplied, systematic, stable identifier for a gene and its associated features", "locus_tag", false], ["sequence_md5", "sequence_md5", false], ["taxonomic division", "tax_division", false], ["deprecated submitter-supplied, systematic, stable identifier for a gene and its associated features", "old_locus_tag", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["Enzyme Commission number for enzyme product of sequence", "ec_number", false], ["any comment or additional information", "note", false], ["a brief description of the nature of the experimental evidence", "experiment", false], ["geographic location of isolation of the sample", "location", false], ["date that the specimen was collected", "collection_date", false], ["name of the allele for the given gene", "allele", false], ["a stable protein identifier issued by INSDC", "protein_id", false], ["differentiates between complete regions and partial ones (deprecated qualifier)", "partial", false], ["indicates location is modified to adjust for the presence of a frameshift or internal stop codon", "artificial_location", false], ["function attributed to a sequence", "function", false], ["genomic map position of feature", "map", false], ["name of the product associated with the feature", "product", false], ["brief sequence description", "description", false], ["cell line from which the sample was obtained", "cell_line", false], ["synonymous, replaced, obsolete or former gene symbol", "gene_synonym", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["indicates that the coding region cannot be translated using standard biological rules", "exception", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["the feature is non-functional", "pseudo", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["indicates the genetic code table used if other than universal genetic code table", "transl_table", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["indicates ribosomal slippage (change to an alternative reading frame) during protein translation", "ribosomal_slippage", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["keywords associated with sequence", "keywords", false], ["sequence data class", "dataclass", false], ["symbol of the gene corresponding to a sequence region", "gene", false], ["indicates the offset of the first complete codon relative to the first base of the coding feature", "codon_start", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "tsa_set", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "mol_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "last_updated", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "lab_host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "haplotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sex", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_line", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ecotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "bio_material", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "identified_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tax_division", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collection_date", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "specimen_voucher", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "altitude", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dev_stage", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolate", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "location", "inputs": [{"model_class": "Conditional", "name": "op", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "geo_box2", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_box1", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "south-west latitude, south-west longitude, north-east latitude, north-east longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_circ", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_lat", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_south", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_point", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_north", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "geo_box2", "options": [["All locations within a box defined by a centre point and a radius in km.", "geo_box2", false], ["All locations within a box defined by the lower left (SW) and upper right (NE) points.", "geo_box1", false], ["All locations within a circle defined by a centre point and a radius in km.", "geo_circ", false], ["All locations within a latitude range given by a latitude and a radius in km.", "geo_lat", false], ["All locations south of a given latitude (inclusive).", "geo_south", false], ["An exact lat/lon position", "geo_point", false], ["All locations north of a given latitude (inclusive).", "geo_north", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "germline", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "description", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_lib", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolation_source", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mating_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serovar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cultivar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collected_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_species", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "first_public", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "country", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "variety", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environmental_sample", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "tissue_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "keywords", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "culture_collection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "mol_type", "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["accession number", "accession", false], ["sex of the organism from which the sample was obtained", "sex", false], ["cell line from which the sample was obtained", "cell_line", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["brief sequence description", "description", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["name of the person who collected the specimen", "collected_by", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["keywords associated with sequence", "keywords", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["collected_by", "collected_by", false], ["collection_date", "collection_date", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["first_public", "first_public", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["last_updated", "last_updated", false], ["location", "location", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tax_division", "tax_division", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["variety", "variety", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["altitude", "altitude", false], ["haplotype", "haplotype", false], ["study_accession", "study_accession", false], ["set_files", "set_files", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["combination of alleles that are linked together on the same physical chromosome", "haplotype", false], ["accession number", "accession", false], ["sex of the organism from which the sample was obtained", "sex", false], ["cell line from which the sample was obtained", "cell_line", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["cell type from which the sample was obtained", "cell_type", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["Altitude (m)", "altitude", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["brief sequence description", "description", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["name of the person who collected the specimen", "collected_by", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["keywords associated with sequence", "keywords", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "analysis_study", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "study_title", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "secondary_study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_alias", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "study_title", "options": [["brief sequencing study description", "study_title", false], ["project accession number", "secondary_study_accession", false], ["submitter's name for the study", "study_alias", false], ["study accession number", "study_accession", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["study_accession", "study_accession", false], ["secondary_study_accession", "secondary_study_accession", false], ["study_title", "study_title", false], ["study_alias", "study_alias", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["brief sequencing study description", "study_title", false], ["project accession number", "secondary_study_accession", false], ["submitter's name for the study", "study_alias", false], ["study accession number", "study_accession", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "noncoding_update", "inputs": [{"model_class": "Repeat", "name": "queries", "type": "repeat", "title": "Add a query", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "combination_operation", "argument": null, "type": "select", "label": "Combination operation", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AND", "options": [["AND", "AND", false], ["OR", "OR", false], ["NOT", "NOT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_field", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "mol_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "last_updated", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sequence_md5", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collected_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sex", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "keywords", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_line", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "inference", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "bio_material", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "identified_by", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "note", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "locus_tag", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "lab_host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tax_division", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "collection_date", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "specimen_voucher", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dev_stage", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolate", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "anticodon", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "experiment", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "location", "inputs": [{"model_class": "Conditional", "name": "op", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "geo_box2", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_box1", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "south-west latitude, south-west longitude, north-east latitude, north-east longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_circ", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_lat", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, radius (km)", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_south", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_point", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude, longitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "geo_north", "inputs": [{"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "latitude", "help": "Values separated by simple comma", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "geo_box2", "options": [["All locations within a box defined by a centre point and a radius in km.", "geo_box2", false], ["All locations within a box defined by the lower left (SW) and upper right (NE) points.", "geo_box1", false], ["All locations within a circle defined by a centre point and a radius in km.", "geo_circ", false], ["All locations within a latitude range given by a latitude and a radius in km.", "geo_lat", false], ["All locations south of a given latitude (inclusive).", "geo_south", false], ["An exact lat/lon position", "geo_point", false], ["All locations north of a given latitude (inclusive).", "geo_north", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "study_accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "function", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "germline", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "product", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "description", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ecotype", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cell_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "accession", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "isolation_source", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mating_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_type", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tissue_lib", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "cultivar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "base_count", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Any integer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "topology", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sub_species", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "environmental_sample", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "value", "argument": null, "type": "select", "label": "Value", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["true", "true", false], ["no", "no", false], ["false", "false", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "first_public", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false], ["lower", "lower", false], ["equal or lower", "equal or lower", false], ["higher", "higher", false], ["equal or higher", "equal or higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A date in the format YYYY-MM-DD", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "strain", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "country", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "variety", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "host", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "gene_synonym", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "organelle", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "serovar", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "rna_class", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "dataclass", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "A text value from the controlled vocabulary enclosed in         double quotes", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "gene", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "culture_collection", "inputs": [{"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operator", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "equal", "options": [["equal", "equal", false], ["different", "different", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "value", "argument": null, "type": "text", "label": "Any text value enclosed in double quotes. Wildcard (*) can         be used at the start and/or end of the text value.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "field", "argument": null, "type": "select", "label": "Field to query", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "mol_type", "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["sequence_md5", "sequence_md5", false], ["name of the person who collected the specimen", "collected_by", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["keywords associated with sequence", "keywords", false], ["cell line from which the sample was obtained", "cell_line", false], ["a structured description of non-experimental evidence", "inference", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["any comment or additional information", "note", false], ["a submitter-supplied, systematic, stable identifier for a gene and its associated features", "locus_tag", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["location of the anticodon of tRNA and the amino acid for which it codes", "anticodon", false], ["a brief description of the nature of the experimental evidence", "experiment", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["function attributed to a sequence", "function", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["name of the product associated with the feature", "product", false], ["brief sequence description", "description", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["cell type from which the sample was obtained", "cell_type", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["synonymous, replaced, obsolete or former gene symbol", "gene_synonym", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["classification of RNA", "rna_class", false], ["sequence data class", "dataclass", false], ["symbol of the gene corresponding to a sequence region", "gene", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "display_opt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "xml", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "html", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "report", "inputs": [{"model_class": "IntegerToolParameter", "name": "offset", "argument": "--offset", "type": "integer", "label": "First record to get", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Number of records to retrieve", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fields", "argument": "--fields", "type": "select", "label": "Fields to return", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["accession", "accession", false], ["base_count", "base_count", false], ["collected_by", "collected_by", false], ["dataclass", "dataclass", false], ["first_public", "first_public", false], ["last_updated", "last_updated", false], ["location", "location", false], ["tax_division", "tax_division", false], ["tax_id", "tax_id", false], ["scientific_name", "scientific_name", false], ["rna_class", "rna_class", false], ["gene", "gene", false], ["gene_synonym", "gene_synonym", false], ["product", "product", false], ["anticodon", "anticodon", false], ["function", "function", false], ["locus_tag", "locus_tag", false], ["experiment", "experiment", false], ["inference", "inference", false], ["note", "note", false], ["bio_material", "bio_material", false], ["cell_line", "cell_line", false], ["cell_type", "cell_type", false], ["country", "country", false], ["cultivar", "cultivar", false], ["culture_collection", "culture_collection", false], ["description", "description", false], ["dev_stage", "dev_stage", false], ["ecotype", "ecotype", false], ["environmental_sample", "environmental_sample", false], ["germline", "germline", false], ["host", "host", false], ["identified_by", "identified_by", false], ["isolate", "isolate", false], ["isolation_source", "isolation_source", false], ["keywords", "keywords", false], ["lab_host", "lab_host", false], ["mating_type", "mating_type", false], ["mol_type", "mol_type", false], ["organelle", "organelle", false], ["serotype", "serotype", false], ["serovar", "serovar", false], ["sex", "sex", false], ["collection_date", "collection_date", false], ["submitted_sex", "submitted_sex", false], ["specimen_voucher", "specimen_voucher", false], ["strain", "strain", false], ["sub_species", "sub_species", false], ["sub_strain", "sub_strain", false], ["tissue_lib", "tissue_lib", false], ["tissue_type", "tissue_type", false], ["topology", "topology", false], ["variety", "variety", false], ["sequence_md5", "sequence_md5", false], ["study_accession", "study_accession", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortfields", "argument": "--sortfields", "type": "select", "label": "Fields to sort the results", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["in vivo molecule type of the sequence", "mol_type", false], ["date when last updated", "last_updated", false], ["sequence_md5", "sequence_md5", false], ["name of the person who collected the specimen", "collected_by", false], ["serological variety of a species characterized by its antigenic properties", "serotype", false], ["sex of the organism from which the sample was obtained", "sex", false], ["keywords associated with sequence", "keywords", false], ["cell line from which the sample was obtained", "cell_line", false], ["a structured description of non-experimental evidence", "inference", false], ["identifier for biological material including institute and collection code", "bio_material", false], ["name of the taxonomist who identified the specimen", "identified_by", false], ["any comment or additional information", "note", false], ["a submitter-supplied, systematic, stable identifier for a gene and its associated features", "locus_tag", false], ["scientific name of the laboratory host used to propagate the source organism for the sample", "lab_host", false], ["taxonomic division", "tax_division", false], ["date that the specimen was collected", "collection_date", false], ["identifier for the sample culture including institute and collection code", "specimen_voucher", false], ["sample obtained from an organism in a specific developmental stage", "dev_stage", false], ["individual isolate from which sample was obtained", "isolate", false], ["location of the anticodon of tRNA and the amino acid for which it codes", "anticodon", false], ["a brief description of the nature of the experimental evidence", "experiment", false], ["geographic location of isolation of the sample", "location", false], ["study accession number", "study_accession", false], ["function attributed to a sequence", "function", false], ["the sample is an unrearranged molecule that was inherited from the parental germline", "germline", false], ["name of the product associated with the feature", "product", false], ["brief sequence description", "description", false], ["a population within a given species displaying traits that reflect adaptation to a local habitat", "ecotype", false], ["cell type from which the sample was obtained", "cell_type", false], ["accession number", "accession", false], ["describes the physical, environmental and/or local geographical source of the sample", "isolation_source", false], ["mating type of the organism from which the sequence was obtained", "mating_type", false], ["tissue type from which the sample was obtained", "tissue_type", false], ["name or identifier of a genetically or otherwise modified strain from which sample was obtained", "sub_strain", false], ["tissue library from which sample was obtained", "tissue_lib", false], ["cultivar (cultivated variety) of plant from which sample was obtained", "cultivar", false], ["number of base pairs", "base_count", false], ["sequence topology: circular or linear", "topology", false], ["name of sub-species of organism from which sample was obtained", "sub_species", false], ["identifies sequences derived by direct molecular isolation from an environmental DNA sample", "environmental_sample", false], ["date when made public", "first_public", false], ["strain from which sample was obtained", "strain", false], ["locality of sample isolation: country names, oceans or seas, followed by regions and localities", "country", false], ["variety (varietas, a formal Linnaean rank) of organism from which sample was derived", "variety", false], ["natural (as opposed to laboratory) host to the organism from which sample was obtained", "host", false], ["synonymous, replaced, obsolete or former gene symbol", "gene_synonym", false], ["membrane-bound intracellular structure from which the sequence was obtained", "organelle", false], ["serological variety of a species (usually a prokaryote) characterized by its antigenic properties", "serovar", false], ["classification of RNA", "rna_class", false], ["sequence data class", "dataclass", false], ["symbol of the gene corresponding to a sequence region", "gene", false], ["identifier for the sample culture including institute and collection code", "culture_collection", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "fasta", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "display", "argument": "--display", "type": "select", "label": "Display option to specify the display format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "xml", "options": [["Results are displayed in XML format. Supported by all ENA data classes.", "xml", false], ["Results are displayed in text format. Supported only by assembled and annotated sequence data classes.", "text", false], ["Results are displayed in fastq format. Supported only by Trace data class.", "fastq", false], ["Results are displayed in HTML format. Supported by all ENA data classes. HTML is the default display format if no other display option has been specified.", "html", false], ["Results are displayed as a tab separated report", "report", false], ["Results are displayed in fasta format. Supported by assembled and annotated sequence and Trace data classes.", "fasta", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "result", "argument": "--result", "type": "select", "label": "Result to return", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "noncoding_release", "options": [["Non-coding sequences (Release)", "noncoding_release", false], ["Genome assemblies", "assembly", false], ["Nucleotide sequences (Release)", "sequence_release", false], ["Genome assembly contig set", "wgs_set", false], ["Studies", "study", false], ["Taxonomic classification", "taxon", false], ["Protein-coding sequences (Release)", "coding_release", false], ["Samples", "sample", false], ["Environmental samples", "environmental", false], ["Raw reads", "read_run", false], ["Raw reads (grouped by study)", "read_study", false], ["Raw reads (grouped by experiment)", "read_experiment", false], ["Nucleotide sequence analyses from reads", "analysis", false], ["Nucleotide sequences (Update)", "sequence_update", false], ["Protein-coding sequences (Update)", "coding_update", false], ["Transcriptome assembly contig set", "tsa_set", false], ["Nucleotide sequence analyses from reads (grouped by study)", "analysis_study", false], ["Non-coding sequences (Update)", "noncoding_update", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "free_text_search", "argument": "--free_text_search", "type": "select", "label": "Use free text search?", "help": "If not, the ENA data warehouse is used", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "--free_text_search", "options": [["Yes", "--free_text_search", false], ["False", "", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "output", "format": "tabular", "label": "${tool.name}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "get_data", "panel_section_name": "Get Data", "form_style": "regular"}