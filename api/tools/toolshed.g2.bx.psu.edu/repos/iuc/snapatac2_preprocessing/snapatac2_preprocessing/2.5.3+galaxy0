{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/snapatac2_preprocessing/snapatac2_preprocessing/2.5.3+galaxy0", "name": "SnapATAC2 Preprocessing", "version": "2.5.3+galaxy0", "description": "and integration", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "snapatac2_preprocessing", "owner": "iuc", "changeset_revision": "00a6721e1f81", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "method", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "pp.make_fragment_file", "inputs": [{"model_class": "DataToolParameter", "name": "bam_file", "argument": "bam_file", "type": "data", "label": "File name of the BAM file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam"], "edam": {"edam_formats": ["format_2572"], "edam_data": ["data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "is_paired", "argument": "is_paired", "type": "boolean", "label": "Indicate whether the BAM file contain paired-end reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}, {"model_class": "Conditional", "name": "barcode", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "from_tag", "inputs": [{"model_class": "TextToolParameter", "name": "barcode_tag", "argument": "barcode_tag", "type": "text", "label": "Extract barcodes from TAG fields of BAM records", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "CB", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "from_read_names", "inputs": [{"model_class": "TextToolParameter", "name": "barcode_regex", "argument": "barcode_regex", "type": "text", "label": "Extract barcodes from read names of BAM records using regular expressions", "help": "`(..:..:..:..):w+$` extracts `bd:69:Y6:10` from `A01535:24:HW2MMDSX2:2:1359:8513:3458:bd:69:Y6:10:TGATAGGTT``", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "extract_type", "argument": null, "type": "select", "label": "How to extract barcodes from BAM records?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "from_tag", "options": [["From TAG fileds", "from_tag", false], ["From read names using regular expressions", "from_read_names", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "TextToolParameter", "name": "umi_tag", "argument": "umi_tag", "type": "text", "label": "Extract UMI from TAG fields of BAM records", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "umi_regex", "argument": "umi_regex", "type": "text", "label": "Extract UMI from read names of BAM records using regular expressions", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "shift_left", "argument": "shift_left", "type": "integer", "label": "Insertion site correction for the left end", "help": "Note this has no effect on single-end reads", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "shift_right", "argument": "shift_right", "type": "integer", "label": "Insertion site correction for the right end", "help": "Note this has no effect on single-end reads", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_mapq", "argument": "min_mapq", "type": "integer", "label": "Filter the reads based on MAPQ", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "30", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "chunk_size", "argument": "chunk_size", "type": "integer", "label": "chunk size", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50000000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pp.import_data", "inputs": [{"model_class": "DataToolParameter", "name": "fragment_file", "argument": "fragment_file", "type": "data", "label": "Fragment file, optionally compressed with gzip or zstd", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["interval"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "chrom_sizes", "argument": "chrom_sizes", "type": "data", "label": "A tabular file containing chromosome names and sizes", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "min_num_fragments", "argument": "min_num_fragments", "type": "integer", "label": "Number of unique fragments threshold used to filter cells", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "200", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "sorted_by_barcode", "argument": "sorted_by_barcode", "type": "boolean", "label": "Whether the fragment file has been sorted by cell barcodes", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}, {"model_class": "DataToolParameter", "name": "whitelist", "argument": "whitelist", "type": "data", "label": "Whitelist file with a list of barcodes", "help": "Each line must contain a valid barcode. When provided, only barcodes in the whitelist will be retained.", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "chrM", "argument": "chrM", "type": "text", "label": "A list of chromosome names that are considered mitochondrial DNA", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "chrM, M", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "shift_left", "argument": "shift_left", "type": "integer", "label": "Insertion site correction for the left end", "help": "Note this has no effect on single-end reads", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "shift_right", "argument": "shift_right", "type": "integer", "label": "Insertion site correction for the right end", "help": "Note this has no effect on single-end reads", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "chunk_size", "argument": "chunk_size", "type": "integer", "label": "chunk size", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pp.add_tile_matrix", "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "bin_size", "argument": "bin_size", "type": "integer", "label": "The size of consecutive genomic regions used to record the counts", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "chunk_size", "argument": "chunk_size", "type": "integer", "label": "chunk size", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "exclude_chroms", "argument": "exclude_chroms", "type": "text", "label": "A list of chromosomes to exclude", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "chrM, chrY, M, Y", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_frag_size", "argument": "min_frag_size", "type": "integer", "label": "Minimum fragment size to include", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_frag_size", "argument": "max_frag_size", "type": "integer", "label": "Maximum fragment size to include", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "count_frag_as_reads", "argument": "count_frag_as_reads", "type": "boolean", "label": "Whether to count fragments as reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}]}, {"model_class": "ConditionalWhen", "value": "pp.make_gene_matrix", "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "gene_anno", "argument": "gene_anno", "type": "data", "label": "GTF/GFF file containing the gene annotation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gtf", "gff3"], "edam": {"edam_formats": ["format_2306", "format_1975"], "edam_data": ["data_1255", "data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "chunk_size", "argument": "chunk_size", "type": "integer", "label": "chunk size", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "use_x", "argument": "use_x", "type": "boolean", "label": "If True, use the matrix stored in .X as raw counts", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "SelectToolParameter", "name": "id_type", "argument": "id_type", "type": "select", "label": "Id type, 'gene' or 'transcript'", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "gene", "options": [["gene", "gene", true], ["transcript", "transcript", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "transcript_name_key", "argument": "transcript_name_key", "type": "text", "label": "The key of the transcript name in the gene annotation file", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "transcript_name", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "transcript_id_key", "argument": "transcript_id_key", "type": "text", "label": "The key of the transcript id in the gene annotation file", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "transcript_id", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "gene_name_key", "argument": "gene_name_key", "type": "text", "label": "The key of the gene name in the gene annotation file", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "gene_name", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "gene_id_key", "argument": "gene_id_key", "type": "text", "label": "The key of the gene id in the gene annotation file", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "gene_id", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_frag_size", "argument": "min_frag_size", "type": "integer", "label": "Minimum fragment size to include", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_frag_size", "argument": "max_frag_size", "type": "integer", "label": "Maximum fragment size to include", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "count_frag_as_reads", "argument": "count_frag_as_reads", "type": "boolean", "label": "Whether to count fragments as reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}]}, {"model_class": "ConditionalWhen", "value": "pp.filter_cells", "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "min_counts", "argument": "min_counts", "type": "integer", "label": "Minimum number of counts required for a cell to pass filtering", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_tsse", "argument": "min_tsse", "type": "float", "label": "Minimum TSS enrichemnt score required for a cell to pass filtering", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_counts", "argument": "max_counts", "type": "integer", "label": "Maximum number of counts required for a cell to pass filtering", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_tsse", "argument": "max_tsse", "type": "float", "label": "Maximum TSS enrichment score expressed required for a cell to pass filtering", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pp.select_features", "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "n_features", "argument": "n_features", "type": "integer", "label": "Number of features to keep", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500000", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "filter_lower_quantile", "argument": "filter_lower_quantile", "type": "float", "label": "Lower quantile of the feature count distribution to filter out", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.005", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "filter_upper_quantile", "argument": "filter_upper_quantile", "type": "float", "label": "Upper quantile of the feature count distribution to filter out", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.005", "area": false, "datalist": []}, {"model_class": "DataToolParameter", "name": "whitelist", "argument": "whitelist", "type": "data", "label": "A user provided bed file containing genome-wide whitelist regions", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed"], "edam": {"edam_formats": ["format_3003"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "blacklist", "argument": "blacklist", "type": "data", "label": "A user provided bed file containing genome-wide blacklist regions", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed"], "edam": {"edam_formats": ["format_3003"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "max_iter", "argument": "max_iter", "type": "integer", "label": "If greater than 1, this function will perform iterative clustering and feature selection", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pp.scrublet", "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "features", "argument": "features", "type": "text", "label": " Boolean index mask, where True means that the feature is kept, and False means the feature is removed.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_comps", "argument": "n_comps", "type": "integer", "label": "Number of components", "help": "15 is usually sufficient. The algorithm is not sensitive to this parameter", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "15", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "sim_doublet_ratio", "argument": "sim_doublet_ratio", "type": "float", "label": "Number of doublets to simulate relative to the number of observed cells", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "expected_doublet_rate", "argument": "expected_doublet_rate", "type": "float", "label": "Expected doublet rate", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_neighbors", "argument": "n_neighbors", "type": "integer", "label": "Number of neighbors used to construct the KNN graph of observed cells and simulated doublets", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "use_approx_neighbors", "argument": "use_approx_neighbors", "type": "boolean", "label": "Whether to use approximate search", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random state", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pp.filter_doublets", "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "FloatToolParameter", "name": "probability_threshold", "argument": "probability_threshold", "type": "float", "label": "Threshold for doublet probability", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "score_threshold", "argument": "score_threshold", "type": "float", "label": "Threshold for doublet score", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pp.mnc_correct", "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "batch", "argument": "batch", "type": "text", "label": "Batch labels for cells", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "batch", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_neighbors", "argument": "n_neighbors", "type": "integer", "label": "Number of mutual nearest neighbors", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_clusters", "argument": "n_clusters", "type": "integer", "label": "Number of clusters", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "40", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_iter", "argument": "n_iter", "type": "integer", "label": "Number of iterations", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "use_rep", "argument": "use_rep", "type": "text", "label": "The key for the matrix", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "X_spectral", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "use_dims", "argument": "use_dims", "type": "text", "label": "The dimensions used for computation", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "groupby", "argument": "groupby", "type": "text", "label": "The key of the observation grouping to consider", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "key_added", "argument": "key_added", "type": "text", "label": "If specified, add the result to adata.obsm with this key", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pp.harmony", "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "batch", "argument": "batch", "type": "text", "label": "Batch labels for cells", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "batch", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "use_rep", "argument": "use_rep", "type": "text", "label": "The key for the matrix", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "X_spectral", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "use_dims", "argument": "use_dims", "type": "text", "label": "The dimensions used for computation", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "groupby", "argument": "groupby", "type": "text", "label": "The key of the observation grouping to consider", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "key_added", "argument": "key_added", "type": "text", "label": "If specified, add the result to adata.obsm with this key", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "pp.scanorama_integrate", "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "batch", "argument": "batch", "type": "text", "label": "Batch labels for cells", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "batch", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_neighbors", "argument": "n_neighbors", "type": "integer", "label": "Number of mutual nearest neighbors", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "use_rep", "argument": "use_rep", "type": "text", "label": "The key for the matrix", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "X_spectral", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "use_dims", "argument": "use_dims", "type": "text", "label": "The dimensions used for computation", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "groupby", "argument": "groupby", "type": "text", "label": "The key of the observation grouping to consider", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "key_added", "argument": "key_added", "type": "text", "label": "If specified, add the result to adata.obsm with this key", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "metrics.frag_size_distr", "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "max_recorded_size", "argument": "max_recorded_size", "type": "integer", "label": "The maximum fragment size to record in the result", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "add_key", "argument": "add_key", "type": "text", "label": "Key used to store the result in `adata.uns`", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "frag_size_distr", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "metrics.tsse", "inputs": [{"model_class": "DataToolParameter", "name": "adata", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "gene_anno", "argument": "gene_anno", "type": "data", "label": "GTF/GFF file containing the gene annotation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gtf", "gff3"], "edam": {"edam_formats": ["format_2306", "format_1975"], "edam_data": ["data_1255", "data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "method", "argument": null, "type": "select", "label": "Method used for preprocessing", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "pp.make_fragment_file", "options": [["Convert a BAM file to a fragment file, using 'pp.make_fragment_file'", "pp.make_fragment_file", false], ["Import data fragment files and compute basic QC metrics, using 'pp.import_data'", "pp.import_data", false], ["Generate cell by bin count matrix, using 'pp.add_tile_matrix'", "pp.add_tile_matrix", false], ["Generate cell by gene activity matrix, using 'pp.make_gene_matrix'", "pp.make_gene_matrix", false], ["Filter cell outliers based on counts and numbers of genes expressed, using 'pp.filter_cells'", "pp.filter_cells", false], ["Perform feature selection, using 'pp.select_features'", "pp.select_features", false], ["Compute probability of being a doublet using the scrublet algorithm, using 'pp.scrublet'", "pp.scrublet", false], ["Remove doublets according to the doublet probability or doublet score, using 'pp.filter_doublets'", "pp.filter_doublets", false], ["A modified MNN-Correct algorithm based on cluster centroid, using 'pp.mnc_correct'", "pp.mnc_correct", false], ["Use harmonypy to integrate different experiments,using 'pp.harmony'", "pp.harmony", false], ["Use Scanorama [Hie19] to integrate different experiments, using 'pp.scanorama_integrate'", "pp.scanorama_integrate", false], ["Compute the fragment size distribution of the dataset, using 'metrics.frag_size_distr'", "metrics.frag_size_distr", false], ["Compute the TSS enrichment score (TSSe) for each cell, using 'metrics.tsse'", "metrics.tsse", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "advanced_common", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "show_log", "argument": null, "type": "boolean", "label": "Output Log?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}], "outputs": [{"model_class": "ToolOutput", "name": "fragments_out", "format": "interval", "label": "${tool.name} (${method.method}) on ${on_string}: Fragment file", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_3002", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "anndata_out", "format": "h5ad", "label": "${tool.name} (${method.method}) on ${on_string}: Annotated data matrix", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "anndata.h5ad", "edam_format": "format_3590", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "hidden_output", "format": "txt", "label": "Log file", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "single-cell", "panel_section_name": "Single-cell", "form_style": "regular"}