{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/lofreq_filter/lofreq_filter/2.1.4+galaxy1", "name": "Lofreq filter", "version": "2.1.4+galaxy1", "description": "called variants posteriorly", "labels": [], "edam_operations": ["operation_3227"], "edam_topics": ["topic_0199", "topic_0622"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "lofreq", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "lofreq_filter", "owner": "iuc", "changeset_revision": "701d134358ad", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "invcf", "argument": "-i", "type": "data", "label": "List of variants to filter", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf", "vcf_bgzip"], "edam": {"edam_formats": ["format_3016", "format_3016"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "filter_by_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": [{"model_class": "Section", "name": "qual", "type": "section", "title": "Quality-based filter options", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "snvqual_filter", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "min-phred", "inputs": [{"model_class": "IntegerToolParameter", "name": "snvqual_thresh", "argument": "-Q", "type": "integer", "label": "Minimum QUAL value", "help": "Specify the minimum value of the QUAL field required to retain a variant", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mtc", "inputs": [{"model_class": "FloatToolParameter", "name": "snvqual_alpha", "argument": "-r", "type": "float", "label": "Multiple-testing corrected p-value threshold", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "snvqual_mtc", "argument": "-q", "type": "select", "label": "Multiple testing correction method", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "bonf", "options": [["Bonferroni", "bonf", false], ["Holm-Sidak", "holm", false], ["False-discovery rate", "fdr", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "snvqual_ntests", "argument": "-s", "type": "integer", "label": "Estimate of number of tests performed", "help": "Ideally, this would be the number of SNVs considered during variant calling. The lofreq variant caller emits this number as part of its output. For other variant callers, all you will typically have is a lower bound estimate given by the number of SNV records in your VCF input.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "snvqual", "argument": null, "type": "select", "label": "Filter SNVs based on call quality?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No, don't apply call quality filter", "no", false], ["Yes, filter on explicit QUAL threshold", "min-phred", false], ["Yes, filter on multiple testing corrected p-value", "mtc", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "indelqual_filter", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "min-phred", "inputs": [{"model_class": "IntegerToolParameter", "name": "indelqual_thresh", "argument": "-K", "type": "integer", "label": "Minimum QUAL value", "help": "Specify the minimum value of the QUAL field required to retain a variant", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mtc", "inputs": [{"model_class": "FloatToolParameter", "name": "indelqual_alpha", "argument": "-l", "type": "float", "label": "Multiple-testing corrected p-value threshold", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "indelqual_mtc", "argument": "-k", "type": "select", "label": "Multiple testing correction method", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "bonf", "options": [["Bonferroni", "bonf", false], ["Holm-Sidak", "holm", false], ["False-discovery rate", "fdr", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "indelqual_ntests", "argument": "-m", "type": "integer", "label": "Estimate of number of tests performed", "help": "Ideally, this would be the number of indels considered during variant calling. The lofreq variant caller emits this number as part of its output. For other variant callers, all you will typically have is a lower bound estimate given by the number of indel records in your VCF input.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "indelqual", "argument": null, "type": "select", "label": "Filter indels based on call quality?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No, don't apply call quality filter", "no", false], ["Yes, filter on explicit QUAL threshold", "min-phred", false], ["Yes, filter on multiple testing corrected p-value", "mtc", false]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "ConditionalWhen", "value": "--only-snvs", "inputs": [{"model_class": "Section", "name": "qual", "type": "section", "title": "Quality-based filter options", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "snvqual_filter", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "min-phred", "inputs": [{"model_class": "IntegerToolParameter", "name": "snvqual_thresh", "argument": "-Q", "type": "integer", "label": "Minimum QUAL value", "help": "Specify the minimum value of the QUAL field required to retain a variant", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mtc", "inputs": [{"model_class": "FloatToolParameter", "name": "snvqual_alpha", "argument": "-r", "type": "float", "label": "Multiple-testing corrected p-value threshold", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "snvqual_mtc", "argument": "-q", "type": "select", "label": "Multiple testing correction method", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "bonf", "options": [["Bonferroni", "bonf", false], ["Holm-Sidak", "holm", false], ["False-discovery rate", "fdr", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "snvqual_ntests", "argument": "-s", "type": "integer", "label": "Estimate of number of tests performed", "help": "Ideally, this would be the number of SNVs considered during variant calling. The lofreq variant caller emits this number as part of its output. For other variant callers, all you will typically have is a lower bound estimate given by the number of SNV records in your VCF input.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "snvqual", "argument": null, "type": "select", "label": "Filter SNVs based on call quality?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No, don't apply call quality filter", "no", false], ["Yes, filter on explicit QUAL threshold", "min-phred", false], ["Yes, filter on multiple testing corrected p-value", "mtc", false]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "ConditionalWhen", "value": "--only-indels", "inputs": [{"model_class": "Section", "name": "qual", "type": "section", "title": "Quality-based filter options", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "indelqual_filter", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "min-phred", "inputs": [{"model_class": "IntegerToolParameter", "name": "indelqual_thresh", "argument": "-K", "type": "integer", "label": "Minimum QUAL value", "help": "Specify the minimum value of the QUAL field required to retain a variant", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mtc", "inputs": [{"model_class": "FloatToolParameter", "name": "indelqual_alpha", "argument": "-l", "type": "float", "label": "Multiple-testing corrected p-value threshold", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "indelqual_mtc", "argument": "-k", "type": "select", "label": "Multiple testing correction method", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "bonf", "options": [["Bonferroni", "bonf", false], ["Holm-Sidak", "holm", false], ["False-discovery rate", "fdr", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "indelqual_ntests", "argument": "-m", "type": "integer", "label": "Estimate of number of tests performed", "help": "Ideally, this would be the number of indels considered during variant calling. The lofreq variant caller emits this number as part of its output. For other variant callers, all you will typically have is a lower bound estimate given by the number of indel records in your VCF input.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "indelqual", "argument": null, "type": "select", "label": "Filter indels based on call quality?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No, don't apply call quality filter", "no", false], ["Yes, filter on explicit QUAL threshold", "min-phred", false], ["Yes, filter on multiple testing corrected p-value", "mtc", false]], "display": null, "multiple": false, "textable": false}}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "keep_only", "argument": null, "type": "select", "label": "Types of variants to keep", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["SNVs and Indels", "", false], ["SNVs only", "--only-snvs", false], ["Indels only", "--only-indels", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "coverage", "type": "section", "title": "Coverage-based filter options", "help": "You can specify a range of acceptable coverage values at variant sites by setting minimum and maximum coverage. Set either value to zero to make the range unbounded on the corresponding side, or disable filtering based on coverage by setting both values to zero.", "expanded": true, "inputs": [{"model_class": "IntegerToolParameter", "name": "cov_min", "argument": "-v", "type": "integer", "label": "Minimum coverage", "help": "The minimum coverage at a site required to keep variants", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "cov_max", "argument": "-V", "type": "integer", "label": "Maximum coverage", "help": "The maximum coverage at a site allowed to keep variants", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "af", "type": "section", "title": "Allele frequency filter options", "help": "You can specify a range of acceptable allele frequencies at variant sites by setting minimum and maximum AF values. Set either value to zero to make the range unbounded on the corresponding side, or disable filtering based on allele frequency by setting both values to zero.", "expanded": true, "inputs": [{"model_class": "FloatToolParameter", "name": "af_min", "argument": "-a", "type": "float", "label": "Minimum allele frequency", "help": "To keep a variant its allele needs to be observed at this frequency at least.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "af_max", "argument": "-A", "type": "float", "label": "Maximum allele frequency", "help": "To keep a variant its allele is allowed to be observed at this frequency at most.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "sb", "type": "section", "title": "Strand bias filter options", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "sb_filter", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "max-phred", "inputs": [{"model_class": "IntegerToolParameter", "name": "sb_thresh", "argument": "-B", "type": "integer", "label": "", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mtc", "inputs": [{"model_class": "FloatToolParameter", "name": "sb_alpha", "argument": "-c", "type": "float", "label": "Multiple-testing corrected p-value threshold", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.001", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "sb_mtc", "argument": "-b", "type": "select", "label": "Multiple testing correction method", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "fdr", "options": [["Bonferroni", "bonf", false], ["Holm-Sidak", "holm", false], ["False-discovery rate", "fdr", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "sb_compound", "argument": null, "type": "boolean", "label": "Use compound strand-bias filter?", "help": "With compound filtering a variant is filtered only if it fails the strand-bias filter configured above AND has 85% of its supporting reads mapped to one reference genome strand. This guards against filtering based on statistically significant, but minor strand bias effects at high-coverage sites.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--sb-no-compound"}, {"model_class": "BooleanToolParameter", "name": "sb_indels", "argument": "--sb-incl-indels", "type": "boolean", "label": "Apply to indels?", "help": "By default, indels are not filtered based on strand bias.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--sb-incl-indels", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "strand_bias", "argument": null, "type": "select", "label": "Filter variants based on supporting strand bias?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "mtc", "options": [["No, don't apply strand-bias filter", "no", false], ["Yes, filter on explicit SB threshold", "max-phred", false], ["Yes, filter on multiple testing corrected strand-bias p-value (lofreq default)", "mtc", true]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "SelectToolParameter", "name": "flag_or_drop", "argument": "--print-all", "type": "select", "label": "Action to be taken for variants that do not pass the filters defined above", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Drop variants not passing one or more filters", "", false], ["Keep variants, but indicate failed filters in output FILTER column", "--print-all", false]], "display": "radio", "multiple": false, "textable": false}], "outputs": [{"model_class": "ToolOutput", "name": "outvcf", "format": "vcf", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "filtered.vcf", "edam_format": "format_3016", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "variant_calling", "panel_section_name": "Variant Calling", "form_style": "regular"}