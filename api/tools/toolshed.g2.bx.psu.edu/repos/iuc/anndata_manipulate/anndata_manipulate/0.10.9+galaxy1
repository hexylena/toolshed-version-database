{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/anndata_manipulate/anndata_manipulate/0.10.9+galaxy1", "name": "Manipulate AnnData", "version": "0.10.9+galaxy1", "description": "object", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "anndata", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "anndata_manipulate", "owner": "iuc", "changeset_revision": "d1e49c3c0aa2", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Annotated data matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "manipulate", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "concatenate", "inputs": [{"model_class": "DataToolParameter", "name": "other_adatas", "argument": null, "type": "data", "label": "Annotated data matrix to add", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "join", "argument": null, "type": "select", "label": "Join method", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "inner", "options": [["Intersection of variables", "inner", false], ["Union of variables", "outer", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "batch_key", "argument": null, "type": "text", "label": "Key to add the batch annotation to obs", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "batch", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "uns_merge", "argument": null, "type": "select", "label": "Strategy to use for merging entries of uns", "help": "These strategies are applied recusivley.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "None", "options": [["The default. The concatenated object will just have an empty dict for uns", "None", true], ["Only entries which have the same value in all AnnData objects are kept", "same", false], ["Only entries which have one unique value in all AnnData objects are kept", "unique", false], ["The first non-missing value is used", "first", false], ["A value is included if only one of the AnnData objects has a value at this path", "only", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "index_unique", "argument": null, "type": "select", "label": "Separator to join the existing index names with the batch category", "help": "Leave it empty to keep existing indices", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "-", "options": [["-", "-", false], ["_", "_", false], [" ", " ", false], ["/", "/", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "obs_names_make_unique", "inputs": [{"model_class": "SelectToolParameter", "name": "join", "argument": null, "type": "select", "label": "The connecting string between name and integer", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "-", "options": [["-", "-", false], ["_", "_", false], [" ", " ", false], ["/", "/", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "var_names_make_unique", "inputs": [{"model_class": "SelectToolParameter", "name": "join", "argument": null, "type": "select", "label": "The connecting string between name and integer", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "-", "options": [["-", "-", false], ["_", "_", false], [" ", " ", false], ["/", "/", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "rename_categories", "inputs": [{"model_class": "TextToolParameter", "name": "key", "argument": null, "type": "text", "label": "Key for observations or variables annotation", "help": "Annotation key in obs or var", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "categories", "argument": null, "type": "text", "label": "Comma-separated list of new categories", "help": "It should be the same number as the old categories", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "update_key", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "TextToolParameter", "name": "key_name", "argument": null, "type": "text", "label": "Key name", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "new_key", "argument": null, "type": "select", "label": "Add categories to a new key?", "help": "If Yes, a new key will be created with the new categories, otherwise the old key will be updated", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["Yes", "yes", false], ["No", "no", true]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "remove_keys", "inputs": [{"model_class": "TextToolParameter", "name": "obs_keys", "argument": null, "type": "text", "label": "Keys/fields to remove from observations (obs)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "var_keys", "argument": null, "type": "text", "label": "Keys/fields to remove from variables (var)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "flag_genes", "inputs": [{"model_class": "Repeat", "name": "gene_flags", "type": "repeat", "title": "Flag genes that start with these names", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "startswith", "argument": null, "type": "text", "label": "Text that you expect the genes to be flagged to start with", "help": "For example, 'MT-' for mito genes", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "col_in", "argument": null, "type": "text", "label": "Column in .var to use", "help": "By default it uses the var_names (normally gene symbols)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "col_out", "argument": null, "type": "text", "label": "Name of the column in var.names where this boolean flag is stored", "help": "For example, name this column as 'mito' for mitochondrial genes.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "rename_obs", "inputs": [{"model_class": "TextToolParameter", "name": "from_obs", "argument": null, "type": "text", "label": "Name of the observations field that you want to change", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "to_obs", "argument": null, "type": "text", "label": "New name of the field in the observations", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "keep_original", "argument": null, "type": "boolean", "label": "Keep original", "help": "If activated, it will also keep the original column", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "rename_var", "inputs": [{"model_class": "TextToolParameter", "name": "from_var", "argument": null, "type": "text", "label": "Name of the variables field that you want to change", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "to_var", "argument": null, "type": "text", "label": "New name of the filed in the variables", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "keep_original", "argument": null, "type": "boolean", "label": "Keep original", "help": "If activated, it will also keep the original column", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "strings_to_categoricals", "inputs": []}, {"model_class": "ConditionalWhen", "value": "transpose", "inputs": []}, {"model_class": "ConditionalWhen", "value": "add_annotation", "inputs": [{"model_class": "SelectToolParameter", "name": "var_obs", "argument": null, "type": "select", "label": "What to annotate?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "var", "options": [["Variables (var)", "var", false], ["Observations (obs)", "obs", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "DataToolParameter", "name": "new_annot", "argument": null, "type": "data", "label": "Table with new annotations", "help": "The new table should have the same number of rows and the same order as obs or var. The key names should be in the header (1st line)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "split_on_obs", "inputs": [{"model_class": "TextToolParameter", "name": "key", "argument": null, "type": "text", "label": "The obs key to split on", "help": "For example, if you want to split on cluster annotation, you can use the key 'louvain'. The output will be a collection of anndata objects", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "save_raw", "inputs": []}, {"model_class": "ConditionalWhen", "value": "copy_obs", "inputs": [{"model_class": "DataToolParameter", "name": "source_adata", "argument": null, "type": "data", "label": "Source anndata object", "help": "Ideally the source AnnData object should contain the same set of genes and cells.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Repeat", "name": "keys", "type": "repeat", "title": "Keys from obs to copy", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "source_key", "argument": null, "type": "text", "label": "Column to be copied from the source anndata", "help": "louvain, batch, etc. Provide one key at a time.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "target_key", "argument": null, "type": "text", "label": "Target column name", "help": "Warning! Provide a new key name to avoid rewriting. Leave empty to copy to the same key.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "copy_uns", "inputs": [{"model_class": "DataToolParameter", "name": "source_adata", "argument": null, "type": "data", "label": "Source anndata object", "help": "Ideally the source AnnData object should contain the same set of genes and cells.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Repeat", "name": "keys", "type": "repeat", "title": "Keys from uns to copy", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "source_key", "argument": null, "type": "text", "label": "Uns key to be copied from the source anndata", "help": "hvg, neighbors, etc. Provide one key at a time.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "target_key", "argument": null, "type": "text", "label": "Target key name", "help": "Warning! Provide a new key name to avoid rewriting. Leave empty to copy to the same key.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "copy_embed", "inputs": [{"model_class": "DataToolParameter", "name": "source_adata", "argument": null, "type": "data", "label": "Source anndata object", "help": "Ideally the source AnnData object should contain the same set of genes and cells.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Repeat", "name": "keys", "type": "repeat", "title": "Keys from embeddings to copy", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "source_key", "argument": null, "type": "text", "label": "Key to be copied from the source anndata", "help": "tSNE, UMAP, etc. Provide one key at a time.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "target_key", "argument": null, "type": "text", "label": "Target key name", "help": "Warning! Provide a new key name to avoid rewriting. Leave empty to copy to the same key.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "copy_layers", "inputs": [{"model_class": "DataToolParameter", "name": "source_adata", "argument": null, "type": "data", "label": "Source anndata object", "help": "Ideally the source AnnData object should contain the same set of genes and cells.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Repeat", "name": "keys", "type": "repeat", "title": "Layers to copy", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "source_key", "argument": null, "type": "text", "label": "Layer to be copied from the source anndata", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "target_key", "argument": null, "type": "text", "label": "Target layer name", "help": "Warning! give a new key name to avoid rewriting. Leave empty to copy to the same key.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "copy_X", "inputs": [{"model_class": "DataToolParameter", "name": "source_adata", "argument": null, "type": "data", "label": "Source anndata object", "help": "Ideally the source AnnData object should contain the same set of genes and cells.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "target_key", "argument": null, "type": "text", "label": "Give a target layer name or leave empty to overwrite .X", "help": "Warning! give a new key name to avoid rewriting. Leave empty to copy to the .X of the current anndata", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "function", "argument": null, "type": "select", "label": "Function to manipulate the object", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "concatenate", "options": [["Concatenate along the observations axis", "concatenate", false], ["Makes the obs index unique by appending '1', '2', etc", "obs_names_make_unique", false], ["Makes the var index unique by appending '1', '2', etc", "var_names_make_unique", false], ["Rename categories of annotation", "rename_categories", false], ["Remove keys from obs or var annotations", "remove_keys", false], ["Flag genes start with a pattern", "flag_genes", false], ["Rename fileds in AnnData observations", "rename_obs", false], ["Rename fileds in AnnData variables", "rename_var", false], ["Transform string annotations to categoricals", "strings_to_categoricals", false], ["Transpose the data matrix, leaving observations and variables interchanged", "transpose", false], ["Add new annotation(s) for observations or variables", "add_annotation", false], ["Split the AnnData object into multiple AnnData objects based on the values of a given obs key", "split_on_obs", false], ["Copy observation keys from a different anndata object", "copy_obs", false], ["Copy uns keys from a different anndata object", "copy_uns", false], ["Copy embeddings from a different anndata object", "copy_embed", false], ["Copy layers from a different anndata object", "copy_layers", false], ["Copy data matrix (.X) from a different anndata object", "copy_X", false], ["Freeze the current state into the 'raw' attribute", "save_raw", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutputCollection", "name": "output_h5ad_split", "format": null, "label": "${tool.name} (${manipulate.function}) on ${on_string} Collection", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "h5ad", "visible": true, "assign_primary_output": false, "directory": "output_split", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<designation>.+)\\.h5", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "anndata", "format": "h5ad", "label": "${tool.name} (${manipulate.function}) on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "anndata.h5ad", "edam_format": "format_3590", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "single-cell", "panel_section_name": "Single-cell", "form_style": "regular"}