{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/beagle/beagle/5.4_29Oct24.c8e+galaxy1", "name": "Beagle", "version": "5.4_29Oct24.c8e+galaxy1", "description": "phasing genotypes and imputing ungenotyped markers", "labels": [], "edam_operations": ["operation_0487"], "edam_topics": ["topic_0196"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "beagle", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "beagle", "owner": "iuc", "changeset_revision": "563fd95fa88a", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "gt", "argument": "gt", "type": "data", "label": "VCF file", "help": "It specifies a VCF file containing genotypes for the study samples.                  Each VCF record must contain a GT (genotype) format field", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf"], "edam": {"edam_formats": ["format_3016"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "optional_inputs", "type": "section", "title": "Optional input files", "help": null, "expanded": true, "inputs": [{"model_class": "DataToolParameter", "name": "ref", "argument": "ref", "type": "data", "label": "Bref3 or VCF file with phased genotypes", "help": "Each genotype must have two phased, non-missing alleles. If a VCF file is specified, the                      phased allele separator must be used '|'", "help_format": "html", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf", "bref3"], "edam": {"edam_formats": ["format_3016", "format_2333"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "map", "argument": "map", "type": "data", "label": "PLINK map file with cM units", "help": "Beagle uses linear interpolation to estimate genetic positions between map positions. If                  no genetic map is specified, Beagle assumes a constant recombination rate of 1 cM per Mb", "help_format": "html", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "excludesamples", "argument": "excludesamples", "type": "data", "label": "Samples to exclude", "help": "It specifies a file containing samples (one sample identifier per line) to be excluded                      from the analysis", "help_format": "html", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "excludemarkers", "argument": "excludemarkers", "type": "data", "label": "Markers to exclude", "help": "It specifies a file containing markers (one marker per line) to be excluded from the                      analysis. Each line of the file can be either an identifier from a VCF record\u2019s ID field                      or a genomic coordinate in the format: CHROM:POS", "help_format": "html", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "TextToolParameter", "name": "chrom", "argument": "chrom", "type": "text", "label": "Specify a chromosome interval", "help": "Input format: [chrom]:[start]-[end]. The entire chromosome, the beginning, or the end may be                  specified by chrom=[chrom], chrom=[chrom]:-[end], and chrom=[chrom]:[start]-, respectively", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ne", "argument": "ne", "type": "integer", "label": "Effective population size", "help": "The default value is suitable for a large, outbred population. It is needed to specify an                  appropriate effective populations size if you are imputing ungenotyped markers in a small                  or inbred population", "help_format": "html", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000000", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "window", "argument": "window", "type": "float", "label": "Window length in cM", "help": "The window parameter must be at least 1.1 times as large as the overlap parameter.                  The window parameter controls the amount of memory required for the analysis", "help_format": "html", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "40.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "overlap", "argument": "overlap", "type": "float", "label": "Window overlap in cM", "help": "It specifies the cM length of overlap between adjacent sliding windows", "help_format": "html", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "err", "argument": "err", "type": "float", "label": "Allele mismatch probability for the hidden Markov model", "help": "If no err parameter is specified, the err parameter will be set equal \ud835\udf03/(2(\ud835\udf03 + \ud835\udc3b))                  where \ud835\udf03 = 1/(0.5 + ln \ud835\udc3b) and \ud835\udc3b is the number of haplotypes", "help_format": "html", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seed", "argument": "seed", "type": "integer", "label": "Random seed", "help": "A random seed is a number used to initialize a pseudorandom number generator", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "output_log", "argument": null, "type": "boolean", "label": "Output a log file", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "Section", "name": "phasing_parameters", "type": "section", "title": "Phasing parameters", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "burnin", "argument": "burnin", "type": "integer", "label": "Max burnin iterations", "help": "It is the maximum number of burnin iterations used to estimate an initial haplotype                      frequency model for inferring genotype phase", "help_format": "html", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "iterations", "argument": "iterations", "type": "integer", "label": "Phasing iterations", "help": "It is the number of iterations used to estimate genotype phase. Increasing this                      parameter will trade increased computation time for increased phasing accuracy", "help_format": "html", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "12", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "phase_states", "argument": "phase-states", "type": "integer", "label": "Model states for phasing", "help": "It is the number of model states used to estimate genotype phase", "help_format": "html", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "280", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "imputation_parameters", "type": "section", "title": "Imputation parameters", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "impute", "argument": "impute", "type": "boolean", "label": "Impute ungenotyped markers", "help": "It specifies whether markers that are present in the reference panel but absent in                      that target will be imputed. This option has no effect if no reference panel is specified", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "IntegerToolParameter", "name": "imp_states", "argument": "imp-states", "type": "integer", "label": "Model states for imputation", "help": "It is the number of model states used to impute ungenotyped markers", "help_format": "html", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1600", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "imp_segment", "argument": "imp-segment", "type": "float", "label": "Minimum cM length of haplotype segments", "help": "It is the minimum cM length of haplotype segments that will be incorporated in the HMM state                      space for a target haplotype.", "help_format": "html", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "6.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "imp_step", "argument": "imp-step", "type": "float", "label": "Length in cM for detecting short IBS segments", "help": "It is the length in cM of the step used for detecting short IBS segments", "help_format": "html", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "cluster", "argument": "cluster", "type": "float", "label": "Max cM in a marker cluster", "help": "It specifies the maximum cM distance between individual markers that are combined                      into an aggregate marker when imputing ungenotyped markers", "help_format": "html", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.005", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "ap", "argument": "ap", "type": "boolean", "label": "Include posterior allele probabilities", "help": "It specifies whether AP1 and AP2 (allele probability) fields will be included in the output                      VCF file when imputing ungenotyped markers", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "gp", "argument": "gp", "type": "boolean", "label": "Include posterior genotype probabilities", "help": "It specifies whether a GP (genotype probability) format field will be included in the output                  VCF file when imputing ungenotyped markers. Genotype probabilities are calculated from allele                  probabilities assuming Hardy-Weinberg Equilibrium. Consequently, the alleles in the genotype                  with highest genotype probability may occasionally be different than the genotype obtained by                  taking the allele with highest probability on each haplotype, which is the genotype reported                  in the GT format field", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "SelectToolParameter", "name": "out_format", "argument": null, "type": "select", "label": "Output data type ", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "vcf", "options": [["VCF", "vcf", true], ["Compressed VCF (bgzip)", "vcf_bgzip", false]], "display": null, "multiple": false, "textable": false}], "outputs": [{"model_class": "ToolOutput", "name": "vcf_file", "format": "vcf", "label": "${tool.name} on ${on_string}: VCF file", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3016", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "log_file", "format": "txt", "label": "${tool.name} on ${on_string}: log file", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "out.log", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "variant_calling", "panel_section_name": "Variant Calling", "form_style": "regular"}