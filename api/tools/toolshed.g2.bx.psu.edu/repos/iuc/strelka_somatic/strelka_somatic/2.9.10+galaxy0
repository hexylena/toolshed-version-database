{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/strelka_somatic/strelka_somatic/2.9.10+galaxy0", "name": "Strelka Somatic", "version": "2.9.10+galaxy0", "description": "small variant caller for somatic variation in tumor/normal sample pairs", "labels": [], "edam_operations": ["operation_3227"], "edam_topics": ["topic_0199"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "strelka", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "strelka_somatic", "owner": "iuc", "changeset_revision": "edbdbc64b397", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "normalBam", "argument": "--normalBam", "type": "data", "label": "Select normal sample file", "help": "In bam or cram format.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam", "cram"], "edam": {"edam_formats": ["format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "tumorBam", "argument": "--tumorBam", "type": "data", "label": "Select tumor sample file", "help": "In bam or cram format.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam", "cram"], "edam": {"edam_formats": ["format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "ref_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "cached", "inputs": [{"model_class": "SelectToolParameter", "name": "ref", "argument": null, "type": "select", "label": "Reference genome", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "ref", "argument": null, "type": "data", "label": "Reference sequence", "help": "(--referenceFasta)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "ref_sel", "argument": null, "type": "select", "label": "Choose the source for the reference genome", "help": "(--referenceFasta)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "cached", "options": [["Locally cached", "cached", false], ["History", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "optimization", "argument": null, "type": "select", "label": "Optimize variant calling for", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Whole-genome sequencing (WGS) data (default mode)", "", false], ["Whole-exome sequencing (WES) data (--exome)", "--exome", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Section", "name": "expert_settings", "type": "section", "title": "Expert configuration of calling model", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "evs", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "disableEVS", "inputs": []}, {"model_class": "ConditionalWhen", "value": "enableEVS", "inputs": [{"model_class": "DataToolParameter", "name": "snvScoringModelFile", "argument": "--snvScoringModelFile", "type": "data", "label": "Optional SNV scoring model to overwrite default model", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["json"], "edam": {"edam_formats": ["format_3464"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "indelScoringModelFile", "argument": "--indelScoringModelFile", "type": "data", "label": "Optional indel scoring model to overwrite default model", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["json"], "edam": {"edam_formats": ["format_3464"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "reportEVSFeatures", "argument": "--reportEVSFeatures", "type": "boolean", "label": "Report all empirical variant scoring features in VCF output", "help": "WARNING: Do not use this feature with Strelka Germline and more than one input sample or the tool run will fail!", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--reportEVSFeatures", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selector", "argument": null, "type": "select", "label": "Configure empirical variant scoring (EVS) model", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "enableEVS", "options": [["Don't use EVS, just simple threshold-based filtering (--disableEVS)", "disableEVS", false], ["Use EVS models (default)", "enableEVS", true]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "regions", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "genome", "inputs": []}, {"model_class": "ConditionalWhen", "value": "regions_from_file", "inputs": [{"model_class": "DataToolParameter", "name": "callRegions", "argument": "--callRegions", "type": "data", "label": "BED dataset with regions to examine", "help": "Specify a set of regions to call. No VCF output will be provided outside of these regions. Note that the full genome may still be used to calculate certain input statistics (such as expected depth per chromosome).", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed"], "edam": {"edam_formats": ["format_3003"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "restrict_to_region", "argument": null, "type": "select", "label": "Call variants across", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "genome", "options": [["Whole reference", "genome", false], ["Regions specified in BED", "regions_from_file", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Repeat", "name": "forced_regions", "type": "repeat", "title": "Whitelists of SNV/indel sites that should always be considered", "help": "Add whitelisted SNVs/indels to list of considered/reported alleles explicitly", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "whitelist", "argument": null, "type": "data", "label": "Select file with candidate alleles", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf"], "edam": {"edam_formats": ["format_3016"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "use_whitelist_as", "argument": null, "type": "select", "label": "Use this whitelist as", "help": "An indel candidates list is used during the realignment and calling steps to increase the chances of detecting given indels if they exist in any sample. If the indel is NOT found despite these efforts, it will NOT be reported, however. With a list of 'SNV sites and/or indels of interest', on the other hand, indels in the list undergo that same treatment, but listed indels and SNPs are both guaranteed to be reported in the variants output, even if they are judged as not being present in any sample.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "indel_candidates", "options": [["A list of indel candidates to be considered during realignment/calling (--indelCandidates)", "indel_candidates", false], ["A list of SNV sites/indels of interest that should always be reported (--forcedGT)", "forced_gt_sites", false]], "display": "radio", "multiple": false, "textable": false}]}, {"model_class": "Section", "name": "oo", "type": "section", "title": "Output options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "vcf_type", "argument": null, "type": "boolean", "label": "Generate compressed variants output (vcf.gz)", "help": "Default is uncompressed vcf", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "compressed", "falsevalue": "decompressed"}, {"model_class": "BooleanToolParameter", "name": "outputCallableRegions", "argument": "--outputCallableRegions", "type": "boolean", "label": "Generate bed file describing somatic callable regions of the genome", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--outputCallableRegions", "falsevalue": ""}]}, {"model_class": "Section", "name": "strelka", "type": "section", "title": "Strelka run configuration", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "maxIndelSize", "argument": "maxIndelSize", "type": "integer", "label": "Set maximum reported indel size", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "49", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "depthFilterMultiple", "argument": "depthFilterMultiple", "type": "float", "label": "Set depthFilterMultiple", "help": "If the depth filter is not skipped, all variants which occur at a depth greater than depthFilterMultiple*chromosome mean depth will be filtered out.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "snvMaxFilteredBasecallFrac", "argument": "snvMaxFilteredBasecallFrac", "type": "float", "label": "Set snvMaxFilteredBasecallFrac", "help": "Somatic SNV calls are filtered at sites where greater than this fraction of basecalls have been removed by the mismatch density filter in either sample.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.4", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "snvMaxSpanningDeletionFrac", "argument": "snvMaxSpanningDeletionFrac", "type": "float", "label": "Set snvMaxSpanningDeletionFrac", "help": "Somatic SNV calls are filtered at sites where greater than this fraction of overlapping reads contain deletions which span the SNV call site.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.75", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "indelMaxWindowFilteredBasecallFrac", "argument": "indelMaxWindowFilteredBasecallFrac", "type": "float", "label": "Set indelMaxWindowFilteredBasecallFrac", "help": "Somatic indel calls are filtered if greater than this fraction of basecalls in a window extending 50 bases to each side of an indel's call position have been removed by the mismatch density filter.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.3", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "ssnvPrior", "argument": "ssnvPrior", "type": "float", "label": "Set ssnvPrior", "help": "Prior probability of a somatic snv or indel.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0001", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "sindelPrior", "argument": "sindelPrior", "type": "float", "label": "Set sindelPrior", "help": "Prior probability of a somatic snv or indel.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1e-06", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "ssnvNoise", "argument": "ssnvNoise", "type": "float", "label": "Set ssnvNoise", "help": "Probability of an snv or indel noise allele NB: in the calling model a noise allele is shared in tumor and normal samples, but occurs at any frequency.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5e-10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "sindelNoiseFactor", "argument": "sindelNoiseFactor", "type": "float", "label": "Set sindelNoiseFactor", "help": "Somatic indel noise factor.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2.2", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "ssnvNoiseStrandBiasFrac", "argument": "ssnvNoiseStrandBiasFrac", "type": "float", "label": "Set ssnvNoiseStrandBiasFrac", "help": "Fraction of snv noise attributed to strand-bias. It is not recommended to change this setting. However, if it is essential to turn the strand bias penalization off, the following is recommended: Assuming the current value of ssnvNoiseStrandBiasFrac is 0.5, (1) set ssnvNoiseStrandBiasFrac = 0 (2) divide the current ssnvNoise value by 2.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minTier1Mapq", "argument": "minTier1Mapq", "type": "integer", "label": "Set minTier1Mapq", "help": "Minimum MAPQ score for reads at tier1.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minTier2Mapq", "argument": "minTier2Mapq", "type": "integer", "label": "Set minTier2Mapq", "help": "Minimum MAPQ score for reads at tier2.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ssnvQuality_LowerBound", "argument": "ssnvQuality_LowerBound", "type": "integer", "label": "Set ssnvQuality_LowerBound", "help": "Somatic quality score (QSS_NT, NT=ref) below which somatic SNVs are marked as filtered.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "15", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "sindelQuality_LowerBound", "argument": "sindelQuality_LowerBound", "type": "integer", "label": "Set sindelQuality_LowerBound", "help": "Somatic quality score (QSI_NT, NT=ref) below which somatic indels are marked as filtered.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "40", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "ssnvContamTolerance", "argument": "ssnvContamTolerance", "type": "float", "label": "Set ssnvContamTolerance", "help": "Tolerance of tumor contamination in the normal sample.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.15", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "indelContamTolerance", "argument": "indelContamTolerance", "type": "float", "label": "Set indelContamTolerance", "help": "Tolerance of tumor contamination in the normal sample.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.15", "area": false, "datalist": []}]}], "outputs": [{"model_class": "ToolOutput", "name": "out_indels", "format": "vcf", "label": "${tool.name} on ${on_string}, Indels, vcf", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3016", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "out_snvs", "format": "vcf", "label": "${tool.name} on ${on_string}, SNVs, vcf", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3016", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "out_callable", "format": "bed", "label": "${tool.name} on ${on_string}, Callable regions, bed", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3003", "edam_data": "data_3002", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "variant_calling", "panel_section_name": "Variant Calling", "form_style": "regular"}