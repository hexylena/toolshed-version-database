{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/hisat2/hisat2/2.0.3.1", "name": "HISAT", "version": "2.0.3.1", "description": "A fast and sensitive alignment program", "labels": [], "edam_operations": ["operation_0292"], "edam_topics": ["topic_3170"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "hisat2", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "hisat2", "owner": "iuc", "changeset_revision": "5f4da9ec47c7", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "input_format", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "fasta", "inputs": [{"model_class": "Conditional", "name": "paired", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "paired_collection", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "reads", "argument": null, "type": "data_collection", "label": "Paired reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}, {"model_class": "Conditional", "name": "paired_end_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "BooleanToolParameter", "name": "no_mixed", "argument": null, "type": "boolean", "label": "Disable alignments of individual mates", "help": "By default, when hisat cannot find a concordant or discordant alignment for a pair, it then tries to find alignments for the individual mates. This option disables that behavior. (--no-mixed)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-mixed", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "no_discordant", "argument": null, "type": "boolean", "label": "Disable discordant alignments", "help": "By default, hisat looks for discordant alignments if it cannot find any concordant alignments. A discordant alignment is an alignment where both mates align uniquely, but that does not satisfy the paired-end constraints (--fr/--rf/--ff, -I, -X). This option disables that behavior. (--no-discordant)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-discordant", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "skip_reverse", "argument": null, "type": "boolean", "label": "Skip reference strand of reference", "help": "(--norc) If --norc is specified, hisat will not attempt to align unpaired reads against the reverse-complement (Crick) reference strand. In paired-end mode, --nofw and --norc pertain to the fragments; i.e. specifying --nofw causes hisat to explore only those paired-end configurations corresponding to fragments from the reverse-complement (Crick) strand.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--norc", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "paired_end_options_selector", "argument": null, "type": "select", "label": "Paired-end options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify paired-end parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "reads_f", "argument": null, "type": "data", "label": "Forward reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "reads_r", "argument": null, "type": "data", "label": "Reverse reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "paired_end_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "BooleanToolParameter", "name": "no_mixed", "argument": null, "type": "boolean", "label": "Disable alignments of individual mates", "help": "By default, when hisat cannot find a concordant or discordant alignment for a pair, it then tries to find alignments for the individual mates. This option disables that behavior. (--no-mixed)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-mixed", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "no_discordant", "argument": null, "type": "boolean", "label": "Disable discordant alignments", "help": "By default, hisat looks for discordant alignments if it cannot find any concordant alignments. A discordant alignment is an alignment where both mates align uniquely, but that does not satisfy the paired-end constraints (--fr/--rf/--ff, -I, -X). This option disables that behavior. (--no-discordant)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-discordant", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "skip_reverse", "argument": null, "type": "boolean", "label": "Skip reference strand of reference", "help": "(--norc) If --norc is specified, hisat will not attempt to align unpaired reads against the reverse-complement (Crick) reference strand. In paired-end mode, --nofw and --norc pertain to the fragments; i.e. specifying --nofw causes hisat to explore only those paired-end configurations corresponding to fragments from the reverse-complement (Crick) strand.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--norc", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "paired_end_options_selector", "argument": null, "type": "select", "label": "Paired-end options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify paired-end parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "reads", "argument": null, "type": "data", "label": "Reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "paired_selector", "argument": null, "type": "select", "label": "Single end or paired reads?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "paired_collection", "options": [["Collection of paired reads", "paired_collection", false], ["Individual paired reads", "paired", false], ["Individual unpaired reads", "single", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": [{"model_class": "Conditional", "name": "paired", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "paired_collection", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "reads", "argument": null, "type": "data_collection", "label": "Paired reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}, {"model_class": "Conditional", "name": "paired_end_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "BooleanToolParameter", "name": "no_mixed", "argument": null, "type": "boolean", "label": "Disable alignments of individual mates", "help": "By default, when hisat cannot find a concordant or discordant alignment for a pair, it then tries to find alignments for the individual mates. This option disables that behavior. (--no-mixed)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-mixed", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "no_discordant", "argument": null, "type": "boolean", "label": "Disable discordant alignments", "help": "By default, hisat looks for discordant alignments if it cannot find any concordant alignments. A discordant alignment is an alignment where both mates align uniquely, but that does not satisfy the paired-end constraints (--fr/--rf/--ff, -I, -X). This option disables that behavior. (--no-discordant)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-discordant", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "skip_reverse", "argument": null, "type": "boolean", "label": "Skip reference strand of reference", "help": "(--norc) If --norc is specified, hisat will not attempt to align unpaired reads against the reverse-complement (Crick) reference strand. In paired-end mode, --nofw and --norc pertain to the fragments; i.e. specifying --nofw causes hisat to explore only those paired-end configurations corresponding to fragments from the reverse-complement (Crick) strand.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--norc", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "paired_end_options_selector", "argument": null, "type": "select", "label": "Paired-end options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify paired-end parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "reads_f", "argument": null, "type": "data", "label": "Forward reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq"], "edam": {"edam_formats": ["format_1930"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "reads_r", "argument": null, "type": "data", "label": "Reverse reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq"], "edam": {"edam_formats": ["format_1930"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "paired_end_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "BooleanToolParameter", "name": "no_mixed", "argument": null, "type": "boolean", "label": "Disable alignments of individual mates", "help": "By default, when hisat cannot find a concordant or discordant alignment for a pair, it then tries to find alignments for the individual mates. This option disables that behavior. (--no-mixed)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-mixed", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "no_discordant", "argument": null, "type": "boolean", "label": "Disable discordant alignments", "help": "By default, hisat looks for discordant alignments if it cannot find any concordant alignments. A discordant alignment is an alignment where both mates align uniquely, but that does not satisfy the paired-end constraints (--fr/--rf/--ff, -I, -X). This option disables that behavior. (--no-discordant)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-discordant", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "skip_reverse", "argument": null, "type": "boolean", "label": "Skip reference strand of reference", "help": "(--norc) If --norc is specified, hisat will not attempt to align unpaired reads against the reverse-complement (Crick) reference strand. In paired-end mode, --nofw and --norc pertain to the fragments; i.e. specifying --nofw causes hisat to explore only those paired-end configurations corresponding to fragments from the reverse-complement (Crick) strand.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--norc", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "paired_end_options_selector", "argument": null, "type": "select", "label": "Paired-end options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify paired-end parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "reads", "argument": null, "type": "data", "label": "Reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq"], "edam": {"edam_formats": ["format_1930"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "paired_selector", "argument": null, "type": "select", "label": "Single end or paired reads?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "paired_collection", "options": [["Collection of paired reads", "paired_collection", false], ["Individual paired reads", "paired", false], ["Individual unpaired reads", "single", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "input_format_selector", "argument": null, "type": "select", "label": "Input data format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "fastq", "options": [["FASTQ", "fastq", true], ["FASTA", "fasta", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "reference_genome", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "indexed", "inputs": [{"model_class": "SelectToolParameter", "name": "index", "argument": null, "type": "select", "label": "Select a reference genome", "help": "If your genome of interest is not listed, contact the Galaxy team", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "apiMel3", "options": [["A. mellifera genome (apiMel3, Baylor HGSC Amel_3.0)", "apiMel3", false], ["Actinidia chinensis FEI Lab v1.0 - splice junctions NOT included", "Actinidia_chinensis_FEI_Lab_v1.0", false], ["African Clawed Frog (xenLae9.2)", "xenLae9.2", false], ["Amborella trichopoda JGI v1.0 - splice junctions NOT included", "Amborella_trichopoda_JGI_v1.0", false], ["Arabidopsis thaliana (TAIR10)", "TAIR10", false], ["Asparagus officinalis v1.1 - splice junctions NOT included", "Asparagus_officinalis_v1.1", false], ["Brassica rapa JGI FPsc1.3 - splice junctions NOT included", "Brassica_rapa_JGI_FPsc1.3", false], ["Caenorhabditis elegans Feb. 2013 (WBcel235/ce11)", "ce11", false], ["Cajanus cajan Penguin Genomics v5.0 - splice junctions NOT included", "Cajanus_cajan_Penguin_Genomics_v5.0", false], ["Capsella rubella JGI annotation v1.0 on assembly v1 - splice junctions NOT included", "Capsella_rubella_JGI_annotation_v1.0_on_assembly_v1", false], ["Capsicum annuum Pepper Genome v2.0 - splice junctions NOT included", "Capsicum_annuum_Pepper_Genome_v2.0", false], ["Chicken (Gallus gallus): galGal6", "galGal6", false], ["Chicken Oct. 2021 (bGalGal1.pat.whiteleghornlayer.GRCg7w_WZ) (GCF_016700215.2)", "GCF_016700215.2", false], ["Chlamydomonas reinhardtii JGI v5.5 - splice junctions NOT included", "Chlamydomonas_reinhardtii_JGI_v5.5", false], ["Cicer arietinum LIS v1.0 - splice junctions NOT included", "Cicer_arietinum_LIS_v1.0", false], ["Citrullus lanatus Cucurbit Genomics Database - splice junctions NOT included", "Citrullus_lanatus_Cucurbit_Genomics_Database", false], ["Cucumis melo Melonomics v3.5 - splice junctions NOT included", "Cucumis_melo_Melonomics_v3.5", false], ["Cucumis sativus L. JGI v1.0 - splice junctions NOT included", "Cucumis_sativus_L._JGI_v1.0", false], ["Dog Oct. 2020 (Dog10K_Boxer_Tasha/canFam6) (canFam6)", "canFam6", false], ["Elaeis guineensis NCBI Genome v1.0 - splice junctions NOT included", "Elaeis_guineensis_NCBI_Genome_v1.0", false], ["Erythranthe guttata JGI v2.0 - splice junctions NOT included", "Erythranthe_guttata_JGI_v2.0", false], ["Escherichia coli K12 (eschColi_K12)", "eschColi_K12", false], ["Fly (Drosophila melanogaster): dm3 Full", "dm3", false], ["Fly (Drosophila melanogaster): dm6 Full", "dm6", false], ["Foshan strain genomic contigs sequences, AaloF1 assembly. ", "AaloF1", false], ["Genome Reference Consortium Human Reference 38 (snp_tran)", "grch38", false], ["Genome Reference Consortium Mouse Reference 38 (snp_tran)", "grcm38", false], ["Glycine max JGI Glyma1.1 annotation of the chromosome-based Glyma1 assembly - splice junctions NOT included", "Glycine_max_JGI_Glyma1.1_annotation_of_the_chromosome-based_Glyma1_assembly", false], ["Glycine max JGI Wm82.a2.v1 - splice junctions NOT included", "Glycine_max_JGI_Wm82.a2.v1", false], ["Gossypium raimondii JGI v2.1 - splice junctions NOT included", "Gossypium_raimondii_JGI_v2.1", false], ["Hordeum vulgare MIPS - splice junctions NOT included", "Hordeum_vulgare_MIPS", false], ["Horse Jan. 2018 (EquCab3.0/equCab3)", "equCab3", false], ["Human (Homo sapiens): hg19 Full", "hg19", false], ["Human CHM13 2.0 (T2T Consortium) Jan. 2022", "CHM13_T2T_v2.0", false], ["Human Dec. 2013 (GRCh38/hg38) (hg38)", "hg38", false], ["Influenza A virus (A/seal/Mass/1-SC35M/1980(H7N7))", "h7n7_360722", false], ["Lotus japonicus Kazusa 2.5 - splice junctions NOT included", "Lotus_japonicus_Kazusa_2.5", false], ["Manihot esculenta Cassava4 - splice junctions NOT included", "Manihot_esculenta_Cassava4", false], ["Manihot esculenta JGI v6.1 - splice junctions NOT included", "Manihot_esculenta_JGI_v6.1", false], ["Medicago truncatula JCVI 4.0 - splice junctions NOT included", "Medicago_truncatula_JCVI_4.0", false], ["Medicago truncatula JGI Mt4.0v1 - splice junctions NOT included", "Medicago_truncatula_JGI_Mt4.0v1", false], ["Mouse (Mus Musculus): mm10 Full", "mm10", false], ["Mouse (Mus Musculus): mm39 Full", "mm39", false], ["Mouse (Mus Musculus): mm9 Full", "mm9", false], ["Mouse (Mus musculus): mm9 with ERCC spike-in", "mm9_ERCC", false], ["Musa acuminata Banana Genome v1.0 - splice junctions NOT included", "Musa_acuminata_Banana_Genome_v1.0", false], ["Musa acuminata Banana Genome v2.0 - splice junctions NOT included", "Musa_acuminata_Banana_Genome_v2.0", false], ["Musa acuminata Genescope-Cirad - splice junctions NOT included", "Musa_acuminata_Genescope-Cirad", false], ["Nelumbo nucifera LOTUS-DB v1.1 - splice junctions NOT included", "Nelumbo_nucifera_LOTUS-DB_v1.1", false], ["Oikopleura dioica (od01)", "od01", false], ["Oryza brachyantha Ensembl Plants v1.4b - splice junctions NOT included", "Oryza_brachyantha_Ensembl_Plants_v1.4b", false], ["Oryza sativa ssp. indica MBKBASE v1.0 - splice junctions NOT included", "Oryza_sativa_ssp._indica_MBKBASE_v1.0", false], ["Ostreococcus lucimarinus JGI v2.0 assembly and annotation - splice junctions NOT included", "Ostreococcus_lucimarinus_JGI_v2.0_assembly_and_annotation", false], ["Physcomitrella patens JGI v3.3 - splice junctions NOT included", "Physcomitrella_patens_JGI_v3.3", false], ["Pig Aug. 2011 (SGSC Sscrofa10.2/susScr3) (susScr3)", "susScr3", false], ["Pig Feb. 2017 (Sscrofa11.1/susScr11) (susScr11)", "susScr11", false], ["Populus trichocarpa JGI v3.1 - splice junctions NOT included", "Populus_trichocarpa_JGI_v3.1", false], ["Rat (Rattus norvegicus): rn5", "rn5", false], ["Rat Jul. 2014 (RGSC 6.0/rn6) (rn6)", "rn6", false], ["Rattus norvegicus Nov. 2020 (mRatBN7.2/rn7)", "rn7", false], ["Ricinus communis JGI v0.1 - splice junctions NOT included", "Ricinus_communis_JGI_v0.1", false], ["Rock pigeon Dec 2017 (Cliv_2.1/colLiv2)", "colLiv2.1", false], ["S. cerevisiae Apr. 2011 (SacCer_Apr2011/sacCer3) (sacCer3)", "sacCer3", false], ["S. lycopersicum (Tomato) Feb 2019 (SL4.0)", "SL4.0", false], ["SARS-CoV-2 isolate Wuhan-Hu-1, complete genome (NC_045512)", "NC_045512.2", false], ["Saccharum spontaneum v20190103 - splice junctions NOT included", "Saccharum_spontaneum_v20190103", false], ["Schrenkiella parvula Thellungiella v2.0 (TpV84) - splice junctions NOT included", "Schrenkiella_parvula_Thellungiella_v2.0_TpV84", false], ["Setaria italica JGI 8.3X chromosome-scale assembly release 2.0, annotation version 2.1 - splice junctions NOT included", "Setaria_italica_JGI_8.3X_chromosome-scale_assembly_release_2.0_annotation_version_2.1", false], ["Solanum lycopersicum ITAG 2.3 - splice junctions NOT included", "Solanum_lycopersicum_ITAG_2.3", false], ["Solanum lycopersicum Sol Genomics itag2.4 - splice junctions NOT included", "Solanum_lycopersicum_Sol_Genomics_itag2.4", false], ["Solanum tuberosum JGI v4.03 - splice junctions NOT included", "Solanum_tuberosum_JGI_v4.03", false], ["Sorghum bicolor JGI 1.4 - splice junctions NOT included", "Sorghum_bicolor_JGI_1.4", false], ["Sorghum bicolor JGI v3.1 - splice junctions NOT included", "Sorghum_bicolor_JGI_v3.1", false], ["Thellungiella parvula TpV84 - splice junctions NOT included", "Thellungiella_parvula_TpV84", false], ["Triticum turgidum Svevo v1.0 - splice junctions NOT included", "Triticum_turgidum_Svevo_v1.0", false], ["Vigna radiata var. radiata LIS v6 - splice junctions NOT included", "Vigna_radiata_var._radiata_LIS_v6", false], ["West African lungfish Jul 2021 (Protopterus annectens, PAN1.0) (GCF_019279795.1)", "GCF_019279795.1", false], ["Xenopus tropicalis (xenTro9.1)", "xenTro9.1", false], ["Zebrafish Jul. 2010 (Zv9/danRer7) (danRer7)", "danRer7", false], ["Zebrafish May 2017 (GRCz11/danRer11) (danRer11)", "danRer11", false], ["Zebrafish Sep. 2014 (GRCz10/danRer10) (danRer10)", "danRer10", false], ["Zostera marina JGI v2.2 - splice junctions NOT included", "Zostera_marina_JGI_v2.2", false], ["anoGam3", "anoGam3", false], ["bosTau8", "bosTau8", false], ["bosTau9", "bosTau9", false], ["canFam3", "canFam3", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "history_item", "argument": null, "type": "data", "label": "Select the reference genome", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "reference_genome_source", "argument": null, "type": "select", "label": "Source for the reference genome to align against", "help": "Built-in references were created using default options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "indexed", "options": [["Use a built-in genome", "indexed", true], ["Use a genome from history", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "max_primary", "argument": "-k", "type": "integer", "label": "Primary alignments", "help": "Search for at most K distinct, primary alignments for each read. Primary alignments mean alignments whose alignment score is equal or higher than any other alignments. The search terminates when it can't find more distinct valid alignments, or when it finds K, whichever happens first.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "alignment_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "SelectToolParameter", "name": "function_type", "argument": null, "type": "select", "label": "Function type", "help": "Sets a function governing the maximum number of ambiguous characters", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "C", "options": [["Constant", "C", false], ["Linear [f(x) = y + z * x]", "L", false], ["Square root [f(x) = y + z * x\u00b2]", "S", false], ["Natural logarithm [f(x) = y + z * log(x)]", "G", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "constant_term", "argument": null, "type": "integer", "label": "Constant term (y)", "help": "Sets a function governing the maximum number of ambiguous characters", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "coefficient", "argument": null, "type": "integer", "label": "Coefficient (z)", "help": "Sets a function governing the maximum number of ambiguous characters", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "ignore_quals", "argument": "--ignore-quals", "type": "boolean", "label": "Ignore quality values", "help": "When calculating a mismatch penalty, always consider the quality value at the mismatched position to be the highest possible, regardless of the actual value. I.e. input is treated as though all quality values are high. This is also the default behavior when the input doesn't specify quality values.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--ignore-quals", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "skip_forward", "argument": "--nofw", "type": "boolean", "label": "Skip forward strand of reference", "help": "If --nofw is specified, hisat will not attempt to align unpaired reads to the forward (Watson) reference strand. In paired-end mode, --nofw and --norc pertain to the fragments; i.e. specifying --nofw causes hisat to explore only those paired-end configurations corresponding to fragments from the reverse-complement (Crick) strand.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--nofw", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "skip_reverse", "argument": "--norc", "type": "boolean", "label": "Skip reference strand of reference", "help": "If --norc is specified, hisat will not attempt to align unpaired reads against the reverse-complement (Crick) reference strand. In paired-end mode, --nofw and --norc pertain to the fragments; i.e. specifying --nofw causes hisat to explore only those paired-end configurations corresponding to fragments from the reverse-complement (Crick) strand.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--norc", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "alignment_options_selector", "argument": null, "type": "select", "label": "Alignment options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify alignment parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "input_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "IntegerToolParameter", "name": "skip", "argument": "-s", "type": "integer", "label": "Skip the first N reads or pairs in the input", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "stop_after", "argument": "-u", "type": "integer", "label": "Stop after aligning N reads", "help": "Align the first N reads or read pairs from the input (after the first N reads or pairs have been skipped), then stop.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "trim_five", "argument": "-5", "type": "integer", "label": "Trim 5' end", "help": "Trim N bases from 5' (left) end of each read before alignment", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "trim_three", "argument": "-3", "type": "integer", "label": "Trim 3' end", "help": "Trim N bases from 3' (right) end of each read before alignment", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "input_options_selector", "argument": null, "type": "select", "label": "Input options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify input parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "scoring_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "SelectToolParameter", "name": "function_type", "argument": null, "type": "select", "label": "Function type", "help": "Sets a function governing the minimum alignment score needed for an alignment to be considered \"valid\" (i.e. good enough to report).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "C", "options": [["Constant", "C", false], ["Linear [f(x) = y + z * x]", "L", false], ["Square root [f(x) = y + z * x\u00b2]", "S", false], ["Natural logarithm [f(x) = y + z * log(x)]", "G", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "constant_term", "argument": null, "type": "integer", "label": "Constant term (y)", "help": "Sets a function governing the minimum alignment score needed for an alignment to be considered \"valid\" (i.e. good enough to report).", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "coefficient", "argument": null, "type": "integer", "label": "Coefficient (z)", "help": "Sets a function governing the minimum alignment score needed for an alignment to be considered \"valid\" (i.e. good enough to report).", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "match_bonus", "argument": "--ma", "type": "integer", "label": "Set match bonus", "help": "In local mode N is added to the alignment score for each position where a read character aligns to a reference character and the characters match. Not used in end-to-end mode", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_mismatch", "argument": "--mp", "type": "integer", "label": "Maximum mismatch penalty", "help": "Sets the maximum mismatch penalty. A number less than or equal to MX and greater than or equal to MN is subtracted from the alignment score for each position where a read character aligns to a reference character, the characters do not match, and neither is an N. If --ignore-quals is specified, the number subtracted quals MX. Otherwise, the number subtracted is MN + floor( (MX-MN)(MIN(Q, 40.0)/40.0) ) where Q is the Phred quality value.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "6", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_mismatch", "argument": "--mp", "type": "integer", "label": "Minimum mismatch penalty", "help": "Sets the minimum mismatch penalty. A number less than or equal to MX and greater than or equal to MN is subtracted from the alignment score for each position where a read character aligns to a reference character, the characters do not match, and neither is an N. If --ignore-quals is specified, the number subtracted quals MX. Otherwise, the number subtracted is MN + floor( (MX-MN)(MIN(Q, 40.0)/40.0) ) where Q is the Phred quality value.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ambiguous_penalty", "argument": "--np", "type": "integer", "label": "Ambiguous read penalty", "help": "Sets penalty for positions where the read, reference, or both, contain an ambiguous character such as N", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "soft_clip_penalty_max", "argument": "--sp", "type": "integer", "label": "Maximum soft-clipping penalty", "help": "Sets the maximum (MX) penalty for soft-clipping per base. A number less than or equal to MX and greater than or equal to MN is subtracted from the alignment score for each position. The number subtracted is MN + floor( (MX-MN)(MIN(Q, 40.0)/40.0) ) where Q is the Phred quality value.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "soft_clip_penalty_min", "argument": "--sp", "type": "integer", "label": "Minimum soft-clipping penalty", "help": "Sets the minimum (MN) penalty for soft-clipping per base. A number less than or equal to MX and greater than or equal to MN is subtracted from the alignment score for each position. The number subtracted is MN + floor( (MX-MN)(MIN(Q, 40.0)/40.0) ) where Q is the Phred quality value.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "read_open_penalty", "argument": "--rdg", "type": "integer", "label": "Read gap open penalty.", "help": "A read gap of length N gets a penalty of [open_penalty] + N * [extend_penalty]", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "read_extend_penalty", "argument": "--rdg", "type": "integer", "label": "Read gap extend penalty.", "help": "A read gap of length N gets a penalty of [open_penalty] + N * [extend_penalty]", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ref_open_penalty", "argument": "--rfg", "type": "integer", "label": "Reference gap open penalty.", "help": "A reference gap of length N gets a penalty of [open_penalty] + N * [extend_penalty]", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ref_extend_penalty", "argument": "--rfg", "type": "integer", "label": "Reference gap extend penalty.", "help": "A reference gap of length N gets a penalty of [open_penalty] + N * [extend_penalty]", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "scoring_options_selector", "argument": null, "type": "select", "label": "Scoring options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify scoring parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "spliced_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "IntegerToolParameter", "name": "canonical_penalty", "argument": null, "type": "integer", "label": "Penalty for canonical splice sites", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "noncanonical_penalty", "argument": null, "type": "integer", "label": "Penalty for non-canonical splice sites", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "function_type", "argument": null, "type": "select", "label": "Penalty for long introns with canonical splice sites", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "C", "options": [["Constant", "C", false], ["Linear [f(x) = y + z * x]", "L", false], ["Square root [f(x) = y + z * x\u00b2]", "S", false], ["Natural logarithm [f(x) = y + z * log(x)]", "G", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "constant_term", "argument": null, "type": "integer", "label": "Constant term (y)", "help": "Constant term for long canonical introns", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "coefficient", "argument": null, "type": "integer", "label": "Coefficient (z)", "help": "Coefficient for long canonical introns", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "nc_function_type", "argument": null, "type": "select", "label": "Penalty for long introns with noncanonical splice sites.", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "G", "options": [["Constant", "C", false], ["Linear [f(x) = y + z * x]", "L", false], ["Square root [f(x) = y + z * x\u00b2]", "S", false], ["Natural logarithm [f(x) = y + z * log(x)]", "G", true]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "nc_constant_term", "argument": null, "type": "integer", "label": "Constant term (y)", "help": "Constant term for long non-canonical introns", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-8", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "nc_coefficient", "argument": null, "type": "integer", "label": "Coefficient (z)", "help": "Coefficient for long non-canonical introns", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_intron", "argument": null, "type": "integer", "label": "Minimum intron length", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_intron", "argument": null, "type": "integer", "label": "Maximum intron length", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500000", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "rna_strandness", "argument": "--rna-strandness", "type": "select", "label": "Specify strand-specific information", "help": "'F' means a read corresponds to a transcript. 'R' means a read corresponds to the reverse complemented counterpart of a transcript.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["FR Unstranded", "", false], ["First Strand (R/RF)", "R", false], ["Second Strand (F/FR)", "F", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "no_spliced_alignment", "argument": "--no-spliced-alignment", "type": "boolean", "label": "Disable spliced alignment", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-spliced-alignment", "falsevalue": ""}, {"model_class": "DataToolParameter", "name": "known_splice_gtf", "argument": null, "type": "data", "label": "GTF file with known splice sites", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gtf"], "edam": {"edam_formats": ["format_2306"], "edam_data": ["data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "tma", "argument": null, "type": "select", "label": "Transcriptome assembly reporting", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Use default reporting.", "", false], ["Report only those alignments within known transcripts.", "--tmo", false], ["Report alignments tailored for transcript assemblers including StringTie.", "--dta", false], ["Report alignments tailored specifically for Cufflinks.", "--dta-cufflinks", false]], "display": "radio", "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "spliced_options_selector", "argument": null, "type": "select", "label": "Spliced alignment parameters", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify spliced alignment parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "paired_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "IntegerToolParameter", "name": "minins", "argument": "--minins", "type": "integer", "label": "Minimum fragment length", "help": "The minimum fragment length for valid paired-end alignments. 0 sets no minimum.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maxins", "argument": "--maxins", "type": "integer", "label": "Maximum fragment length", "help": "The maximum fragment length for valid paired-end alignments", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "no_mixed", "argument": "--no-mixed", "type": "boolean", "label": "Disable finding alignments for individual mates.", "help": "By default, when hisat2 cannot find a concordant or discordant alignment for a pair, it then tries to find alignments for the individual mates", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-mixed", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "no_discordant", "argument": "--no-discordant", "type": "boolean", "label": "Disable looking for discordant alignments.", "help": "By default, hisat2 looks for discordant alignments if it cannot find any concordant alignments. A discordant alignment is an alignment where both mates align uniquely, but that does not satisfy the paired-end constraints", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-discordant", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "dovetail", "argument": "--dovetail", "type": "boolean", "label": "Mates not dovetail", "help": "If the mates \"dovetail\", that is if one mate alignment extends past the beginning of the other such that the wrong mate begins upstream, consider that to be concordant.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--dovetail", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "contain", "argument": "--no-contain", "type": "boolean", "label": "Mates cannot contain others", "help": "If one mate alignment contains the other, consider that to be non-concordant.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-contain", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "overlap", "argument": "--no-overlap", "type": "boolean", "label": "Mates cannot overlap", "help": "If one mate alignment overlaps the other at all, consider that to be non-concordant.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-overlap", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "paired_options_selector", "argument": null, "type": "select", "label": "Paired alignment parameters", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use default values", "defaults", false], ["Specify paired alignment parameters", "advanced", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "output_alignments", "format": "bam", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "mapping", "panel_section_name": "Mapping", "form_style": "regular"}