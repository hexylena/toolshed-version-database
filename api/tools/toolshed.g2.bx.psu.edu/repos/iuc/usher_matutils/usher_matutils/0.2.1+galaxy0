{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/usher_matutils/usher_matutils/0.2.1+galaxy0", "name": "UShER matUtils", "version": "0.2.1+galaxy0", "description": "analyze, edit, and manipulate mutation annotated tree files", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "usher", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "usher_matutils", "owner": "iuc", "changeset_revision": "e0a0a473fc1e", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "mutation_annotation_file", "argument": null, "type": "data", "label": "Mutation-annotated tree object", "help": "Load a mutation annotated tree file, in protocol-buffers format (protobuf3).", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["protobuf3"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "matutils_mode", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "extract", "inputs": [{"model_class": "Conditional", "name": "operation_mode", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "samples", "inputs": [{"model_class": "DataToolParameter", "name": "samples", "argument": "--samples", "type": "data", "label": "Select samples by explicitly naming them, one per line in a plain text file", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "prune", "argument": "--prune", "type": "boolean", "label": "Remove the selected samples", "help": "Remove the selected samples instead of keeping them in the output files", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--prune", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "clade", "inputs": [{"model_class": "TextToolParameter", "name": "clade", "argument": "--clade", "type": "text", "label": "Select samples by membership in any of the indicated clade(s), comma delimited- e.g. -c clade1,clade2", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "prune", "argument": "--prune", "type": "boolean", "label": "Remove the selected samples", "help": "Remove the selected samples instead of keeping them in the output files", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--prune", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "mutation", "inputs": [{"model_class": "TextToolParameter", "name": "mutation", "argument": "--mutation", "type": "text", "label": "Select samples by whether they contain any of the indicated mutation(s), comma delimited- e.g. -m mutation1,mutation2", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "prune", "argument": "--prune", "type": "boolean", "label": "Remove the selected samples", "help": "Remove the selected samples instead of keeping them in the output files", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--prune", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "max-epps", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_epps", "argument": "--max-epps", "type": "integer", "label": "Select samples by whether they have less than or equal to the maximum number of indicated equally parsimonious placements", "help": "", "refresh_on_change": false, "min": 0, "max": 1000, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "prune", "argument": "--prune", "type": "boolean", "label": "Remove the selected samples", "help": "Remove the selected samples instead of keeping them in the output files", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--prune", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "max-parsimony", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_parsimony", "argument": "--max-parsimony", "type": "integer", "label": "Select samples by whether they have less than or equal to the indicated maximum parsimony score (terminal branch length)", "help": "", "refresh_on_change": false, "min": 0, "max": 1000, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "prune", "argument": "--prune", "type": "boolean", "label": "Remove the selected samples", "help": "Remove the selected samples instead of keeping them in the output files", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--prune", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "nearest-k", "inputs": [{"model_class": "TextToolParameter", "name": "nearest_k", "argument": "--nearest-k", "type": "text", "label": "Select a specific sample and X context samples, formatted as 'sample_name:X'", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "prune", "argument": "--prune", "type": "boolean", "label": "Remove the selected samples", "help": "Remove the selected samples instead of keeping them in the output files", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--prune", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "max-branch-length", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_branch_length", "argument": "--max-branch-length", "type": "integer", "label": "Remove samples which have branches of greater than the indicated length in their ancestry", "help": "", "refresh_on_change": false, "min": 0, "max": 1000, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "operation", "argument": null, "type": "select", "label": "Operation mode", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "samples", "options": [["Select samples by naming them", "samples", false], ["Select samples by clade(s)", "clade", false], ["Select samples by mutation", "mutation", false], ["Select samples by parsimonious placements", "max-epps", false], ["Select samples by parsimonious score", "max-parsimony", false], ["Select samples by sample and context", "nearest-k", false], ["Remove samples by branch length", "max-branch-length", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "get_representative", "argument": "--get-representative", "type": "boolean", "label": "Select two representative samples per clade", "help": " Toggle to automatically select two representative samples per clade currently included in the tree, pruning all other samples from the tree. Applies after other selection steps", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--get-representative", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "resolve_polytomies", "argument": "--resolve-polytomies", "type": "boolean", "label": "Resolve all polytomies", "help": "Resolve all polytomies by assigning branch length 0 relationships arbitrarily. Applied after selection; prevents recondensing of the MAT", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--resolve-polytomies", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "outputs_extract", "argument": null, "type": "select", "label": "Select the desired output", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Write a simple text file containing selected sample names (--used-samples)", "used-samples", false], ["Write the path of mutations defining each sample in the subtree (--sample-paths)", "sample-paths", false], ["Write the path of mutations defining each clade in the subtree (--clade-paths)", "clade-paths", false], ["Write mutations assigned to each node in the subtree in depth-first traversal order (--all-paths)", "all-paths", false], ["Output VCF file representing selected subtree (--write-vcf)", "write-vcf", false], ["Output VCF file representing selected subtree without including genotype column (--write-vcf --no-genotypes) ", "write-vcf-no-genotypes", false], ["Write the selected subtree as a mutation annotated tree (--write-math)", "write-mat", false], ["Write the selected subtree as a collapsed mutation annotated tree (--write-mat --collapsed)", "write-mat-collapsed", false], ["Write an Auspice-compatbile json representing the selected subtree (--write-json)", "write-json", false], [" Write a newick string representing the selected subtree (--write-tree)", "write-tree", false], [" Write a newick string representing the selected subtree without recalculating branch lengths (--write-tree --retain-branch)", "write-tree-retain-branch", false]], "display": "checkboxes", "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "summary", "inputs": [{"model_class": "SelectToolParameter", "name": "summary_options", "argument": null, "type": "select", "label": "Select statistics and attribute information", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Number of nodes, number of samples, number of condensed nodes, and total tree parsimony", "general", false], ["Samples in the tree and their parsimony score (--samples)", "samples", false], ["Clades and the count of associated samples in the tree (--clades)", "clades", false], ["Mutations in the tree and their occurrence count (--mutations)", "mutations", false], ["Potentially problematic nodes (--aberrant)", "aberrant", false]], "display": "checkboxes", "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "annotate", "inputs": [{"model_class": "DataToolParameter", "name": "clade_names", "argument": "--clade-names", "type": "data", "label": "File containing clade asssignments of samples", "help": "An algorithm automatically locates and annotates clade root nodes.", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "clade_to_nid", "argument": "--clade-to-nid", "type": "data", "label": "File mapping clades to their respective internal node identifiers", "help": "Internal node names are not maintained when saving and loading from a .pb file. It is not guaranteed that internal node names will correspond directly between two .pb files, so use the direct assignment method with caution.", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "FloatToolParameter", "name": "set_overlap", "argument": "--set-overlap", "type": "float", "label": "Minimum fraction of the lineage samples", "help": "Minimum fraction of the lineage samples that should be desecendants of the assigned clade root. Used only with --clade-names", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "clear_current", "argument": "--clear-current", "type": "boolean", "label": "Remove current annotations", "help": "Use to remove current annotations before applying new annotations.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--clear-current", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "allele_frequency", "argument": "--allele-frequency", "type": "float", "label": "Minimum allele frequency for finding the best clade root", "help": "Minimum allele frequency in input samples for finding the best clade root. Used only with 'remove current annotation'. Used only with --clade-names", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mask_frequency", "argument": "--mask-frequency", "type": "float", "label": "Minimum allele frequency for being masked", "help": "Minimum allele frequency in input samples that should be masked for finding the best clade root. Used only with --clade-names", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "clip_sample_frequency", "argument": "--clip-sample-frequency", "type": "float", "label": "Clip sample frequency", "help": "Maximum proportion of samples in a branch that are exemplars from --clade-names to consider when sorting candidate clade root nodes.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "uncertainty", "inputs": [{"model_class": "DataToolParameter", "name": "samples", "argument": "--samples", "type": "data", "label": "Select samples by explicitly naming them, one per line in a plain text file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "uncertainty_options", "argument": null, "type": "select", "label": "Metrics for sample placement certainty", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Total tree parsimony score (--get-parsimony)", "get-parsimony", false], ["Number of equally parsimonious placements for each sample (--find-epps)", "find-epps", false], ["Neighborhood size scores (--find-neighborhood)", "find-neighborhood", false]], "display": "checkboxes", "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "mask", "inputs": [{"model_class": "DataToolParameter", "name": "restricted_samples", "argument": "--restricted-samples", "type": "data", "label": "Select samples by explicitly naming them, one per line in a plain text file", "help": "Sample names to restrict. Use to perform masking", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "rename_samples", "argument": "--rename-samples", "type": "data", "label": "TSV file containing names of the samples to be renamed and their new names", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "simplify", "argument": "--simplify", "type": "boolean", "label": "Use to automatically remove identifying information from the tree, including all sample names and private mutations", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--simplify", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "options_mode", "argument": null, "type": "select", "label": "matUtils mode", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "extract", "options": [["Extract: subsetting and converting a MAT pb to other file formats", "extract", false], ["Summary: get basic statistics and attribute information about the MAT", "summary", false], ["Annotate: adding clade annotation information to the MAT", "annotate", false], ["Uncertainty: calculates two specific metrics for sample placement certainty", "uncertainty", false], ["Mask: mask specific samples out of the MAT, removing their mutations from visibility", "mask", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "selected_samples", "format": "txt", "label": "${tool.name} on ${on_string}: selected samples", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "selected_samples.txt", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "path_mutations", "format": "tabular", "label": "${tool.name} on ${on_string}: sample mutations", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "path_mutations.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "path_clades", "format": "tabular", "label": "${tool.name} on ${on_string}: clade mutations", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "path_clades.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "all_paths", "format": "txt", "label": "${tool.name} on ${on_string}: node mutations", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "all_paths.txt", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "subtree_vcf", "format": "vcf", "label": "${tool.name} on ${on_string}: subtree", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "subtree_vcf.vcf", "edam_format": "format_3016", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "subtree_no_genotype_vcf", "format": "vcf", "label": "${tool.name} on ${on_string}: subtree without genotype", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "subtree_vcf_no_genotypes.vcf", "edam_format": "format_3016", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "mutation_annotated", "format": "protobuf3", "label": "${tool.name} on ${on_string}: mutation annotated tree", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "mutation_annotated.pb", "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "mutation_annotated_collapsed", "format": "protobuf3", "label": "${tool.name} on ${on_string}: mutation annotated tree collapsed", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "mutation_annotated_collapsed.pb", "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "subtree_json", "format": "json", "label": "${tool.name} on ${on_string}: subtree (json)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "subtree_json.json", "edam_format": "format_3464", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "tree_newick", "format": "newick", "label": "${tool.name} on ${on_string}: subtree (newick)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "tree_newick.nh", "edam_format": "format_1910", "edam_data": "data_0872", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "tree_newick_retain_branch", "format": "newick", "label": "${tool.name} on ${on_string}: subtree retain branch (newick)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "tree_newick_retain_branch.nh", "edam_format": "format_1910", "edam_data": "data_0872", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "general_stats", "format": "txt", "label": "${tool.name} on ${on_string}: general stats", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output_stdout.txt", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "samples_stats", "format": "tabular", "label": "${tool.name} on ${on_string}: samples stats", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "samples_stats.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "clades_stats", "format": "tabular", "label": "${tool.name} on ${on_string}: clades stats", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "clades_stats.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "mutations_stats", "format": "tabular", "label": "${tool.name} on ${on_string}: mutations stats", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "mutations_stats.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "aberrant_stats", "format": "tabular", "label": "${tool.name} on ${on_string}: aberrant stats", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "aberrant_stats.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_mat", "format": "protobuf3", "label": "${tool.name} on ${on_string}: mutation tree", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output_mat.pb", "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "total_parsimony_tree", "format": "txt", "label": "${tool.name} on ${on_string}: parsimony tree", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output_stdout.txt", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "equally_parsimonious", "format": "tabular", "label": "${tool.name} on ${on_string}: equally parsimonious placements", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "equally_parsimonious.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "neighbourhood", "format": "tabular", "label": "${tool.name} on ${on_string}: neighborhood size scores", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "neighborhood.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "phylogenetics", "panel_section_name": "Phylogenetics", "form_style": "regular"}