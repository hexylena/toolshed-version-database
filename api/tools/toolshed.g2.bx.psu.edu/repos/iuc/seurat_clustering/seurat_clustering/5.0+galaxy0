{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/seurat_clustering/seurat_clustering/5.0+galaxy0", "name": "Seurat Find Clusters", "version": "5.0+galaxy0", "description": "- Neighbors and Markers", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "seurat_clustering", "owner": "iuc", "changeset_revision": "94f1b9c7286f", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "seurat_rds", "argument": null, "type": "data", "label": "Input file with the Seurat object", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["rds"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "method", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "FindNeighbors", "inputs": [{"model_class": "TextToolParameter", "name": "reduction", "argument": "reduction", "type": "text", "label": "Name of reduction to use", "help": "default is pca", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "pca", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "dims", "argument": "dims", "type": "integer", "label": "Number of dimensions from reduction to use as input", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "k_param", "argument": null, "type": "integer", "label": "Set k for k-nearest neighbors", "help": "(k.param)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "nn_method", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "rann", "inputs": [{"model_class": "FloatToolParameter", "name": "nn_eps", "argument": null, "type": "float", "label": "Set error bound for nearest neighbor search", "help": "(nn.eps)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "annoy", "inputs": [{"model_class": "SelectToolParameter", "name": "annoy_metric", "argument": null, "type": "select", "label": "Distance metric for annoy method", "help": "(annoy.metric)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "euclidean", "options": [["euclidean", "euclidean", true], ["cosine", "cosine", false], ["manhattan", "manhattan", false], ["hamming", "hamming", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "nn_method", "argument": null, "type": "select", "label": "Method for finding nearest neighbors", "help": "(nn.method)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "annoy", "options": [["rann", "rann", false], ["annoy", "annoy", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "adv", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "n_trees", "argument": null, "type": "integer", "label": "Number of trees for nearest neighbor search", "help": "(n.trees)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "l2_norm", "argument": null, "type": "boolean", "label": "Take l2Norm of data", "help": "(l2.norm)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "TRUE", "falsevalue": "FALSE"}, {"model_class": "Conditional", "name": "compute_snn", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "FALSE", "inputs": [{"model_class": "Conditional", "name": "distance_matrix", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "FALSE", "inputs": [{"model_class": "BooleanToolParameter", "name": "return_neighbor", "argument": null, "type": "boolean", "label": "Return result as neighbor object", "help": "(return.neighbor)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "TRUE", "falsevalue": "FALSE"}]}, {"model_class": "ConditionalWhen", "value": "TRUE", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "distance_matrix", "argument": null, "type": "select", "label": "Use a distance matrix", "help": "(distance.matrix)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "FALSE", "options": [["No", "FALSE", true], ["Yes", "TRUE", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "TRUE", "inputs": [{"model_class": "FloatToolParameter", "name": "prune_snn", "argument": null, "type": "float", "label": "Set cutoff for Jaccard index when computing overlap for SNN", "help": "0 no pruning, 1 prune everything (prune.SNN)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "distance_matrix", "argument": null, "type": "boolean", "label": "Use a distance matrix", "help": "(distance.matrix)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "TRUE", "falsevalue": "FALSE"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "compute_snn", "argument": null, "type": "select", "label": "Compute the shared nearest neighbor (SNN) graph", "help": "(compute.snn)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "TRUE", "options": [["No", "FALSE", false], ["Yes", "TRUE", true]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "ConditionalWhen", "value": "FindMultiModalNeighbors", "inputs": [{"model_class": "TextToolParameter", "name": "reduction_1", "argument": null, "type": "text", "label": "Reduction to use for first modality", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "pca", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "dims_1", "argument": null, "type": "integer", "label": "Number of dimensions to use from first reduction", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "reduction_2", "argument": null, "type": "text", "label": "Reduction to use for second modality", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "apca", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "dims_2", "argument": null, "type": "integer", "label": "Number of dimensions to use from second reduction", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "k_nn", "argument": null, "type": "integer", "label": "Number of multimodal neighbors to compute", "help": "(k.nn)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "Section", "name": "adv", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "knn_graph_name", "argument": null, "type": "text", "label": "Name for multimodal knn graph", "help": "(knn.graph.name)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "wknn", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "snn_graph_name", "argument": null, "type": "text", "label": "Name for multimodal snn graph", "help": "(snn.graph.name)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "wsnn", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "weighted_nn_name", "argument": null, "type": "text", "label": "Name for multimodal neighbor object", "help": "(weighted.nn.name)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "weighted.nn", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "modality_weight_name", "argument": null, "type": "text", "label": "Name for storing modality weights in metadata", "help": "(modality.weight.name)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "knn_range", "argument": null, "type": "integer", "label": "Number of approximate neighbors to compute", "help": "(knn.range)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "200", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "FindClusters", "inputs": [{"model_class": "SelectToolParameter", "name": "modularity_fxn", "argument": null, "type": "select", "label": "Select modularity function", "help": "(modularity.fxn)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["standard", "1", true], ["alternative", "2", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "resolution", "argument": "resolution", "type": "float", "label": "Resolution", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.8", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "algorithm", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "4", "inputs": [{"model_class": "IntegerToolParameter", "name": "initial_membership", "argument": null, "type": "integer", "label": "Set initial membership when using Python leidenalg function", "help": "defaults to singleton partition (initial.membership)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "node_sizes", "argument": null, "type": "integer", "label": "Set node size when using Python leidenalg function", "help": "(node.sizes)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "method_cluster", "argument": null, "type": "select", "label": "Method for leiden", "help": "matrix is fast for small data, enable igraph for larger data (method.cluster)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "matrix", "options": [["matrix", "matrix", true], ["igraph", "igraph", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "1", "inputs": []}, {"model_class": "ConditionalWhen", "value": "2", "inputs": []}, {"model_class": "ConditionalWhen", "value": "3", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "algorithm", "argument": "algorithm", "type": "select", "label": "Algorithm for modularity optimization", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["1. Original Louvain", "1", true], ["2. Louvain with multilevel refinement", "2", false], ["3. SLM", "3", false], ["4. Leiden", "4", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "n_start", "argument": null, "type": "integer", "label": "Number of random starts", "help": "(n.start)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_iter", "argument": null, "type": "integer", "label": "Maximal number of iterations per random start", "help": "(n.iter)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_seed", "argument": null, "type": "integer", "label": "Set random seed", "help": "(random.seed)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "group_singletons", "argument": null, "type": "boolean", "label": "Group singletons into nearest cluster", "help": "Set to false to create a cluster for all singletons (group.singletons)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "TRUE", "falsevalue": "FALSE"}, {"model_class": "TextToolParameter", "name": "graph_name", "argument": null, "type": "text", "label": "Name of graph to use for the clustering algorithm", "help": "(graph.name)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "cluster_name", "argument": null, "type": "text", "label": "Name for output clusters", "help": "(cluster.name)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "FindAllMarkers", "inputs": [{"model_class": "DataToolParameter", "name": "features", "argument": "features", "type": "data", "label": "Features to test", "help": "text file with one feature on each line, leave empty to use all genes", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt", "tabular"], "edam": {"edam_formats": ["format_2330", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "FloatToolParameter", "name": "logfc_threshold", "argument": null, "type": "float", "label": "Minimum log-fold difference to test", "help": "(logfc.threshold)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "test_use", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "wilcox", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "wilcox_limma", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "bimod", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "roc", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "return_thresh", "argument": null, "type": "float", "label": "Only return markers with a p-value below or power above this threshold", "help": "(return.thresh)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "t", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "negbinom", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "counts", "options": [["counts", "counts", true], ["data", "data", false], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "latent_vars", "argument": null, "type": "text", "label": "Select variables to test", "help": "(latent.vars)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_cells_feature", "argument": null, "type": "integer", "label": "Minimum number of cells expressing the feature in at least one cluster", "help": "(min.cells.feature)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "poisson", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "counts", "options": [["counts", "counts", true], ["data", "data", false], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "latent_vars", "argument": null, "type": "text", "label": "Select variables to test", "help": "(latent.vars)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_cells_feature", "argument": null, "type": "integer", "label": "Minimum number of cells expressing the feature in at least one cluster", "help": "(min.cells.feature)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "LR", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "latent_vars", "argument": null, "type": "text", "label": "Select variables to test", "help": "(latent.vars)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "MAST", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "latent_vars", "argument": null, "type": "text", "label": "Select variables to test", "help": "(latent.vars)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "DESeq2", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "counts", "options": [["counts", "counts", true], ["data", "data", false], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "test_use", "argument": null, "type": "select", "label": "Select test to run", "help": "(test.use)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "wilcox", "options": [["wilcox", "wilcox", true], ["wilcox_limma", "wilcox_limma", false], ["bimod", "bimod", false], ["roc", "roc", false], ["t", "t", false], ["negbinom", "negbinom", false], ["poisson", "poisson", false], ["LR", "LR", false], ["MAST", "MAST", false], ["DESeq2", "DESeq2", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "set_top_markers", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "IntegerToolParameter", "name": "topN", "argument": null, "type": "integer", "label": "Number to show", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "set_top_markers", "argument": null, "type": "select", "label": "Limit output to top N markers per cluster", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["Yes", "true", false], ["No", "false", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "adv", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "base", "argument": "base", "type": "integer", "label": "Base with respect to which logarithms are computed", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "assay", "argument": "assay", "type": "text", "label": "Name of assay to use", "help": "leave blank to use default assay", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "fc_name", "argument": null, "type": "text", "label": "Choose a name for the fold change, average difference, or custom function column", "help": "(fc.name)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_pct", "argument": null, "type": "float", "label": "Minimum percentage of cells genes must be present in to be tested", "help": "(min.pct)", "refresh_on_change": false, "min": 0.0, "max": 100.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_diff_pct", "argument": null, "type": "float", "label": "Minimum difference in percentage of expression between groups for genes to be tested", "help": "defaults to -Inf (min.diff.pct)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "only_pos", "argument": null, "type": "boolean", "label": "Only return positive markers", "help": "(only.pos)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "TRUE", "falsevalue": "FALSE"}, {"model_class": "IntegerToolParameter", "name": "max_cells_per_ident", "argument": null, "type": "integer", "label": "Downsample each identity class to a max number of cells", "help": "defaults to Inf for no downsampling (max.cells.per.ident)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_seed", "argument": null, "type": "integer", "label": "Set a random seed for downsampling", "help": "(random.seed)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_cells_group", "argument": null, "type": "integer", "label": "Minimum number of cells in one group", "help": "(min.cells.group)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "densify", "argument": "densify", "type": "boolean", "label": "Convert to dense matrix before running DE test", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "TRUE", "falsevalue": "FALSE"}]}]}, {"model_class": "ConditionalWhen", "value": "FindMarkers", "inputs": [{"model_class": "Conditional", "name": "cells", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "DataToolParameter", "name": "cells_1", "argument": null, "type": "data", "label": "List of cell names for group 1", "help": "text file with one cell on each line (cells.1)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt", "tabular"], "edam": {"edam_formats": ["format_2330", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "cells_2", "argument": null, "type": "data", "label": "List of cell names for group 2", "help": "text file with one cell on each line (cells.2)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt", "tabular"], "edam": {"edam_formats": ["format_2330", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "cells", "argument": null, "type": "select", "label": "Compare markers for two groups of cells", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["Yes", "true", false], ["No", "false", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "regroup", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "group_by", "argument": null, "type": "text", "label": "Name of identity class to regroup cells into", "help": "a group from the cell metadata to find markers for (group.by)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "group", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "subset_ident", "argument": null, "type": "text", "label": "Identity class to subset before regrouping", "help": "only include cells from this cluster/identity in each new group (subset.ident)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "regroup", "argument": null, "type": "select", "label": "Change cell identities before finding markers", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["Yes", "true", false], ["No", "false", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "ident", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "ident_1", "argument": null, "type": "text", "label": "Identity class to define markers for", "help": "e.g. cluster number or ident group name (ident.1)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "ident_2", "argument": null, "type": "text", "label": "Second identity class to compare", "help": "e.g. comma-separated list of cluster numbers or idents, leave blank to compare ident.1 against all other clusters. (ident.2)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "ident", "argument": null, "type": "select", "label": "Compare markers between clusters of cells", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["Yes", "true", false], ["No", "false", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "DataToolParameter", "name": "features", "argument": "features", "type": "data", "label": "Features to test", "help": "text file with one feature on each line, leave empty to use all genes", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt", "tabular"], "edam": {"edam_formats": ["format_2330", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "FloatToolParameter", "name": "logfc_threshold", "argument": null, "type": "float", "label": "Minimum log-fold difference to test", "help": "(logfc.threshold)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "test_use", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "wilcox", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "wilcox_limma", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "bimod", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "roc", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "return_thresh", "argument": null, "type": "float", "label": "Only return markers with a p-value below or power above this threshold", "help": "(return.thresh)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "t", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "negbinom", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "counts", "options": [["counts", "counts", true], ["data", "data", false], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "latent_vars", "argument": null, "type": "text", "label": "Select variables to test", "help": "(latent.vars)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_cells_feature", "argument": null, "type": "integer", "label": "Minimum number of cells expressing the feature in at least one cluster", "help": "(min.cells.feature)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "poisson", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "counts", "options": [["counts", "counts", true], ["data", "data", false], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "latent_vars", "argument": null, "type": "text", "label": "Select variables to test", "help": "(latent.vars)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_cells_feature", "argument": null, "type": "integer", "label": "Minimum number of cells expressing the feature in at least one cluster", "help": "(min.cells.feature)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "LR", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "latent_vars", "argument": null, "type": "text", "label": "Select variables to test", "help": "(latent.vars)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "MAST", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "latent_vars", "argument": null, "type": "text", "label": "Select variables to test", "help": "(latent.vars)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "DESeq2", "inputs": [{"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "counts", "options": [["counts", "counts", true], ["data", "data", false], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "test_use", "argument": null, "type": "select", "label": "Select test to run", "help": "(test.use)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "wilcox", "options": [["wilcox", "wilcox", true], ["wilcox_limma", "wilcox_limma", false], ["bimod", "bimod", false], ["roc", "roc", false], ["t", "t", false], ["negbinom", "negbinom", false], ["poisson", "poisson", false], ["LR", "LR", false], ["MAST", "MAST", false], ["DESeq2", "DESeq2", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "adv", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "assay", "argument": "assay", "type": "text", "label": "Name of assay to use", "help": "leave blank to use default assay", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "fc_name", "argument": null, "type": "text", "label": "Choose a name for the fold change, average difference, or custom function column", "help": "(fc.name)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_pct", "argument": null, "type": "float", "label": "Minimum percentage of cells genes must be present in to be tested", "help": "(min.pct)", "refresh_on_change": false, "min": 0.0, "max": 100.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_diff_pct", "argument": null, "type": "float", "label": "Minimum difference in percentage of expression between groups for genes to be tested", "help": "defaults to -Inf (min.diff.pct)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "only_pos", "argument": null, "type": "boolean", "label": "Only return positive markers", "help": "(only.pos)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "TRUE", "falsevalue": "FALSE"}, {"model_class": "IntegerToolParameter", "name": "max_cells_per_ident", "argument": null, "type": "integer", "label": "Downsample each identity class to a max number of cells", "help": "defaults to Inf for no downsampling (max.cells.per.ident)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_seed", "argument": null, "type": "integer", "label": "Set a random seed for downsampling", "help": "(random.seed)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_cells_group", "argument": null, "type": "integer", "label": "Minimum number of cells in one group", "help": "(min.cells.group)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "densify", "argument": "densify", "type": "boolean", "label": "Convert to dense matrix before running DE test", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "TRUE", "falsevalue": "FALSE"}]}]}, {"model_class": "ConditionalWhen", "value": "FindConservedMarkers", "inputs": [{"model_class": "TextToolParameter", "name": "ident_1", "argument": null, "type": "text", "label": "Identity class to define markers for", "help": "(ident.1)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "ident1", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "ident_2", "argument": null, "type": "text", "label": "Second identity class for comparison", "help": "leave blank to compare ident.1 to all other cells (ident.2)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "grouping_var", "argument": null, "type": "text", "label": "Grouping variable", "help": "(grouping.var)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "group", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "assay", "argument": "assay", "type": "text", "label": "Name of assay to use", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "RNA", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "slot", "argument": "slot", "type": "select", "label": "Slot to pull data from", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "data", "options": [["counts", "counts", false], ["data", "data", true], ["scale.data", "scale.data", false], ["raw.data", "raw.data", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "min_cells_group", "argument": null, "type": "integer", "label": "Minimum number of cells in one group", "help": "(min.cells.group)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "method", "argument": null, "type": "select", "label": "Method used", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "FindNeighbors", "options": [["Compute nearest neighbors with 'FindNeighbors'", "FindNeighbors", false], ["Compute nearest neighbors for multimodal data with 'FindMultiModalNeighbors'", "FindMultiModalNeighbors", false], ["Identify cell clusters with 'FindClusters'", "FindClusters", false], ["Identify marker genes with 'FindAllMarkers'", "FindAllMarkers", false], ["Identify marker genes for specific groups with 'FindMarkers'", "FindMarkers", false], ["Find markers conserved between groups with 'FindConservedMarkers'", "FindConservedMarkers", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "advanced_common", "type": "section", "title": "Advanced Output", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "show_log", "argument": null, "type": "boolean", "label": "Output Log?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}], "outputs": [{"model_class": "ToolOutput", "name": "rds_out", "format": "rds", "label": "${tool.name} (${method.method}) on ${on_string}: RDS", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "seurat.rds", "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "hidden_output", "format": "txt", "label": "Log file", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "markers_tabular", "format": "csv", "label": "${tool.name} (${method.method}) on ${on_string}: Markers list", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "markers_out.csv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "rna_analysis", "panel_section_name": "RNA Analysis", "form_style": "regular"}