{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/0.4", "name": "JBrowse", "version": "0.4", "description": "genome browser", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "jbrowse", "owner": "iuc", "changeset_revision": "d022577ff9cf", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "genomes", "argument": null, "type": "data", "label": "Fasta Sequence(s)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "standalone", "argument": null, "type": "boolean", "label": "Produce Standalone Instance", "help": "Produce a full, working JBrowse instance or just the data directory. Data dir mode is experimental and intended to be used with Apollo", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "Complete", "falsevalue": "Data Directory"}, {"model_class": "SelectToolParameter", "name": "gencode", "argument": null, "type": "select", "label": "Genetic Code", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["1. The Standard Code", "1", false], ["2. The Vertebrate Mitochondrial Code", "2", false], ["3. The Yeast Mitochondrial Code", "3", false], ["4. The Mold, Protozoan, and Coelenterate Mitochondrial Code and the Mycoplasma/Spiroplasma Code", "4", false], ["5. The Invertebrate Mitochondrial Code", "5", false], ["6. The Ciliate, Dasycladacean and Hexamita Nuclear Code", "6", false], ["9. The Echinoderm and Flatworm Mitochondrial Code", "9", false], ["10. The Euplotid Nuclear Code", "10", false], ["11. The Bacterial, Archaeal and Plant Plastid Code", "11", false], ["12. The Alternative Yeast Nuclear Code", "12", false], ["13. The Ascidian Mitochondrial Code", "13", false], ["14. The Alternative Flatworm Mitochondrial Code", "14", false], ["16. Chlorophycean Mitochondrial Code", "16", false], ["21. Trematode Mitochondrial Code", "21", false], ["22. Scenedesmus obliquus Mitochondrial Code", "22", false], ["23. Thraustochytrium Mitochondrial Code", "23", false], ["24. Pterobranchia Mitochondrial Code", "24", false], ["25. Candidate Division SR1 and Gracilibacteria Code", "25", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Repeat", "name": "track_groups", "type": "repeat", "title": "Track Group", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "category", "argument": null, "type": "text", "label": "Track Category", "help": "Organise your tracks into Categories for a nicer end-user experience", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Default", "area": false, "datalist": []}, {"model_class": "Repeat", "name": "data_tracks", "type": "repeat", "title": "Annotation Track", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "data_format", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "blast", "inputs": [{"model_class": "DataToolParameter", "name": "annotation", "argument": null, "type": "data", "label": "BlastXML Track Data", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["blastxml"], "edam": {"edam_formats": ["format_3331"], "edam_data": ["data_0857"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "blast_parent", "argument": null, "type": "data", "label": "Features used in Blast Search", "help": "in GFF3. This is used  so we know where to map features. E.g. where results of which CDS Protein32 match up to. The query IDs in your blast results should MATCH some feature IDs in your GFF3 file. This is an optional field and is most useful if using JBrowse to display protein blast results on a DNA genome. blastn results don't need this, blastp results on a protein sequence don't need this.", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gff3"], "edam": {"edam_formats": ["format_1975"], "edam_data": ["data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "min_gap", "argument": null, "type": "integer", "label": "Minimum Gap Size", "help": "before a new match_part feature is created", "refresh_on_change": false, "min": 2, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "is_protein", "argument": null, "type": "boolean", "label": "Is this a protein blast search?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "Section", "name": "jbstyle", "type": "section", "title": "JBrowse Styling Options [Advanced]", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "style_classname", "argument": null, "type": "text", "label": "JBrowse style.className", "help": "Set CSS style.className property", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "feature", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "style_label", "argument": null, "type": "text", "label": "JBrowse style.label", "help": "Comma-separated list of case-insensitive feature tags to use for showing the feature's label. The first one found will be used. Default 'name,id'", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "description", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "style_description", "argument": null, "type": "text", "label": "JBrowse style.description", "help": "Comma-separated list of case-insensitive feature tags to check for the feature's long description. The first one found will be used.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "Hit_titles", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "style_height", "argument": null, "type": "text", "label": "JBrowse style.height", "help": "Height in pixels of glyphs. Default value varies from glyph to glyph. Note that the 'compact' displayMode uses style->height * 0.35 so changing style height can adjust the compact visualization.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "600px", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "jbcolor_scale", "type": "section", "title": "JBrowse Feature Score Scaling & Coloring Options [Advanced]", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "color_score", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": [{"model_class": "Conditional", "name": "color", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "automatic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "manual", "inputs": [{"model_class": "ColorToolParameter", "name": "style_color", "argument": null, "type": "color", "label": "JBrowse style.color", "help": "Basic color of features. Most glyphs interpret this as the fill color of the rectangle they draw. Color syntax is the same as that used for CSS", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "goldenrod"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "color_select", "argument": null, "type": "select", "label": "Color Selection", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "automatic", "options": [["Automatically selected", "automatic", true], ["Manual Color Selection", "manual", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "score", "inputs": [{"model_class": "SelectToolParameter", "name": "score_scaling", "argument": null, "type": "select", "label": "JBrowse style.color function's score scaling", "help": "How should the colors be distributed across the values? For blast results which distributes scores on the scale of approximately [1e-500, 10], it makes sense to request a logarithmic scaling of the color values. Logarithmic is indeed the default for blast. However other analysis methods may produce scores on ranges such as [0, 100] where a linear scale would be more appropriate for color distribution.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "linear", "options": [["Linear scaling", "linear", true], ["Logarithmic scaling", "logarithmic", false], ["Blast scaling", "blast", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "score_scales", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "automatic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "manual", "inputs": [{"model_class": "IntegerToolParameter", "name": "minimum", "argument": null, "type": "integer", "label": "Minimum expected score", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maximum", "argument": null, "type": "integer", "label": "Maximum expected score", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "scale_select", "argument": null, "type": "select", "label": "How should minimum and maximum values be determined for the scores of the features", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "automatic", "options": [["Automatically determined", "automatic", true], ["Manually specify minimum and maximum expected scores for the feature track", "manual", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "color_scheme", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "opacity", "inputs": [{"model_class": "Conditional", "name": "color", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "automatic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "manual", "inputs": [{"model_class": "ColorToolParameter", "name": "style_color", "argument": null, "type": "color", "label": "JBrowse style.color", "help": "Basic color of features. Most glyphs interpret this as the fill color of the rectangle they draw. Color syntax is the same as that used for CSS", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "goldenrod"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "color_select", "argument": null, "type": "select", "label": "Color Selection", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "automatic", "options": [["Automatically selected", "automatic", true], ["Manual Color Selection", "manual", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "score_scheme", "argument": null, "type": "select", "label": "JBrowse style.color function's color scheme for scored values", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "opacity", "options": [["Opacity (high scores = 1.0 opacity)", "opacity", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "color_score_select", "argument": null, "type": "select", "label": "Color Score Algorithm", "help": "How to color the features. If it is based on score, then features with a score attribute anywhere in their hierachy will have their color affected by the score. If you choose to ignore the score, then you'll be able to select a single solid color for every feature in the track", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["Based on score", "score", false], ["Ignore score", "none", true]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "ConditionalWhen", "value": "vcf", "inputs": [{"model_class": "DataToolParameter", "name": "annotation", "argument": null, "type": "data", "label": "SNP Track Data", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf"], "edam": {"edam_formats": ["format_3016"], "edam_data": ["data_0006"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "gene_calls", "inputs": [{"model_class": "DataToolParameter", "name": "annotation", "argument": null, "type": "data", "label": "GFF/GFF3/BED Track Data", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gff", "gff3", "bed"], "edam": {"edam_formats": ["format_2305", "format_1975", "format_3003"], "edam_data": ["data_1255", "data_1255", "data_3002"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "match_part", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "name", "argument": null, "type": "text", "label": "Match Part Feature Type", "help": "Match_parts have several options for the parent feature type, such as cDNA_match, match, translated_nucleotide_match, etc. Please select the appropriate one here", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "match", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "match_part_select", "argument": null, "type": "boolean", "label": "This is match/match_part data", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Section", "name": "jbstyle", "type": "section", "title": "JBrowse Styling Options [Advanced]", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "style_classname", "argument": null, "type": "text", "label": "JBrowse style.className", "help": "Set CSS style.className property", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "feature", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "style_label", "argument": null, "type": "text", "label": "JBrowse style.label", "help": "Comma-separated list of case-insensitive feature tags to use for showing the feature's label. The first one found will be used. Default 'name,id'", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "name,id", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "style_description", "argument": null, "type": "text", "label": "JBrowse style.description", "help": "Comma-separated list of case-insensitive feature tags to check for the feature's long description. The first one found will be used.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "note,description", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "style_height", "argument": null, "type": "text", "label": "JBrowse style.height", "help": "Height in pixels of glyphs. Default value varies from glyph to glyph. Note that the 'compact' displayMode uses style->height * 0.35 so changing style height can adjust the compact visualization.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "100px", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "jbcolor_scale", "type": "section", "title": "JBrowse Feature Score Scaling & Coloring Options [Advanced]", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "color_score", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": [{"model_class": "Conditional", "name": "color", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "automatic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "manual", "inputs": [{"model_class": "ColorToolParameter", "name": "style_color", "argument": null, "type": "color", "label": "JBrowse style.color", "help": "Basic color of features. Most glyphs interpret this as the fill color of the rectangle they draw. Color syntax is the same as that used for CSS", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "goldenrod"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "color_select", "argument": null, "type": "select", "label": "Color Selection", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "automatic", "options": [["Automatically selected", "automatic", true], ["Manual Color Selection", "manual", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "score", "inputs": [{"model_class": "SelectToolParameter", "name": "score_scaling", "argument": null, "type": "select", "label": "JBrowse style.color function's score scaling", "help": "How should the colors be distributed across the values? For blast results which distributes scores on the scale of approximately [1e-500, 10], it makes sense to request a logarithmic scaling of the color values. Logarithmic is indeed the default for blast. However other analysis methods may produce scores on ranges such as [0, 100] where a linear scale would be more appropriate for color distribution.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "linear", "options": [["Linear scaling", "linear", true], ["Logarithmic scaling", "logarithmic", false], ["Blast scaling", "blast", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "score_scales", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "automatic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "manual", "inputs": [{"model_class": "IntegerToolParameter", "name": "minimum", "argument": null, "type": "integer", "label": "Minimum expected score", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maximum", "argument": null, "type": "integer", "label": "Maximum expected score", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "scale_select", "argument": null, "type": "select", "label": "How should minimum and maximum values be determined for the scores of the features", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "automatic", "options": [["Automatically determined", "automatic", true], ["Manually specify minimum and maximum expected scores for the feature track", "manual", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "color_scheme", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "opacity", "inputs": [{"model_class": "Conditional", "name": "color", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "automatic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "manual", "inputs": [{"model_class": "ColorToolParameter", "name": "style_color", "argument": null, "type": "color", "label": "JBrowse style.color", "help": "Basic color of features. Most glyphs interpret this as the fill color of the rectangle they draw. Color syntax is the same as that used for CSS", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "goldenrod"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "color_select", "argument": null, "type": "select", "label": "Color Selection", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "automatic", "options": [["Automatically selected", "automatic", true], ["Manual Color Selection", "manual", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "score_scheme", "argument": null, "type": "select", "label": "JBrowse style.color function's color scheme for scored values", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "opacity", "options": [["Opacity (high scores = 1.0 opacity)", "opacity", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "color_score_select", "argument": null, "type": "select", "label": "Color Score Algorithm", "help": "How to color the features. If it is based on score, then features with a score attribute anywhere in their hierachy will have their color affected by the score. If you choose to ignore the score, then you'll be able to select a single solid color for every feature in the track", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["Based on score", "score", false], ["Ignore score", "none", true]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "ConditionalWhen", "value": "pileup", "inputs": [{"model_class": "DataToolParameter", "name": "annotation", "argument": null, "type": "data", "label": "BAM Track Data", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam"], "edam": {"edam_formats": ["format_2572"], "edam_data": ["data_0863"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "auto_snp", "argument": null, "type": "boolean", "label": "Autogenerate SNP Track", "help": "Not recommended for deep coverage BAM files", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "wiggle", "inputs": [{"model_class": "DataToolParameter", "name": "annotation", "argument": null, "type": "data", "label": "BigWig Track Data", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bigwig"], "edam": {"edam_formats": ["format_3006"], "edam_data": ["data_3002"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "xyplot", "argument": null, "type": "boolean", "label": "Use XYPlot", "help": "instead of continuous colored band", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "JBrowse/View/Track/Wiggle/XYPlot", "falsevalue": "JBrowse/View/Track/Wiggle/Density"}, {"model_class": "BooleanToolParameter", "name": "var_band", "argument": null, "type": "boolean", "label": "Show variance band", "help": "Only for XYPlots", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "Conditional", "name": "scaling", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "auto_local", "inputs": []}, {"model_class": "ConditionalWhen", "value": "auto_global", "inputs": []}, {"model_class": "ConditionalWhen", "value": "fixed", "inputs": [{"model_class": "IntegerToolParameter", "name": "minimum", "argument": null, "type": "integer", "label": "Track minimum", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maximum", "argument": null, "type": "integer", "label": "Track maximum", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "scale_select", "argument": null, "type": "select", "label": "Track Scaling", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto_global", "options": [["Autoscale (local)", "auto_local", false], ["Autoscale (global)", "auto_global", true], ["Specify Min/Max", "fixed", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "jbcolor", "type": "section", "title": "JBrowse Color Options [Advanced]", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "color", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "automatic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "manual", "inputs": [{"model_class": "ColorToolParameter", "name": "style_pos_color", "argument": null, "type": "color", "label": "JBrowse style.pos_color", "help": "CSS color, default 'blue'. When drawing bicolor plots, the fill color to use for values that are above the pivot point.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "blue"}, {"model_class": "ColorToolParameter", "name": "style_neg_color", "argument": null, "type": "color", "label": "JBrowse style.neg_color", "help": " CSS color, default 'red'. When drawing bicolor plots, the fill color to use for values that are below the pivot point.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "red"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "color_select", "argument": null, "type": "select", "label": "Color Specification", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "automatic", "options": [["Automatically selected", "automatic", true], ["Manual Color Selection", "manual", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "bicolor_pivot", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "zero", "inputs": []}, {"model_class": "ConditionalWhen", "value": "mean", "inputs": []}, {"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "FloatToolParameter", "name": "pivot_point", "argument": null, "type": "float", "label": "JBrowse style.bicolor_pivot", "help": "Where to change from pos_color to neg_color when drawing bicolor plots.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "bicolor_pivot_select", "argument": null, "type": "select", "label": "Bicolor Pivot", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "zero", "options": [["Zero", "zero", true], ["Mean", "mean", false], ["Custom Value", "custom", false]], "display": null, "multiple": false, "textable": false}}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "data_format_select", "argument": null, "type": "select", "label": "Track Type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "gene_calls", "options": [["GFF/GFF3/BED/GBK Features", "gene_calls", false], ["BAM Pileups", "pileup", false], ["Blast XML", "blast", false], ["BigWig XY", "wiggle", false], ["VCF SNPs", "vcf", false]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "HiddenToolParameter", "name": "uglyTestingHack", "argument": null, "type": "hidden", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": ""}], "outputs": [{"model_class": "ToolOutput", "name": "output", "format": "html", "label": "JBrowse on $on_string - $standalone", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2331", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "graph_display_data", "panel_section_name": "Graph/Display Data", "form_style": "regular"}