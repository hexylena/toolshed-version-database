{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/cami_amber/cami_amber/2.0.4+galaxy0", "name": "CAMI AMBER", "version": "2.0.4+galaxy0", "description": "Evaluation package for MAGs", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "cami_amber", "owner": "iuc", "changeset_revision": "afc795d10918", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "gold_standard_file", "argument": "--gold_standard_file", "type": "data", "label": "Mapping of contigs or reads", "help": "Input the gold standard file here so amber know the correct IDs for each contig/read", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Repeat", "name": "input_files", "type": "repeat", "title": "Binning files and names ", "help": "Enter multiple binning files and names (names are optional). IMPORTANT: for each binning file you use in the program you need to state one label, this mean for example for 3 binning files you need 3 labels (3 slots) not more or less!", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "binning_files", "argument": null, "type": "data", "label": "Input bin files here", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "labels", "argument": "--labels", "type": "text", "label": "Name for bin", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "IntegerToolParameter", "name": "filter", "argument": "--filter", "type": "integer", "label": "Filter out the n smallest genome bins", "help": "Optional filter for filter out the n smallest genome bins", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_length", "argument": "--min_length", "type": "integer", "label": "Minimum length of sequences", "help": "Input how long the sequences has to be", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "desc", "argument": "--desc", "type": "text", "label": "HTML description", "help": "Enter the HTML page description here", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "Section", "name": "genome", "type": "section", "title": "Genome binning-specific options", "help": null, "expanded": false, "inputs": [{"model_class": "Repeat", "name": "thresholds", "type": "repeat", "title": "Min. completeness and max. contamination thresholds", "help": "Enter certain thresholds for min. completeness (Default %: 50,70,90) and certain thresholds for max. contamination (Default %: 5, 10), the program itself will transform it to %!", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_completeness", "argument": "--min_completeness", "type": "integer", "label": "Min. completeness threshold", "help": "", "refresh_on_change": false, "min": 0, "max": 100, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_contamination", "argument": "--max_contamination", "type": "integer", "label": "Max. contamination threshold", "help": "", "refresh_on_change": false, "min": 0, "max": 100, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "DataToolParameter", "name": "remove_genomes", "argument": "--remove_genomes", "type": "data", "label": "tsv file for genomes to remove", "help": "Input a tsv file with binid and type in each line. In the help section is an example. WARNING: IF THE LIST CONTAIN ALL GENOME THE PROGRAM WILL FAIL!", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "remove", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "TextToolParameter", "name": "keyword", "argument": "--keyword", "type": "text", "label": "Keyword for removing certain genomes", "help": "Input a keyword which should be match with binid giving in the file for removing genomes. When no keyword is giving the program remove all genomes which are in the list!", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "is_select", "argument": null, "type": "select", "label": "Remove one or all genomes which are in the list?", "help": "Select yes and enter a keyword to remove certain type of genomes which are in the list. When all genomes in the list should remove also select yes and do not enter a keyword!", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["Yes", "yes", false], ["No", "no", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "DataToolParameter", "name": "genome_coverage", "argument": "--genome_coverage", "type": "data", "label": "Genome coverages tsv file", "help": "Input a tsv file where the genome coverage is stated. Look at the help section to see how this file should look like!", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "Section", "name": "tox", "type": "section", "title": "taxonomic binning-specific option", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "ncbi", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "Conditional", "name": "input", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "manually", "inputs": [{"model_class": "DataToolParameter", "name": "ncbi_dir", "argument": "--ncbi_dir", "type": "data", "label": "Input .dmp files", "help": "To use the NCBI database we need to provide followed .dmp files: nodes.dmp, names.dmp and merged.dmp. You can get the via download of this file **ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz** and unzip it!", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "data", "inputs": [{"model_class": "SelectToolParameter", "name": "ncbi_dir", "argument": "--ncbi_dir", "type": "select", "label": "Assessing taxonomic binning", "help": "Include the NCBI taxonomy database. For this you can use the data manager data_manager_fetch_ncbi_taxonomy which can be install via galaxy. For more help look at the help section at the bottom!", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "2024-06-05", "options": [["2024-06-05", "2024-06-05", false], ["2020-12-03", "2020-12-03", false], ["2022-03-08", "2022-03-08", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "is_select", "argument": null, "type": "select", "label": "Select how you want to use NCBI database", "help": "Either select manually input or data manager. For more help read the help of the type of the input you selected.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "manually", "options": [["Manually", "manually", false], ["Data manager", "data", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "is_select", "argument": null, "type": "select", "label": "Want to use the NCBI database?", "help": "Select yes if you want to use the NCBI database to evaluate taxonomic binning", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["Yes", "yes", false], ["No", "no", true]], "display": null, "multiple": false, "textable": false}}]}], "outputs": [{"model_class": "ToolOutput", "name": "html", "format": "html", "label": "${tool.name}: HTML", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/index.html", "edam_format": "format_2331", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "result", "format": "tabular", "label": "${tool.name}: Results", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/results.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "metrics_genome", "format": "tabular", "label": "${tool.name}: Genome metrics", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/genome_metrics_cami1.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "metrics_bin", "format": "tabular", "label": "${tool.name}: Bin metrics", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/bin_metrics.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "metagenomic_analysis", "panel_section_name": "Metagenomic Analysis", "form_style": "regular"}