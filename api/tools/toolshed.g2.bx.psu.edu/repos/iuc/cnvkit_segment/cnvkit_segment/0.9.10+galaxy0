{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/cnvkit_segment/cnvkit_segment/0.9.10+galaxy0", "name": "CNVkit Segment", "version": "0.9.10+galaxy0", "description": "Infer copy number segments from the given coverage table", "labels": [], "edam_operations": ["operation_3227"], "edam_topics": ["topic_3175"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "cnvkit", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "cnvkit_segment", "owner": "iuc", "changeset_revision": "9d9a8f230a2f", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "filename", "argument": null, "type": "data", "label": "Input CNR file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "additional_SNP_allelic_process", "type": "section", "title": "additional process for SNP b_allele frequencies", "help": null, "expanded": false, "inputs": [{"model_class": "DataToolParameter", "name": "vcf", "argument": "--vcf", "type": "data", "label": "VCF file", "help": "VCF file name containing variants for calculation of b-allele frequencies", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf"], "edam": {"edam_formats": ["format_3016"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "sample_id", "argument": "--sample-id", "type": "text", "label": "Name of the sample in the VCF to use for b-allele frequency extraction", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "normal_id", "argument": "--normal-id", "type": "text", "label": "Corresponding normal sample ID in the input VCF", "help": "This sample is used to select only germline SNVs to calculate b-allele frequencies", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_variant_depth", "argument": "--min-variant-depth", "type": "integer", "label": "Minimum read depth for a SNV to be used in the b-allele frequency calculation", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "zygosity_freq", "argument": "--zygosity-freq", "type": "float", "label": "Ignore VCF's genotypes and instead infer zygosity from allele frequencies", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.25", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "advanced_settings", "type": "section", "title": "Advanced settings", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "dataframe", "argument": "--dataframe", "type": "text", "label": "Data frame", "help": "File name to save the raw R dataframe emitted by CBS or Fused Lasso, example dataframe.r", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "method", "argument": "--method", "type": "select", "label": "Segmentation method", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "cbs", "options": [["Circular Binary Segmentation CBS method,hybrid CBS", "cbs", true], ["Fused lasso, hybrid flasso", "flasso", false], ["A pure-Python implementation of HaarSeg, a wavelet-based method. Very fast and performs reasonably well on small panels, but tends to over-segment large datasets., hybrid haar", "haar", false], ["simply calculate the weighted mean log2 value of each chromosome arm. Useful for testing or debugging, or as a baseline for benchmarking other methods., hybrid none", "none", false], ["experimental \u2013 a 3-state Hidden Markov Model suitable for most samples. Faster than CBS, and slower but more accurate than Haar. Requires the Python package pomegranate, as do the next two methods., hybrid hmm", "hmm", false], ["experimental \u2013 a 5-state HMM suitable for finer-grained segmentation of good-quality tumor samples. In particular, this method can detect focal amplifications within a larger-scale, smaller-amplitude copy number gain, or focal deep deletions within a larger-scale hemizygous loss. Training this model takes a bit more CPU time than the simpler hmm method., hybrid hmm-tumor", "hmm-tumor", false], ["experimental \u2013 a 3-state HMM with fixed amplitude for the loss, neutral, and gain states corresponding to absolute copy numbers of 1, 2, and 3. Suitable for germline samples and single-cell sequencing of samples with mostly-diploid genomes that are not overly aneuploid., hybrid hmm-germline", "hmm-germline", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "threshold", "argument": "--threshold", "type": "integer", "label": "Significance threshold", "help": "To accept breakpoints during segmentation. For HMM methods, this is the smoothing window size", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "drop_low_coverage", "argument": "--drop-low-coverage", "type": "boolean", "label": "Drop very-low-coverage bins before segmentation", "help": "To avoid false-positive deletions in poor-quality tumor samples", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--drop-low-coverage", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "drop_outliers", "argument": "--drop-outliers", "type": "integer", "label": "Drop outliers", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "smooth_cbs", "argument": "--smooth-cbs", "type": "boolean", "label": "Perform an additional smoothing before CBS segmentations", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--smooth-cbs", "falsevalue": ""}]}], "outputs": [{"model_class": "ToolOutput", "name": "out_sample_segment", "format": "tabular", "label": "${tool.name} on ${on_string}: Sample segment", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "sample.cns", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "variant_calling", "panel_section_name": "Variant Calling", "form_style": "regular"}