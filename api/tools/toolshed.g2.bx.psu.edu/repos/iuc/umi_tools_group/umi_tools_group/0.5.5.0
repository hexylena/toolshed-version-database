{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_group/umi_tools_group/0.5.5.0", "name": "UMI-tools group", "version": "0.5.5.0", "description": "Extract UMI from fastq files", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "umi_tools_group", "owner": "iuc", "changeset_revision": "a24f5b991320", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Reads to group in SAM or BAM format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["sam", "bam"], "edam": {"edam_formats": ["format_2573", "format_2572"], "edam_data": ["data_0863", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "extract_umi_method", "argument": "--extract-umi-method", "type": "select", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "read_id", "options": [["Read ID", "read_id", true], ["Tag", "tag", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "group_output", "argument": "--group-out", "type": "boolean", "label": "Output a flatfile describing the read groups", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--group-out", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "umi_separator", "argument": "--umi-separator", "type": "text", "label": "Separator between read id and UMI.", "help": "Ignored unless extracting by tag", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "umi_tag", "argument": "--umi-tag", "type": "text", "label": "Tag which contains UMI.", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "method", "argument": "--method", "type": "select", "label": "Method used to identify PCR duplicates within reads.", "help": "All methods start by identifying the reads with the same mapping position", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "unique", "options": [["Reads group share the exact same UMI", "unique", false], ["Identify clusters based on hamming distance", "cluster", false], ["Identify clusters based on distance and counts, restrict network expansion by threshold", "directional", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "edit_distance_threshold", "argument": "--edit-distance-threshold", "type": "integer", "label": "Edit distance threshold", "help": "For the adjacency and cluster methods the threshold for the edit distance to connect two UMIs in the network can be increased. The default value of 1 works best unless the UMI is very long (>14bp)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "paired", "argument": "--paired", "type": "boolean", "label": "BAM is paired end", "help": "This will also force the use of the template length to determine reads with the same mapping coordinates.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--paired", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "spliced_is_unique", "argument": "--spliced-is-unique", "type": "boolean", "label": "Spliced reads are unique", "help": "Causes two reads that start in the same position on the same strand and having the same UMI to be considered unique if one is spliced and the other is not. (Uses the 'N' cigar operation to test for splicing)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--spliced-is-unique", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "soft_clip_threshold", "argument": "--soft-clip-threshold", "type": "integer", "label": "Soft clip threshold", "help": "Mappers that soft clip, will sometimes do so rather than mapping a spliced read if there is only a small overhang over the exon junction. By setting this option, you can treat reads with at least this many bases soft-clipped at the 3' end as spliced.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "read_length", "argument": "--read-length", "type": "boolean", "label": "Use the read length as as a criterion when deduping", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--read-length", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "whole_contig", "argument": "--whole-contig", "type": "boolean", "label": "Consider all alignments to a single contig together", "help": "This is useful if you have aligned to a transcriptome multi-fasta", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--whole-contig", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "subset", "argument": "--subset", "type": "float", "label": "Only consider a random selection of the reads", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "chrom", "argument": "--chrom", "type": "boolean", "label": "Only consider a single chromosome", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--chrom", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "per_contig", "argument": "--per-contig", "type": "boolean", "label": "Deduplicate per contig", "help": "Field 3 in BAM; RNAME. All reads with the same contig will be considered to have the same alignment position. This is useful if your library prep generates PCR duplicates with non identical alignment positions such as CEL-Seq. In this case, you would align to a reference transcriptome with one transcript per gene", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--per-contig", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "per_gene", "argument": "--per-gene", "type": "boolean", "label": "Deduplicate per gene", "help": "As above except with this option you can align to a reference transcriptome with more than one transcript per gene. You need to also provide a map of genes to transcripts. This will also add a metacontig ('MC') tag to the output BAM file.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--per-gene", "falsevalue": ""}, {"model_class": "DataToolParameter", "name": "gene_transcript_map", "argument": "--gene-transcript-map", "type": "data", "label": "Tabular file mapping genes to transripts", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "gene_tag", "argument": "--gene-tag", "type": "text", "label": "Deduplicate by this gene tag", "help": "As --per-gene except here the gene information is encoded in the bam read tag specified so you do not need to supply the mapping file.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}], "outputs": [{"model_class": "ToolOutput", "name": "output", "format": "bam", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "group_out", "format": "tabular", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "fasta_fastq", "panel_section_name": "FASTA/FASTQ", "form_style": "regular"}