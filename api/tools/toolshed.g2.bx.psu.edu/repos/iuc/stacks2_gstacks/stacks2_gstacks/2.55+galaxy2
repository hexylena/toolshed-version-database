{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/stacks2_gstacks/stacks2_gstacks/2.55+galaxy2", "name": "Stacks2: gstacks", "version": "2.55+galaxy2", "description": "Call variants, genotypes and haplotype", "labels": [], "edam_operations": ["operation_2409"], "edam_topics": ["topic_0102", "topic_3056"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "stacks", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "stacks2_gstacks", "owner": "iuc", "changeset_revision": "f6e91108b7b1", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input_bam", "argument": null, "type": "data", "label": "Aligned data", "help": "either the matches to the catalog (bam), i.e. tsv2bam, or reads aligned to a reference", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam"], "edam": {"edam_formats": ["format_2572"], "edam_data": ["data_0863"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "popmap", "argument": "-M", "type": "data", "label": "Population map", "help": "If set, matching will be done only for samples listed in this file", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "txt"], "edam": {"edam_formats": ["format_3475", "format_2330"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "mode_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "denovo", "inputs": [{"model_class": "BooleanToolParameter", "name": "ignore_pe_reads", "argument": "--ignore-pe-reads", "type": "boolean", "label": "Ignore paired-end reads", "help": "ignore paired-end reads even if present in the input", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--ignore-pe-reads", "falsevalue": ""}, {"model_class": "Conditional", "name": "advanced_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "kmer_length", "argument": "--kmer-length", "type": "integer", "label": "K-mer length for the de Bruijn graph", "help": "", "refresh_on_change": false, "min": 2, "max": 31, "optional": false, "hidden": false, "is_dynamic": false, "value": "31", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_debruijn_reads", "argument": "--max-debruijn-reads", "type": "integer", "label": "Maximum number of reads to use in the de Bruijn graph", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_kmer_cov", "argument": "--min-kmer-cov", "type": "integer", "label": "Minimum coverage to consider a kmer", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "write_alignments", "argument": "--write-alignments", "type": "boolean", "label": "save read alignments", "help": "heavy BAM files", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--write-alignments", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "advanced_select", "argument": null, "type": "select", "label": "Advanced options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", false], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "refbased", "inputs": [{"model_class": "Conditional", "name": "paired_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": [{"model_class": "BooleanToolParameter", "name": "rm_unpaired_reads", "argument": "--rm-unpaired-reads", "type": "boolean", "label": "Discard unpaired reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--rm-unpaired-reads", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "rm_pcr_duplicates", "argument": "--rm-pcr-duplicates", "type": "boolean", "label": "Remove read pairs of the same sample that have the same insert length", "help": "implies --rm-unpaired-reads", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--rm-pcr-duplicates", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "--unpaired", "inputs": []}, {"model_class": "ConditionalWhen", "value": "--ignore-pe-reads", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "paired_select", "argument": null, "type": "select", "label": "Paired end options", "help": "select single/paired for single end data or to select advanced paired end options, --unpaired: treat reverse reads as if they were forward reads; --ignore-pe-reads: ignore paired-end reads even if present in the input", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["single/paired", "", true], ["ignore read pairing (--unpaired)", "--unpaired", true], ["ignore paired-end reads (--ignore-pe-reads)", "--ignore-pe-reads", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "advanced_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_mapq", "argument": "--min-mapq", "type": "integer", "label": "Minimum PHRED-scaled mapping quality to consider a read", "help": "", "refresh_on_change": false, "min": 0, "max": 255, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_clipped", "argument": "--max-clipped", "type": "float", "label": "Maximum soft-clipping level", "help": "in fraction of read length", "refresh_on_change": false, "min": 0.0, "max": 1.1, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_insert_len", "argument": "--max-insert-len", "type": "integer", "label": "Maximum allowed sequencing insert length", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "details", "argument": "--details", "type": "boolean", "label": "Write a heaview output", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--details", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "phasing_cooccurrences_thr_min", "argument": null, "type": "integer", "label": "Edge coverage min", "help": "(--phasing-cooccurrences-thr-range)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "phasing_cooccurrences_thr_max", "argument": null, "type": "integer", "label": "Edge coverage max", "help": "range of edge coverage thresholds to iterate over when building the graph of allele cooccurrences for SNP phasing (--phasing-cooccurrences-thr-range)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "phasing_dont_prune_hets", "argument": "--phasing-dont-prune-hets", "type": "boolean", "label": "Don't try to ignore dubious heterozygote genotypes during phasing", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--phasing-dont-prune-hets", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "advanced_select", "argument": null, "type": "select", "label": "Advanced options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", false], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mode_select", "argument": null, "type": "select", "label": "Mode", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "denovo", "options": [["De novo mode", "denovo", true], ["Reference-based", "refbased", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "model_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "marukilow", "inputs": [{"model_class": "FloatToolParameter", "name": "var_alpha", "argument": "--var-alpha", "type": "float", "label": "Alpha threshold for discovering SNPs", "help": "Default is 0.01 if the marukilow model is used (which is the case in refmap and denovomap), otherwise no default value is available.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "gt_alpha", "argument": "--gt-alpha", "type": "float", "label": "Alpha threshold for calling genotypes", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "marukihigh", "inputs": [{"model_class": "FloatToolParameter", "name": "var_alpha", "argument": "--var-alpha", "type": "float", "label": "Alpha threshold for discovering SNPs", "help": "Default is 0.01 if the marukilow model is used (which is the case in refmap and denovomap), otherwise no default value is available.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "gt_alpha", "argument": "--gt-alpha", "type": "float", "label": "Alpha threshold for calling genotypes", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "snp", "inputs": [{"model_class": "FloatToolParameter", "name": "var_alpha", "argument": "--var-alpha", "type": "float", "label": "Alpha threshold for discovering SNPs", "help": "Default is 0.01 if the marukilow model is used (which is the case in refmap and denovomap), otherwise no default value is available.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "gt_alpha", "argument": "--gt-alpha", "type": "float", "label": "Alpha threshold for calling genotypes", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "model", "argument": "--model", "type": "select", "label": "Model to use to call variants and genotypes", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "marukilow", "options": [["marukilow", "marukilow", true], ["marukihigh", "marukihigh", false], ["snp", "snp", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "add_log_distribs", "argument": null, "type": "boolean", "label": "Add log distribs output as dataset", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "yes", "falsevalue": "no"}, {"model_class": "BooleanToolParameter", "name": "add_log", "argument": null, "type": "boolean", "label": "Add log output as dataset", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "yes", "falsevalue": "no"}], "outputs": [{"model_class": "ToolOutputCollection", "name": "gstacks_out", "format": null, "label": "${tool.name}  on ${on_string} Assembled contigs and variant sites", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "vcf", "visible": false, "assign_primary_output": false, "directory": "stacks_outputs", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>catalog\\.calls\\.vcf)$", "sort_by": "filename"}, {"discover_via": "pattern", "dbkey": "__input__", "format": "fasta.gz", "visible": false, "assign_primary_output": false, "directory": "stacks_outputs", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>catalog\\.fa\\.gz)$", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "gstacks_alns_out", "format": null, "label": "${tool.name}  on ${on_string} Read alignments", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "bam", "visible": false, "assign_primary_output": false, "directory": "stacks_outputs", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.*).alns.bam$", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "output_log", "format": "txt", "label": "${tool.name} on ${on_string} log file", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "distribs", "format": "txt", "label": "${tool.name} on ${on_string} log.distribs", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "stacks_outputs/gstacks.log.distribs", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "gstacks_aln_out", "format": "bam", "label": "${tool.name}  on ${on_string} Read alignment", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "stacks_outputs/alignments.bam", "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": []}], "panel_section_id": "rad_seq", "panel_section_name": "RAD-seq", "form_style": "regular"}