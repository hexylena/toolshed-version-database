{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/mummer_nucmer/mummer_nucmer/4.0.0beta2+galaxy0", "name": "Nucmer", "version": "4.0.0beta2+galaxy0", "description": "Align two or more sequences", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "mummer_nucmer", "owner": "iuc", "changeset_revision": "5b0b49b5421c", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "reference_sequence", "argument": null, "type": "data", "label": "Reference Sequence", "help": "FastA or multi-FastA", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "query_sequence", "argument": null, "type": "data", "label": "Query Sequence", "help": "FastA or multi-FastA", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "anchoring", "argument": null, "type": "select", "label": "Anchoring", "help": "Choose a match anchoring strategy", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Use default", "", false], ["Unique matches only (--mum)", "--mum", false], ["All matches (--maxmatch)", "--maxmatch", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "breaklen", "argument": "-b", "type": "integer", "label": "Break Length", "help": "Set the distance an alignment extension will attempt to extend poor scoring regions before giving up. (-b)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "200", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "mincluster", "argument": "-c", "type": "integer", "label": "Minumum Cluster Length", "help": "Sets the minimum length of a cluster of matches. (-c)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "65", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "diagdiff", "argument": "-D", "type": "integer", "label": "Maximum Diagonal Difference", "help": "Set the maximum diagonal difference between two adjacent anchors in a cluster. (-D)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "diagfactor", "argument": "-d", "type": "float", "label": "Maximum Diagonal Difference", "help": "Set the maximum diagonal difference between two adjacent anchors in a cluster as a differential fraction of the gap length. (-d)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.12", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "noextend", "argument": "--noextend", "type": "boolean", "label": "No Extend", "help": "Do not perform cluster extension step. (--noextend)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--noextend", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "direction", "argument": null, "type": "select", "label": "Direction", "help": "Choose a direction of Query Sequence to Use", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Use foward and reverse sequences", "", false], ["Use only forward sequence of query (-f)", "-f", false], ["Use only reverese sequence of query (-r)", "-r", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "maxgap", "argument": "-g", "type": "integer", "label": "Maximum Gap Distance", "help": "Set the maximum gap between two adjacent matches in a cluster. (-g)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "90", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minmatch", "argument": "-l", "type": "integer", "label": "Minimum Match Length", "help": "Set the minimum length of a single exact match. (-l)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minalign", "argument": "-L", "type": "integer", "label": "Minumum Alignment Length", "help": "Minimum length of an alignment, after clustering and extension. (-L)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "nooptimize", "argument": "--nooptimize", "type": "boolean", "label": "No Alignment Score Optimization", "help": "No alignment score optimization, i.e. if an alignment extension reaches the end of a sequence, it will not backtrack to optimize the alignment score and instead terminate the alignment at the end of the sequence. (--nooptimize)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--nooptimize", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "nosimplify", "argument": "--nosimplify", "type": "boolean", "label": "Don't Simplify Alignments", "help": "Don't simplify alignments by removing shadowed clusters. Use this option when aligning a sequence to itself to look for repeats. (--nosimplify)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--nosimplify", "falsevalue": ""}, {"model_class": "Conditional", "name": "options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "enable", "inputs": [{"model_class": "BooleanToolParameter", "name": "banded", "argument": "--banded", "type": "boolean", "label": "Banding", "help": "Enforce absolute banding of dynamic programming matrix based on diagdiff parameter. (--banded)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--banded", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "large", "argument": "--large", "type": "boolean", "label": "Offsets", "help": "Force the use of large offsets. (--large)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--large", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "genome", "argument": "-G", "type": "boolean", "label": "Map genome to genome", "help": "For long query sequences. (-G)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-G", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "max_chunk", "argument": "-M", "type": "integer", "label": "Max Chunk", "help": "Stop adding sequence for a thread if more than MAX already. (-M)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "defaults", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "advanced", "argument": null, "type": "select", "label": "Additional options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "defaults", "options": [["Use defaults", "defaults", false], ["Select additional options", "enable", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "mumplot", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "Conditional", "name": "sequences", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "DataToolParameter", "name": "reference_sequence", "argument": null, "type": "data", "label": "Reference Sequence", "help": "(-R)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "query_sequence", "argument": null, "type": "data", "label": "Query Sequence(s)", "help": "(-Q)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "layout", "argument": "--layout", "type": "boolean", "label": "Layout", "help": "Layout a .delta multiplot in an intelligible fashion. (--layout)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--layout", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "seq_input", "argument": null, "type": "select", "label": "Plot an ordered set of reference/query sequences?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["NO", "no", false], ["YES", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "breaklen", "argument": "-b", "type": "integer", "label": "Break Length", "help": "Highlight alignments with breakpoints further than breaklen nucleotides from the nearest sequence end. (-b)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "color", "argument": null, "type": "select", "label": "Color", "help": "Color plot lines with a percent similarity gradient or turn off all plot color.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Color", "", false], ["No color (-color)", "-color", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "coverage", "argument": null, "type": "select", "label": "Coverage Plot", "help": "Generate a reference coverage plot (default for .tiling) or the defualt dotplot.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Dotplot", "", false], ["Coverage Plot (-c)", "-c", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "filter", "argument": "--filter", "type": "boolean", "label": "Filter", "help": "Only display .delta alignments which represent the 'best' hit to any particular spot on either sequence, i.e. a one-to-one mapping of reference and query subsequences. (--filter)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--filter", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "fat", "argument": "--fat", "type": "boolean", "label": "Layout sequences using fattest alignment only", "help": "(--fat)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--fat", "falsevalue": ""}, {"model_class": "Conditional", "name": "labels", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "TextToolParameter", "name": "ref_id", "argument": null, "type": "text", "label": "Reference sequence ID", "help": "(-IdR)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "ref_id", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "query_id", "argument": null, "type": "text", "label": "Query sequence ID", "help": "(-IdQ)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "query_id", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "IDs", "argument": null, "type": "select", "label": "Plot a particular reference or query sequence?", "help": "For alignments that used more than one reference/query.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["NO", "no", false], ["YES", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "size", "argument": null, "type": "select", "label": "Plot Size", "help": "Set the output size to small, medium or large. (-s)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "small", "options": [["Small", "small", false], ["Medium", "medium", false], ["Large", "large", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "snp", "argument": "--SNP", "type": "boolean", "label": "SNPs", "help": "Highlight SNP locations in each alignment. (--SNP)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--SNP", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "title", "argument": "-title", "type": "text", "label": "Plot Title", "help": "(-title)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "Title", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "range", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_x", "argument": "-x", "type": "integer", "label": "Minimum X-axis range", "help": "(-x)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_x", "argument": "-x", "type": "integer", "label": "Maximum X-axis range", "help": "(-x)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_y", "argument": "-y", "type": "integer", "label": "Minimum Y-axis range", "help": "(-y)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_y", "argument": "-y", "type": "integer", "label": "Maximum Y-axis range", "help": "(-y)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "custom", "argument": null, "type": "select", "label": "Choose custom X and Y axis ranges?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["NO", "no", false], ["YES", "yes", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "plot", "argument": null, "type": "select", "label": "Do you want to output a 2-D dotplot of the input sequences? (mummerplot)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["YES", "yes", false], ["NO", "no", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "delta_output", "format": "tabular", "label": "${tool.name} on ${on_string}: alignment", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "out.delta", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "png_output", "format": "png", "label": "${tool.name} on ${on_string}: plot", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "out.png", "edam_format": "format_3603", "edam_data": "data_2968", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "multiple_alignments", "panel_section_name": "Multiple Alignments", "form_style": "regular"}