{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/edger/edger/3.20.7.2", "name": "edgeR", "version": "3.20.7.2", "description": "Perform differential expression of count data", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "edger", "owner": "iuc", "changeset_revision": "d79ed3ec25fe", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "input", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "files", "inputs": [{"model_class": "Repeat", "name": "rep_factor", "type": "repeat", "title": "Factor", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "factorName", "argument": null, "type": "text", "label": "Name", "help": "Name of experiment factor of interest (e.g. Genotype). One factor must be entered and there must be two or more groups per factor. Optional additional factors (e.g. Batch) can be entered using the Insert Factor button below, see Help section for more information. NOTE: Please only use letters, numbers or underscores.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "Repeat", "name": "rep_group", "type": "repeat", "title": "Group", "help": null, "default": 2, "min": 2, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "groupName", "argument": null, "type": "text", "label": "Name", "help": "Name of group that the counts files belong to (e.g. WT or Mut). NOTE: Please only use letters, numbers or underscores (case sensitive).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "DataToolParameter", "name": "countsFile", "argument": null, "type": "data", "label": "Counts files", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}]}]}, {"model_class": "ConditionalWhen", "value": "matrix", "inputs": [{"model_class": "DataToolParameter", "name": "counts", "argument": null, "type": "data", "label": "Count Matrix", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "fact", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "DataToolParameter", "name": "finfo", "argument": null, "type": "data", "label": "Factor File", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": [{"model_class": "Repeat", "name": "rep_factor", "type": "repeat", "title": "Factor", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "factorName", "argument": null, "type": "text", "label": "Factor Name", "help": "Name of experiment factor of interest (e.g. Genotype). One factor must be entered and there must be two or more groups per factor. Additional factors (e.g. Batch) can be entered using the Insert Factor button below, see Help section below. NOTE: Please only use letters, numbers or underscores.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "groupNames", "argument": null, "type": "text", "label": "Groups", "help": "Enter the group names for the samples separated with commas e.g. WT,WT,WT,Mut,Mut,Mut. The order of the names must match the order of the samples in the columns of the count matrix. NOTE: Please only use letters, numbers or underscores (case sensitive).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "ffile", "argument": null, "type": "select", "label": "Input factor information from file?", "help": "You can choose to input the factor and group information for the samples from a file or manually enter below.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", false], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "format", "argument": null, "type": "select", "label": "Count Files or Matrix?", "help": "You can choose to input either separate count files (one per sample) or a single count matrix", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "files", "options": [["Separate Count Files", "files", false], ["Single Count Matrix", "matrix", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "anno", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "DataToolParameter", "name": "geneanno", "argument": null, "type": "data", "label": "Gene Annotations", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "annoOpt", "argument": null, "type": "select", "label": "Use Gene Annotations?", "help": "If you provide an annotation file, annotations will be added to the table(s) of differential expression results to provide descriptions for each gene. See Help section below.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", false], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Repeat", "name": "rep_contrast", "type": "repeat", "title": "Contrast", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "contrast", "argument": null, "type": "text", "label": "Contrast of Interest", "help": "Names of two groups to compare separated by a hyphen e.g. Mut-WT. If the order is Mut-WT the fold changes in the results will be up/down in Mut relative to WT. If you have more than one contrast enter each separately using the Insert Contrast button below. For more info, see Chapter 8 in the limma User's guide: https://www.bioconductor.org/packages/release/bioc/vignettes/limma/inst/doc/usersguide.pdf", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "f", "type": "section", "title": "Filter Low Counts", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "filt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "Conditional", "name": "cformat", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "cpm", "inputs": [{"model_class": "FloatToolParameter", "name": "cpmReq", "argument": null, "type": "float", "label": "Minimum CPM", "help": "Treat genes with CPM below this value as unexpressed and filter out. See the Filter Low Counts section below for more information.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "cpmSampleReq", "argument": null, "type": "integer", "label": "Minimum Samples", "help": "Filter out all genes that do not meet the Minimum CPM in at least this many samples. See the Filter Low Counts section below for more information.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "counts", "inputs": [{"model_class": "IntegerToolParameter", "name": "cntReq", "argument": null, "type": "integer", "label": "Minimum Count", "help": "Filter out all genes that do not meet this minimum count. You can choose below to apply this filter to the total count for all samples or specify the number of samples under Minimum Samples. See the Filter Low Counts section below for more information.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "samples", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "total", "inputs": [{"model_class": "BooleanToolParameter", "name": "totReq", "argument": null, "type": "boolean", "label": "Filter on Total Count", "help": "Apply the Minimum Count filter to genes after summing counts for all samples. See the Filter Low Counts section below for more information.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}]}, {"model_class": "ConditionalWhen", "value": "sample", "inputs": [{"model_class": "IntegerToolParameter", "name": "cntSampleReq", "argument": null, "type": "integer", "label": "Minimum Samples", "help": "Filter out all genes that do not meet the Minimum Count in at least this many samples. See the Filter Low Counts section below for more information.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "count_select", "argument": null, "type": "select", "label": "Filter on Total Count or per Sample Count values?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "total", "options": [["Total", "total", false], ["Sample", "sample", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "format_select", "argument": null, "type": "select", "label": "Filter on CPM or Count values?", "help": "It is slightly better to base the filtering on count-per-million (CPM) rather than the raw count values so as to avoid favoring genes expressed in samples sequenced to a higher depth. ", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "cpm", "options": [["CPM", "cpm", false], ["Counts", "counts", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "filt_select", "argument": null, "type": "select", "label": "Filter lowly expressed genes?", "help": "Treat genes with very low expression as unexpressed and filter out. See the Filter Low Counts section below for more information. Default: No", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", true], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Section", "name": "out", "type": "section", "title": "Output Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "normCounts", "argument": null, "type": "boolean", "label": "Output Normalised Counts Table?", "help": "Output a file containing the normalised counts, these are in log2 counts per million (logCPM). Default: No", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "rscript", "argument": null, "type": "boolean", "label": "Output Rscript?", "help": "If this option is set to Yes, the Rscript used will be provided as a text file in the output. Default: No", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "rdaOption", "argument": null, "type": "boolean", "label": "Output RData file?", "help": "Output all the data used by R to construct the plots and tables, can be loaded into R. A link to the RData file will be provided in the HTML report. Default: No", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}]}, {"model_class": "Section", "name": "adv", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "lfc", "argument": null, "type": "float", "label": "Minimum Log2 Fold Change", "help": "Genes above this threshold and below the p-value threshold are considered significant and highlighted in the MD plot. Default: 0.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "pVal", "argument": null, "type": "float", "label": "P-Value Adjusted Threshold", "help": "Genes below this threshold are considered significant and highlighted in the MD plot. If either BH(1995) or BY(2001) are selected then this value is a false-discovery-rate control. If Holm(1979) is selected then this is an adjusted p-value for family-wise error rate. Default: 0.05.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "pAdjust", "argument": null, "type": "select", "label": "P-Value Adjustment Method", "help": "Default: BH", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "BH", "options": [["Benjamini and Hochberg (1995)", "BH", true], ["Benjamini and Yekutieli (2001)", "BY", false], ["Holm (1979)", "holm", false], ["None", "none", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "normalisationOption", "argument": null, "type": "select", "label": "Normalisation Method", "help": "Default: TMM", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "TMM", "options": [["TMM", "TMM", true], ["RLE", "RLE", false], ["Upperquartile", "upperquartile", false], ["None (Don't normalise)", "none", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "robOption", "argument": null, "type": "boolean", "label": "Use Robust Settings?", "help": "Using robust settings is usually recommended to protect against outlier genes. Default: Yes", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "lrtOption", "argument": null, "type": "boolean", "label": "Use Likelihood Ratio Test?", "help": "Use likelihood ratio test instead of quasi-likelihood F-test. Default: No", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}]}], "outputs": [{"model_class": "ToolOutputCollection", "name": "outTables", "format": null, "label": "${tool.name} on ${on_string}: Tables", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "tabular", "visible": false, "assign_primary_output": false, "directory": "output_dir", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.+)\\.tsv$", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "outReport", "format": "html", "label": "${tool.name} on ${on_string}: Report", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2331", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "rscript", "format": "txt", "label": "${tool.name} on ${on_string}: Rscript", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "rna_analysis", "panel_section_name": "RNA Analysis", "form_style": "regular"}