{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/picrust2_pipeline/picrust2_pipeline/2.5.1+galaxy0", "name": "PICRUSt2 Full pipeline", "version": "2.5.1+galaxy0", "description": "", "labels": [], "edam_operations": ["operation_3928", "operation_3478", "operation_3797", "operation_2495"], "edam_topics": ["topic_3301", "topic_3837", "topic_3293", "topic_3174"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "picrust2", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "picrust2_pipeline", "owner": "iuc", "changeset_revision": "540aedfc81c7", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Section", "name": "place_seqs_section", "type": "section", "title": "Sequence placement options", "help": null, "expanded": true, "inputs": [{"model_class": "DataToolParameter", "name": "study_fasta", "argument": "--study_fasta", "type": "data", "label": "Study sequences", "help": "Sequences of the representative OTUs and/or ASVs. Sequences need to be on the positive strand and the headerline should be only one field, i.e. no additional whitespace-delimited fields", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "placement_tool", "argument": "--placement_tool", "type": "select", "label": "Placement tool", "help": "Used for placing sequences into reference tree", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "epa-ng", "options": [["EPA-ng -  Fast, parallel, highly accurate Maximum Likelihood Phylogenetic Placement, by the team behind RAxML(-ng)", "epa-ng", true], ["SEPP - SATe-enabled Phylogenetic Placement", "sepp", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "ref_dir", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "prokaryotic/pro_ref/", "inputs": []}, {"model_class": "ConditionalWhen", "value": "fungi/fungi_ITS/", "inputs": []}, {"model_class": "ConditionalWhen", "value": "fungi/fungi_18S/", "inputs": []}, {"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "DataToolParameter", "name": "custom_fna", "argument": null, "type": "data", "label": "Multiple-sequence alignment of reference sequences", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "custom_hmm", "argument": null, "type": "data", "label": "Hidden-markov model of the multiple-sequence alignment", "help": "The HMM of the alignment can be created using hmmbuild", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["hmm2", "hmm3"], "edam": {"edam_formats": ["format_3328", "format_3329"], "edam_data": ["data_1364", "data_1364"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "custom_tre", "argument": null, "type": "data", "label": "Tree of the reference sequences", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["newick"], "edam": {"edam_formats": ["format_1910"], "edam_data": ["data_0872"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "custom_model", "argument": null, "type": "data", "label": "Modelfile", "help": "For epa-ng: output by RaXmL specifying the best parameters for the tree, for sepp see examples in PICRUSt2 repository", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selector", "argument": null, "type": "select", "label": "Reference data", "help": "Used for sequence placement", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "prokaryotic/pro_ref/", "options": [["Prokaryotic 16S rRNA gene", "prokaryotic/pro_ref/", true], ["Fungal ITS (only for epa-ng)", "fungi/fungi_ITS/", false], ["Fungal 18S (only for epa-ng)", "fungi/fungi_18S/", false], ["Custom reference sequence files", "custom", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "FloatToolParameter", "name": "min_align", "argument": "--min_align", "type": "float", "label": "Minimum alignment length", "help": "Proportion of the total length of an input query sequence that must align with reference sequences. Sequences with lengths below this value will be excluded from the placement and all subsequent steps", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.8", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "hsp_section", "type": "section", "title": "Hidden state prediction (HSP) options", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "trait_input", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": [{"model_class": "SelectToolParameter", "name": "in_traits", "argument": "--in_traits", "type": "select", "label": "Pre-calculated trait table(s)", "help": "Note that EC numbers will always be predicted unless --no_pathways is set", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": ["EC", "KO"], "options": [["Clusters of Orthologous Genes database (COG)", "COG", false], ["Enzyme Commission number database (EC number)", "EC", true], ["KEGG Orthology database (KO)", "KO", true], ["Pfam database", "PFAM", false], ["TIGRFAM database", "TIGRFAM", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "DataToolParameter", "name": "custom_trait_tables", "argument": "--custom_trait_tables", "type": "data", "label": "Customized trait table(s)", "help": "with gene families as columns and genomes as rows", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "marker_gene_table", "argument": "--marker_gene_table", "type": "data", "label": "Table of predicted marker gene (16S or other) copy numbers", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selector", "argument": null, "type": "select", "label": "Trait table(s)", "help": "i.e. which gene families to predict", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["Default trait table(s)", "default", true], ["Customized trait table(s)", "custom", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "hsp_method_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "mp", "inputs": [{"model_class": "FloatToolParameter", "name": "edge_exponent", "argument": "--edge_exponent", "type": "float", "label": "Transition cost weight", "help": "Specifies weighting transition costs by the inverse length of edge lengths. If 0, then edge lengths do not influence predictions", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "emp_prob", "inputs": []}, {"model_class": "ConditionalWhen", "value": "subtree_average", "inputs": []}, {"model_class": "ConditionalWhen", "value": "pic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "scp", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "hsp_method", "argument": "--hsp_method", "type": "select", "label": "Hidden-state prediction method", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "mp", "options": [["Predict discrete traits by: Maximum parsimony (mp)", "mp", true], ["Predict discrete traits by: Empirical state probabilities across tips (emp_prob)", "emp_prob", false], ["Predict continuous traits by: Subtree averaging (subtree_average)", "subtree_average", false], ["Predict continuous traits by: phylogentic independent contrast (pic)", "pic", false], ["Reconstruct continuous traits by: squared-change parsimony (scp)", "scp", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "skip_nsti", "argument": "--skip_nsti", "type": "boolean", "label": "Calculate NSTI and add to output file", "help": "And add to output file", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--skip_nsti"}]}, {"model_class": "Section", "name": "metagenome_pipeline_section", "type": "section", "title": "Metagenome prediction options", "help": null, "expanded": true, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": "--input", "type": "data", "label": "Sequence abundance table (OTUs or ASVs)", "help": "The sequence abundances should be in read counts and not relative abundances. The tool will normalize the input sequence abundance table by the predicted number of marker genes", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "biom1", "biom2", "mothur.shared"], "edam": {"edam_formats": ["format_3475", "format_3746", "format_3746", "format_2330"], "edam_data": ["data_0006", "data_0006", "data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "input_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "OTU", "inputs": []}, {"model_class": "ConditionalWhen", "value": "ASV", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_reads", "argument": "--min_reads", "type": "integer", "label": "Minimum number of reads across all samples for each input ASV", "help": "ASVs below this cut-off will be counted as part of the RARE category in the stratified output", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_samples", "argument": "--min_samples", "type": "integer", "label": "Minimum number of samples that an ASV needs to be identfied within", "help": "ASVs below this cut-off will be counted as part of the RARE category in the stratified output", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selector", "argument": null, "type": "select", "label": "Sequence abundance table type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "OTU", "options": [["Operational Taxonomic Units (OTU)", "OTU", true], ["Amplicon Sequence Variants (ASV)", "ASV", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "FloatToolParameter", "name": "max_nsti", "argument": "--max_nsti", "type": "float", "label": "Maximum Nearest-sequenced taxon index (NSTI)", "help": "Sequences with larger values will be excluded", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2.0", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "stratified_output", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": []}, {"model_class": "ConditionalWhen", "value": "--stratified", "inputs": [{"model_class": "BooleanToolParameter", "name": "wide_table", "argument": "--wide_table", "type": "boolean", "label": "Output wide-format stratified table of metagenome predictions", "help": "This is the deprecated method of generating stratified tables since it is extremely memory intensive", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--wide_table", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selector", "argument": "--stratified", "type": "select", "label": "Generate an output table stratified by sequences", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["No", "", true], ["Yes [will increase run-time]", "--stratified", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "skip_norm", "argument": "--skip_norm", "type": "boolean", "label": "Skip normalizing sequence abundances by predicted marker gene copy numbers", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--skip_norm", "falsevalue": ""}]}, {"model_class": "Conditional", "name": "predict_pathways", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": [{"model_class": "DataToolParameter", "name": "pathway_map", "argument": "--pathway_map", "type": "data", "label": "Customized table mapping of pathways to reactions", "help": "Default mapping file is Maps MetaCyc reactions to prokaryotic MetaCyc pathways", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt", "tabular"], "edam": {"edam_formats": ["format_2330", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "skip_minpath", "argument": "--skip_minpath", "type": "boolean", "label": "Run MinPath to identify which pathways are present as a first pass", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--skip_minpath"}, {"model_class": "BooleanToolParameter", "name": "no_gap_fill", "argument": "--no_gap_fill", "type": "boolean", "label": "Perform gap filling before predicting pathway abundances", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--no_gap_fill"}, {"model_class": "Conditional", "name": "regrouping", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": [{"model_class": "DataToolParameter", "name": "regroup_map", "argument": "--regroup_map", "type": "data", "label": "Mapfile of ids to regroup gene families to before running MinPath", "help": "Keep empty to use the default mapping file (ec_level4_to_metacyc_rxn.tsv contained in PICRUSt2)", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "--no_regroup", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "no_regroup", "argument": "--no_regroup", "type": "select", "label": "Regroup input gene families to reactions", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Yes", "", false], ["No", "--no_regroup", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "strat_output", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "--per_sequence_contrib", "inputs": [{"model_class": "DataToolParameter", "name": "per_sequence_abun", "argument": "--per_sequence_abun", "type": "data", "label": "Table of sequence abundances across samples normalized by marker copy number", "help": "Typically the normalized sequence abundance table output at the metagenome pipeline step. This input is required when the per sequence contrib option is set", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "per_sequence_function", "argument": "--per_sequence_function", "type": "data", "label": "Table of function abundances per sequence, which was outputted at the hidden-state prediction step", "help": "This input is required when the per sequence contrib option is set. Note that this file should be the same input table as used for the metagenome pipeline step", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "wide_table", "argument": "--wide_table", "type": "boolean", "label": "Output wide-format stratified table (DEPRECATED)", "help": "Instead of the metagenome contribution table. This is the deprecated method of generating                 stratified tables since it is extremely memory intensive", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--wide_table", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "per_sequence_contrib", "argument": "--per_sequence_contrib", "type": "select", "label": "Calculate pathway abundances for each individual predicted genome", "help": "The output will be the predicted pathway abundance contributed by each individual sequence. This is in contrast to the default stratified output, which is the contribution to the community-wide pathway abundances. Note this will greatly increase the runtime. Experimental pathway coverage stratified by contributing sequence will also be output when --coverage is set", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Yes", "--per_sequence_contrib", false], ["No", "", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "coverage", "argument": "--coverage", "type": "boolean", "label": "Calculate pathway coverages as well as abundances", "help": "Experimental and only useful for advanced users", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--coverage", "falsevalue": ""}, {"model_class": "Conditional", "name": "reaction_map_file", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": [{"model_class": "SelectToolParameter", "name": "reaction_func", "argument": "--reaction_func", "type": "select", "label": "Default functional database", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "EC", "options": [["Clusters of Orthologous Genes database (COG)", "COG", false], ["Enzyme Commission number database (EC number)", "EC", true], ["KEGG Orthology database (KO)", "KO", false], ["Pfam database", "PFAM", false], ["TIGRFAM database", "TIGRFAM", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "DataToolParameter", "name": "reaction_func", "argument": "--reaction_func", "type": "data", "label": "Custom mapping table", "help": "An input 2 column map table linking function ids to descriptions for each function", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selector", "argument": null, "type": "select", "label": "Functional database to use as reactions for inferring pathway abundances", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["Default functional database", "default", true], ["Customized reation functional map file", "custom", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "--no_pathways", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "no_pathways", "argument": "--no_pathways", "type": "select", "label": "Infer pathways", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Yes", "", false], ["No", "--no_pathways", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "remove_intermediate", "argument": "--remove_intermediate", "type": "select", "label": "Keep intermediate files of", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["place_seqs", "place_seqs", false], ["pathways_pipeline", "pathways", false]], "display": null, "multiple": true, "textable": false}], "outputs": [{"model_class": "ToolOutputCollection", "name": "place_seqs_intermediate_output", "format": null, "label": "${tool.name} on ${on_string}: Intermediate files (place_seqs)", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": "full_pipeline_output//intermediate/place_seqs/", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.*)\\.(?P<ext>[^\\.]+)?", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "hsp_output", "format": null, "label": "${tool.name} on ${on_string}: predicted copy numbers", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "tabular", "visible": false, "assign_primary_output": false, "directory": "full_pipeline_output/", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<designation>.+)_predicted\\.tabular", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "metagenome_output", "format": null, "label": "${tool.name} on ${on_string}: metagenome output", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list:list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "tabular", "visible": false, "assign_primary_output": false, "directory": "full_pipeline_output/", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<identifier_0>.+)_metagenome_out_(?P<identifier_1>.+)\\.tabular", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "pathways_intermediate_output", "format": null, "label": "${tool.name} on ${on_string}: Intermediate files pathways", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "tabular", "visible": false, "assign_primary_output": false, "directory": "full_pipeline_output//intermediate/pathways/", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.*)\\.(?P<ext>[^\\.]+)?", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "out_tree", "format": "newick", "label": "${tool.name} on ${on_string}: Tree of reference and study 16S sequences (place_seqs)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "full_pipeline_output//out.tre", "edam_format": "format_1910", "edam_data": "data_0872", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "pathways_output", "format": "tabular", "label": "${tool.name} on ${on_string}: Pathway abundances", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "full_pipeline_output//pathways_out/path_abun_unstrat.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "path_cov_unstrat", "format": "tabular", "label": "${tool.name} on ${on_string}: Pathway coverage pathways", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "full_pipeline_output//pathways_out/path_cov_unstrat.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "path_abun_unstrat_per_seq", "format": "tabular", "label": "${tool.name} on ${on_string}: Pathway abundance unstratified per sequence pathways", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "full_pipeline_output//pathways_out/path_abun_unstrat_per_seq.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "path_abun_predictions", "format": "tabular", "label": "${tool.name} on ${on_string}: Pathway abundance predictions pathways", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "full_pipeline_output//pathways_out/path_abun_predictions.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "path_abun_contrib", "format": "tabular", "label": "${tool.name} on ${on_string}: Pathway abundance contributed pathways", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "full_pipeline_output//pathways_out/path_abun_contrib.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "phylogenetics", "panel_section_name": "Phylogenetics", "form_style": "regular"}