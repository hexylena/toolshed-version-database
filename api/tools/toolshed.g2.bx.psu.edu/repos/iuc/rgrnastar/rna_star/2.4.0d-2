{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.4.0d-2", "name": "RNA STAR", "version": "2.4.0d-2", "description": "Gapped-read mapper for RNA-seq data", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "rgrnastar", "owner": "iuc", "changeset_revision": "ace9f5a2b40f", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "singlePaired", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "input1", "argument": null, "type": "data", "label": "RNA-Seq FASTQ/FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta"], "edam": {"edam_formats": ["format_1930", "format_1929"], "edam_data": ["data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "input1", "argument": null, "type": "data", "label": "RNA-Seq FASTQ/FASTA file, forward reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta"], "edam": {"edam_formats": ["format_1930", "format_1929"], "edam_data": ["data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input2", "argument": null, "type": "data", "label": "RNA-Seq FASTQ/FASTA file, reverse reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta"], "edam": {"edam_formats": ["format_1930", "format_1929"], "edam_data": ["data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired_collection", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "input", "argument": null, "type": "data_collection", "label": "RNA-Seq FASTQ/FASTA paired reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "sPaired", "argument": null, "type": "select", "label": "Single-end or paired-end reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "single", "options": [["Single-end", "single", true], ["Paired-end (as individual datasets)", "paired", false], ["Paired-end (as collection)", "paired_collection", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "refGenomeSource", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "indexed", "inputs": [{"model_class": "SelectToolParameter", "name": "index", "argument": null, "type": "select", "label": "Select a reference genome", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "tair10", "options": [["Arabidopsis_thaliana_TAIR10", "tair10", false], ["Drosophila melanogaster (dm3)", "dm3", false], ["Drosophila melanogaster (dm6)", "dm6", false], ["Homo sapiens (hg19)", "hg19", false], ["Homo sapiens (hg38)", "hg38", false], ["Mus musculus (mm10)", "mm10", false], ["Mus musculus (mm9)", "mm9", false], ["tair10", "Arabidopsis_thaliana_TAIR10", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "ownFile", "argument": null, "type": "data", "label": "Select the reference genome", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "geneModel", "argument": null, "type": "data", "label": "Gene model (gff3,gtf) file for splice junctions. Leave blank for none", "help": "Optional. If supplied, the index file will retain exon junction information for mapping splices (--sjdbGTFfile)", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gff3", "gtf"], "edam": {"edam_formats": ["format_1975", "format_2306"], "edam_data": ["data_1255", "data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "overhang", "argument": null, "type": "integer", "label": "Length of the genomic sequence around annotated junctions", "help": "Used in constructing the splice junctions database. Ideal value is ReadLength-1 (--sjdbOverhang)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "genomeSource", "argument": null, "type": "select", "label": "Custom or built-in reference genome", "help": "Built-ins were indexed using default options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "indexed", "options": [["Use a built-in index", "indexed", true], ["Index and use a genome fasta and GTF file from history", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "output_params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "SelectToolParameter", "name": "outSAMattributes", "argument": null, "type": "select", "label": "Extra SAM attributes to include", "help": "See \"Extra SAM attributes\" below (--outSAMattributes)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Standard", "options": [["Standard", "Standard", true], ["All", "All", false], ["None", "None", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "outSAMstrandField", "argument": null, "type": "select", "label": "Include strand field flag XS", "help": "For Cufflinks compatibility with unstranded RNA-seq data, this option is required (--outSAMstrandField)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "None", "options": [["No", "None", true], ["Yes -- and reads with inconsistent and/or non-canonical introns are filtered out", "intronMotif", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "outFilterIntronMotifs", "argument": null, "type": "select", "label": "Filter alignments containing non-canonical junctions", "help": "For Cufflinks compatibility, removing alignments with non-canonical junctions is recommended (--outFilterIntronMotifs)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "None", "options": [["No", "None", true], ["Remove alignments with non-canonical junctions", "RemoveNoncanonical", false], ["Remove alignments with unannotated non-canonical junctions", "RemoveNoncanonicalUnannotated", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "output_params2", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "BooleanToolParameter", "name": "unmapped_opt", "argument": null, "type": "boolean", "label": "Would you like unmapped reads included in the SAM?", "help": "(--outSAMunmapped)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "Within", "falsevalue": "None"}, {"model_class": "BooleanToolParameter", "name": "primary_opt", "argument": null, "type": "boolean", "label": "Would you like all alignments with the best score labeled primary?", "help": "(--outSAMprimaryFlag)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "AllBestScore", "falsevalue": "OneBestScore"}, {"model_class": "IntegerToolParameter", "name": "unique", "argument": null, "type": "integer", "label": "MAPQ value for unique mappers", "help": "(--outSAMmapqUnique)", "refresh_on_change": false, "min": 0, "max": 255, "optional": false, "hidden": false, "is_dynamic": false, "value": "255", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "sjfilter_opt", "argument": null, "type": "boolean", "label": "Would you like to keep only reads that contain junctions that passed filtering?", "help": "(--outFilterType)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "BySJout", "falsevalue": "Normal"}, {"model_class": "IntegerToolParameter", "name": "multiScoreRange", "argument": null, "type": "integer", "label": "Score range below the maximum score for multimapping alignments", "help": "(--outFilterMultimapScoreRange)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "multiNmax", "argument": null, "type": "integer", "label": "Maximum number of alignments to output a read's alignment results, plus 1", "help": "Reads with at least this number of alignments will have no alignments output (--outFilterMultimapNmax)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "mismatchNmax", "argument": null, "type": "integer", "label": "Maximum number of mismatches to output an alignment, plus 1", "help": "Alignments with at least this number of mismatches will not be output (--outFilterMismatchNmax)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mismatchNoverLmax", "argument": null, "type": "float", "label": "Maximum ratio of mismatches to mapped length", "help": "Alignments with a mismatch ratio of at least this value will not be output (--outFilterMismatchNoverLmax)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.3", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mismatchNoverReadLmax", "argument": null, "type": "float", "label": "Maximum ratio of mismatches to read length", "help": "Alignments with a mismatch ratio of at least this value will not be output (--outFilterMismatchNoverReadLmax)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "scoreMin", "argument": null, "type": "integer", "label": "Minimum alignment score", "help": "Alignments must have scores higher than this value to be output (--outFilterScoreMin)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "scoreMinOverLread", "argument": null, "type": "float", "label": "Minimum alignment score, normalized to read length", "help": "Alignments must have (normalized) scores higher than this value to be output (--outFilterScoreMinOverLread)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.66", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "matchNmin", "argument": null, "type": "integer", "label": "Minimum number of matched bases", "help": "Alignments must have the number of matched bases higher than this value to be output (--outFilterMatchNmin)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "matchNminOverLread", "argument": null, "type": "float", "label": "Minimum number of matched bases, normalized to read length", "help": "Alignments must have the (normalized) number of matched bases higher than this value to be output (--outFilterMatchNminOverLread)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.66", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "output_select2", "argument": null, "type": "select", "label": "Would you like to set additional output parameters (formatting and filtering)?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", true], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "output_select", "argument": null, "type": "select", "label": "Would you like to set output parameters (formatting and filtering)?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", true], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "star_fusion", "inputs": []}, {"model_class": "ConditionalWhen", "value": "full", "inputs": [{"model_class": "Conditional", "name": "seed", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "searchStart", "argument": null, "type": "integer", "label": "Search start point through the read", "help": "(--seedSearchStartLmax)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "searchStartNorm", "argument": null, "type": "float", "label": "Search start point through the read, normalized to read length", "help": "(--seedSearchStartLmaxOverLread)", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "searchLmax", "argument": null, "type": "integer", "label": "Maximum length of seeds", "help": "Default of 0 indicates no maximum length (--seedSearchLmax)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "multimap", "argument": null, "type": "integer", "label": "Maximum number of mappings to use a piece in stitching", "help": "(--seedMultimapNmax)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "readMax", "argument": null, "type": "integer", "label": "Maximum number of seeds per read", "help": "(--seedPerReadNmax)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "windowMax", "argument": null, "type": "integer", "label": "Maximum number of seeds per window", "help": "(--seedPerWindowNmax)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "oneSeed", "argument": null, "type": "integer", "label": "Maximum number of one seed loci per window", "help": "(--seedNoneLociPerWindow)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "seed_select", "argument": null, "type": "select", "label": "Would you like to set seed parameters?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", true], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "align", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "intronMin", "argument": null, "type": "integer", "label": "Minimum intron size", "help": "(--alignIntronMin)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "21", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "intronMax", "argument": null, "type": "integer", "label": "Maximum intron size", "help": "(--alignIntronMax)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "gapMax", "argument": null, "type": "integer", "label": "Maximum gap between two mates", "help": "(--alignMatesGapMax)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "sjOverhang", "argument": null, "type": "integer", "label": "Minimum overhang for spliced alignments", "help": "(--alignSJoverhangMin)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "sjdbOverhang", "argument": null, "type": "integer", "label": "Minimum overhang for annotated spliced alignments", "help": "(--alignSJDBoverhangMin)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "splicedMate", "argument": null, "type": "integer", "label": "Minimum mapped length for a read mate that is spliced", "help": "(--alignSplicedMateMapLmin)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "splicedMateNorm", "argument": null, "type": "float", "label": "Minimum mapped length for a read mate that is spliced, normalized to mate length", "help": "(--alignSplicedMateMapLminOverLmate)", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.66", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "windows", "argument": null, "type": "integer", "label": "Maximum number of windows per read", "help": "(--alignWindowsPerReadNmax)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "transWindow", "argument": null, "type": "integer", "label": "Maximum number of transcripts per window", "help": "(--alignTranscriptsPerWindowNmax)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "transRead", "argument": null, "type": "integer", "label": "Maximum number of different alignments per read to consider", "help": "(--alignTranscriptsPerReadNmax)", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "endsType_opt", "argument": null, "type": "boolean", "label": "Use end-to-end read alignments, with no soft-clipping?", "help": "(--alignEndsType)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "EndToEnd", "falsevalue": "Local"}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "align_select", "argument": null, "type": "select", "label": "Would you like to set alignment parameters?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", true], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "chim", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "segmentMin", "argument": null, "type": "integer", "label": "Minimum length of chimeric segment", "help": "Default of 0 means no chimeric output (--chimSegmentMin)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "scoreMin", "argument": null, "type": "integer", "label": "Minimum total (summed) score of chimeric segments", "help": "(--chimScoreMin)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "scoreDrop", "argument": null, "type": "integer", "label": "Maximum difference of chimeric score from read length", "help": "(--chimScoreDropMax)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "scoreSep", "argument": null, "type": "integer", "label": "Minimum difference between the best chimeric score and the next one", "help": "(--chimScoreSeparation)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "scoreJunction", "argument": null, "type": "integer", "label": "Penalty for a non-GT/AG chimeric junction", "help": "(--chimScoreJunctionNonGTAG)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "junctionOverhang", "argument": null, "type": "integer", "label": "Minimum overhang for a chimeric junction", "help": "(--chimJunctionOverhangMin)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "chim_select", "argument": null, "type": "select", "label": "Would you like to set chimeric alignment parameters?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", true], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "settingsType", "argument": null, "type": "select", "label": "Other parameters (seed, alignment, and chimeric alignment)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["Use Defaults", "default", true], ["Use parameters suggested for STAR-Fusion", "star_fusion", false], ["Extended parameter list", "full", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "output_log", "format": "txt", "label": "${tool.name} on ${on_string}: log", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Log.final.out", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "chimeric_junctions", "format": "interval", "label": "${tool.name} on ${on_string}: starchimjunc", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Chimeric.out.junction", "edam_format": "format_3475", "edam_data": "data_3002", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "chimeric_reads", "format": "bam", "label": "${tool.name} on ${on_string}: starmappedchim.bam", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ChimericSorted.bam", "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "splice_junctions", "format": "interval", "label": "${tool.name} on ${on_string}: starsplicejunct.bed", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "SJ.out.tab", "edam_format": "format_3475", "edam_data": "data_3002", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "mapped_reads", "format": "bam", "label": "${tool.name} on ${on_string}: starmapped.bam", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "AlignedSorted.bam", "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "mapping", "panel_section_name": "Mapping", "form_style": "regular"}