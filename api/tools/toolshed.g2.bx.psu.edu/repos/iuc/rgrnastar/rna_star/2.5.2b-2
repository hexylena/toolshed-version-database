{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.5.2b-2", "name": "RNA STAR", "version": "2.5.2b-2", "description": "Gapped-read mapper for RNA-seq data", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "rgrnastar", "owner": "iuc", "changeset_revision": "2055c2667eb3", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "singlePaired", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "input1", "argument": null, "type": "data", "label": "RNA-Seq FASTQ/FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastqsanger.gz"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930", "format_1932"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "input1", "argument": null, "type": "data", "label": "RNA-Seq FASTQ/FASTA file, forward reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastqsanger.gz"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930", "format_1932"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input2", "argument": null, "type": "data", "label": "RNA-Seq FASTQ/FASTA file, reverse reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastqsanger.gz"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930", "format_1932"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired_collection", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "input", "argument": null, "type": "data_collection", "label": "RNA-Seq FASTQ/FASTA paired reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastqsanger.gz"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "sPaired", "argument": null, "type": "select", "label": "Single-end or paired-end reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "single", "options": [["Single-end", "single", true], ["Paired-end (as individual datasets)", "paired", false], ["Paired-end (as collection)", "paired_collection", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "refGenomeSource", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "indexed", "inputs": [{"model_class": "Conditional", "name": "GTFconditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "with-gtf", "inputs": [{"model_class": "SelectToolParameter", "name": "genomeDir", "argument": "--genomeDir", "type": "select", "label": "Select reference genome", "help": "If your genome of interest is not listed, contact the Galaxy team", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "dm6", "options": [["Drosophila melanogaster (dm6+BDGP6.87)", "dm6", false], ["Homo sapiens (hg19+GRCh37.75)", "hg19", false], ["Homo sapiens (hg38+GRCh38.87)", "hg38", false], ["Mus musculus (mm10+GRCm38.87)", "mm10", false], ["Mus musculus (mm10+GRCm38.89)", "mm10.89", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "without-gtf", "inputs": [{"model_class": "SelectToolParameter", "name": "genomeDir", "argument": "--genomeDir", "type": "select", "label": "Select reference genome", "help": "If your genome of interest is not listed, contact the Galaxy team", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "xenLae9.2", "options": [["African Clawed Frog (xenLae9.2)", "xenLae9.2", false], ["Arabidopsis thaliana (tair10)", "TAIR10", false], ["Drosophila melanogaster (dm3)", "dm3", false], ["Drosophila melanogaster (dm6)", "dm6", false], ["Homo sapiens (hg19)", "hg19", false], ["Homo sapiens (hg38)", "hg38", false], ["Mus musculus (mm10)", "mm10", false], ["Mus musculus (mm9)", "mm9", false], ["Pig Aug. 2011 (SGSC Sscrofa10.2/susScr3) (susScr3)", "susScr3", false], ["Pig Feb. 2017 (Sscrofa11.1/susScr11) (susScr11)", "susScr11", false], ["Salmonella enterica", "S. enterica (NC_016810.1)", false], ["Xenopus tropicalis (xenTro9.1)", "xenTro9.1", false], ["Zebrafish Jul. 2010 (Zv9/danRer7) (danRer7)", "danRer7", false], ["Zebrafish May 2017 (GRCz11/danRer11) (danRer11)", "danRer11", false], ["Zebrafish Sep. 2014 (GRCz10/danRer10) (danRer10)", "danRer10", false], ["canFam3", "canFam3", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "DataToolParameter", "name": "sjdbGTFfile", "argument": "--sjdbGTFfile", "type": "data", "label": "Gene model (gff3,gtf) file for splice junctions", "help": "Exon junction information for mapping splices", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gff3", "gtf"], "edam": {"edam_formats": ["format_1975", "format_2306"], "edam_data": ["data_1255", "data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "sjdbOverhang", "argument": "--sjdbOverhang", "type": "integer", "label": "Length of the genomic sequence around annotated junctions", "help": "Used in constructing the splice junctions database. Ideal value is ReadLength-1", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "GTFselect", "argument": null, "type": "select", "label": "Reference genome with or without an annotation", "help": "Must the index have been created WITH a GTF file (if not you can specify one afterward).", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "without-gtf", "options": [["use genome reference without builtin gene-model", "without-gtf", false], ["use genome reference with builtin gene-model", "with-gtf", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "genomeFastaFiles", "argument": "--genomeFastaFiles", "type": "data", "label": "Select a reference genome", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "sjdbGTFfile", "argument": "--sjdbGTFfile", "type": "data", "label": "Gene model (gff3,gtf) file for splice junctions", "help": "Exon junction information for mapping splices", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gff3", "gtf"], "edam": {"edam_formats": ["format_1975", "format_2306"], "edam_data": ["data_1255", "data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "sjdbOverhang", "argument": "--sjdbOverhang", "type": "integer", "label": "Length of the genomic sequence around annotated junctions", "help": "Used in constructing the splice junctions database. Ideal value is ReadLength-1", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "geneSource", "argument": null, "type": "select", "label": "Custom or built-in reference genome", "help": "Built-ins were indexed using default options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "indexed", "options": [["Use a built-in index", "indexed", true], ["Use reference genome from history and create temporary index", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "quantMode", "argument": "--quantMode", "type": "boolean", "label": "Count number of reads per gene", "help": "column 1: gene ID, column 2: counts for unstranded RNA-seq, column 3: counts for the 1st read strand aligned with RNA , column 4: counts for the 2nd read strand aligned with RNA. This requires either (A) an index that was built with an annotation (GTF or GFF3 file) or (B) having specified an annotation (GTF or GFF3 file above).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "Conditional", "name": "output_params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "SelectToolParameter", "name": "outSAMattributes", "argument": "--outSAMattributes", "type": "select", "label": "Extra SAM attributes to include", "help": "See \"Extra SAM attributes\" below", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Standard", "options": [["Standard", "Standard", true], ["All", "All", false], ["None", "None", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "outSAMstrandField", "argument": "--outSAMstrandField", "type": "select", "label": "Include strand field flag XS", "help": "For Cufflinks compatibility with unstranded RNA-seq data, this option is required", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "None", "options": [["No", "None", true], ["Yes -- and reads with inconsistent and/or non-canonical introns are filtered out", "intronMotif", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "outFilterIntronMotifs", "argument": "--outFilterIntronMotifs", "type": "select", "label": "Filter alignments containing non-canonical junctions", "help": "For Cufflinks compatibility, removing alignments with non-canonical junctions is recommended", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "None", "options": [["No", "None", true], ["Remove alignments with non-canonical junctions", "RemoveNoncanonical", false], ["Remove alignments with unannotated non-canonical junctions", "RemoveNoncanonicalUnannotated", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "output_params2", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "BooleanToolParameter", "name": "outSAMunmapped", "argument": "--outSAMunmapped", "type": "boolean", "label": "Would you like unmapped reads included in the SAM?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "Within", "falsevalue": "None"}, {"model_class": "BooleanToolParameter", "name": "outSAMprimaryFlag", "argument": "--outSAMprimaryFlag", "type": "boolean", "label": "Would you like all alignments with the best score labeled primary?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "AllBestScore", "falsevalue": "OneBestScore"}, {"model_class": "IntegerToolParameter", "name": "outSAMmapqUnique", "argument": "--outSAMmapqUnique", "type": "integer", "label": "MAPQ value for unique mappers", "help": "", "refresh_on_change": false, "min": 0, "max": 255, "optional": false, "hidden": false, "is_dynamic": false, "value": "255", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "outFilterType", "argument": "--outFilterType", "type": "boolean", "label": "Would you like to keep only reads that contain junctions that passed filtering?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "BySJout", "falsevalue": "Normal"}, {"model_class": "IntegerToolParameter", "name": "outFilterMultimapScoreRange", "argument": "--outFilterMultimapScoreRange", "type": "integer", "label": "Score range below the maximum score for multimapping alignments", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "outFilterMultimapNmax", "argument": "--outFilterMultimapNmax", "type": "integer", "label": "Maximum number of alignments to output a read's alignment results, plus 1", "help": "Reads with at least this number of alignments will have no alignments output", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "outFilterMismatchNmax", "argument": "--outFilterMismatchNmax", "type": "integer", "label": "Maximum number of mismatches to output an alignment, plus 1", "help": "Alignments with at least this number of mismatches will not be output", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "outFilterMismatchNoverLmax", "argument": "--outFilterMismatchNoverLmax", "type": "float", "label": "Maximum ratio of mismatches to mapped length", "help": "Alignments with a mismatch ratio of at least this value will not be output", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.3", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "outFilterMismatchNoverReadLmax", "argument": "--outFilterMismatchNoverReadLmax", "type": "float", "label": "Maximum ratio of mismatches to read length", "help": "Alignments with a mismatch ratio of at least this value will not be output", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "outFilterScoreMin", "argument": "--outFilterScoreMin", "type": "integer", "label": "Minimum alignment score", "help": "Alignments must have scores higher than this value to be output", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "outFilterScoreMinOverLread", "argument": "--outFilterScoreMinOverLread", "type": "float", "label": "Minimum alignment score, normalized to read length", "help": "Alignments must have (normalized) scores higher than this value to be output", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.66", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "outFilterMatchNmin", "argument": "--outFilterMatchNmin", "type": "integer", "label": "Minimum number of matched bases", "help": "Alignments must have the number of matched bases higher than this value to be output", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "outFilterMatchNminOverLread", "argument": "--outFilterMatchNminOverLread", "type": "float", "label": "Minimum number of matched bases, normalized to read length", "help": "Alignments must have the (normalized) number of matched bases higher than this value to be output", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.66", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "output_select2", "argument": null, "type": "select", "label": "Would you like to set additional output parameters (formatting and filtering)?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", true], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "output_select", "argument": null, "type": "select", "label": "Would you like to set output parameters (formatting and filtering)?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", true], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "params", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "star_fusion", "inputs": []}, {"model_class": "ConditionalWhen", "value": "full", "inputs": [{"model_class": "Section", "name": "seed", "type": "section", "title": "Seed parameters", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "seedSearchStartLmax", "argument": "--seedSearchStartLmax", "type": "integer", "label": "Search start point through the read", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "seedSearchStartLmaxOverLread", "argument": "--seedSearchStartLmaxOverLread", "type": "float", "label": "Search start point through the read, normalized to read length", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seedSearchLmax", "argument": "--seedSearchLmax", "type": "integer", "label": "Maximum length of seeds", "help": "Default of 0 indicates no maximum length", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seedMultimapNmax", "argument": "--seedMultimapNmax", "type": "integer", "label": "Maximum number of mappings to use a piece in stitching", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seedPerReadNmax", "argument": "--seedPerReadNmax", "type": "integer", "label": "Maximum number of seeds per read", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seedPerWindowNmax", "argument": "--seedPerWindowNmax", "type": "integer", "label": "Maximum number of seeds per window", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "seedNoneLociPerWindow", "argument": "--seedNoneLociPerWindow", "type": "integer", "label": "Maximum number of one seed loci per window", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "align", "type": "section", "title": "Alignment parameters", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "alignIntronMin", "argument": "--alignIntronMin", "type": "integer", "label": "Minimum intron size", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "21", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "alignIntronMax", "argument": "--alignIntronMax", "type": "integer", "label": "Maximum intron size", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "alignMatesGapMax", "argument": "--alignMatesGapMax", "type": "integer", "label": "Maximum gap between two mates", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "alignSJoverhangMin", "argument": "--alignSJoverhangMin", "type": "integer", "label": "Minimum overhang for spliced alignments", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "alignSJDBoverhangMin", "argument": "--alignSJDBoverhangMin", "type": "integer", "label": "Minimum overhang for annotated spliced alignments", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "alignSplicedMateMapLmin", "argument": "--alignSplicedMateMapLmin", "type": "integer", "label": "Minimum mapped length for a read mate that is spliced", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "alignSplicedMateMapLminOverLmate", "argument": "--alignSplicedMateMapLminOverLmate", "type": "float", "label": "Minimum mapped length for a read mate that is spliced, normalized to mate length", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.66", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "alignWindowsPerReadNmax", "argument": "--alignWindowsPerReadNmax", "type": "integer", "label": "Maximum number of windows per read", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "alignTranscriptsPerWindowNmax", "argument": "--alignTranscriptsPerWindowNmax", "type": "integer", "label": "Maximum number of transcripts per window", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "alignTranscriptsPerReadNmax", "argument": "--alignTranscriptsPerReadNmax", "type": "integer", "label": "Maximum number of different alignments per read to consider", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "alignEndsType", "argument": "--alignEndsType", "type": "boolean", "label": "Use end-to-end read alignments, with no soft-clipping?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "EndToEnd", "falsevalue": "Local"}]}, {"model_class": "Section", "name": "twopass", "type": "section", "title": "Two pass mode", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "twopassMode", "argument": "--twopassMode", "type": "boolean", "label": "Use two pass mode to better map reads to unknown splice junctions", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "Basic", "falsevalue": "None"}, {"model_class": "IntegerToolParameter", "name": "twopass1readsN", "argument": "--twopass1readsN", "type": "integer", "label": "Number of reads to map in the first pass (-1: all)", "help": "", "refresh_on_change": false, "min": -1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "limits", "type": "section", "title": "Limits", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "limitBAMsortRAM", "argument": "--limitBAMsortRAM", "type": "integer", "label": "Maximum available RAM (in bytes) for sorting", "help": "If 0, this will be set to the genome index size. This is typically only changed in cases where an error is produced.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "limitOutSJoneRead", "argument": "--limitOutSJoneRead", "type": "integer", "label": "Maximum number of junctions for one read (including all multimappers)", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "limitOutSJcollapsed", "argument": "--limitOutSJcollapsed", "type": "integer", "label": "Maximum number of collapsed junctions", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "limitSjdbInsertNsj", "argument": "--limitSjdbInsertNsj", "type": "integer", "label": "Maximum number of inserts to be inserted into the genome on the fly.", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000000", "area": false, "datalist": []}]}, {"model_class": "Conditional", "name": "chim", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "chimSegmentMin", "argument": "--chimSegmentMin", "type": "integer", "label": "Minimum length of chimeric segment", "help": "For small numbers this will cause large number of chimeric alignments. A value of 12 is commonly used. Default of 0 means no chimeric output", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "chimScoreMin", "argument": "--chimScoreMin", "type": "integer", "label": "Minimum total (summed) score of chimeric segments", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "chimScoreDropMax", "argument": "--chimScoreDropMax", "type": "integer", "label": "Maximum difference of chimeric score from read length", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "chimScoreSeparation", "argument": "--chimScoreSeparation", "type": "integer", "label": "Minimum difference between the best chimeric score and the next one", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "chimScoreJunctionNonGTAG", "argument": "--chimScoreJunctionNonGTAG", "type": "integer", "label": "Penalty for a non-GT/AG chimeric junction", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "chimJunctionOverhangMin", "argument": "--chimJunctionOverhangMin", "type": "integer", "label": "Minimum overhang for a chimeric junction", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "chim_select", "argument": null, "type": "select", "label": "Would you like to set chimeric alignment parameters?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", true], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "settingsType", "argument": null, "type": "select", "label": "Other parameters (seed, alignment, limits and chimeric alignment)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["Use Defaults", "default", true], ["Use parameters suggested for STAR-Fusion", "star_fusion", false], ["Extended parameter list", "full", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "output_log", "format": "txt", "label": "${tool.name} on ${on_string}: log", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Log.final.out", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "chimeric_junctions", "format": "interval", "label": "${tool.name} on ${on_string}: chimeric junctions", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Chimeric.out.junction", "edam_format": "format_3475", "edam_data": "data_3002", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "chimeric_reads", "format": "bam", "label": "${tool.name} on ${on_string}: chimeric.bam", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ChimericSorted.bam", "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "splice_junctions", "format": "interval", "label": "${tool.name} on ${on_string}: splice junctions.bed", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "SJ.out.tab", "edam_format": "format_3475", "edam_data": "data_3002", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "mapped_reads", "format": "bam", "label": "${tool.name} on ${on_string}: mapped.bam", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "Aligned.sortedByCoord.out.bam", "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "reads_per_gene", "format": "tabular", "label": "${tool.name} on ${on_string}: reads per gene", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ReadsPerGene.out.tab", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "mapping", "panel_section_name": "Mapping", "form_style": "regular"}