{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/strelka_germline/strelka_germline/2.9.10+galaxy0", "name": "Strelka Germline", "version": "2.9.10+galaxy0", "description": "small variant caller for germline variation in small cohorts", "labels": [], "edam_operations": ["operation_3227"], "edam_topics": ["topic_0199"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "strelka", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "strelka_germline", "owner": "iuc", "changeset_revision": "19481653a22f", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "bam", "argument": "--bam", "type": "data", "label": "Select sample file(s)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam", "cram"], "edam": {"edam_formats": ["format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "ref_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "cached", "inputs": [{"model_class": "SelectToolParameter", "name": "ref", "argument": null, "type": "select", "label": "Reference genome", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "ref", "argument": null, "type": "data", "label": "Reference sequence", "help": "(--referenceFasta)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "ref_sel", "argument": null, "type": "select", "label": "Choose the source for the reference genome", "help": "(--referenceFasta)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "cached", "options": [["Locally cached", "cached", false], ["History", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "optimization", "argument": null, "type": "select", "label": "Optimize variant calling for", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Whole-genome sequencing (WGS) data (default mode)", "", false], ["Whole-exome sequencing (WES) data (--exome)", "--exome", false], ["RNA sequencing data (--rna)", "--rna", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Section", "name": "expert_settings", "type": "section", "title": "Expert configuration of calling model", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "s_e_e", "argument": null, "type": "select", "label": "Configure sequence error estimation for indels", "help": "By default, indel error rates are estimated from a subsample of the input sequencing data for each sample. This step can be disabled so that the tool reverts to precomputed indel error rates reflecting an intermediate point between different sequencing assays. Alternatively, all data (from sufficiently large chromosomes) can be used to obtain the estimate, but this may greatly increase runtime.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Use default sequence error estimate (--disableSequenceErrorEstimation)", "--disableSequenceErrorEstimation", false], ["Estimate sequence error rate from a subsample of the input data (default)", "", true], ["Estimate sequence error rate from the full input data (--useAllDataForSequenceErrorEstimation)", "--useAllDataForSequenceErrorEstimation", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "evs", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "disableEVS", "inputs": []}, {"model_class": "ConditionalWhen", "value": "enableEVS", "inputs": [{"model_class": "DataToolParameter", "name": "snvScoringModelFile", "argument": "--snvScoringModelFile", "type": "data", "label": "Optional SNV scoring model to overwrite default model", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["json"], "edam": {"edam_formats": ["format_3464"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "indelScoringModelFile", "argument": "--indelScoringModelFile", "type": "data", "label": "Optional indel scoring model to overwrite default model", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["json"], "edam": {"edam_formats": ["format_3464"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "reportEVSFeatures", "argument": "--reportEVSFeatures", "type": "boolean", "label": "Report all empirical variant scoring features in VCF output", "help": "WARNING: Do not use this feature with Strelka Germline and more than one input sample or the tool run will fail!", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--reportEVSFeatures", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selector", "argument": null, "type": "select", "label": "Configure empirical variant scoring (EVS) model", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "enableEVS", "options": [["Don't use EVS, just simple threshold-based filtering (--disableEVS)", "disableEVS", false], ["Use EVS models (default)", "enableEVS", true]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Conditional", "name": "regions", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "genome", "inputs": []}, {"model_class": "ConditionalWhen", "value": "regions_from_file", "inputs": [{"model_class": "DataToolParameter", "name": "callRegions", "argument": "--callRegions", "type": "data", "label": "BED dataset with regions to examine", "help": "Specify a set of regions to call. No VCF output will be provided outside of these regions. Note that the full genome may still be used to calculate certain input statistics (such as expected depth per chromosome).", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed"], "edam": {"edam_formats": ["format_3003"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "restrict_to_region", "argument": null, "type": "select", "label": "Call variants across", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "genome", "options": [["Whole reference", "genome", false], ["Regions specified in BED", "regions_from_file", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Repeat", "name": "forced_regions", "type": "repeat", "title": "Whitelists of SNV/indel sites that should always be considered", "help": "Add whitelisted SNVs/indels to list of considered/reported alleles explicitly", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "whitelist", "argument": null, "type": "data", "label": "Select file with candidate alleles", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf"], "edam": {"edam_formats": ["format_3016"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "use_whitelist_as", "argument": null, "type": "select", "label": "Use this whitelist as", "help": "An indel candidates list is used during the realignment and calling steps to increase the chances of detecting given indels if they exist in any sample. If the indel is NOT found despite these efforts, it will NOT be reported, however. With a list of 'SNV sites and/or indels of interest', on the other hand, indels in the list undergo that same treatment, but listed indels and SNPs are both guaranteed to be reported in the variants output, even if they are judged as not being present in any sample.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "indel_candidates", "options": [["A list of indel candidates to be considered during realignment/calling (--indelCandidates)", "indel_candidates", false], ["A list of SNV sites/indels of interest that should always be reported (--forcedGT)", "forced_gt_sites", false]], "display": "radio", "multiple": false, "textable": false}]}, {"model_class": "Section", "name": "pl", "type": "section", "title": "Ploidy configuration", "help": null, "expanded": false, "inputs": [{"model_class": "DataToolParameter", "name": "ploidy", "argument": "--ploidy", "type": "data", "label": "Select ploidy file", "help": "Provide ploidy file in VCF. The VCF should include one sample column per input sample labeled with the same sample names found in the input BAM/CRAM RG header sections. Ploidy should be provided in records using the FORMAT/CN field, which are interpreted to span the range [POS+1, INFO/END]. Any CN value besides 1 (haploid regions) or 0 (regions expected to be absent) will be treated as 2.", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf", "vcf_bgzip"], "edam": {"edam_formats": ["format_3016", "format_3016"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "callContinuousVf", "argument": "--callContinuousVf", "type": "text", "label": "Call variants without ploidy assumption on this chromosome", "help": "For the specified chromosome the sequencing data will be treated as a pooled sample: variants on it will be called with continuous frequencies and scored using a simple Poisson noise model. May be applied to the mitochondrial genome, for example.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "oo", "type": "section", "title": "Output options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "vcf_type", "argument": null, "type": "boolean", "label": "Generate compressed variants output (vcf.gz)", "help": "Default is uncompressed vcf", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "compressed", "falsevalue": "decompressed"}, {"model_class": "Conditional", "name": "gvcf", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "DataToolParameter", "name": "noCompress", "argument": "--noCompress", "type": "data", "label": "In the gVCFs, do NOT block-compress sites that fall in these regions", "help": "If you have regions of special interest, for which you do not want site-information to be binned into blocks in the gVCF output, but would want to have calling statistics reported separately, you can specify those regions through a BED dataset here.", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed"], "edam": {"edam_formats": ["format_3003"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "emit_gvcfs", "argument": null, "type": "select", "label": "Generate per-sample gVCFs?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", false], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Section", "name": "strelka", "type": "section", "title": "Strelka run configuration", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "minMapq", "argument": "minMapq", "type": "integer", "label": "Set minMapq", "help": "Don't use reads with MAPQ less than this value for variant calling.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maxIndelSize", "argument": "maxIndelSize", "type": "integer", "label": "Set maximum reported indel size", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "49", "area": false, "datalist": []}]}], "outputs": [{"model_class": "ToolOutputCollection", "name": "out_genome", "format": null, "label": "${tool.name} on ${on_string}: Genome, vcf", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "vcf_bgzip", "visible": false, "assign_primary_output": false, "directory": "results/results/variants/", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "genome\\.(?P<designation>.+)\\.vcf\\.gz$", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "out_variants", "format": "vcf", "label": "${tool.name} on ${on_string}, Variants, vcf", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "results/results/variants/variants_out", "edam_format": "format_3016", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "variant_calling", "panel_section_name": "Variant Calling", "form_style": "regular"}