{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/ragtag/ragtag/2.1.0+galaxy0", "name": "RagTag", "version": "2.1.0+galaxy0", "description": "reference-guided scaffolding of draft genomes", "labels": [], "edam_operations": ["operation_0525"], "edam_topics": ["topic_0196"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "ragtag", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "ragtag", "owner": "iuc", "changeset_revision": "d110a4141898", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "mode_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "correct", "inputs": [{"model_class": "DataToolParameter", "name": "reference", "argument": null, "type": "data", "label": "Reference FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "query", "argument": null, "type": "data", "label": "Query FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "validation_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "DataToolParameter", "name": "R", "argument": "-R", "type": "data", "label": "Validation reads", "help": "Without validation, the module will break at any point of reference discordance as defined by the 'correction options'.                                  With validation, RagTag maps reads to the query assembly and verifies putative break points if they are near regions of                                  exceptionally low or high coverage. The reads used for validation should come from the same genotype as the query                                  assembly to ensure that coverage abnormalities don't arise from true biological variation", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastqsanger"], "edam": {"edam_formats": ["format_1930", "format_1932"], "edam_data": ["data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "read_type", "argument": null, "type": "select", "label": "Read type", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "sr", "options": [["Illumina", "sr", false], ["Nanopore", "ont", false], ["Error corrected long-reads", "corr", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "v", "argument": "-v", "type": "integer", "label": "Coverage validation window size", "help": "This parameter specifies the window around the putative misassembly break point that RagTag examines                                  for exceptionally low or high read coverage. The larger this window size, the more likely                                  it is to find an unrelated coverage abnormality", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_cov", "argument": "--max-cov", "type": "integer", "label": "Break sequences at regions at or above this coverage level", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_cov", "argument": "--min-cov", "type": "integer", "label": "Break sequences at regions at or below this coverage level", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "validation_option", "argument": null, "type": "select", "label": "Use validation reads", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["Enabled", "true", false], ["Disabled", "false", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "advanced_options", "type": "section", "title": "Advanced options", "help": null, "expanded": false, "inputs": [{"model_class": "DataToolParameter", "name": "e", "argument": "-e", "type": "data", "label": "List of reference headers to ignore", "help": "Use this parameter to provide a single column file listing any reference.fa headers that should                  be ignored (e.g. chr0/chrUn or alt contigs)", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "j", "argument": "-j", "type": "data", "label": "List of query headers to leave uncorrected", "help": "use this parameter to provide a single column file listing any query.fa headers that shall not be broken", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "f", "argument": "-f", "type": "integer", "label": "Minimum unique single length", "help": "If an alignment is not entirely unique, at least -f bp of the alignment must be unique to be considered                  for scaffolding. By default, entirely unique alignments are considered regardless of their length, but                  this can be disabled with --remove-small. Doing so ensures that only alignments at least -f bp in length                  are considered for correction", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "remove_small", "argument": "--remove-small", "type": "boolean", "label": "Remove unique alignments", "help": "Remove unique alignments shorter than the minimum unique alignment length", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--remove-small", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "q", "argument": "-q", "type": "integer", "label": "Minimum mappping quality", "help": "Mapping quality scores quantify the probability that a read is misplaced", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "d", "argument": "-d", "type": "integer", "label": "Maximum alignment merge distance", "help": "For each query sequence, syntenic alignments within -d bp of each other are merged into longer alignments", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "mapping_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "nucmer", "inputs": [{"model_class": "SelectToolParameter", "name": "anchor_mode", "argument": null, "type": "select", "label": "Anchoring mode", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "--maxmatch", "options": [["Use anchor matches that are unique in both the reference and query (--mum)", "--mum", false], ["Use anchor matches that are unique in in the reference but not necessarily unique in the query (--mumreference)", "--mumreference", false], ["Use all anchor matches regardless of their uniqueness (--maxmatch)", "--maxmatch", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "l", "argument": "-l", "type": "integer", "label": "Minimun length of a single match", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "c", "argument": "-c", "type": "integer", "label": "Minimum length of a cluster of matches", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "minimap2", "inputs": [{"model_class": "SelectToolParameter", "name": "mm2_params", "argument": "--mm2-params", "type": "select", "label": "Select a profile of preset options", "help": "Each profile comes with the preconfigured settings mentioned in parentheses", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "asm5", "options": [["Asm5: the alignment will not extend to regions with 5% or higher sequence divergence (-k19 -w19 -A1 -B19 -O39,81 -E3,1 -s200 -z200 --min-occ-floor=100)", "asm5", false], ["Asm10: up to 10% sequence divergence (-k19 -w19 -A1 -B9 -O16,41 -E2,1 -s200 -z200 --min-occ-floor=100)", "asm10", false], ["Asm20: up to 20% sequence divergence (-k19 -w10 -A1 -B6 -O6,26 -E2,1 -s200 -z200 --min-occ-floor=100)", "asm20", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mapping_option", "argument": null, "type": "select", "label": "Aligner tool", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "minimap2", "options": [["Nucmer", "nucmer", false], ["Minimap2", "minimap2", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "b", "argument": "-b", "type": "integer", "label": "Minimum break distance from contig ends", "help": "Breaks will not be made within -b bp of query sequence termini", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5000", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "missasembly_break", "argument": null, "type": "select", "label": "Break misassebly option", "help": "One can also direct RagTag to only break misassemblies between (--inter, query maps to >1 reference sequence) or within                              (--intra, query maps discordantly to 1 reference sequence) reference sequences", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Only break misassemblies between reference sequences (--inter)", "--inter", false], ["Only break missasemblies within reference sequences (--intra)", "--intra", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "DataToolParameter", "name": "gff", "argument": "--gff", "type": "data", "label": "Don't break sequences within GFF intervals", "help": " If one has annotations associated with the query assembly, provide them with the --gff option to ensure that the query assembly                              is never broken within annotation intervals. ", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gff"], "edam": {"edam_formats": ["format_2305"], "edam_data": ["data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "SelectToolParameter", "name": "output_correct", "argument": null, "type": "select", "label": "Output files", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["fasta", "agp"], "options": [["The corrected query assembly in FASTA format", "fasta", true], ["The AGP file defining the exact coordinates of query sequence breaks", "agp", true], ["The description of the approximate mapping positions between two set of sequences in PAF format", "paf", false], ["Log file", "log", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "scaffold", "inputs": [{"model_class": "DataToolParameter", "name": "reference", "argument": null, "type": "data", "label": "Reference FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "query", "argument": null, "type": "data", "label": "Query FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "advanced_options", "type": "section", "title": "advanced options", "help": null, "expanded": false, "inputs": [{"model_class": "DataToolParameter", "name": "e", "argument": "-e", "type": "data", "label": "List of reference headers to ignore", "help": "Use this parameter to provide a single column file listing any reference.fa headers that should                  be ignored (e.g. chr0/chrUn or alt contigs)", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "j", "argument": "-j", "type": "data", "label": "List of query headers to leave uncorrected", "help": "use this parameter to provide a single column file listing any query.fa headers that shall not be broken", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "f", "argument": "-f", "type": "integer", "label": "Minimum unique single length", "help": "If an alignment is not entirely unique, at least -f bp of the alignment must be unique to be considered                  for scaffolding. By default, entirely unique alignments are considered regardless of their length, but                  this can be disabled with --remove-small. Doing so ensures that only alignments at least -f bp in length                  are considered for correction", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "remove_small", "argument": "--remove-small", "type": "boolean", "label": "Remove unique alignments", "help": "Remove unique alignments shorter than the minimum unique alignment length", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--remove-small", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "q", "argument": "-q", "type": "integer", "label": "Minimum mappping quality", "help": "Mapping quality scores quantify the probability that a read is misplaced", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "d", "argument": "-d", "type": "integer", "label": "Maximum alignment merge distance", "help": "For each query sequence, syntenic alignments within -d bp of each other are merged into longer alignments", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "mapping_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "nucmer", "inputs": [{"model_class": "SelectToolParameter", "name": "anchor_mode", "argument": null, "type": "select", "label": "Anchoring mode", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "--maxmatch", "options": [["Use anchor matches that are unique in both the reference and query (--mum)", "--mum", false], ["Use anchor matches that are unique in in the reference but not necessarily unique in the query (--mumreference)", "--mumreference", false], ["Use all anchor matches regardless of their uniqueness (--maxmatch)", "--maxmatch", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "l", "argument": "-l", "type": "integer", "label": "Minimun length of a single match", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "c", "argument": "-c", "type": "integer", "label": "Minimum length of a cluster of matches", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "minimap2", "inputs": [{"model_class": "SelectToolParameter", "name": "mm2_params", "argument": "--mm2-params", "type": "select", "label": "Select a profile of preset options", "help": "Each profile comes with the preconfigured settings mentioned in parentheses", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "asm5", "options": [["Asm5: the alignment will not extend to regions with 5% or higher sequence divergence (-k19 -w19 -A1 -B19 -O39,81 -E3,1 -s200 -z200 --min-occ-floor=100)", "asm5", false], ["Asm10: up to 10% sequence divergence (-k19 -w19 -A1 -B9 -O16,41 -E2,1 -s200 -z200 --min-occ-floor=100)", "asm10", false], ["Asm20: up to 20% sequence divergence (-k19 -w10 -A1 -B6 -O6,26 -E2,1 -s200 -z200 --min-occ-floor=100)", "asm20", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mapping_option", "argument": null, "type": "select", "label": "Aligner tool", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "minimap2", "options": [["Nucmer", "nucmer", false], ["Minimap2", "minimap2", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "FloatToolParameter", "name": "i", "argument": "-i", "type": "float", "label": "Minimum grouping confidence score", "help": "The grouping confidence score is the number of base pairs a contig covered in its assigned reference chromosome                              divided by the total number of covered base pairs in the entire reference genome", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.2", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "a", "argument": "-a", "type": "float", "label": "Minimum location confidence score", "help": "To create a metric associated with contig ordering confidence, Ragtag define a location confidence. First, the smallest                              and largest alignment positions, with respect to the reference, between a contig and its assigned reference chromosome are found.                              The location confidence is then calculated as the number of covered base pairs in this range divided by the total number of                              base pairs in the range", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "s", "argument": "-s", "type": "float", "label": "Minimum orientation confidence score", "help": "To calculate the orientation confidence, each base pair in each alignment between a contig and its assigned reference chromosome                              casts a vote for the orientation of its alignment. The orientation confidence is the number of votes for the assigned orientation of                              the contig divided by the total number of votes", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "gap_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "IntegerToolParameter", "name": "g", "argument": "-g", "type": "integer", "label": "Minimum infered gap size", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "m", "argument": "-m", "type": "integer", "label": "Maximum inferred gap size", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "gap_option", "argument": null, "type": "select", "label": "Infer gap sizes", "help": "When disabled, all gaps are 100 bp (-r)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "true", "options": [["Enabled", "true", true], ["Disabled", "false", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "unplaced_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "DataToolParameter", "name": "J", "argument": "-J", "type": "data", "label": "List of query headers to leave unplaceds and exclude form 'chr0'", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "unplaced_option", "argument": null, "type": "select", "label": "Concatenate unplaced contigs and make 'chr0' (-C)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["Enabled", "true", false], ["Disabled", "false", true]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "SelectToolParameter", "name": "output_scaffold", "argument": null, "type": "select", "label": "Output files", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["fasta", "agp"], "options": [["The scaffolds in FASTA format, defined by the ordering and orientations of the sequences containted in the AGP file", "fasta", true], ["The ordering and orientations of query sequences in AGP format", "agp", true], ["The description of the approximate mapping positions between two set of sequences in PAF format", "paf", false], ["Confidence score values", "confidence", false], ["Summary statistics for the scaffolding process", "stats", false], ["Log file", "log", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "patch", "inputs": [{"model_class": "DataToolParameter", "name": "reference", "argument": null, "type": "data", "label": "Reference FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "query", "argument": null, "type": "data", "label": "Query FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "advanced_options", "type": "section", "title": "advanced options", "help": null, "expanded": false, "inputs": [{"model_class": "DataToolParameter", "name": "e", "argument": "-e", "type": "data", "label": "List of reference headers to ignore", "help": "Use this parameter to provide a single column file listing any reference.fa headers that should                  be ignored (e.g. chr0/chrUn or alt contigs)", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "j", "argument": "-j", "type": "data", "label": "List of query headers to leave uncorrected", "help": "use this parameter to provide a single column file listing any query.fa headers that shall not be broken", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "f", "argument": "-f", "type": "integer", "label": "Minimum unique single length", "help": "If an alignment is not entirely unique, at least -f bp of the alignment must be unique to be considered                  for scaffolding. By default, entirely unique alignments are considered regardless of their length, but                  this can be disabled with --remove-small. Doing so ensures that only alignments at least -f bp in length                  are considered for correction", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "remove_small", "argument": "--remove-small", "type": "boolean", "label": "Remove unique alignments", "help": "Remove unique alignments shorter than the minimum unique alignment length", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--remove-small", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "q", "argument": "-q", "type": "integer", "label": "Minimum mappping quality", "help": "Mapping quality scores quantify the probability that a read is misplaced", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "d", "argument": "-d", "type": "integer", "label": "Maximum alignment merge distance", "help": "For each query sequence, syntenic alignments within -d bp of each other are merged into longer alignments", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "mapping_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "nucmer", "inputs": [{"model_class": "SelectToolParameter", "name": "anchor_mode", "argument": null, "type": "select", "label": "Anchoring mode", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "--maxmatch", "options": [["Use anchor matches that are unique in both the reference and query (--mum)", "--mum", false], ["Use anchor matches that are unique in in the reference but not necessarily unique in the query (--mumreference)", "--mumreference", false], ["Use all anchor matches regardless of their uniqueness (--maxmatch)", "--maxmatch", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "l", "argument": "-l", "type": "integer", "label": "Minimun length of a single match", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "c", "argument": "-c", "type": "integer", "label": "Minimum length of a cluster of matches", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "minimap2", "inputs": [{"model_class": "SelectToolParameter", "name": "mm2_params", "argument": "--mm2-params", "type": "select", "label": "Select a profile of preset options", "help": "Each profile comes with the preconfigured settings mentioned in parentheses", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "asm5", "options": [["Asm5: the alignment will not extend to regions with 5% or higher sequence divergence (-k19 -w19 -A1 -B19 -O39,81 -E3,1 -s200 -z200 --min-occ-floor=100)", "asm5", false], ["Asm10: up to 10% sequence divergence (-k19 -w19 -A1 -B9 -O16,41 -E2,1 -s200 -z200 --min-occ-floor=100)", "asm10", false], ["Asm20: up to 20% sequence divergence (-k19 -w10 -A1 -B6 -O6,26 -E2,1 -s200 -z200 --min-occ-floor=100)", "asm20", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mapping_option", "argument": null, "type": "select", "label": "Aligner tool", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "minimap2", "options": [["Nucmer", "nucmer", false], ["Minimap2", "minimap2", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "s", "argument": "-s", "type": "integer", "label": "Minimum merged alignment length", "help": "After merging, alignments less than -s bp long will be removed", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50000", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "i", "argument": "-i", "type": "float", "label": "Maximum merged alignment distance", "help": "Maximum merged alignment distance from sequence terminus as fraction of the sequence length. Alignments must                          be within -i bp of a target sequence terminus or gap to be considered for patchin ", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "patching_mode", "argument": null, "type": "select", "label": "Patching mode", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Only fill existing target gaps. Do not join target sequences", "--fill-only", false], ["Only join and patch target sequences. DO not fill existing gaps", "--join_only", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "SelectToolParameter", "name": "output_patch", "argument": null, "type": "select", "label": "Output files", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["final_fasta", "final_agp", "assembly_file"], "options": [["The final FASTA file containing the patched assembly", "final_fasta", true], ["The final AGP file defining how final FASTA is built", "final_agp", true], ["Assembly alignment files", "assembly_file", true], ["The split target assembly and the renamed query assembly combined into one FASTA file", "split_assembly", false], ["An AGP file defining how the target assembly was split at gaps", "split_description", false], ["The target assembly split at gaps", "target_gaps", false], ["An AGP file defining the new names for query sequences", "agp_renamed", false], ["A FASTA file with the original query sequence, but with new names", "fasta_renamed", false], ["Log file", "log", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "merge", "inputs": [{"model_class": "DataToolParameter", "name": "assembly_fasta", "argument": null, "type": "data", "label": "Assembly FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "scaffold_files", "argument": null, "type": "data", "label": "Scaffold AGP files", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["agp"], "edam": {"edam_formats": ["format_3693"], "edam_data": ["data_0006"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "merging_options", "type": "section", "title": "Merging options", "help": null, "expanded": false, "inputs": [{"model_class": "DataToolParameter", "name": "j", "argument": "-j", "type": "data", "label": "List of query headers to leave unplaced", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "l", "argument": "-l", "type": "integer", "label": "Minimum assembly sequence length", "help": "Assembly sequences shorter than -l will also be left unplaced.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "e", "argument": "-e", "type": "float", "label": "Minimum edge weight", "help": "The edges in the merging graph represent scaffolding adjacencies. If an AGP file supports a particular adjacency,                              its weight is added to the edge weight. Any edges with a weight lower than the minimum edge weigth will be removed from the graph", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "function_merging", "argument": null, "type": "select", "label": "Function for merging gap lengths", "help": "Scaffold gaps can differ between input AGP files. For example, a Hi-C derived AGP file might place 100 bp gaps between sequences                              while a reference-guided AGP file might infer gap sizes based on a reference genome. Use this parameter to specify how gap sizes                              should be computed from the supporting AGP files (--gap-func)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "min", "options": [["Min", "min", true], ["Max", "max", false], ["Mean", "mean", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "Section", "name": "hic_options", "type": "section", "title": "HI-C options", "help": null, "expanded": false, "inputs": [{"model_class": "DataToolParameter", "name": "b", "argument": "-b", "type": "data", "label": "Hi-C alignments", "help": "Sorted by read name", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam"], "edam": {"edam_formats": ["format_2572"], "edam_data": ["data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "r", "argument": "-r", "type": "text", "label": "Restriction enzymes/sites or 'DNase'", "help": "List of restrction enzimes/sites or 'DNase', separated by comma. E.g. GATC,GACC", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "p", "argument": "-p", "type": "float", "label": "Portion of the sequence termini to consider for links", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mode_option", "argument": null, "type": "select", "label": "Operation mode", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "correct", "options": [["Correct: homology-based missasembly correction", "correct", false], ["Scaffold: homology-based assebly scaffolding", "scaffold", false], ["Patch: homology-based assembly patching", "patch", false], ["Merge: scaffolding merging", "merge", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "correct_paf", "format": "paf", "label": "${tool.name} on ${on_string}: PAF", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.correct.asm.paf", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "correct_agp", "format": "agp", "label": "${tool.name} on ${on_string}: AGP", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.correct.agp", "edam_format": "format_3693", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "correct_fasta", "format": "fasta", "label": "${tool.name} on ${on_string}: FASTA", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.correct.fasta", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "correct_log", "format": "txt", "label": "${tool.name} on ${on_string}: log", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.correct.asm.paf.log", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "scaffold_paf", "format": "paf", "label": "${tool.name} on ${on_string}: PAF", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.scaffold.asm.paf", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "scaffold_agp", "format": "agp", "label": "${tool.name} on ${on_string}: AGP", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.scaffold.agp", "edam_format": "format_3693", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "scaffold_fasta", "format": "fasta", "label": "${tool.name} on ${on_string}: FASTA", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.scaffold.fasta", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "scaffold_log", "format": "txt", "label": "${tool.name} on ${on_string}: log", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.scaffold.asm.paf.log", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "scaffold_stats", "format": "tabular", "label": "${tool.name} on ${on_string}: stats", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.scaffold.stats", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "scaffold_confidence", "format": "tabular", "label": "${tool.name} on ${on_string}: confidence", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.scaffold.confidence.txt", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "patch_agp", "format": "agp", "label": "${tool.name} on ${on_string}: final AGP", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.patch.agp", "edam_format": "format_3693", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "patch_paf", "format": "paf", "label": "${tool.name} on ${on_string}: final PAF", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.patch.asm.paf", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "patch_log", "format": "txt", "label": "${tool.name} on ${on_string}: log", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.patch.log", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "patch_comps_fasta", "format": "fasta", "label": "${tool.name} on ${on_string}: components FASTA", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.patch.comps.fasta", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "patch_ctg_agp", "format": "agp", "label": "${tool.name} on ${on_string}: contigs AGP", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.patch.ctg.agp", "edam_format": "format_3693", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "patch_ctg_fasta", "format": "fasta", "label": "${tool.name} on ${on_string}: contigs FASTA", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.patch.ctg.fasta", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "patch_fasta", "format": "fasta", "label": "${tool.name} on ${on_string}: final FASTA", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.patch.fasta", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "patch_rename_agp", "format": "agp", "label": "${tool.name} on ${on_string}: renamed AGP", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.patch.rename.agp", "edam_format": "format_3693", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "patch_rename_fasta", "format": "fasta", "label": "${tool.name} on ${on_string}: renamed FASTA", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.patch.rename.fasta", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "merge_agp", "format": "agp", "label": "${tool.name} on ${on_string}: merged AGP", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.merge.agp", "edam_format": "format_3693", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "merge_fasta", "format": "fasta", "label": "${tool.name} on ${on_string}: merged FASTA", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "ragtag.merge.fasta", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}], "panel_section_id": "assembly", "panel_section_name": "Assembly", "form_style": "regular"}