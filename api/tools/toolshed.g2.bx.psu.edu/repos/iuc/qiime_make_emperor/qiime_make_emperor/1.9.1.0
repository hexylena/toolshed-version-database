{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/qiime_make_emperor/qiime_make_emperor/1.9.1.0", "name": "Create three-dimensional PCoA plots", "version": "1.9.1.0", "description": "to be visualized with Emperor (make_emperor)", "labels": [], "edam_operations": ["operation_2945"], "edam_topics": ["topic_3070"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "qiime", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "qiime_make_emperor", "owner": "iuc", "changeset_revision": "5c34e1336176", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input_coords", "argument": "--input_coords", "type": "data", "label": "Filepath of a coordinates file to create a PCoA plot", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "map_fp", "argument": "--map_fp", "type": "data", "label": "Mapping file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "txt", "tsv"], "edam": {"edam_formats": ["format_3475", "format_2330", "format_3475"], "edam_data": ["data_0006", "data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "number_of_axes", "argument": "--number_of_axes", "type": "integer", "label": "Number of axes to be incorporated in the plot", "help": "Only 3 will be displayed at any given time but this option modifies how many axes you can use for your visualization. Note that Emperor will only use the axes that explain more than 0.5% (this will be shown as 1% in the GUI) of the variability", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "add_unique_columns", "argument": "--add_unique_columns", "type": "boolean", "label": "Add to the output categories of the mapping file the columns where all values are different?", "help": "If the result of one of the concatenated fields in --color_by is a column where all values are unique, the resulting column will get removed as well", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--add_unique_columns", "falsevalue": ""}, {"model_class": "DataToolParameter", "name": "add_vectors", "argument": "--add_vectors", "type": "data", "label": "Comma-sparated category(ies) used to add connecting lines (vectors) between samples", "help": "The first category specifies the samples that will be connected by the vectors, whilst the second category (optionally) determines the order in which the samples will be connected", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "color_by", "argument": "--color_by", "type": "data", "label": "Comma-separated list of metadata categories (column headers) to color by in the plots", "help": "The categories must match the name of a column header in the mapping file exactly. Multiple categories can be listed by comma separating them without spaces. The user can also combine columns in the mapping file by separating the categories by && without spaces", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "ignore_missing_samples", "argument": "--ignore_missing_samples", "type": "boolean", "label": "Overpass the error raised when the coordinates file contains samples that are not present in the mapping file?", "help": "Be aware that this is very misleading as the PCoA is accounting for all the samples and removing some samples could lead to erroneous/skewed interpretations", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--ignore_missing_samples", "falsevalue": ""}, {"model_class": "Conditional", "name": "summarized_taxa_file", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "DataToolParameter", "name": "taxa_fp", "argument": "--taxa_fp", "type": "data", "label": "Summarized taxa file", "help": "It is the output of summarize_taxa.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "n_taxa_to_keep", "argument": "--n_taxa_to_keep", "type": "integer", "label": "Number of taxonomic groups to display", "help": "Passing -1 will cause to display all the taxonomic groups.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "summarized_taxa_file_test", "argument": null, "type": "select", "label": "Add a summarized taxa file?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["Yes", "true", false], ["No", "false", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "number_of_segments", "argument": "--number_of_segments", "type": "integer", "label": "Number of segments to generate any spheres", "help": "This includes the samples, the taxa (biplots), and the confidence intervals (jackknifing). Higher values will result in better quality but can make the plots less responsive, also it will make the resulting SVG images bigger", "refresh_on_change": false, "min": 4, "max": 14, "optional": false, "hidden": false, "is_dynamic": false, "value": "8", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "pct_variation_below_one", "argument": "--pct_variation_below_one", "type": "boolean", "label": "Allow the percent variation explained by the axis to be below one?", "help": "The default behavior is to multiply by 100 all values if PC1 is < 1.0", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--pct_variation_below_one", "falsevalue": ""}, {"model_class": "Conditional", "name": "add_custom_axes", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "DataToolParameter", "name": "custom_axes", "argument": "--custom_axes", "type": "data", "label": "Comma-separated list of metadata categories to use as custom axes in the plot", "help": "For instance, if there is a time category and you would like to see the samples plotted on that axis instead of PC1, PC2, etc., you would pass time as the value of this option.  Note: if there is any non-numeric data in the metadata column, an error will be presented ", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "missing_custom_axes_values", "argument": "--missing_custom_axes_values", "type": "data", "label": "Option to override the error shown when the category used in custom axes has non-numeric values in the mapping file", "help": "The basic format is custom_axis:new_value. For example, if you want to plot in time 0 all the samples that do not have a numeric value in the column Time. you would pass Time:0. Additionally, you can pass this format custom_axis:other_column==value_in_other_column=new_value, with this format you can specify different values (new_value) to use in the substitution based on other column (other_column) value (value_in_other_column). This option could be used in all explicit axes.", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "add_custom_axes_test", "argument": null, "type": "select", "label": "Add custom axes?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["Yes", "true", false], ["No", "false", true]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "html_report", "format": "html", "label": "${tool.name} on ${on_string}: Core diversity report", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2331", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "qiime", "panel_section_name": "Qiime", "form_style": "regular"}