{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract/1.1.2+galaxy0", "name": "UMI-tools extract", "version": "1.1.2+galaxy0", "description": "Extract UMI from fastq files", "labels": [], "edam_operations": ["operation_3218"], "edam_topics": ["topic_0160", "topic_3393", "topic_3168"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "umi-tools", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "umi_tools_extract", "owner": "iuc", "changeset_revision": "27ac32a22ad2", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "input_type_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "input_read1", "argument": null, "type": "data", "label": "Reads in FASTQ format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqsanger.gz", "fastqillumina", "fastqillumina.gz", "fastqsolexa", "fastqsolexa.gz"], "edam": {"edam_formats": ["format_1932", "format_1932", "format_1931", "format_1931", "format_1933", "format_1933"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "bc_pattern", "argument": "--bc-pattern", "type": "text", "label": "Barcode pattern for first read", "help": "Use this option to specify the format of the UMI/barcode. Use Ns to                     represent the random positions and Xs to indicate the bc positions.                     Bases with Ns will be extracted and added to the read name. Remaining                     bases, marked with an X will be reattached to the read", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "input_read1", "argument": null, "type": "data", "label": "Reads in FASTQ format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqsanger.gz", "fastqillumina", "fastqillumina.gz", "fastqsolexa", "fastqsolexa.gz"], "edam": {"edam_formats": ["format_1932", "format_1932", "format_1931", "format_1931", "format_1933", "format_1933"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_read2", "argument": null, "type": "data", "label": "Reads in FASTQ format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqsanger.gz", "fastqillumina", "fastqillumina.gz", "fastqsolexa", "fastqsolexa.gz"], "edam": {"edam_formats": ["format_1932", "format_1932", "format_1931", "format_1931", "format_1933", "format_1933"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "bc_pattern", "argument": "--bc-pattern", "type": "text", "label": "Barcode pattern for first read", "help": "Use this option to specify the format of the UMI/barcode. Use Ns to                     represent the random positions and Xs to indicate the bc positions.                     Bases with Ns will be extracted and added to the read name. Remaining                     bases, marked with an X will be reattached to the read", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "bc_pattern2", "argument": "--bc-pattern2", "type": "text", "label": "Barcode pattern for second read", "help": "Use this option to specify the format of the UMI/barcode for                 the second read pair if required", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "reconcile_pairs", "argument": "--reconcile-pairs", "type": "boolean", "label": "Allow unpaired reads", "help": "Allow the presences of reads in read2 input that are not present in read1 input. This allows cell barcode filtering of read1s without considering read2s", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--reconcile-pairs", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "paired_collection", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "input_readpair", "argument": null, "type": "data_collection", "label": "Reads in FASTQ format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqsanger.gz", "fastqillumina", "fastqillumina.gz", "fastqsolexa", "fastqsolexa.gz"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "bc_pattern", "argument": "--bc-pattern", "type": "text", "label": "Barcode pattern for first read", "help": "Use this option to specify the format of the UMI/barcode. Use Ns to                     represent the random positions and Xs to indicate the bc positions.                     Bases with Ns will be extracted and added to the read name. Remaining                     bases, marked with an X will be reattached to the read", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "bc_pattern2", "argument": "--bc-pattern2", "type": "text", "label": "Barcode pattern for second read", "help": "Use this option to specify the format of the UMI/barcode for                 the second read pair if required", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "reconcile_pairs", "argument": "--reconcile-pairs", "type": "boolean", "label": "Allow unpaired reads", "help": "Allow the presences of reads in read2 input that are not present in read1 input. This allows cell barcode filtering of read1s without considering read2s", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--reconcile-pairs", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "input_type", "argument": null, "type": "select", "label": "Library type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "single", "options": [["Single-end", "single", false], ["Paired-end", "paired", false], ["Paired-end Dataset Collection", "paired_collection", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "extract_method_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "string", "inputs": [{"model_class": "BooleanToolParameter", "name": "prime3", "argument": "--3prime", "type": "boolean", "label": "Is barcode on 3' end of the read?", "help": "By default the barcode is assumed to be on the 5' end of the read, but                         use this option to specify that it is on the 3' end instead.                          This option only works with ``--extract-method=string``                         since 3' encoding can be specified explicitly with a regex, e.g                         ``.*(?P<umi_1>.{5})$``", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--3prime", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "regex", "inputs": [{"model_class": "BooleanToolParameter", "name": "filtered_out_bool", "argument": null, "type": "boolean", "label": "Write out reads not matching regex pattern", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "extract_method", "argument": "--extract-method", "type": "select", "label": "Barcode Extraction Method", "help": "If bracketed expressions are used in the above barcode pattern, then set this to 'regex'. Otherwise leave as 'string'", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "string", "options": [["string", "string", true], ["regex", "regex", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "ignore_read_pair_suffixes", "argument": "--ignore-read-pair-suffixes", "type": "boolean", "label": "Ignore '\\1' and '\\2' read name suffixes", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--ignore-read-pair-suffixes", "falsevalue": ""}, {"model_class": "DataToolParameter", "name": "whitelist", "argument": "--whitelist", "type": "data", "label": "Allowlist of accepted barcodes", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "blacklist", "argument": "--blacklist", "type": "data", "label": "Denylist of accepted barcodes", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "error_correct_cell", "argument": "--error-correct-cell", "type": "boolean", "label": "Apply correction to cell barcodes?", "help": "This only applies if your barcode file has two columns output from the umi_tools whitelist command", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--error-correct-cell", "falsevalue": ""}, {"model_class": "Conditional", "name": "quality", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "false", "inputs": []}, {"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "IntegerToolParameter", "name": "quality_filter_threshold", "argument": "--quality-filter-threshold", "type": "integer", "label": "Phred score threshold", "help": "Remove reads where any UMI base quality score falls below this threshold", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "quality_filter_mask", "argument": "--quality-filter-mask", "type": "integer", "label": "Mask UMI bases below threshold", "help": "If a UMI base has a quality below this threshold,                     replace the base with 'N'", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "quality_selector", "argument": null, "type": "select", "label": "Enable quality filter?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["No", "false", false], ["Yes", "true", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "log", "argument": "--log", "type": "boolean", "label": "Output log?", "help": "Choose if you want to generate a text file containing logging information", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--log", "falsevalue": ""}], "outputs": [{"model_class": "ToolOutputCollection", "name": "out_paired_collection", "format": null, "label": "${tool.name} on ${on_string}: Reads", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "paired", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": []}}, {"model_class": "ToolOutput", "name": "out", "format": "data", "label": "${tool.name} on ${on_string}: Reads", "hidden": false, "output_type": "data", "format_source": "input_read1", "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "out2", "format": "data", "label": "${tool.name} on ${on_string}: Reads2", "hidden": false, "output_type": "data", "format_source": "input_read2", "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "out_log", "format": "txt", "label": "${tool.name} on ${on_string}: logfile", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "single-cell-section-scdata", "panel_section_name": "Import/manipulate sc data", "form_style": "regular"}