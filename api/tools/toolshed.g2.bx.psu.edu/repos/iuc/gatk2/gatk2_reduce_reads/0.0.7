{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/gatk2/gatk2_reduce_reads/0.0.7", "name": "Reduce Reads", "version": "0.0.7", "description": "in BAM files", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": true, "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "gatk2", "owner": "iuc", "changeset_revision": "2553f84b8174", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input_recal", "argument": null, "type": "data", "label": "Covariates table recalibration file", "help": "The input covariates table file which enables on-the-fly base quality score recalibration. Enables on-the-fly recalibrate of base qualities. The covariates tables are produced by the BaseQualityScoreRecalibrator tool. Please be aware that one should only run recalibration with the covariates file created on the same input bam(s) (-BQSR,--BQSR &lt;recal_file&gt;)", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["csv"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "reference_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "cached", "inputs": [{"model_class": "DataToolParameter", "name": "input_bam", "argument": null, "type": "data", "label": "BAM file", "help": "-I,--input_file &lt;input_file&gt;", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam"], "edam": {"edam_formats": ["format_2572"], "edam_data": ["data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "ref_file", "argument": null, "type": "select", "label": "Using reference genome", "help": "-R,--reference_sequence &lt;reference_sequence&gt;", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "input_bam", "argument": null, "type": "data", "label": "BAM file", "help": "-I,--input_file &lt;input_file&gt;", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam"], "edam": {"edam_formats": ["format_2572"], "edam_data": ["data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "ref_file", "argument": null, "type": "data", "label": "Using reference file", "help": "-R,--reference_sequence &lt;reference_sequence&gt;", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "reference_source_selector", "argument": null, "type": "select", "label": "Choose the source for the reference list", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "cached", "options": [["Locally cached", "cached", false], ["History", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "gatk_param_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "basic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "Repeat", "name": "pedigree", "type": "repeat", "title": "Pedigree file", "help": "-ped,--pedigree &lt;pedigree&gt;", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "pedigree_file", "argument": null, "type": "data", "label": "Pedigree files for samples", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "Repeat", "name": "pedigree_string_repeat", "type": "repeat", "title": "Pedigree string", "help": "-pedString,--pedigreeString &lt;pedigreeString&gt;", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "pedigree_string", "argument": null, "type": "text", "label": "Pedigree string for samples", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "SelectToolParameter", "name": "pedigree_validation_type", "argument": null, "type": "select", "label": "How strict should we be in validating the pedigree information", "help": "-pedValidationType,--pedigreeValidationType &lt;pedigreeValidationType&gt;", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "STRICT", "options": [["STRICT", "STRICT", true], ["SILENT", "SILENT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Repeat", "name": "read_filter", "type": "repeat", "title": "Read Filter", "help": "-rf,--read_filter &lt;read_filter&gt;", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "read_filter_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "BadCigar", "inputs": []}, {"model_class": "ConditionalWhen", "value": "BadMate", "inputs": []}, {"model_class": "ConditionalWhen", "value": "DuplicateRead", "inputs": []}, {"model_class": "ConditionalWhen", "value": "FailsVendorQualityCheck", "inputs": []}, {"model_class": "ConditionalWhen", "value": "MalformedRead", "inputs": [{"model_class": "BooleanToolParameter", "name": "filter_mismatching_base_and_quals", "argument": null, "type": "boolean", "label": "filter out the reads with mismatching number of bases and base qualities", "help": "filter out the mismatch reads instead of quitting with an error", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--filter_mismatching_base_and_quals", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "MappingQuality", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_mapping_quality_score", "argument": null, "type": "integer", "label": "Minimum read mapping quality required to consider a read for calling", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "MappingQualityUnavailable", "inputs": []}, {"model_class": "ConditionalWhen", "value": "MappingQualityZero", "inputs": []}, {"model_class": "ConditionalWhen", "value": "MateSameStrand", "inputs": []}, {"model_class": "ConditionalWhen", "value": "MaxInsertSize", "inputs": [{"model_class": "IntegerToolParameter", "name": "maxInsertSize", "argument": null, "type": "integer", "label": "Discard reads with insert size greater than the specified value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "MaxReadLength", "inputs": [{"model_class": "IntegerToolParameter", "name": "maxReadLength", "argument": null, "type": "integer", "label": "Max Read Length", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "76", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "MissingReadGroup", "inputs": []}, {"model_class": "ConditionalWhen", "value": "NoOriginalQualityScores", "inputs": []}, {"model_class": "ConditionalWhen", "value": "NotPrimaryAlignment", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Platform454", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Platform", "inputs": [{"model_class": "TextToolParameter", "name": "PLFilterName", "argument": null, "type": "text", "label": "Discard reads with RG:PL attribute containing this string", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "PlatformUnit", "inputs": []}, {"model_class": "ConditionalWhen", "value": "ReadGroupBlackList", "inputs": []}, {"model_class": "ConditionalWhen", "value": "ReadName", "inputs": [{"model_class": "TextToolParameter", "name": "readName", "argument": null, "type": "text", "label": "Filter out all reads except those with this read name", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ReadStrand", "inputs": [{"model_class": "BooleanToolParameter", "name": "filterPositive", "argument": null, "type": "boolean", "label": "Discard reads on the forward strand", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--filterPositive", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "ReassignMappingQuality", "inputs": [{"model_class": "IntegerToolParameter", "name": "default_mapping_quality", "argument": null, "type": "integer", "label": "Default read mapping quality to assign to all reads", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "60", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "Sample", "inputs": [{"model_class": "TextToolParameter", "name": "sample_to_keep", "argument": null, "type": "text", "label": "The name of the sample(s) to keep, filtering out all others", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "SingleReadGroup", "inputs": [{"model_class": "IntegerToolParameter", "name": "read_group_to_keep", "argument": null, "type": "integer", "label": "The name of the read group to keep, filtering out all others", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "76", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "UnmappedRead", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "read_filter_type_selector", "argument": null, "type": "select", "label": "Read Filter Type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "MaxReadLength", "options": [["BadCigar", "BadCigar", false], ["BadMate", "BadMate", false], ["DuplicateRead", "DuplicateRead", false], ["FailsVendorQualityCheck", "FailsVendorQualityCheck", false], ["MalformedRead", "MalformedRead", false], ["MappingQuality", "MappingQuality", false], ["MappingQualityUnavailable", "MappingQualityUnavailable", false], ["MappingQualityZero", "MappingQualityZero", false], ["MateSameStrand", "MateSameStrand", false], ["MaxInsertSize", "MaxInsertSize", false], ["MaxReadLength", "MaxReadLength", true], ["MissingReadGroup", "MissingReadGroup", false], ["NoOriginalQualityScores", "NoOriginalQualityScores", false], ["NotPrimaryAlignment", "NotPrimaryAlignment", false], ["Platform454", "Platform454", false], ["Platform", "Platform", false], ["PlatformUnit", "PlatformUnit", false], ["ReadGroupBlackList", "ReadGroupBlackList", false], ["ReadName", "ReadName", false], ["ReadStrand", "ReadStrand", false], ["ReassignMappingQuality", "ReassignMappingQuality", false], ["Sample", "Sample", false], ["SingleReadGroup", "SingleReadGroup", false], ["UnmappedRead", "UnmappedRead", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Repeat", "name": "input_interval_repeat", "type": "repeat", "title": "Operate on Genomic intervals", "help": "-L,--intervals &lt;intervals&gt;", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "input_intervals", "argument": null, "type": "data", "label": "Genomic intervals", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed", "gatk_interval", "picard_interval_list", "vcf"], "edam": {"edam_formats": ["format_3003", "format_2330", "format_3475", "format_3016"], "edam_data": ["data_3002", "data_0006", "data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "Repeat", "name": "input_exclude_interval_repeat", "type": "repeat", "title": "Exclude Genomic intervals", "help": "-XL,--excludeIntervals &lt;excludeIntervals&gt;", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "input_exclude_intervals", "argument": null, "type": "data", "label": "Genomic intervals", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed", "gatk_interval", "picard_interval_list", "vcf"], "edam": {"edam_formats": ["format_3003", "format_2330", "format_3475", "format_3016"], "edam_data": ["data_3002", "data_0006", "data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "SelectToolParameter", "name": "interval_set_rule", "argument": null, "type": "select", "label": "Interval set rule", "help": "-isr,--interval_set_rule &lt;interval_set_rule&gt;", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "UNION", "options": [["UNION", "UNION", true], ["INTERSECTION", "INTERSECTION", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "downsampling_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "NONE", "inputs": []}, {"model_class": "ConditionalWhen", "value": "ALL_READS", "inputs": [{"model_class": "Conditional", "name": "downsample_to_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "downsample_to_fraction", "inputs": [{"model_class": "FloatToolParameter", "name": "downsample_to_value", "argument": null, "type": "float", "label": "Fraction [0.0-1.0] of reads to downsample to", "help": "-dfrac,--downsample_to_fraction &lt;downsample_to_fraction&gt;", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "downsample_to_coverage", "inputs": [{"model_class": "IntegerToolParameter", "name": "downsample_to_value", "argument": null, "type": "integer", "label": "Coverage to downsample to at any given locus", "help": "-dcov,--downsample_to_coverage &lt;downsample_to_coverage&gt;", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "downsample_to_type_selector", "argument": null, "type": "select", "label": "Downsample method", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "downsample_to_fraction", "options": [["Downsample by Fraction", "downsample_to_fraction", true], ["Downsample by Coverage", "downsample_to_coverage", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "BY_SAMPLE", "inputs": [{"model_class": "Conditional", "name": "downsample_to_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "downsample_to_fraction", "inputs": [{"model_class": "FloatToolParameter", "name": "downsample_to_value", "argument": null, "type": "float", "label": "Fraction [0.0-1.0] of reads to downsample to", "help": "-dfrac,--downsample_to_fraction &lt;downsample_to_fraction&gt;", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "downsample_to_coverage", "inputs": [{"model_class": "IntegerToolParameter", "name": "downsample_to_value", "argument": null, "type": "integer", "label": "Coverage to downsample to at any given locus", "help": "-dcov,--downsample_to_coverage &lt;downsample_to_coverage&gt;", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "downsample_to_type_selector", "argument": null, "type": "select", "label": "Downsample method", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "downsample_to_fraction", "options": [["Downsample by Fraction", "downsample_to_fraction", true], ["Downsample by Coverage", "downsample_to_coverage", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "downsampling_type_selector", "argument": null, "type": "select", "label": "Type of reads downsampling to employ at a given locus", "help": "-dt,--downsampling_type &lt;downsampling_type&gt;", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "NONE", "options": [["NONE", "NONE", true], ["ALL_READS", "ALL_READS", false], ["BY_SAMPLE", "BY_SAMPLE", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "baq", "argument": null, "type": "select", "label": "Type of BAQ calculation to apply in the engine", "help": "-baq,--baq &lt;baq&gt;", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "OFF", "options": [["OFF", "OFF", true], ["CALCULATE_AS_NECESSARY", "CALCULATE_AS_NECESSARY", false], ["RECALCULATE", "RECALCULATE", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "baq_gap_open_penalty", "argument": null, "type": "float", "label": "BAQ gap open penalty (Phred Scaled)", "help": "Default value is 40. 30 is perhaps better for whole genome call sets. -baqGOP,--baqGapOpenPenalty &lt;baqGapOpenPenalty&gt;", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "40.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "use_original_qualities", "argument": null, "type": "boolean", "label": "Use the original base quality scores from the OQ tag", "help": "-OQ,--useOriginalQualities", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--useOriginalQualities", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "default_base_qualities", "argument": null, "type": "integer", "label": "Value to be used for all base quality scores, when some are missing", "help": "-DBQ,--defaultBaseQualities &lt;defaultBaseQualities&gt;", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "validation_strictness", "argument": null, "type": "select", "label": "How strict should we be with validation", "help": "-S,--validation_strictness &lt;validation_strictness&gt;", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "STRICT", "options": [["STRICT", "STRICT", true], ["LENIENT", "LENIENT", false], ["SILENT", "SILENT", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "interval_merging", "argument": null, "type": "select", "label": "Interval merging rule", "help": "-im,--interval_merging &lt;interval_merging&gt;", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ALL", "options": [["ALL", "ALL", true], ["OVERLAPPING_ONLY", "OVERLAPPING_ONLY", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Repeat", "name": "read_group_black_list_repeat", "type": "repeat", "title": "Read group black list", "help": "-rgbl,--read_group_black_list &lt;read_group_black_list&gt;", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "read_group_black_list_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "file", "inputs": [{"model_class": "DataToolParameter", "name": "read_group_black_list", "argument": null, "type": "data", "label": "Read group black list file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "text", "inputs": [{"model_class": "TextToolParameter", "name": "read_group_black_list", "argument": null, "type": "text", "label": "Read group black list tag:string", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "tag:string", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "read_group_black_list_type_selector", "argument": null, "type": "select", "label": "Type of reads read group black list", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "file", "options": [["Filters in file", "file", true], ["Specify filters as a string", "text", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "BooleanToolParameter", "name": "disable_experimental_low_memory_sharding", "argument": null, "type": "boolean", "label": "Disable experimental low-memory sharding functionality.", "help": "--disable_experimental_low_memory_sharding", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--disable_experimental_low_memory_sharding", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "non_deterministic_random_seed", "argument": null, "type": "boolean", "label": "Makes the GATK behave non deterministically, that is, the random numbers generated will be different in every run", "help": "-ndrs,--nonDeterministicRandomSeed", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--nonDeterministicRandomSeed", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "fix_misencoded_quality_scores", "argument": null, "type": "boolean", "label": "Fix mis-encoded base quality scores. Q0 == ASCII 33 according to the SAM specification, whereas Illumina encoding starts at Q64. The idea here is simple: we just iterate over all reads and subtract 31 from every quality score.", "help": "-fixMisencodedQuals / --fix_misencoded_quality_scores", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--fix_misencoded_quality_scores", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "gatk_param_type_selector", "argument": null, "type": "select", "label": "Basic or Advanced GATK options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "basic", "options": [["Basic", "basic", true], ["Advanced", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "analysis_param_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "basic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "BooleanToolParameter", "name": "allow_polyploid_reduction", "argument": null, "type": "boolean", "label": "Allow polyploid-based reduction", "help": "--allow_polyploid_reduction / -polyploid Allow the experimental polyploid-based reduction capabilities", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-polyploid", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "context_size", "argument": null, "type": "integer", "label": "context_size", "help": "The number of bases to keep around mismatches (potential variation)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "dont_compress_read_names", "argument": null, "type": "boolean", "label": "Do not compress read names.", "help": "--dont_compress_read_names / -nocmp_names  By default, ReduceReads will compress read names to numbers and guarantee uniqueness and reads with similar name will still have similar compressed names. Note: If you scatter/gather there is no guarantee that read name uniqueness will be maintained -- in this case we recommend not compressing.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-nocmp_names", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "dont_hardclip_low_qual_tails", "argument": null, "type": "boolean", "label": "Do not hard clip the low quality tails of the reads", "help": "--dont_hardclip_low_qual_tails / -noclip_tail This option overrides the argument of minimum tail quality", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-noclip_tail", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "dont_simplify_reads", "argument": null, "type": "boolean", "label": "Do not simplify read", "help": "--dont_simplify_reads / -nosimplify Do not simplify read (strip away all extra information of the read -- anything other than bases, quals and read group).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-nosimplify", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "dont_use_softclipped_bases", "argument": null, "type": "boolean", "label": "Do not use high quality soft-clipped bases", "help": "--dont_use_softclipped_bases / -no_soft  Do not use high quality soft-clipped bases. By default, ReduceReads will hard clip away any low quality soft clipped base left by the aligner and use the high quality soft clipped bases in it's traversal algorithm to identify variant regions. The minimum quality for soft clipped bases is the same as the minimum base quality to consider (minqual)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-no_soft", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "downsample_coverage", "argument": null, "type": "integer", "label": "Downsample the coverage of a variable region", "help": "Downsamples the coverage of a variable region approximately (guarantees the minimum to be equal to this). A value of 0 turns downsampling off.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "250", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "hard_clip_to_interval", "argument": null, "type": "boolean", "label": "Hard clip all incoming reads", "help": "--hard_clip_to_interval / -clip_int  Optionally hard clip all incoming reads to the desired intervals. The hard clips will happen exactly at the interval border.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-clip_int", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "minimum_del_proportion_to_trigger_variant", "argument": null, "type": "float", "label": "Minimum proportion of indels in a site to trigger a variant region", "help": "--minimum_del_proportion_to_trigger_variant / -mindel   Minimum proportion of indels in a site to trigger a variant region. Anything below this will be considered consensus.  ", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minimum_mapping_quality", "argument": null, "type": "integer", "label": "Minimum mapping quality for consensus read", "help": "--minimum_mapping_quality / -minmap  The minimum mapping quality to be considered for the consensus synthetic read. Reads that have mapping quality below this threshold will not be counted towards consensus, but are still counted towards variable regions.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minimum_tail_qualities", "argument": null, "type": "integer", "label": "Minimum tail quality", "help": "--minimum_tail_qualities / -mintail  Reads have notoriously low quality bases on the tails (left and right). Consecutive bases with quality lower than this threshold will be hard clipped off before entering the reduce reads algorithm.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minimum_base_quality_to_consider", "argument": null, "type": "integer", "label": "Minimum mapping quality for consensus read", "help": "--minimum_mapping_quality / -minmap  The minimum mapping quality to be considered for the consensus synthetic read. Reads that have mapping quality below this threshold will not be counted towards consensus, but are still counted towards variable regions.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "minimum_alt_proportion_to_trigger_variant", "argument": null, "type": "float", "label": "Minimum proportion of mismatches in a site to trigger a variant region", "help": "--minimum_alt_proportion_to_trigger_variant / -minvar  Minimum proportion of mismatches in a site to trigger a variant region. Anything below this will be considered consensus.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "dont_hardclip_adaptor_sequences", "argument": null, "type": "boolean", "label": "Do not hard clip adaptor sequences", "help": "--dont_hardclip_adaptor_sequences / -noclip_ad  Do not hard clip adaptor sequences. Note: You don't have to turn this on for reads that are not mate paired. The program will behave correctly in those cases.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-noclip_ad", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "analysis_param_type_selector", "argument": null, "type": "select", "label": "Basic or Advanced Analysis options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "basic", "options": [["Basic", "basic", true], ["Advanced", "advanced", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "output_bam", "format": "bam", "label": "${tool.name} on ${on_string} (BAM)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "output_log", "format": "txt", "label": "${tool.name} on ${on_string} (log)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "tool_toolshed.g2.bx.psu.edu/repos/iuc/gatk2/gatk2_reduce_reads/0.0.7", "panel_section_name": "Reduce Reads", "form_style": "regular"}