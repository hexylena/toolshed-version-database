{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/cluster_analyze_embed_muon/cluster_analyze_embed_muon/0.1.6+galaxy1", "name": "muon Cluster, analyze, and embed multimodal data", "version": "0.1.6+galaxy1", "description": "", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "muon", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "cluster_analyze_embed_muon", "owner": "iuc", "changeset_revision": "6c971179bb3f", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "mdata", "argument": null, "type": "data", "label": "MuData input file", "help": "", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["h5ad"], "edam": {"edam_formats": ["format_3590"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "method", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "tl.leiden", "inputs": [{"model_class": "Conditional", "name": "res", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "same", "inputs": [{"model_class": "FloatToolParameter", "name": "resolution", "argument": "resolution", "type": "float", "label": "Coarseness of the clustering", "help": "Higher values -> more clusters", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "separate", "inputs": [{"model_class": "Repeat", "name": "modalities", "type": "repeat", "title": "Modalities", "help": null, "default": 2, "min": 2, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "mod_name", "argument": null, "type": "text", "label": "Modality name", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "resolution", "argument": null, "type": "float", "label": "Resolution for the above modality", "help": "Higher values -> more clusters", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "type", "argument": null, "type": "select", "label": "Same or separate resolutions for each modality?", "help": "", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "same", "options": [["Same resolution for all modalities", "same", false], ["Separate resolutions per modality", "separate", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "weights", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "same", "inputs": [{"model_class": "FloatToolParameter", "name": "mod_weights", "argument": "mod_weights", "type": "float", "label": "Weight each modality controlling its contribution", "help": "Higher values -> more important", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "separate", "inputs": [{"model_class": "Repeat", "name": "modalities", "type": "repeat", "title": "Modalities", "help": null, "default": 2, "min": 2, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "mod_name", "argument": null, "type": "text", "label": "Modality name", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mod_weights", "argument": null, "type": "float", "label": "Weight for the above modality", "help": "Higher values -> more important", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "type", "argument": null, "type": "select", "label": "Same or separate weights for each modality?", "help": "", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "same", "options": [["Same weight for all modalities", "same", false], ["Separate weight per modality", "separate", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed for the optimization", "help": "", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "key_added", "argument": "key_added", "type": "text", "label": "mdata.obs key where cluster labels to be added", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "leiden", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "neighbors_key", "argument": "neighbors_key", "type": "text", "label": "Use neighbors connectivities as adjacency", "help": "If not specified, look for .obsp['connectivities'] in each modality.         If specified, look for .obsp[.uns[neighbors_key]['connectivities_key']] in each modality for connectivities.", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "directed", "argument": "directed", "type": "boolean", "label": "Treat the graph as directed", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}]}, {"model_class": "ConditionalWhen", "value": "tl.louvain", "inputs": [{"model_class": "Conditional", "name": "res", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "same", "inputs": [{"model_class": "FloatToolParameter", "name": "resolution", "argument": "resolution", "type": "float", "label": "Coarseness of the clustering", "help": "Higher values -> more clusters", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "separate", "inputs": [{"model_class": "Repeat", "name": "modalities", "type": "repeat", "title": "Modalities", "help": null, "default": 2, "min": 2, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "mod_name", "argument": null, "type": "text", "label": "Modality name", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "resolution", "argument": null, "type": "float", "label": "Resolution for the above modality", "help": "Higher values -> more clusters", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "type", "argument": null, "type": "select", "label": "Same or separate resolutions for each modality?", "help": "", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "same", "options": [["Same resolution for all modalities", "same", false], ["Separate resolutions per modality", "separate", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "weights", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "same", "inputs": [{"model_class": "FloatToolParameter", "name": "mod_weights", "argument": "mod_weights", "type": "float", "label": "Weight each modality controlling its contribution", "help": "Higher values -> more important", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "separate", "inputs": [{"model_class": "Repeat", "name": "modalities", "type": "repeat", "title": "Modalities", "help": null, "default": 2, "min": 2, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "mod_name", "argument": null, "type": "text", "label": "Modality name", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mod_weights", "argument": null, "type": "float", "label": "Weight for the above modality", "help": "Higher values -> more important", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "type", "argument": null, "type": "select", "label": "Same or separate weights for each modality?", "help": "", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "same", "options": [["Same weight for all modalities", "same", false], ["Separate weight per modality", "separate", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed for the optimization", "help": "", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "key_added", "argument": "key_added", "type": "text", "label": "mdata.obs key where cluster labels to be added", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "louvain", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "neighbors_key", "argument": "neighbors_key", "type": "text", "label": "Use neighbors connectivities as adjacency", "help": "If not specified, look for .obsp['connectivities'] in each modality.         If specified, look for .obsp[.uns[neighbors_key]['connectivities_key']] in each modality for connectivities.", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "directed", "argument": "directed", "type": "boolean", "label": "Treat the graph as directed", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}]}, {"model_class": "ConditionalWhen", "value": "tl.mofa", "inputs": [{"model_class": "TextToolParameter", "name": "groups_label", "argument": "groups_label", "type": "text", "label": "a column name in adata.obs for grouping the samples", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "use_raw", "argument": "use_raw", "type": "boolean", "label": "Use raw slot of AnnData as input values", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "TextToolParameter", "name": "use_layer", "argument": "use_layer", "type": "text", "label": "Use a specific layer of AnnData as input values", "help": "supersedes use_raw option", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "use_var", "argument": "use_var", "type": "text", "label": ".var column with a boolean value to select genes", "help": "e.g. \u201chighly_variable\u201d", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "use_obs", "argument": "use_obs", "type": "select", "label": "strategy to deal with samples (cells) not being the same across modalities", "help": "Throws error if there are cells that are not same across modalities", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["union", "union", false], ["intersection", "intersection", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "n_factors", "argument": null, "type": "integer", "label": "Number of factors to train the model with", "help": "", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "scale_views", "argument": "scale_views", "type": "boolean", "label": "Scale views to unit variance", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "scale_groups", "argument": "scale_groups", "type": "boolean", "label": "Scale groups to unit variance", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "center_groups", "argument": "center_groups", "type": "boolean", "label": "Center groups to zero mean", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "ard_weights", "argument": "ard_weights", "type": "boolean", "label": "Use view-wise sparsity", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "ard_factors", "argument": "ard_factors", "type": "boolean", "label": "Use group-wise sparsity", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "spikeslab_weights", "argument": "spikeslab_weights", "type": "boolean", "label": "Use feature-wise sparsity (e.g. gene-wise)", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "spikeslab_factors", "argument": "spikeslab_factors", "type": "boolean", "label": "Use sample-wise sparsity (e.g. cell-wise)", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "IntegerToolParameter", "name": "n_iterations", "argument": null, "type": "integer", "label": "Upper limit on the number of iterations", "help": "", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "convergence_mode", "argument": "convergence_mode", "type": "select", "label": "Convergence mode", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "fast", "options": [["fast", "fast", true], ["medium", "medium", false], ["slow", "slow", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "use_float32", "argument": "use_float32", "type": "boolean", "label": "Use reduced precision", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "Conditional", "name": "svi", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "FloatToolParameter", "name": "svi_batch_size", "argument": "svi_batch_size", "type": "float", "label": "Batch size as a fraction", "help": "", "help_format": "html", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "svi_learning_rate", "argument": "svi_learning_rate", "type": "float", "label": "Learning rate", "help": "", "help_format": "html", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "svi_forgetting_rate", "argument": "svi_forgetting_rate", "type": "float", "label": "Forgetting rate", "help": "", "help_format": "html", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "svi_start_stochastic", "argument": "svi_start_stochastic", "type": "integer", "label": "First iteration to start SVI", "help": "", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "svi_mode", "argument": null, "type": "select", "label": "Use Stochastic Variational Inference (SVI)?", "help": "", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["Yes", "yes", false], ["No", "no", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "TextToolParameter", "name": "smooth_covariate", "argument": "smooth_covariate", "type": "text", "label": "Use a covariate (column in .obs) to learn smooth factors (MEFISTO)", "help": "", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "smooth_warping", "argument": "smooth_warping", "type": "boolean", "label": "Learn the alignment of covariates (e.g. time points) from different groups?", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "IntegerToolParameter", "name": "seed", "argument": "seed", "type": "integer", "label": "Random seed", "help": "", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tl.umap", "inputs": [{"model_class": "FloatToolParameter", "name": "min_dist", "argument": "min_dist", "type": "float", "label": "The effective minimum distance between embedded points", "help": "Smaller values will result in a more clustered/clumped embedding where nearby points on the manifold are drawn closer together, while larger values will result on a more even dispersal of points.", "help_format": "html", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "spread", "argument": "spread", "type": "float", "label": "The effective scale of embedded points", "help": "Determines how clustered/clumped the embedded points are", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_components", "argument": "n_components", "type": "integer", "label": "The number of dimensions of the embedding", "help": "", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maxiter", "argument": "maxiter", "type": "integer", "label": "The number of iterations (epochs) of the optimization", "help": "Called `n_epochs` in the original UMAP", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "alpha", "argument": "alpha", "type": "float", "label": "The initial learning rate for the embedding optimization", "help": "", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "gamma", "argument": "gamma", "type": "float", "label": "Weighting applied to negative samples in low dimensional embedding optimization", "help": "Values higher than one will result in greater weight being given to negative samples", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "negative_sample_rate", "argument": "negative_sample_rate", "type": "integer", "label": "Negative sample rate", "help": "The number of negative edge/1-simplex samples to use per positive edge/1-simplex sample in optimizing the low dimensional embedding", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "init_pos", "argument": "init_pos", "type": "select", "label": "How to initialize the low dimensional embedding", "help": "Called `init` in the original UMAP", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "spectral", "options": [["Use a spectral embedding of the graph", "spectral", false], ["Assign initial embedding positions at random", "random", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed for the optimization", "help": "", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "42", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "neighbors_key", "argument": "neighbors_key", "type": "text", "label": "Use neighbors connectivities as adjacency", "help": "If not specified, look for .obsp['connectivities'] in each modality.         If specified, look for .obsp[.uns[neighbors_key]['connectivities_key']] in each modality for connectivities.", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "method", "argument": null, "type": "select", "label": "Method used for processing", "help": "", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "tl.leiden", "options": [["Cluster: Cluster cells using the Leiden algorithm, using 'muon.tl.leiden'", "tl.leiden", false], ["Cluster: Cluster cells using the Louvain algorithm, using 'muon.tl.louvain'", "tl.louvain", false], ["Analyze: Run Multi Omics Factor Analysis, using 'muon.tl.mofa'", "tl.mofa", false], ["Embed: Embed the multimodal neighborhood graph using UMAP, using 'muon.tl.umap'", "tl.umap", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "advanced_common", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "show_log", "argument": null, "type": "boolean", "label": "Output Log?", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}], "outputs": [{"model_class": "ToolOutput", "name": "mudata_out", "format": "h5ad", "label": "${tool.name} (${method.method}) on ${on_string}: MuData", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "mudata.h5mu", "edam_format": "format_3590", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "hidden_output", "format": "txt", "label": "Log file", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "single-cell", "panel_section_name": "Single-cell", "form_style": "regular"}