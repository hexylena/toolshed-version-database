{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/plink/plink/1.9.b618+galaxy2", "name": "plink", "version": "1.9.b618+galaxy2", "description": "", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "plink", "owner": "iuc", "changeset_revision": "66b35562554d", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Section", "name": "inputs", "type": "section", "title": "Data inputs", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "inputs", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "bfile", "inputs": [{"model_class": "DataToolParameter", "name": "bed", "argument": null, "type": "data", "label": "plink bed file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["pbed"], "edam": {"edam_formats": ["format_2331"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "bim", "argument": null, "type": "data", "label": "plink bim file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "fam", "argument": null, "type": "data", "label": "plink fam file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "vcf", "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "VCF/BCF Input file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf", "vcf_bgzip", "bcf"], "edam": {"edam_formats": ["format_3016", "format_3016", "format_3020"], "edam_data": ["data_0006", "data_0006", "data_3498"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "filetype", "argument": null, "type": "select", "label": "Main input data type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "bfile", "options": [["plink file", "bfile", false], ["VCF input file", "vcf", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "set_pheno", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "DataToolParameter", "name": "pheno", "argument": null, "type": "data", "label": "Phenotype file", "help": "Read phenotype values from the 3rd column of the specified space- or tab-delimited file, instead of the .fam or .ped file.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt", "tabular"], "edam": {"edam_formats": ["format_2330", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "all_pheno", "argument": null, "type": "boolean", "label": "Allow all phenotypes present in the phenotype file to be subject to the association tests you have requested", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--all-pheno", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set_pheno", "argument": null, "type": "select", "label": "Set phenotype", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["No", "", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "DataToolParameter", "name": "covar_input", "argument": null, "type": "data", "label": "Input covariate file", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "Conditional", "name": "functions", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "filtering", "inputs": [{"model_class": "Conditional", "name": "id_list", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "keep", "inputs": [{"model_class": "DataToolParameter", "name": "file", "argument": null, "type": "data", "label": "Keep file.", "help": "Accepts one or more space/tab-delimited text files with sample IDs, and removes all unlisted samples from the current analysis;", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "keep-fam", "inputs": [{"model_class": "DataToolParameter", "name": "file", "argument": null, "type": "data", "label": "Keep-fam file", "help": "Accepts text files with family IDs in the first column, and keeps entire families.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "remove", "inputs": [{"model_class": "DataToolParameter", "name": "file", "argument": null, "type": "data", "label": "Remove file", "help": "Accepts one or more space/tab-delimited text files with sample IDs, and removes all listed samples from the current analysis", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "remove-fam", "inputs": [{"model_class": "DataToolParameter", "name": "file", "argument": null, "type": "data", "label": "Remove-fam file", "help": "Acceptz text files with family IDs in the first column, and removes entire families.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "func", "argument": null, "type": "select", "label": "ID list functions", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["none", "none", false], ["keep", "keep", false], ["keep-fam", "keep-fam", false], ["remove", "remove", false], ["remove-fam", "remove-fam", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "extraction", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "extract", "inputs": [{"model_class": "DataToolParameter", "name": "file", "argument": null, "type": "data", "label": "Extract", "help": "Accepts one or more text file(s) with variant IDs , and removes all unlisted variants from the current analysis", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "range", "argument": null, "type": "boolean", "label": "", "help": "Input file is input in set range format.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "range", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "exclude", "inputs": [{"model_class": "DataToolParameter", "name": "file", "argument": null, "type": "data", "label": "Exclude", "help": "Accepts one or more text file(s) with variant IDs , and removes all listed variants from the current analysis", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "range", "argument": null, "type": "boolean", "label": "", "help": "Input file is input in set range format.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "range", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "ex_func", "argument": null, "type": "select", "label": "ID extraction functions", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["none", "none", false], ["extract", "extract", false], ["exclude", "exclude", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "TextToolParameter", "name": "chromosome", "argument": null, "type": "text", "label": "Chromosome(s)", "help": "Excludes all variants not on the listed chromosome(s). Can be listed as single chromsome, a hyphenated range, or comma separated list.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "excluded_chromosome", "argument": null, "type": "text", "label": "Exclude Chromosome(s)", "help": "Excludes all variants on the listed chromosome(s). Can be listed as single chromsome, a hyphenated range, or comma separated list.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "extra_chromosomes", "argument": null, "type": "boolean", "label": "Allow extra chromosomes", "help": "Allows specified extra chromosomes/scaffolds not normally listed. ex. chr1_gl000191_random.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--aec", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "autosome", "argument": null, "type": "select", "label": "Autosome/unplaced exclusion", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["None", "none", false], ["Exclude all unplaced and non-autosomal variants", "--autosome", false], ["Excludes all unplaced and non-autosomal variants, but keep XY/PAR1/PAR2. Can be combined with exclude-chromosmes.", "--autosome-par", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "snps_exclusives", "argument": null, "type": "select", "label": "SNP exclusive", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Only return SNPs", "--snps-only", false], ["Return SNPs, excluding any other than {'A', 'C', 'G', 'T', 'a', 'c', 'g', 't', missing}", "acgt", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "ranges", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": []}, {"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "Conditional", "name": "window", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "variant", "inputs": [{"model_class": "TextToolParameter", "name": "from", "argument": null, "type": "text", "label": "From", "help": "Variant ID. Excludes all variants on different chromosomes than the named variant, as well as those with smaller base-pair position values. If they are used together but the --from variant is after the --to variant, they are automatically swapped.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "to", "argument": null, "type": "text", "label": "To", "help": "Variant ID. Excludes all variants on different chromosomes than the named variant, as well as those with larger base-pair position values. If they are used together but the --from variant is after the --to variant, they are automatically swapped.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "window", "inputs": [{"model_class": "TextToolParameter", "name": "snp", "argument": null, "type": "text", "label": "SNP variant id to include", "help": "Use this OR SNP variant to exclude", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "exclude_snp", "argument": null, "type": "text", "label": "SNP variant id to exclude", "help": "Use this OR SNP variant to include", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "window", "argument": null, "type": "integer", "label": "Window", "help": "All variants with physical position no more than half the specified kb distance (decimal permitted) from the named variant are loaded as well", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "range", "inputs": [{"model_class": "IntegerToolParameter", "name": "from_bp", "argument": null, "type": "integer", "label": "from-bp", "help": "These flags let you use physical positions to specify a variant range to load. Must also have specified a chromosome in above settings.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "to_bp", "argument": null, "type": "integer", "label": "to-bp", "help": "These flags let you use physical positions to specify a variant range to load. Must also have specified a chromosome in above settings.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "type", "argument": null, "type": "select", "label": "Specify range for variants", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "variant", "options": [["Around/between specific variant(s)", "variant", false], ["Around a specific variant", "window", false], ["Within a specific area (Must also specify a single chromosome in above input)", "range", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "multi", "inputs": [{"model_class": "BooleanToolParameter", "name": "force_intersect", "argument": null, "type": "boolean", "label": "Force intersect", "help": "To reduce the potential for confusion, PLINK 2 normally errors out when multiple variant-inclusion filters                          (--extract[-intersect], --extract-col-cond, --from/--to, --from-bp/--to-bp, --snp, --snps) are specified, since it may not be obvious whether the intersection or union will be taken.                          --force-intersect allows the run to proceed; the set intersection will be taken.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--force-intersect", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "snps", "argument": null, "type": "text", "label": "List of SNP variant ids to include", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "exclude_snps", "argument": null, "type": "text", "label": "List of SNP variant ids to exclude", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "single_multi", "argument": null, "type": "select", "label": "Single or multiple variant-based range window?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["No range specified", "", false], ["Single variants", "single", false], ["Multiple variants", "multi", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "thinning", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "FloatToolParameter", "name": "thin", "argument": null, "type": "float", "label": "Thin", "help": "Removes variants at random by retaining each variant with probability p", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "thin_count", "argument": null, "type": "integer", "label": "Thin Count", "help": "Removes variants at random until only n remain", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "bp_space", "argument": null, "type": "integer", "label": "BP space", "help": "Excludes one variant from each pair closer than the given bp count", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "thin_indiv", "argument": null, "type": "float", "label": "Thin Individual", "help": "Removes samples at random by retaining each sample with probability p", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "thin_indiv_count", "argument": null, "type": "integer", "label": "Thin Individual count", "help": "Removes samples at random until only n remain.", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "thinning", "argument": null, "type": "select", "label": "Arbitrary thinning", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "geno_rates", "type": "section", "title": "Missing Genotype Rates", "help": null, "expanded": true, "inputs": [{"model_class": "FloatToolParameter", "name": "geno", "argument": null, "type": "float", "label": "Set Geno", "help": "filters out all variants with missing call rates exceeding the provided value (default 0.1) to be removed", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mind", "argument": null, "type": "float", "label": "Set Mind", "help": "filters out all samples with missing call rates exceeding the provided value (default 0.1) to be removed", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "Section", "name": "allele_freq", "type": "section", "title": "Allele Frequencies", "help": null, "expanded": true, "inputs": [{"model_class": "FloatToolParameter", "name": "maf", "argument": null, "type": "float", "label": "Minimum allele frequency", "help": "Filters out all variants with allele frequency below the provided threshold", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_maf", "argument": null, "type": "float", "label": "Maximum allele frequency", "help": "Filters out all variants with allele frequency above the provided threshold", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "mac", "argument": null, "type": "integer", "label": "Minimum allele count", "help": "Filters out all variants with allele counts below the provided threshold", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_mac", "argument": null, "type": "integer", "label": "Maximum allele count", "help": "filters out all variants with allele counts above the provided threshold", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "Conditional", "name": "hwe", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "FloatToolParameter", "name": "hwe_val", "argument": null, "type": "float", "label": "Hardy-Weinberg Equilibrium", "help": "Filters out all variants which have Hardy-Weinberg equilibrium exact test                          p-value below the provided threshold. It is recommended setting a low threshold\u2014serious genotyping errors often yield extreme p-values like 1e-501 which                          are detected by any reasonable configuration of this test, while genuine SNP-trait associations can be expected to deviate slightly from Hardy-Weinberg                          equilibrium (so it is dangerous to choose a threshold that filters out too many variants).", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1e-50", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "modifiers", "argument": null, "type": "select", "label": "Test modifiers", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Apply the mid-p adjustment described in Graffelman J, Moreno V (2013) The mid p-value in exact tests for Hardy-Weinberg equilibrium", "midp", false], ["Don't ignore cases and missing phenotypes'", "include-nonctrl", false]], "display": "checkboxes", "multiple": true, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "hwe", "argument": null, "type": "select", "label": "", "help": "Set Hardy-Weinberg equilibrium tests", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "sex_founder_filter", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "SelectToolParameter", "name": "sex_select", "argument": null, "type": "select", "label": "Sex select", "help": "Filter by phenotypes, experiment, and founder state.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Do not specifically filter out based on sex or founders", "", false], ["Only include cases", "--filter-cases", false], ["Only include controls", "--filter-controls", false], ["Only include males", "--filter-males", false], ["Only include females", "--filter-females", false], ["Exclude all samples with at least one known parental ID", "--filter-founders", false], ["Only include samples with at least one known parental ID", "--filter-nonfounders", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "no_sex_select", "argument": null, "type": "select", "label": "No sex settings", "help": "How to deal with ambiguous sex phenotypes", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Change nothing with regards to ambiguous sex samples", "", false], ["Prevent samples with ambiguous sex frim having their phenotypes set to missing when analysis commands are run", "--allow-no-sex", false], ["Force phenotypes of ambiguous-sex samples to missing in output", "--must-have-sex", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "nonfounders", "argument": null, "type": "boolean", "label": "Nonfouders", "help": "Include nonfounders in --freq[x] or --maf/--max-maf/--hwe calculations", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--nonfounders", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "filter", "argument": null, "type": "select", "label": "Filter on sex and/or founders", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "data_manage", "inputs": [{"model_class": "Conditional", "name": "bmerge", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "DataToolParameter", "name": "bed", "argument": null, "type": "data", "label": "plink bed file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["binary"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "bim", "argument": null, "type": "data", "label": "plink bim file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "fam", "argument": null, "type": "data", "label": "plink fam file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set", "argument": null, "type": "select", "label": "Merge plink tilesets", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "recode", "argument": null, "type": "boolean", "label": "Recode", "help": "Create a new text fileset, after applying sample/variant filters and other operations", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--recode", "falsevalue": ""}, {"model_class": "DataToolParameter", "name": "flip", "argument": null, "type": "data", "label": "Flip DNA strand for SNPs", "help": "Given a file containing a list of SNPs with A/C/G/T alleles, --flip swaps A\u2194T and C\u2194G.", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tsv", "tabular"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "template", "argument": null, "type": "text", "label": "Update Variant Info: Template String", "help": "Replaces missing IDs. The parameter taken by these flags is a special template string, with a @ where the chromosome code should go, and a # where the base-pair position belongs.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": null, "type": "integer", "label": "Max allele length", "help": "Length threshold to rename alleles. Recommended default is 23", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "Conditional", "name": "update_cols", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "update_map", "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "", "help": "By default, the new value is read from column 2 and the (old) variant ID from column 1, but you can adjust these positions with the second and third parameters.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "col_num", "argument": null, "type": "integer", "label": "New ID column number", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "old_col", "argument": null, "type": "integer", "label": "Old ID column", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "skip", "argument": null, "type": "text", "label": "Skip", "help": "Either a nonnegative integer, in which case it indicates the number of lines to skip at the top of the file, or a single nonnumeric character, which causes each line with that leading character to be skipped.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "update_name", "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "", "help": "By default, the new value is read from column 2 and the (old) variant ID from column 1, but you can adjust these positions with the second and third parameters.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "col_num", "argument": null, "type": "integer", "label": "BP column number", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "var_col", "argument": null, "type": "integer", "label": "Variant ID column", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "skip", "argument": null, "type": "text", "label": "Skip", "help": "Either a nonnegative integer, in which case it indicates the number of lines to skip at the top of the file, or a single nonnumeric character, which causes each line with that leading character to be skipped.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set", "argument": null, "type": "select", "label": "Update variant columns", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["update-map", "update_map", false], ["update-name", "update_name", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "ref_allele", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "DataToolParameter", "name": "file", "argument": null, "type": "data", "label": "Set all alleles specified in the file to REF", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf"], "edam": {"edam_formats": ["format_3016"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "column", "argument": null, "type": "integer", "label": "Reference column number", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "var_id", "argument": null, "type": "integer", "label": "Variant id column in file", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "skip", "argument": null, "type": "text", "label": "Skip", "help": "Either a nonnegative integer, in which case it indicates the number of lines to skip at the top of the file, or a single nonnumeric character, which causes each line with that leading character to be skipped.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set", "argument": null, "type": "select", "label": "Set REF alleles", "help": "These cannot be used with any other commands.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", false], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "a2_allele", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "DataToolParameter", "name": "file", "argument": null, "type": "data", "label": "Set all alleles specified in the file to first ALT allele", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf"], "edam": {"edam_formats": ["format_3016"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "column", "argument": null, "type": "integer", "label": "Alt column number", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "var_id", "argument": null, "type": "integer", "label": "Variant id column in file", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "skip", "argument": null, "type": "boolean", "label": "Skip", "help": "Either a nonnegative integer, in which case it indicates the number of lines to skip at the top of the file, or a single nonnumeric character, which causes each line with that leading character to be skipped.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "skip", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "set", "argument": null, "type": "select", "label": "Set a2 alleles", "help": "These cannot be used with any other commands.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No", "no", false], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "stats", "inputs": [{"model_class": "BooleanToolParameter", "name": "freq", "argument": null, "type": "boolean", "label": "Return allele frequency file", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--freq", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "hardy", "argument": null, "type": "boolean", "label": "Return  Hardy-Weinberg statistics file", "help": "Writes out writes autosomal Hardy-Weinberg equilibrium exact test statistics", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--hardy", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "missing", "argument": null, "type": "boolean", "label": "Missing Data", "help": "produces sample-based and variant-based missing data reports", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--missing", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "het", "argument": null, "type": "boolean", "label": "Inbreeding", "help": "Compute observed and expected homozygous/heterozygous genotype counts for each sample, and reports method-of-moments F coefficient estimates", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--het", "falsevalue": ""}, {"model_class": "Conditional", "name": "sex", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": []}, {"model_class": "ConditionalWhen", "value": "--check-sex", "inputs": [{"model_class": "Conditional", "name": "mode", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": [{"model_class": "FloatToolParameter", "name": "female_max", "argument": null, "type": "float", "label": "Female max proportion", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "male_min", "argument": null, "type": "float", "label": "Male min proportion", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ycount", "inputs": [{"model_class": "FloatToolParameter", "name": "female_max", "argument": null, "type": "float", "label": "Female max proportion", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "male_min", "argument": null, "type": "float", "label": "Male min proportion", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "female_max_obvs", "argument": null, "type": "integer", "label": "Female max count", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "male_min_obvs", "argument": null, "type": "integer", "label": "Male min count", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "y-only", "inputs": [{"model_class": "IntegerToolParameter", "name": "female_max_obvs", "argument": null, "type": "integer", "label": "Female max count", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "male_min_obvs", "argument": null, "type": "integer", "label": "Male mincountn", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mode", "argument": null, "type": "select", "label": "Mode select", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Base", "", false], ["ycount", "ycount", false], ["y-only", "y-only", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "--impute-sex", "inputs": [{"model_class": "Conditional", "name": "mode", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": [{"model_class": "FloatToolParameter", "name": "female_max", "argument": null, "type": "float", "label": "Female max proportion", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "male_min", "argument": null, "type": "float", "label": "Male min proportion", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ycount", "inputs": [{"model_class": "FloatToolParameter", "name": "female_max", "argument": null, "type": "float", "label": "Female max proportion", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "male_min", "argument": null, "type": "float", "label": "Male min proportion", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "female_max_obvs", "argument": null, "type": "integer", "label": "Female max count", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "male_min_obvs", "argument": null, "type": "integer", "label": "Male min count", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "y-only", "inputs": [{"model_class": "IntegerToolParameter", "name": "female_max_obvs", "argument": null, "type": "integer", "label": "Female max count", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "male_min_obvs", "argument": null, "type": "integer", "label": "Male min count", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mode", "argument": null, "type": "select", "label": "Mode select", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Base", "", false], ["ycount", "ycount", false], ["y-only", "y-only", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "sex_stats", "argument": null, "type": "select", "label": "Sex imputation", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["No", "", false], ["Compare sex assignments in input dataset with those imputed from X chromosome inbreeding coefficients", "--check-sex", false], [" Changes sex assignments to the imputed values. Cannot be set with any other flags.", "--impute-sex", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "link", "inputs": [{"model_class": "Conditional", "name": "set_indep", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "window", "argument": null, "type": "integer", "label": "Window size in bp", "help": "Window size", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "step", "argument": null, "type": "integer", "label": "Step size (variant ct)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "r2", "argument": null, "type": "float", "label": "Unphased Hardcall r^2 Threshold", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.2", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "choice", "argument": null, "type": "select", "label": "Variant pruning", "help": "Since two-variant r2 only makes sense for biallelic variants, these collapse multiallelic variants down to most common allele vs. the rest.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "stratification", "inputs": [{"model_class": "DataToolParameter", "name": "read_genome", "argument": null, "type": "data", "label": "Reusing an IBS/IBD calculation", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "tsv"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "cluster", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "SelectToolParameter", "name": "modifiers", "argument": null, "type": "select", "label": "Cluster flag modifiers", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Prevent two all-case or two all-control clusters from being merged.", "cc", false], ["By default, the distance between two clusters is defined as the maximum pairwise distance between a member of the first cluster and a member of the second cluster. Cause average pairwise distance to be used instead.", "group-avg", false], ["Cause clustering to be based on identity-by-missingness", "missing", false]], "display": "checkboxes", "multiple": true, "textable": false}, {"model_class": "Conditional", "name": "mds", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "dimensions", "argument": null, "type": "integer", "label": "Dimension count", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "modifiers", "argument": null, "type": "select", "label": "mds-plot flag modifiers", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Perform mds scaling on an inter-cluster distance matrix", "by-cluster", false], ["Request faster eigendocomposition-based algorithm, yielding slightly different results", "eigendecomp", false], ["Write out top eigenvalues to separate file", "eigvals", false]], "display": "checkboxes", "multiple": true, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mds_scaling", "argument": null, "type": "select", "label": "", "help": "Return a Haploview-friendly multidimensional scaling report", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "cluster", "argument": null, "type": "select", "label": "", "help": "Use IBS values calculated via --genome to perform complete linkage clustering", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "association", "inputs": [{"model_class": "Conditional", "name": "assoc", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "Conditional", "name": "perm", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "perm", "inputs": []}, {"model_class": "ConditionalWhen", "value": "mperm", "inputs": [{"model_class": "IntegerToolParameter", "name": "value", "argument": null, "type": "integer", "label": "Replications", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "perm", "argument": null, "type": "select", "label": "", "help": "Request an adaptive or max(T) permutation test on the additive effect.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Perform Monte Carlo permutation test", "perm", false], ["Perform a max(T) permutation test with specified number of replications", "mperm", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "genedrop", "argument": null, "type": "boolean", "label": "genedrop", "help": "Cause offspring genotypes to be regenerated via gene-dropping in the permutation test.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "genedrop", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "perm_count", "argument": null, "type": "boolean", "label": "Perm-count", "help": "Cause the permutation test report to include permutation counts instead of frequencies.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "perm-count", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "fisher", "argument": null, "type": "select", "label": "Fisher tests", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Don't specify", "", false], ["Use fisher's exact test", "fisher", false], ["User Fisher's exact test with Lancaster's mid-p adjustment", "fisher-midp", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "count", "argument": null, "type": "boolean", "label": "Counts", "help": "Report allele counts instead of frequencies", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "counts", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "assoc", "argument": null, "type": "select", "label": "Perform 1df chi-square allelic test", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["No", "", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "adjust", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "SelectToolParameter", "name": "tests", "argument": null, "type": "select", "label": "Testing modifiers", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Use genomic-controlled p-values in the formulas", "gc", false], ["Replace the p-values in the .adjusted file with their negative base 10 logarithms.", "log10", false], ["Add a quantile column to simplify QQ plotting.", "qq-plot", false]], "display": "checkboxes", "multiple": true, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "adjust", "argument": null, "type": "select", "label": "Report basic multiple testing corrections for the raw p-values", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "logistic", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "Conditional", "name": "perm", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "perm", "inputs": []}, {"model_class": "ConditionalWhen", "value": "mperm", "inputs": [{"model_class": "IntegerToolParameter", "name": "value", "argument": null, "type": "integer", "label": "Replications", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "perm", "argument": null, "type": "select", "label": "", "help": "Request an adaptive or max(T) permutation test on the additive effect.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Perform Monte Carlo permutation test", "perm", false], ["Perform a max(T) permutation test with specified number of replications", "mperm", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "genedrop", "argument": null, "type": "boolean", "label": "genedrop", "help": "Cause offspring genotypes to be regenerated via gene-dropping in the permutation test.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "genedrop", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "perm_count", "argument": null, "type": "boolean", "label": "Perm-count", "help": "Cause the permutation test report to include permutation counts instead of frequencies.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "perm-count", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "dominance", "argument": null, "type": "select", "label": "Set dominance model", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Don't specify", "", false], ["Add an additive effect/dominance deviation 2df joint test (with two genotype-dependent variables in the regression, one with 0/1/2 coding and the second with 0/1/0", "genotypic", false], ["Add an additive effect/dominance deviation 2df joint test (with two genotype-dependent variables in the regression, one with 0/0/1 coding and the second with 0/1/0", "hethom", false], ["Assume full dominance in A1 allele", "dominant", false], ["Assume full recessiveness in A1 allele", "recessive", false], ["Request a regression only on the phenotype and the covariates, without reference to genomic data", "no-snp", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "hide_covar", "argument": null, "type": "boolean", "label": "Hide covar", "help": "Remove covariate-specific lines from the main report", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "hide-covar", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "sex_covar", "argument": null, "type": "select", "label": "Sex as a covariate", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Only used where specified", "", false], ["By default, when at least one male and one female is present, sex (male = 1, female = 0) is automatically added as a covariate on X chromosome SNPs, and nowhere else. The 'sex' modifier causes it to be added everywhere.", "sex", false], ["By default, when at least one male and one female is present, sex (male = 1, female = 0) is automatically added as a covariate on X chromosome SNPs, and nowhere else. The 'no-x-sex' modifier causes it to be excluded everywhere", "no-x-sex", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "interaction", "argument": null, "type": "boolean", "label": "Interaction", "help": "Add genotype x covariate interactions to the model.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "interaction", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "beta", "argument": null, "type": "boolean", "label": "Beta", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "beta", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "intercept", "argument": null, "type": "boolean", "label": "Intercept", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "intercept", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "logistic", "argument": null, "type": "select", "label": "Perform logistic regression and return report", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "FloatToolParameter", "name": "lambda", "argument": null, "type": "float", "label": "Lambda value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ibd", "inputs": [{"model_class": "Conditional", "name": "genome", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "FloatToolParameter", "name": "min", "argument": null, "type": "float", "label": "min", "help": "Minimum PI_HAT value", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max", "argument": null, "type": "float", "label": "max", "help": "Maximum PI_HAT value", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "ppc", "argument": null, "type": "integer", "label": "PPC-gap", "help": "Minimum distance between informative pairs of SNPs used in the pairwise population concordance (PPC) inn kbs", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "modifiers", "argument": null, "type": "select", "label": "Genome flag modifiers", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Remove pairs of samples with different FIDs", "rel-check", false], ["Add IBS , HOMHOM and HETHET fields to output", "full", false], ["Turn off clipping due to IBD estimator", "unbounded", false], ["If PI_HAT2 greater than P(IBD=2), adjusts the final estimates to P(IBD=0) := (1-p2), P(IBD=1) := 2p(1-p), and P(IBD=2) := p2, where p is the current PI_HAT", "nudge", false]], "display": "checkboxes", "multiple": true, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "output_genome", "argument": null, "type": "select", "label": "", "help": "Perform and return results of IBS/IBD computation", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["No", "", false], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "func", "argument": null, "type": "select", "label": "Plink functions", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "filtering", "options": [["Filtering", "filtering", false], ["Data Management", "data_manage", false], ["Basic statistics", "stats", false], ["Linkage disequalibrium", "link", false], ["Population stratification", "stratification", false], ["Association analysis", "association", false], ["Identity-by-descent", "ibd", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutputCollection", "name": "plink_out", "format": null, "label": "Plink main outputs", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": []}}, {"model_class": "ToolOutputCollection", "name": "assoc_outfiles", "format": null, "label": "Association outfiles", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": "assoc_out", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.*)\\.(?P<ext>[^\\.]+)?", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "adjust_outfiles", "format": null, "label": "Adjust outfiles", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": "adjust_out", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.*)\\.(?P<ext>[^\\.]+)?", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "log_outfiles", "format": null, "label": "Logistic outfiles", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": "logistic_out", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.*)\\.(?P<ext>[^\\.]+)?", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "plink_ped", "format": "txt", "label": "${tool.name}: Recode ped", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.ped", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "plink_map", "format": "txt", "label": "${tool.name}: Recode map", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.map", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "frequency", "format": "tabular", "label": "${tool.name}: freq out", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.frq", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "hardy_out", "format": "tabular", "label": "${tool.name}: Hardy-Weinberg equilibrium", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.hwe", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "missing_1", "format": "tabular", "label": "${tool.name}: imiss", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.imiss", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "missing_2", "format": "tabular", "label": "${tool.name}: lmiss", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.lmiss", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "het", "format": "tabular", "label": "${tool.name}: Het", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.het", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "sex_check", "format": "tabular", "label": "${tool.name}: Sex check", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.sexcheck", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "prune_in", "format": "tabular", "label": "${tool.name}: Prune In", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.prune.in", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "prune_out", "format": "tabular", "label": "${tool.name}: Prune Out", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.prune.out", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "genome", "format": "tabular", "label": "${tool.name}: Genome", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.genome", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "mds", "format": "txt", "label": "${tool.name}: MDS", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.mds", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "cluster1", "format": "tabular", "label": "${tool.name}: Cluster 1", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.cluster1", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "cluster2", "format": "tabular", "label": "${tool.name}: Cluster 2", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.cluster2", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "cluster3", "format": "tabular", "label": "${tool.name}: Cluster 3", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.cluster3", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "cluster3missing", "format": "tabular", "label": "${tool.name}: Cluster 3 missing", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.cluster3.missing", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "mds_miss", "format": "tabular", "label": "${tool.name}: Mdist missing", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.mdist.missing", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "eigenvals", "format": "txt", "label": "${tool.name}: Eigenvals", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "plink_output/plink_output.mds.eigvals", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "variant_calling", "panel_section_name": "Variant Calling", "form_style": "regular"}