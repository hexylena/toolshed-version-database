{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/yahs/yahs/1.2a+galaxy0", "name": "YAHS", "version": "1.2a+galaxy0", "description": "yet another HI-C scaffolding tool", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "yahs", "owner": "iuc", "changeset_revision": "a3a92e30a727", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "function", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yahs", "inputs": [{"model_class": "DataToolParameter", "name": "fasta", "argument": null, "type": "data", "label": "Input contig sequences", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "bfile", "argument": null, "type": "data", "label": "Alignment file of Hi-C reads to contigs", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam", "bed"], "edam": {"edam_formats": ["format_2572", "format_3003"], "edam_data": ["data_0863", "data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "agp", "argument": "-a", "type": "data", "label": "Input AGP file (for rescaffolding)", "help": "You can specify a AGP format file to ask YaHS to do scaffolding with the scaffolds in the AGP file as the start point", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["agp"], "edam": {"edam_formats": ["format_3693"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "res", "argument": "-r", "type": "text", "label": "Resolutions", "help": "Comma separated, ascending list of range of resolutions with no spaces. Ex. 50000,100000,200000,500000,1000000,2000000,5000000. By default and the upper limit is automatically adjusted with the genome size", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "Conditional", "name": "enzyme_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "not_especified", "inputs": []}, {"model_class": "ConditionalWhen", "value": "preconfigured", "inputs": [{"model_class": "SelectToolParameter", "name": "preconfigured_enzymes", "argument": "-e", "type": "select", "label": "Preconfigured enzymes", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "dovetail", "options": [["Dovetail Chicago, Dovetail Hi-C or Phase: GATC", "dovetail", false], ["Arima Hi-C 1.0: GATC, GANTC", "arima1", false], ["Arima Hi-C 2.0: GATC, GANTC, CTNAG, TTAA", "arima2", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "specific", "inputs": [{"model_class": "TextToolParameter", "name": "manual_enzyme", "argument": "-e", "type": "text", "label": "Restriction enzyme sequence(s)", "help": "Restriction enzyme sequence. If multiple were used, include all as a comma separated list without spaces (ex. 'GATC,AAGCTT').", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "enzyme_options", "argument": null, "type": "select", "label": "Restriction enzyme used in Hi-C experiment", "help": "Hi-C experiments can use different restriction enzymes.                         The enzyme frequency in contigs is used to normalize the Hi-C interaction frequency. Note that you need to specify the actual                          sequence of the cutting site for a restriction enzyme and not the enzyme name. You can also specify DNASE as an enzyme if you                          use an enzyme-free prep, e.g. Omin-C.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "not_especified", "options": [["Not especified", "not_especified", false], ["Preconfigured restriction enzymes", "preconfigured", false], ["Enter a specific sequence", "specific", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "-l", "type": "integer", "label": "Minimum contig length included for scaffolding", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "quality", "argument": "-q", "type": "integer", "label": "Minimum read mapping quality (for BAM input only)", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "no_contig_ec", "argument": "--no-contig-ec", "type": "boolean", "label": "Skip assembly error correction step", "help": "Automatically active if AGP output is set", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-contig-ec", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "no_scaffold_ec", "argument": "--no-scaffold-ec", "type": "boolean", "label": "Skip assembly/scaffolding error check each round", "help": "Will also prevent any break.agp output files", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-scaffold-ec", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "agp_to_fasta", "inputs": [{"model_class": "DataToolParameter", "name": "agp", "argument": null, "type": "data", "label": "Input AGP file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["agp"], "edam": {"edam_formats": ["format_3693"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "fasta", "argument": null, "type": "data", "label": "Contig fasta file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "length", "argument": null, "type": "integer", "label": "Output fasta line length", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "60", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "function_select", "argument": null, "type": "select", "label": "Which function would you like to run?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "yahs", "options": [["YAHS", "yahs", false], ["AGP to fasta", "agp_to_fasta", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutputCollection", "name": "initial_agp_break", "format": null, "label": "${tool.name} on ${on_string}: AGP initial break files", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "agp", "visible": false, "assign_primary_output": false, "directory": "initial_break", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.*)\\.(?P<ext>[^\\.]+)?", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "agp_break", "format": null, "label": "${tool.name} on ${on_string}: AGP break files", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "agp", "visible": false, "assign_primary_output": false, "directory": "agp_break", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.*)\\.(?P<ext>[^\\.]+)?", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "agp_out", "format": null, "label": "${tool.name} on ${on_string}: AGP scaffolding results files", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "agp", "visible": false, "assign_primary_output": false, "directory": "agp_out", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.*)\\.(?P<ext>[^\\.]+)?", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "final_agp_out", "format": "agp", "label": "${tool.name} on ${on_string}: Final scaffolds agp output", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "final_outs/yahs_out_scaffolds_final.agp", "edam_format": "format_3693", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "final_fasta_out", "format": "fasta", "label": "${tool.name} on ${on_string}: Final scaffolds fasta output", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "final_outs/yahs_out_scaffolds_final.fa", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "fasta_from_agp", "format": "fasta", "label": "${tool.name} on ${on_string}: agp to fasta", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output.fasta", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}], "panel_section_id": "assembly", "panel_section_name": "Assembly", "form_style": "regular"}