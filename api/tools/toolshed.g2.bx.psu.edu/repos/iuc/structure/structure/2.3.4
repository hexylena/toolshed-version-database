{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/structure/structure/2.3.4", "name": "Structure", "version": "2.3.4", "description": "using multi-locus genotype data to investigate population structure", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "structure", "owner": "iuc", "changeset_revision": "0080ad37f8a0", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "infile", "argument": null, "type": "data", "label": "Genotype data", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "nb_run", "argument": null, "type": "integer", "label": "Number of runs", "help": "Note that the runs are sequential. Please launch separate runs if it's too long", "refresh_on_change": false, "min": 1, "max": 10, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "Section", "name": "main", "type": "section", "title": "mainparams", "help": null, "expanded": true, "inputs": [{"model_class": "IntegerToolParameter", "name": "MAXPOPS", "argument": "MAXPOPS", "type": "integer", "label": "Number of populations assumed", "help": "or [K]", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "BURNIN", "argument": "BURNIN", "type": "integer", "label": "Length of burnin period", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "NUMREPS", "argument": "NUMREPS", "type": "integer", "label": "Number of MCMC reps after burnin", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "NUMINDS", "argument": "NUMINDS", "type": "integer", "label": "Number of diploid individuals in data file", "help": "or [N]", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "NUMLOCI", "argument": "NUMLOCI", "type": "integer", "label": "Number of loci in data file", "help": "or [L]", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "PLOIDY", "argument": "PLOIDY", "type": "integer", "label": "Ploidy of data", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "MISSING", "argument": "MISSING", "type": "integer", "label": "Value given to missing genotype data", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-9", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "ONEROWPERIND", "argument": "ONEROWPERIND", "type": "boolean", "label": "Store data for individuals in a single line", "help": " E.g., for diploid data, this would mean that the two alleles for each locus are in consecutive order in the same row, rather than being arranged in the same column, in two consecutive rows ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "LABEL", "argument": "LABEL", "type": "boolean", "label": "Input file contains individual labels", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "POPDATA", "argument": "POPDATA", "type": "boolean", "label": "Input file contains a user-defined population-of-origin for each individual", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "LOCDATA", "argument": "LOCDATA", "type": "boolean", "label": "Input file contains a location identifier", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "PHENOTYPE", "argument": "PHENOTYPE", "type": "boolean", "label": "Input file contains phenotype information", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "IntegerToolParameter", "name": "EXTRACOLS", "argument": "EXTRACOLS", "type": "integer", "label": "Number of additional columns of data before the genotype data start.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "MARKERNAMES", "argument": "MARKERNAMES", "type": "boolean", "label": "Data file contains row of marker names", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "1", "falsevalue": "0"}, {"model_class": "Conditional", "name": "recessivealleles_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "0", "inputs": [{"model_class": "HiddenToolParameter", "name": "NOTAMBIGUOUS", "argument": "NOTAMBIGUOUS", "type": "hidden", "label": "Defines the code indicating that genotype data at a marker are unambiguous.", "help": "For use with polyploids when RECESSIVEALLELES=1/True. Must not match MISSING or any allele value in the data.", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": "-999"}]}, {"model_class": "ConditionalWhen", "value": "1", "inputs": [{"model_class": "IntegerToolParameter", "name": "NOTAMBIGUOUS", "argument": "NOTAMBIGUOUS", "type": "integer", "label": "Defines the code indicating that genotype data at a marker are unambiguous.", "help": "For use with polyploids when RECESSIVEALLELES=1/True. Must not match MISSING or any allele value in the data.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-999", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "RECESSIVEALLELES", "argument": "RECESSIVEALLELES", "type": "select", "label": "Data file contains dominant markers (eg AFLPs) and a row to indicate which alleles are recessive", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "options": [["No", "0", true], ["Yes", "1", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "MAPDISTANCES", "argument": "MAPDISTANCES", "type": "boolean", "label": "Data file contains row of map distances between loci", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "PHASED", "argument": "PHASED", "type": "boolean", "label": "Data are in correct phase (relevant for linkage model only)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "PHASEINFO", "argument": "PHASEINFO", "type": "boolean", "label": "The data for each individual contains a line indicating phase (linkage model)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "MARKOVPHASE", "argument": "MARKOVPHASE", "type": "boolean", "label": "The phase info follows a Markov model.", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}]}, {"model_class": "Section", "name": "extra", "type": "section", "title": "extraparams", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "NOADMIX", "argument": "NOADMIX", "type": "boolean", "label": "Use no admixture model", "help": "(0/False=admixture model, 1/True=no-admix)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "LINKAGE", "argument": "LINKAGE", "type": "boolean", "label": "Use the linkage model model", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "Conditional", "name": "usepopinfo_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "0", "inputs": [{"model_class": "HiddenToolParameter", "name": "POPFLAG", "argument": "POPFLAG", "type": "hidden", "label": "Input file contains a flag which says whether to use popinfo", "help": "[mainparams] when USEPOPINFO is 1/True", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": "0"}, {"model_class": "HiddenToolParameter", "name": "MIGRPRIOR", "argument": "MIGRPRIOR", "type": "hidden", "label": "Prior prob that an individual is a migrant", "help": "(used only when USEPOPINFO==1/True). This should be small, eg 0.01 or 0.1.", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": "0.01"}]}, {"model_class": "ConditionalWhen", "value": "1", "inputs": [{"model_class": "BooleanToolParameter", "name": "POPFLAG", "argument": "POPFLAG", "type": "boolean", "label": "Input file contains a flag which says whether to use popinfo", "help": "[mainparams] when USEPOPINFO is 1/True", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "FloatToolParameter", "name": "MIGRPRIOR", "argument": "MIGRPRIOR", "type": "float", "label": "Prior prob that an individual is a migrant", "help": "(used only when USEPOPINFO==1/True). This should be small, eg 0.01 or 0.1.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "USEPOPINFO", "argument": "USEPOPINFO", "type": "select", "label": "Use prior population information to pre-assign individuals to clusters", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "options": [["No", "0", true], ["Yes", "1", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "LOCPRIOR", "argument": "LOCPRIOR", "type": "boolean", "label": "Use location information to improve weak data", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "FREQSCORR", "argument": "FREQSCORR", "type": "boolean", "label": "Allele frequencies are correlated among pops", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "ONEFST", "argument": "ONEFST", "type": "boolean", "label": "Assume same value of Fst for all subpopulations", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "Conditional", "name": "inferalpha_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "1", "inputs": [{"model_class": "FloatToolParameter", "name": "ALPHA", "argument": "ALPHA", "type": "float", "label": "Dirichlet parameter for degree of admixture", "help": "this is the initial value if INFERALPHA is 1/True.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "0", "inputs": [{"model_class": "HiddenToolParameter", "name": "ALPHA", "argument": "ALPHA", "type": "hidden", "label": "Dirichlet parameter for degree of admixture", "help": "this is the initial value if INFERALPHA is 1/True.", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": "1.0"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "INFERALPHA", "argument": "INFERALPHA", "type": "select", "label": "Infer ALPHA (the admixture parameter)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["Yes", "1", true], ["No", "0", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "POPALPHAS", "argument": "POPALPHAS", "type": "boolean", "label": "Individual alpha for each population", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "Conditional", "name": "inferlambda_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "0", "inputs": [{"model_class": "HiddenToolParameter", "name": "POPSPECIFICLAMBDA", "argument": "POPSPECIFICLAMBDA", "type": "hidden", "label": "Infer a separate lambda for each pop", "help": "(only if INFERLAMBDA=1/True).", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": "0"}]}, {"model_class": "ConditionalWhen", "value": "1", "inputs": [{"model_class": "BooleanToolParameter", "name": "POPSPECIFICLAMBDA", "argument": "POPSPECIFICLAMBDA", "type": "boolean", "label": "Infer a separate lambda for each pop", "help": "(only if INFERLAMBDA=1/True).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "INFERLAMBDA", "argument": "INFERLAMBDA", "type": "select", "label": "Infer LAMBDA (the allele frequencies parameter)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "options": [["No", "0", true], ["Yes", "1", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "FloatToolParameter", "name": "LAMBDA", "argument": "LAMBDA", "type": "float", "label": "Dirichlet parameter for allele frequencies", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "FPRIORMEAN", "argument": "FPRIORMEAN", "type": "float", "label": "The Prior (Gamma distribution) mean of Fst for pops.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "FPRIORSD", "argument": "FPRIORSD", "type": "float", "label": "The Prior (Gamma distribution) Standard Deviation of Fst for pops.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "unifprioralpha_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "1", "inputs": [{"model_class": "HiddenToolParameter", "name": "ALPHAPRIORA", "argument": "ALPHAPRIORA", "type": "hidden", "label": "Alpha has a gamma prior with mean A*B, and variance A*B^2.", "help": "(only if UNIFPRIORALPHA==0/False)", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": "1.0"}, {"model_class": "HiddenToolParameter", "name": "ALPHAPRIORB", "argument": "ALPHAPRIORB", "type": "hidden", "label": "Alpha has a gamma prior with mean A*B, and variance A*B^2.", "help": "(only if UNIFPRIORALPHA==0/False)", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": "2.0"}]}, {"model_class": "ConditionalWhen", "value": "0", "inputs": [{"model_class": "FloatToolParameter", "name": "ALPHAPRIORA", "argument": "ALPHAPRIORA", "type": "float", "label": "Alpha has a gamma prior with mean A*B, and variance A*B^2.", "help": "(only if UNIFPRIORALPHA==0/False)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "ALPHAPRIORB", "argument": "ALPHAPRIORB", "type": "float", "label": "Alpha has a gamma prior with mean A*B, and variance A*B^2.", "help": "(only if UNIFPRIORALPHA==0/False)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2.0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "UNIFPRIORALPHA", "argument": "UNIFPRIORALPHA", "type": "select", "label": "Use a uniform prior for alpha; otherwise gamma prior", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["Yes", "1", true], ["No", "0", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "FloatToolParameter", "name": "ALPHAMAX", "argument": "ALPHAMAX", "type": "float", "label": "Max value of alpha if uniform prior", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "LOG10RMIN", "argument": "LOG10RMIN", "type": "float", "label": "Log10 of minimum allowed value of r under linkage model", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-4.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "LOG10RMAX", "argument": "LOG10RMAX", "type": "float", "label": "Log10 of maximum allowed value of r", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "LOG10RPROPSD", "argument": "LOG10RPROPSD", "type": "float", "label": "Standard deviation of log r in update", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "LOG10RSTART", "argument": "LOG10RSTART", "type": "float", "label": "Initial value of log10 r", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-2.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "GENSBACK", "argument": "GENSBACK", "type": "integer", "label": "For use when inferring whether an individual is an immigrant, or has an immigrant an cestor in the past GENSBACK generations.", "help": "eg, if GENSBACK==2, it tests for immigrant ancestry back to grandparents.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "PFROMPOPFLAGONLY", "argument": "PFROMPOPFLAGONLY", "type": "boolean", "label": "Only use individuals with POPFLAG=1 to update P.", "help": "This is to enable use of a reference set of individuals for clustering additional 'test' individuals.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "LOCISPOP", "argument": "LOCISPOP", "type": "boolean", "label": "Use POPDATA for location information", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "1", "falsevalue": "0"}, {"model_class": "FloatToolParameter", "name": "LOCPRIORINIT", "argument": "LOCPRIORINIT", "type": "float", "label": "Initial value for r, the location prior", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "MAXLOCPRIOR", "argument": "MAXLOCPRIOR", "type": "float", "label": "Max allowed value for r", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "PRINTNET", "argument": "PRINTNET", "type": "boolean", "label": "Print the 'net nucleotide distance' to screen during the run", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "PRINTLAMBDA", "argument": "PRINTLAMBDA", "type": "boolean", "label": "Print current value(s) of lambda to screen", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "PRINTQSUM", "argument": "PRINTQSUM", "type": "boolean", "label": "Print summary of current population membership to screen", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "SITEBYSITE", "argument": "SITEBYSITE", "type": "boolean", "label": "whether or not to print site by site results.", "help": "(Linkage model only) This is a large file!", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "PRINTQHAT", "argument": "PRINTQHAT", "type": "boolean", "label": "Q-hat printed to a separate file.", "help": "Turn this on before using STRAT.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "IntegerToolParameter", "name": "UPDATEFREQ", "argument": "UPDATEFREQ", "type": "integer", "label": "Frequency of printing update on the screen.", "help": "Set automatically if this is 0/False.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "PRINTLIKES", "argument": "PRINTLIKES", "type": "boolean", "label": "Print current likelihood to screen every rep", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "IntegerToolParameter", "name": "INTERMEDSAVE", "argument": "INTERMEDSAVE", "type": "integer", "label": "Number of saves to file during run", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "ECHODATA", "argument": "ECHODATA", "type": "boolean", "label": "Print some of data file to screen to check that the data entry is correct.", "help": "(NEXT 3 ARE FOR COLLECTING DISTRIBUTION OF Q:)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "BooleanToolParameter", "name": "ANCESTDIST", "argument": "ANCESTDIST", "type": "boolean", "label": "Collect data about the distribution of ancestry coefficients (Q) for each individual", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "IntegerToolParameter", "name": "NUMBOXES", "argument": "NUMBOXES", "type": "integer", "label": "The distribution of Q values is stored as a histogram with this number of boxes.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "ANCESTPINT", "argument": "ANCESTPINT", "type": "float", "label": "The size of the displayed probability interval on Q (values between 0.0--1.0)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.9", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "COMPUTEPROB", "argument": "COMPUTEPROB", "type": "boolean", "label": "Estimate the probability of the Data under the model.", "help": "This is used when choosing the best number of subpopulations.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "1", "falsevalue": "0"}, {"model_class": "IntegerToolParameter", "name": "ADMBURNIN", "argument": "ADMBURNIN", "type": "integer", "label": "Initial period of burnin with admixture model", "help": "[only relevant for linkage model] see Documentation", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "ALPHAPROPSD", "argument": "ALPHAPROPSD", "type": "float", "label": "SD of proposal for updating alpha", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.025", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "STARTATPOPINFO", "argument": "STARTATPOPINFO", "type": "boolean", "label": "Use given populations as the initial condition for population origins.", "help": "(Need POPDATA==1). It is assumed that the PopData in the input file are between 1 and k where k is less or equal MAXPOPS.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}, {"model_class": "Conditional", "name": "randomize_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "1", "inputs": [{"model_class": "HiddenToolParameter", "name": "SEED", "argument": "SEED", "type": "hidden", "label": "Seed value for random number generator", "help": "(must set RANDOMIZE=0)", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": "2245"}]}, {"model_class": "ConditionalWhen", "value": "0", "inputs": [{"model_class": "IntegerToolParameter", "name": "SEED", "argument": "SEED", "type": "integer", "label": "seed value for random number generator", "help": "(must set RANDOMIZE=0)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2245", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "RANDOMIZE", "argument": "RANDOMIZE", "type": "select", "label": "=use new random seed for each run", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["Yes", "1", true], ["No", "0", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "METROFREQ", "argument": "METROFREQ", "type": "integer", "label": "Frequency of using Metropolis step to update Q under admixture model", "help": "(ie use the metr. move every i steps).  If this is set to 0, it is never used. (Proposal for each q^(i) sampled from prior. The goal is to improve mixing for small alpha.)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "REPORTHITRATE", "argument": "REPORTHITRATE", "type": "boolean", "label": "Report hit rate if using METROFREQ", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "1", "falsevalue": "0"}]}], "outputs": [{"model_class": "ToolOutputCollection", "name": "out", "format": null, "label": "run_K_${main.MAXPOPS}.out", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "txt", "visible": false, "assign_primary_output": false, "directory": "out", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.*)", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "log", "format": null, "label": "run_K_${main.MAXPOPS}.log", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "txt", "visible": false, "assign_primary_output": false, "directory": "log", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<name>.*)", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "out_mainparams", "format": "txt", "label": "run_K_${main.MAXPOPS}.mainparams", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "out_extraparams", "format": "txt", "label": "run_K_${main.MAXPOPS}.extraparams", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "evolution", "panel_section_name": "Evolution", "form_style": "regular"}