{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.2.0+galaxy1", "name": "Quast", "version": "5.2.0+galaxy1", "description": "Genome assembly Quality", "labels": [], "edam_operations": ["operation_3180", "operation_0337"], "edam_topics": ["topic_0196"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "quast", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "quast", "owner": "iuc", "changeset_revision": "72472698a2df", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "mode", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "individual", "inputs": [{"model_class": "Conditional", "name": "in", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Contigs/scaffolds file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "labels", "argument": "--labels", "type": "text", "label": "Name", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": [{"model_class": "DataToolParameter", "name": "inputs", "argument": null, "type": "data", "label": "Contigs/scaffolds file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "custom", "argument": null, "type": "select", "label": "Use customized names for the input files?", "help": "They will be used in reports, plots and logs", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["Yes, specify custom names", "true", false], ["No, use dataset names", "false", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "reads", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "disabled", "inputs": []}, {"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/FASTA file #1", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_2", "argument": null, "type": "data", "label": "FASTQ/FASTA file #2", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired_collection", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "input_1", "argument": null, "type": "data_collection", "label": "FASTQ/FASTA files", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired_interlaced", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "mate_paired", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/FASTA file #1", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_2", "argument": null, "type": "data", "label": "FASTQ/FASTA file #2", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "pacbio", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "nanopore", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "reads_option", "argument": null, "type": "select", "label": "Reads options", "help": "Currently, the supported read types are Illumina unpaired, paired-end and mate-pair reads, PacBio SMRT, and Oxford Nanopore long reads.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "disabled", "options": [["Disabled", "disabled", false], ["Illumina single-end reads", "single", false], ["Illumina paired-end reads", "paired", false], ["Illumina paired-end reads in paired collection", "paired_collection", false], ["Illumina interlaced paired-end reads", "paired_interlaced", false], ["Illumina mate-pair reads", "mate_paired", false], ["Pacbio SMRT reads", "pacbio", false], ["Nanopore reads", "nanopore", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "co", "inputs": [{"model_class": "Conditional", "name": "in", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "Repeat", "name": "inputs", "type": "repeat", "title": "Contigs/scaffolds", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Contigs/scaffolds file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "labels", "argument": "--labels", "type": "text", "label": "Name", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": [{"model_class": "DataToolParameter", "name": "inputs", "argument": null, "type": "data", "label": "Contigs/scaffolds file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "custom", "argument": null, "type": "select", "label": "Use customized names for the input files?", "help": "They will be used in reports, plots and logs", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["Yes, specify custom names", "true", false], ["No, use dataset names", "false", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "reads", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "disabled", "inputs": []}, {"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/FASTA file #1", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_2", "argument": null, "type": "data", "label": "FASTQ/FASTA file #2", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired_collection", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "input_1", "argument": null, "type": "data_collection", "label": "FASTQ/FASTA files", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "paired_interlaced", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "mate_paired", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/FASTA file #1", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_2", "argument": null, "type": "data", "label": "FASTQ/FASTA file #2", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "pacbio", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "nanopore", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/FASTA file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fastq.gz", "fasta", "fasta.gz"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1929", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "reads_option", "argument": null, "type": "select", "label": "Reads options", "help": "Currently, the supported read types are Illumina unpaired, paired-end and mate-pair reads, PacBio SMRT, and Oxford Nanopore long reads.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "disabled", "options": [["Disabled", "disabled", false], ["Illumina single-end reads", "single", false], ["Illumina paired-end reads", "paired", false], ["Illumina paired-end reads in paired collection", "paired_collection", false], ["Illumina interlaced paired-end reads", "paired_interlaced", false], ["Illumina mate-pair reads", "mate_paired", false], ["Pacbio SMRT reads", "pacbio", false], ["Nanopore reads", "nanopore", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "mode", "argument": null, "type": "select", "label": "Assembly mode?", "help": "Useful to know if contigs have been generated all samples together (co-assembly) or on each sample individually (individual assembly)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "co", "options": [["Individual assembly (1 contig file per sample)", "individual", false], ["Co-assembly (1 contig file for several samples)", "co", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "assembly", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "genome", "inputs": [{"model_class": "Conditional", "name": "ref", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "DataToolParameter", "name": "r", "argument": "-r", "type": "data", "label": "Reference genome", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "features", "argument": "--features", "type": "data", "label": "Genomic feature positions in the reference genome", "help": "Gene coordinates for the reference genome", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gff", "gff3", "bed"], "edam": {"edam_formats": ["format_2305", "format_1975", "format_3003"], "edam_data": ["data_1255", "data_1255", "data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "operons", "argument": "--operons", "type": "data", "label": "Operon positions in the reference genome", "help": "Operon coordinates for the reference genome", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gff", "gff3", "bed"], "edam": {"edam_formats": ["format_2305", "format_1975", "format_3003"], "edam_data": ["data_1255", "data_1255", "data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "k_mer", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "--k-mer-stats", "inputs": [{"model_class": "IntegerToolParameter", "name": "k_mer_size", "argument": "--k-mer-size", "type": "integer", "label": "Size of k", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "101", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "k_mer_stats", "argument": "--k-mer-stats", "type": "select", "label": "Compute k-mer-based quality metrics?", "help": "It is recommended for large genomes. This may significantly increase memory and time consumption on large genomes", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Yes", "--k-mer-stats", false], ["No", "", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "circos", "argument": "--circos", "type": "boolean", "label": "Generage Circos plot", "help": "Plot Circos version of Icarus contig alignment viewer", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--circos", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": [{"model_class": "IntegerToolParameter", "name": "est_ref_size", "argument": "--est-ref-size", "type": "integer", "label": "Estimated reference genome size (in bp) for computing NGx statistics", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "use_ref", "argument": null, "type": "select", "label": "Use a reference genome?", "help": "Many metrics can't be evaluated without a reference. If this is omitted, QUAST will only report the metrics that can be evaluated without a reference.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["Yes", "true", false], ["No", "false", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "orga_type", "argument": null, "type": "select", "label": "Type of organism", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Prokaryotes: use of GeneMarkS for gene finding (default)", "", false], ["Eukaryote: use of GeneMark-ES for gene finding, Barrnap for ribosomal RNA genes prediction, BUSCO for conserved orthologs finding  (--eukaryote)", "--eukaryote", false], ["Fungus: use of GeneMark-ES for gene finding, Barrnap for ribosomal RNA genes prediction, BUSCO for conserved orthologs finding (--fungus)", "--fungus", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "min_identity", "argument": "--min-identity", "type": "float", "label": "Minimum IDY% considered as proper alignment", "help": "Alignments with IDY% worse than this value will be filtered. Note that all alignments with IDY% less than 80.0% will be filtered regardless of this threshold. ", "refresh_on_change": false, "min": 80.0, "max": 100.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "95.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "metagenome", "inputs": [{"model_class": "Conditional", "name": "ref", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "silva", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_ref_num", "argument": "--max-ref-num", "type": "integer", "label": "Maximum number of reference genomes (per each assembly) to download after searching in the SILVA databa", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "r", "argument": "-r", "type": "data", "label": "Reference genome", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "list", "inputs": [{"model_class": "TextToolParameter", "name": "references_list", "argument": "--references-list", "type": "text", "label": "Comma-separated list of reference genomes", "help": "MetaQUAST will search for these references in the NCBI database and will download the found ones", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "origin", "argument": null, "type": "select", "label": "Reference genome", "help": "If no reference genomes is provided, the tool will try to identify genome content of the metagenome. By default, it will align contigs to SILVA 16S rRNA database, i.e. FASTA file containing small subunit ribosomal RNA sequences to identify genomes. The reference genomes for the chosen genomes are downloaded from the NCBI database. After that, Quast is run on all of them. Reference genomes with low genome fraction (less than 10%) are removed. The usual MetaQUAST analysis continues with the remaining references.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "silva", "options": [["From SILVA database", "silva", true], ["From history", "history", false], ["From a list", "list", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "reuse_combined_alignments", "argument": "--reuse-combined-alignments", "type": "boolean", "label": "Reuse the alignments on the combined reference", "help": "Reuse the alignments on the combined reference in the subsequent runs per separate references. That is, the alignment procedure is performed only once (for all assemblies against the combined reference) and does NOT executed for each subgroups of contigs against the corresponding separate reference genomes. In each separate reference run, all precomputed assembly alignments for other references are simply ignored", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--reuse-combined-alignments", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "min_identity", "argument": "--min-identity", "type": "float", "label": "Minimum IDY% considered as proper alignment", "help": "Alignments with IDY% worse than this value will be filtered. Note that all alignments with IDY% less than 80.0% will be filtered regardless of this threshold. ", "refresh_on_change": false, "min": 80.0, "max": 100.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "90.0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "type", "argument": null, "type": "select", "label": "Type of assembly", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "genome", "options": [["Genome", "genome", false], ["Metagenome", "metagenome", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "min_contig", "argument": "--min-contig", "type": "integer", "label": "Lower threshold for a contig length (in bp)", "help": "Shorter contigs won't be taken into account", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "split_scaffolds", "argument": "--split-scaffolds", "type": "boolean", "label": "Are assemblies scaffolds rather than contigs?", "help": "QUAST will add split versions of assemblies to the comparison. Assemblies are split by continuous fragments of N's of length >= 10. If broken version is equal to the original assembly (i.e. nothing was split) it is not included in the comparison.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--split-scaffolds", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "large", "argument": "--large", "type": "boolean", "label": "Is genome large (> 100 Mbp)?", "help": "Use optimal parameters for evaluation of large genomes. Affects speed and accuracy. In particular, imposes --eukaryote --min-contig 3000 --min-alignment 500 --extensive-mis-size 7000 (can be overridden manually with the corresponding options). In addition, this mode tries to identify misassemblies caused by transposable elements and exclude them from the number of misassemblies.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--large", "falsevalue": ""}, {"model_class": "Section", "name": "genes", "type": "section", "title": "Genes", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "gene_finding", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "--gene-finding", "inputs": [{"model_class": "TextToolParameter", "name": "gene_thresholds", "argument": "--gene-thresholds", "type": "text", "label": "Comma-separated list of thresholds (in bp) for gene lengths to find with a finding tool", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0,300,1500,3000", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "--mgm", "inputs": []}, {"model_class": "ConditionalWhen", "value": "--glimmer", "inputs": [{"model_class": "TextToolParameter", "name": "gene_thresholds", "argument": "--gene-thresholds", "type": "text", "label": "Comma-separated list of thresholds (in bp) for gene lengths to find with a finding tool", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0,300,1500,3000", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "tool", "argument": null, "type": "select", "label": "Tool for gene prediction", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["Don't predict genes", "none", false], ["GeneMarkS if prokaryotes or GeneMark-ES if eukaryotes or fungi", "--gene-finding", false], ["MetaGeneMark, specially for metagenomic assembly", "--mgm", false], ["Glimmer", "--glimmer", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "rna_finding", "argument": "--rna-finding", "type": "boolean", "label": "Enables ribosomal RNA gene finding?", "help": "By default, we assume that the genome is prokaryotic, and Barrnap uses the bacterial database for rRNA prediction. If the genome is eukaryotic (fungal), use --eukaryote (--fungus) option to force Barrnap to work with the eukaryotic (fungal) database. ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--rna-finding", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "conserved_genes_finding", "argument": "--conserved-genes-finding", "type": "boolean", "label": "Enables search for Universal Single-Copy Orthologs using BUSCO?", "help": "By default, we assume that the genome is prokaryotic, and BUSCO uses the bacterial database of orthologs. If the genome is eukaryotic (fungal), use --eukaryote (--fungus) option to force BUSCO to work with the eukaryotic (fungal) database. ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--conserved-genes-finding", "falsevalue": ""}]}, {"model_class": "Section", "name": "alignments", "type": "section", "title": "Alignments", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "use_all_alignments", "argument": "--use-all-alignments", "type": "boolean", "label": "Use all alignments as in QUAST v.1.*. to compute genome fraction, # genomic features, # operons metrics?", "help": "By default, QUAST v.2.0 and higher filters out ambiguous and redundant alignments, keeping only one alignment per contig (or one set of non-overlapping or slightly overlapping alignments)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--use-all-alignments", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "min_alignment", "argument": "--min-alignment", "type": "integer", "label": "Minimum length of alignment", "help": "Alignments shorter than this value will be filtered. Note that all alignments shorter than 65 bp will be filtered regardless of this threshold.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "65", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "ambiguity_usage", "argument": "--ambiguity-usage", "type": "select", "label": "How processing equally good alignments of a contig (probably repeats)?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "one", "options": [["Skip all such alignments", "none", false], ["Take only one (the very best one)", "one", true], ["Use all alignments. It can cause a significant increase of # mismatches (repeats are almost always inexact due to accumulated SNPs, indels, etc.). It is useful for metagenomic assemblies where ambiguous alignments might represent homologous sequences of different strains", "all", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "ambiguity_score", "argument": "--ambiguity-score", "type": "float", "label": "Score S for defining equally good alignments of a single contig", "help": "All alignments are sorted by decreasing LEN \u00d7 IDY% value. All alignments with LEN \u00d7 IDY% less than S \u00d7 best(LEN \u00d7 IDY%) are discarded. ", "refresh_on_change": false, "min": 0.8, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.99", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "fragmented", "argument": "--fragmented", "type": "boolean", "label": "Fragmented reference genome", "help": "Reference genome is fragmented (e.g. a scaffold reference). QUAST will try to detect misassemblies caused by the fragmentation and mark them fake (will be excluded from misassemblies). Note: QUAST will not detect misassemblies caused by the linear representation of circular genome ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--fragmented", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "upper_bound_assembly", "argument": "--upper-bound-assembly", "type": "boolean", "label": "Simulate upper bound assembly", "help": "Simulate upper bound assembly based on the reference genome and a given set reads (mate-pairs or long reads, such as Pacbio SMRT/Oxford Nanopore, are REQUIRED). This assembly is added to the comparison and could be useful for estimating the upper bounds of completeness and contiguity that theoretically can be reached by assembly software from this particular set of reads. The concept is based on the fact that the reference genome cannot be completely reconstructed from raw reads due to long genomic repeats and low covered regions.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--upper-bound-assembly", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "upper_bound_min_con", "argument": "--upper-bound-min-con", "type": "integer", "label": "Minimal number of 'connecting reads' needed for joining upper bound contigs into a scaffold", "help": "This is important for a realistic estimation of genome assembly fragmentation due to long repeats. The default values is 2 for mate-pairs and 1 for long reads (PacBio or Nanopore libraries)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "local_mis_size", "argument": "--local-mis-size", "type": "integer", "label": "Minimal local misassembly size", "help": "Lower threshold for the local misassembly size. Shorter inconsistencies are considered as (long) indels. The default value is 200 bp. Note that the threshold should be equal to or lower than minimal extensive misassembly size, which is 1000 bp by default", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "200", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "advanced", "type": "section", "title": "Advanced options", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "contig_thresholds", "argument": "--contig-thresholds", "type": "text", "label": "Comma-separated list of contig length thresholds (in bp)", "help": "Used in # contigs \u2265 x and total length (\u2265 x) metrics", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0,1000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "strict_NA", "argument": "--strict-NA", "type": "boolean", "label": "Break contigs at every misassembly event (including local ones) to compute NAx and NGAx statistics?", "help": "By default, QUAST breaks contigs only at extensive misassemblies (not local ones).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--strict-NA", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "extensive_mis_size", "argument": "--extensive-mis-size", "type": "integer", "label": "Lower threshold for the relocation size (gap or overlap size between left and right flanking sequence)", "help": "Shorter relocations are considered as local misassemblies. It does not affect other types of extensive misassemblies (inversions and translocations). The default value is 1000 bp. Note that the threshold should be greater than maximum indel length which is 85 bp.", "refresh_on_change": false, "min": 85, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "scaffold_gap_max_size", "argument": "--scaffold-gap-max-size", "type": "integer", "label": "Max allowed scaffold gap length difference for detecting corresponding type of misassemblies", "help": "Longer inconsistencies are considered as relocations and thus, counted as extensive misassemblies. The default value is 10000 bp. Note that the threshold make sense only if it is greater than extensive misassembly size", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "unaligned_part_size", "argument": "--unaligned-part-size", "type": "integer", "label": "Lower threshold for detecting partially unaligned contigs", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "skip_unaligned_mis_contigs", "argument": "--skip-unaligned-mis-contigs", "type": "boolean", "label": "Distinguish contigs with more than 50% unaligned bases as a separate group of contigs?", "help": "By default, QUAST breaks contigs only at extensive misassemblies (not local ones).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--skip-unaligned-mis-contigs"}, {"model_class": "IntegerToolParameter", "name": "fragmented_max_indent", "argument": "--fragmented-max-indent", "type": "integer", "label": "Fragment max indent", "help": "Mark translocation as fake if both alignments are located no further than N bases from the ends of the reference fragments. The value should be less than extensive misassembly size.Default value is 50. Note: requires --fragmented option", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "report_all_metrics", "argument": "--report-all-metrics", "type": "boolean", "label": "Report all metrics", "help": "Keep all quality metrics in the main report. Usually, all not-relevant metrics are not included in the report, e.g., reference-based metrics in the no-reference mode. Also, if metric values are undefined for all input assemblies, the metric is removed from the report", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--report-all-metrics", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "x_for_Nx", "argument": "--x-for-Nx", "type": "integer", "label": "Report Nx, Lx, etc metrics for specific value of 'x'", "help": "Value of 'x' for Nx, Lx, NGx, NGAx, etc metrics reported in addition to N50, L50, NG50, NGA50, etc", "refresh_on_change": false, "min": 0, "max": 100, "optional": false, "hidden": false, "is_dynamic": false, "value": "90", "area": false, "datalist": []}]}, {"model_class": "SelectToolParameter", "name": "output_files", "argument": null, "type": "select", "label": "Output files", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "html", "options": [["HTML reports", "html", true], ["PDF reports", "pdf", false], ["Tabular reports", "tabular", false], ["Log file", "log", false], ["Key metric summary (metagenome mode)", "summary", false], ["Krona charts (metagenome mode without reference genomes)", "krona", false]], "display": "checkboxes", "multiple": true, "textable": false}], "outputs": [{"model_class": "ToolOutputCollection", "name": "metrics_tabular", "format": null, "label": "${tool.name} on ${on_string}: Tabular reports for key metrics", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "tabular", "visible": false, "assign_primary_output": false, "directory": "outputdir/summary/TSV/", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<designation>.+).tsv", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "metrics_pdf", "format": null, "label": "${tool.name} on ${on_string}: PDF reports for key metrics", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "pdf", "visible": false, "assign_primary_output": false, "directory": "outputdir/summary/PDF/", "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<designation>.+).pdf", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "report_tabular", "format": "tabular", "label": "${tool.name} on ${on_string}: tabular report", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outputdir/report.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "report_tabular_meta", "format": "tabular", "label": "${tool.name} on ${on_string}: tabular report for combined reference genome", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outputdir/combined_reference/report.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "report_html", "format": "html", "label": "${tool.name} on ${on_string}: HTML report", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outputdir/report.html", "edam_format": "format_2331", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "report_html_meta", "format": "html", "label": "${tool.name} on ${on_string}: HTML report for combined reference genome", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outputdir/combined_reference/report.html", "edam_format": "format_2331", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "report_pdf", "format": "pdf", "label": "${tool.name} on ${on_string}:  PDF report", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outputdir/report.pdf", "edam_format": "format_3508", "edam_data": "data_2968", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "log", "format": "txt", "label": "${tool.name} on ${on_string}: Log", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outputdir/quast.log", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "log_meta", "format": "txt", "label": "${tool.name} on ${on_string}: Log Meta", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outputdir/metaquast.log", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "mis_ass", "format": "tabular", "label": "${tool.name} on ${on_string}: Misassemblies report", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outputdir/contigs_reports/misassemblies_report.txt", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "unalign", "format": "tabular", "label": "${tool.name} on ${on_string}: Unaligned contigs report", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outputdir/contigs_reports/unaligned_report.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "kmers", "format": "tabular", "label": "${tool.name} on ${on_string}: K-mer-based metrics report", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outputdir/k_mer_stats/kmers_report.txt", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "circos_output", "format": "png", "label": "${tool.name} on ${on_string}: Circos plot", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outputdir/circos/circos.png", "edam_format": "format_3603", "edam_data": "data_2968", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "krona", "format": "html", "label": "${tool.name} on ${on_string}:  Krona chart", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "outputdir/krona_charts/*.html", "edam_format": "format_2331", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "assembly", "panel_section_name": "Assembly", "form_style": "regular"}