{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/progressivemauve/progressivemauve/2015_02_13.0", "name": "progressiveMauve", "version": "2015_02_13.0", "description": "constructs multiple genome alignments", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "progressivemauve", "owner": "iuc", "changeset_revision": "bdb752f3c6bb", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "sequences", "argument": null, "type": "data", "label": "Select sequences to align", "help": "in fasta format", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "apply_backbone", "argument": null, "type": "data", "label": "Apply Backbone", "help": "Read an existing sequence alignment in XMFA format and apply backbone statistics to it (--apply-backbone)", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["xmfa"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "island_gap_size", "argument": null, "type": "integer", "label": "Island gap size", "help": "Alignment gaps above this size in nucleotides are considered to be islands (--island-gap-size)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "disable_backbone", "argument": null, "type": "boolean", "label": "Disable backbone", "help": "Disable backbone detection (--disable-backbone)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--disable-backbone", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "output_guide_tree", "argument": null, "type": "boolean", "label": "Output Guide Tree", "help": "Write out the guide tree used for alignment to a file (--output-guide-tree)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "output_backbone", "argument": null, "type": "boolean", "label": "Output Backbone", "help": "Write out the backbone to a file (--backbone-output)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "mums", "argument": null, "type": "boolean", "label": "MUMs", "help": "Find MUMs only, do not attempt to determine locally collinear blocks (LCBs) (--mums)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--mums", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "seed_weight", "argument": null, "type": "integer", "label": "Seed weight", "help": "Use the specified seed weight for calculating initial anchors (--seed-weight)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "DataToolParameter", "name": "match_input", "argument": null, "type": "data", "label": "Match Input", "help": "Use specified match file instead of searching for matches (--match-input)", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "max_gapped_aligner_length", "argument": null, "type": "integer", "label": "Max gapped aligner length", "help": "Maximum number of base pairs to attempt aligning with the gapped aligner (--max-gapped-aligner-length)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "DataToolParameter", "name": "input_guide_tree", "argument": null, "type": "data", "label": "input-guide-tree", "help": "A phylogenetic guide tree in Newick format that describes the order in which sequences will be aligned (--input-guide-tree)", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["nhx"], "edam": {"edam_formats": ["format_1910"], "edam_data": ["data_0872"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "collinear", "argument": null, "type": "boolean", "label": "Collinear inputs", "help": "Assume that input sequences are collinear--they have no rearrangements (--collinear)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--collinear", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "scoring_scheme", "argument": null, "type": "select", "label": "Scoring scheme", "help": "Selects the anchoring score function. (--scoring-scheme)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "sp", "options": [["Extant sum-of-pairs (sp)", "sp", true], ["Sum-of-pairs + Ancestral (ancestral_sp)", "ancestral_sp", false], ["Ancestral (ancestral)", "ancestral", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "no_weight_scaling", "argument": null, "type": "boolean", "label": "No weight scaling", "help": "Don't scale LCB weights by conservation distance and breakpoint distance (--no-weight-scaling)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-weight-scaling", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "max_breakpoint_distance_scale", "argument": null, "type": "float", "label": "max-breakpoint-distance-scale", "help": "Set the maximum weight scaling by breakpoint distance. (--max-breakpoint-distance-scale)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "conservation_distance_scale", "argument": null, "type": "float", "label": "conservation-distance-scale", "help": "Scale conservation distances by this amount. (--conservation-distance-scale)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "skip_refinement", "argument": null, "type": "boolean", "label": "Skip refinement", "help": "Do not perform iterative refinement (--skip-refinement)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--skip-refinement", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "skip_gapped_alignment", "argument": null, "type": "boolean", "label": "Skip gapped alignment", "help": "Do not perform gapped alignment (--skip-gapped-alignment)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--skip-gapped-alignment", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "bp_dist_estimate_min_score", "argument": null, "type": "integer", "label": "BP dist estimate min score", "help": "Minimum LCB score for estimating pairwise breakpoint distance (--bp-dist-estimate-min-score)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "gap_open", "argument": null, "type": "integer", "label": "Gap open", "help": "Gap open penalty (--gap-open)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "repeat_penalty", "argument": null, "type": "select", "label": "Repeat penalty", "help": "Sets whether the repeat scores go negative or go to zero for highly repetitive sequences. (--repeat-penalty)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "negative", "options": [["Negative", "negative", true], ["Zero", "zero", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "gap_extend", "argument": null, "type": "integer", "label": "Gap extend", "help": "Gap extend penalty (--gap-extend)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "weight", "argument": null, "type": "integer", "label": "Weight", "help": "Minimum pairwise LCB score (--weight)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_scaled_penalty", "argument": null, "type": "integer", "label": "Min scaled penalty", "help": "Minimum breakpoint penalty after scaling the penalty by expected divergence (--min-scaled-penalty)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "hmm_p_go_homologous", "argument": null, "type": "float", "label": "HMM p go homologous", "help": "Probability of transitioning from the unrelated to the homologous state (--hmm-p-go-homologous)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1e-05", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "hmm_p_go_unrelated", "argument": null, "type": "float", "label": "HMM p go unrelated", "help": "Probability of transitioning from the homologous to the unrelated state (--hmm-p-go-unrelated)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "1e-09", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "hmm_identity", "argument": null, "type": "float", "label": "HMM identity", "help": "Expected level of sequence identity among pairs of sequences(--hmm-identity)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.7", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "seed_family", "argument": null, "type": "boolean", "label": "Seed family", "help": "Use a family of spaced seeds to improve sensitivity (--seed-family)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--seed-family", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "solid_seeds", "argument": null, "type": "boolean", "label": "Solid seeds", "help": "Use solid seeds. Do not permit substitutions in anchor matches. (--solid-seeds)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--solid-seeds", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "coding_seeds", "argument": null, "type": "boolean", "label": "Coding seeds", "help": "Use coding pattern seeds. Useful to generate matches coding regions with 3rd codon position degeneracy. (--coding-seeds)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--coding-seeds", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "no_recursion", "argument": null, "type": "boolean", "label": "No recursion", "help": "Disable recursive anchor search (--no-recursion)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-recursion", "falsevalue": ""}], "outputs": [{"model_class": "ToolOutput", "name": "output", "format": "xmfa", "label": "${tool.name} alignment of ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "output_guide_tree_file", "format": "nhx", "label": "${tool.name} alignment of ${on_string}: Guide tree", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1910", "edam_data": "data_0872", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "output_backbone_file", "format": "tabular", "label": "${tool.name} alignment of ${on_string}: Backbone", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "annotation", "panel_section_name": "Annotation", "form_style": "regular"}