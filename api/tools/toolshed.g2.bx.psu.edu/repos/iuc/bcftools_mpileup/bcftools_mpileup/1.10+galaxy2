{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/bcftools_mpileup/bcftools_mpileup/1.10+galaxy2", "name": "bcftools mpileup", "version": "1.10+galaxy2", "description": "Generate VCF or BCF containing genotype likelihoods for one or multiple alignment (BAM or CRAM) files", "labels": [], "edam_operations": ["operation_3227", "operation_2409"], "edam_topics": ["topic_3517", "topic_3516", "topic_2885", "topic_0199"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "bcftools", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "bcftools_mpileup", "owner": "iuc", "changeset_revision": "31ea13dfe5e6", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "input", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "input_bam", "argument": null, "type": "data", "label": "Input BAM/CRAM", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam", "cram"], "edam": {"edam_formats": ["format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "multiple", "inputs": [{"model_class": "DataToolParameter", "name": "input_bams", "argument": null, "type": "data", "label": "Input BAM/CRAMs", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam", "cram"], "edam": {"edam_formats": ["format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "input_number", "argument": null, "type": "select", "label": "Alignment Inputs", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "single", "options": [["Single BAM/CRAM", "single", false], ["Multiple BAM/CRAMs", "multiple", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "reference_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "cached", "inputs": [{"model_class": "SelectToolParameter", "name": "ref_file", "argument": null, "type": "select", "label": "Select reference genome", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "hg19", "options": [["Human (Homo sapiens): hg19", "hg19", false], ["Human (Homo sapiens): hg18 Full", "hg18full", false], ["Mouse (Mus musculus): mm10 Full", "mm10full", false], ["Mouse (Mus musculus): mm9 Full", "mm9full", false], ["Fly (Drosophila melanogaster): dm3 Full", "dm3full", false], ["Fly (Drosophila melanogaster): dm6 Full", "dm6full", false], ["Zebrafish Jul. 2010 (Zv9/danRer7) (danRer7)", "danRer7", false], ["Zebrafish Sep. 2014 (GRCz10/danRer10) (danRer10)", "danRer10", false], ["Arabidopsis thaliana (TAIR10)", "TAIR10", false], ["Mouse (Mus Musculus): mm9 Full", "mm9", false], ["Mouse (Mus musculus): mm9 with ERCC spike-in", "mm9_ERCC", false], ["Human Dec. 2013 (GRCh38/hg38) (hg38)", "hg38", false], ["Human (Homo sapiens): hg19 Canonical", "hg19canon", false], ["Human (Homo sapiens): hg19 Full", "hg19full", false], ["Mouse (Mus musculus): mm9 Canonical", "mm9canon", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "ref_file", "argument": null, "type": "data", "label": "Genome Reference", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "none", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "reference_source_selector", "argument": null, "type": "select", "label": "Choose the source for the reference genome", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "cached", "options": [["Locally cached", "cached", false], ["History", "history", false], ["No Reference", "none", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "sec_indel", "type": "section", "title": "Indel Calling", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "perform_indel_calling", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "perform_indel_calling_def", "inputs": []}, {"model_class": "ConditionalWhen", "value": "perform_indel_calling", "inputs": [{"model_class": "IntegerToolParameter", "name": "gap_open_sequencing_error_probability", "argument": null, "type": "integer", "label": "Phred-scaled gap open sequencing error probability", "help": "--open-prob; Reducing this value leads to more indel calls; default=40", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "40", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "gap_extension_sequencing_error_probability", "argument": null, "type": "integer", "label": "Phred-scaled gap extension sequencing error probability", "help": "--ext-prob;  Reducing this value leads to longer indels. default=20", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "coefficient_for_modeling_homopolymer_errors", "argument": null, "type": "integer", "label": "Coefficient for modeling homopolymer errors.", "help": "--tandem-qual; default=100", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "skip_indel_calling_above_sample_depth", "argument": null, "type": "integer", "label": "Skip INDEL calling if the average per-sample depth is above", "help": "--max-idepth; default=250", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "250", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minimum_gapped_reads_for_indel_candidates", "argument": null, "type": "integer", "label": "Minimum gapped reads for indel candidates", "help": "--min-ireads; default=1", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "open_seq_error_probability", "argument": null, "type": "integer", "label": "Phred-scaled gap open sequencing error probability", "help": "--open-prob; Reducing this value leads to more indel calls; default=40", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "40", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "minimum_gapped_read_fraction", "argument": null, "type": "float", "label": "Minimum fraction of gapped reads", "help": "--gap-frac; default=0.002", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.002", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "gapped_read_per_sample", "argument": null, "type": "boolean", "label": "Apply --min-ireads and --gap-frac values on a per-sample basis", "help": "--per-sample-mF;  by default both options are applied to reads pooled from all samples", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-p", "falsevalue": ""}, {"model_class": "Repeat", "name": "platform_list_repeat", "type": "repeat", "title": "Platform for INDEL candidates", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "platform_entry", "argument": null, "type": "text", "label": "Platform to use for INDEL candidates", "help": "It is recommended to collect indel candidates from sequencing technologies that have low indel error rate such as ILLUMINA", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "do_not_perform_indel_calling", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "perform_indel_calling_selector", "argument": null, "type": "select", "label": "Perform INDEL calling", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "perform_indel_calling_def", "options": [["Perform INDEL calling using default options", "perform_indel_calling_def", true], ["Perform INDEL calling and set advanced options", "perform_indel_calling", false], ["Do not perform INDEL calling", "do_not_perform_indel_calling", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Section", "name": "sec_filtering", "type": "section", "title": "Input Filtering Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "max_reads_per_bam", "argument": null, "type": "integer", "label": "Max reads per BAM", "help": "--max-depth; default=250", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "250", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "ignore_overlaps", "argument": null, "type": "boolean", "label": "Disable read-pair overlap detection", "help": "--ignore-overlaps", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-x", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "skip_anomalous_read_pairs", "argument": null, "type": "boolean", "label": "Do not skip anomalous read pairs in variant calling", "help": "--count-orphans", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-A", "falsevalue": ""}, {"model_class": "Conditional", "name": "filter_by_flags", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "filter", "inputs": [{"model_class": "SelectToolParameter", "name": "require_flags", "argument": null, "type": "select", "label": "Require", "help": "--incl-flags", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Read is paired", "1", false], ["Read is mapped in a proper pair", "2", false], ["The read is unmapped", "4", false], ["The mate is unmapped", "8", false], ["Read strand", "16", false], ["Mate strand", "32", false], ["Read is the first in a pair", "64", false], ["Read is the second in a pair", "128", false], ["The alignment or this read is not primary", "256", false], ["The read fails platform/vendor quality checks", "512", false], ["The read is a PCR or optical duplicate", "1024", false]], "display": "checkboxes", "multiple": true, "textable": false}, {"model_class": "SelectToolParameter", "name": "exclude_flags", "argument": null, "type": "select", "label": "Exclude", "help": "--excl-flags", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Read is paired", "1", false], ["Read is mapped in a proper pair", "2", false], ["The read is unmapped", "4", false], ["The mate is unmapped", "8", false], ["Read strand", "16", false], ["Mate strand", "32", false], ["Read is the first in a pair", "64", false], ["Read is the second in a pair", "128", false], ["The alignment or this read is not primary", "256", false], ["The read fails platform/vendor quality checks", "512", false], ["The read is a PCR or optical duplicate", "1024", false]], "display": "checkboxes", "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "nofilter", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "filter_flags", "argument": null, "type": "select", "label": "Set filter by flags", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "nofilter", "options": [["Do not filter", "nofilter", true], ["Filter by flags to exclude or require", "filter", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "quality", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "adjust", "inputs": [{"model_class": "SelectToolParameter", "name": "baq", "argument": null, "type": "select", "label": "per-Base Alignment Quality", "help": "--no-BAQ; BAQ is the Phred-scaled probability of a read base being misaligned. Applying this option greatly helps to reduce false SNPs caused by misalignments.--redo-BAQ; ignore existing BQ tags", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Default", "", false], ["disable BAQ (per-Base Alignment Quality) (no-BAQ)", "--no-BAQ", false], ["recalculate BAQ on the fly, ignore existing BQs (redo-BAQ)", "--redo-BAQ", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "coefficient_for_downgrading", "argument": null, "type": "integer", "label": "Coefficient for downgrading mapping quality for reads containing excessive mismatches", "help": "--adjust-MQ; Given a read with a phred-scaled probability q of being generated from the mapped position, the new mapping quality is about sqrt((INT-q)/INT)*INT. A zero value disables this functionality; if enabled, the recommended value for BWA is 50. default=0", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minimum_mapping_quality", "argument": null, "type": "integer", "label": "Minimum mapping quality for an alignment to be used", "help": "-min-MQ; default=0", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minimum_base_quality", "argument": null, "type": "integer", "label": "Minimum base quality for a base to be considered", "help": "--min-BQ; default=13", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "13", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "none", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "quality_settings", "argument": null, "type": "select", "label": "Quality Options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["defaults", "none", true], ["Set base and mapping quality options", "adjust", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "read_groups", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "read_groups", "argument": null, "type": "data", "label": "Text file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "rg_action", "argument": null, "type": "select", "label": "Include or Exclude these Read Groups", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Include", "", true], ["Exclude", "^", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "paste", "inputs": [{"model_class": "TextToolParameter", "name": "group_paste", "argument": null, "type": "text", "label": "Read groups", "help": "Paste a list of read groups", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": true, "datalist": []}, {"model_class": "SelectToolParameter", "name": "rg_action", "argument": null, "type": "select", "label": "Include or Exclude these Read Groups", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Include", "", true], ["Exclude", "^", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "ignore_rg", "inputs": []}, {"model_class": "ConditionalWhen", "value": "no_limit", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "read_groups_selector", "argument": null, "type": "select", "label": "Select read groups to include or exclude", "help": "--read-groups", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no_limit", "options": [["use defaults", "no_limit", true], ["From an uploaded text file", "history", false], ["Paste a list of read groups", "paste", false], ["Ignore RG tags. Treat all reads in one alignment file as one sample. ", "ignore_rg", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Section", "name": "sec_restrict", "type": "section", "title": "Restrict to", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "regions", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "__none__", "inputs": []}, {"model_class": "ConditionalWhen", "value": "regions", "inputs": [{"model_class": "Repeat", "name": "regions", "type": "repeat", "title": "Region Filter", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "chrom", "argument": null, "type": "text", "label": "Region chromosome", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "start", "argument": null, "type": "text", "label": "Region start position", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "stop", "argument": null, "type": "text", "label": "Region end position", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "regions_file", "inputs": [{"model_class": "DataToolParameter", "name": "regions_file", "argument": null, "type": "data", "label": "Regions File", "help": "restrict to Regions listed in a file", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "regions_src", "argument": null, "type": "select", "label": "Regions", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "__none__", "options": [["Do not restrict to Regions", "__none__", false], ["Specify one or more Region(s) directly", "regions", false], ["Operate on Regions specified in a history dataset", "regions_file", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "targets", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "__none__", "inputs": []}, {"model_class": "ConditionalWhen", "value": "targets", "inputs": [{"model_class": "Repeat", "name": "targets", "type": "repeat", "title": "Target Filter", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "chrom", "argument": null, "type": "text", "label": "Target chromosome", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "start", "argument": null, "type": "text", "label": "Target start position", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "stop", "argument": null, "type": "text", "label": "Target end position", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "BooleanToolParameter", "name": "invert_targets_file", "argument": null, "type": "boolean", "label": "Invert Targets", "help": "inverts the query/filtering applied by the targets", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "^", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "targets_file", "inputs": [{"model_class": "DataToolParameter", "name": "targets_file", "argument": null, "type": "data", "label": "Targets File", "help": "restrict to Targets listed in a file", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "invert_targets_file", "argument": null, "type": "boolean", "label": "Invert Targets", "help": "inverts the query/filtering applied by the targets", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "^", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "targets_src", "argument": null, "type": "select", "label": "Targets", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "__none__", "options": [["Do not restrict to Targets", "__none__", false], ["Specify one or more Target(s) directly", "targets", false], ["Operate on Targets specified in a history dataset", "targets_file", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Section", "name": "sec_subset", "type": "section", "title": "Subset Options", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "samples", "argument": "--samples", "type": "text", "label": "Samples", "help": "Comma separated list of samples to annotate (or exclude)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "invert_samples", "argument": null, "type": "boolean", "label": "Invert Samples", "help": "Inverts the query/filtering applied by Samples (adds \"^\" prefix to exclude)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "^", "falsevalue": ""}, {"model_class": "DataToolParameter", "name": "samples_file", "argument": "--samples_file", "type": "data", "label": "Samples file", "help": "File of samples to include", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "invert_samples_file", "argument": null, "type": "boolean", "label": "Invert Samples file", "help": "inverts the query/filtering applied by Samples file", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "^", "falsevalue": ""}]}, {"model_class": "Section", "name": "sec_output_options", "type": "section", "title": "Output options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "output_tags", "argument": null, "type": "select", "label": "Optional tags to output", "help": "--output-tags", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["DP (Number of high-quality bases)", "DP", false], ["AD (Allelic depth)", "AD", false], ["ADF (Allelic depth on the forward strand)", "ADF", false], ["ADR (Allelic depth on the reverse strand)", "ADR", false], ["INFO/AD (Allelic depth)", "INFO/AD", false], ["INFO/ADF (Allelic depth on the forward strand)", "INFO/ADF", false], ["INFO/ADR (Allelic depth on the reverse strand)", "INFO/ADR", false], ["SP (Phred-scaled strand bias P-value)", "SP", false], ["DV (Number of high-quality non-reference bases)", "DV", false], ["DP4 (Number of high-quality ref-forward, ref-reverse, alt-forward and alt-reverse bases)", "DP4", false], ["DRP (Number of high-quality bases for each observed allele)", "DPR", false], ["INFO/DPR (Number of high-quality bases for each observed allele)", "INFO/DPR", false]], "display": "checkboxes", "multiple": true, "textable": false}, {"model_class": "TextToolParameter", "name": "gvcf", "argument": null, "type": "text", "label": "gVCF blocks of homozygous REF calls", "help": "output gVCF blocks of homozygous REF calls, with depth (DP) ranges specified by the list of integers. For example, passing 5,15 will group sites into two types of gVCF blocks, the first with minimum per-sample DP from the interval [5,15) and the latter with minimum depth 15 or more. In this example, sites with minimum per-sample depth less than 5 will be printed as separate records, outside of gVCF blocks.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "SelectToolParameter", "name": "output_type", "argument": null, "type": "select", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "b", "options": [["compressed BCF", "b", false], ["uncompressed VCF", "v", false]], "display": null, "multiple": false, "textable": false}], "outputs": [{"model_class": "ToolOutput", "name": "output_file", "format": "vcf", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3016", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "variant_calling", "panel_section_name": "Variant Calling", "form_style": "regular"}