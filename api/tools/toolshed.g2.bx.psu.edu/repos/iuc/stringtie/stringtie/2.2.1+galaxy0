{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.2.1+galaxy0", "name": "StringTie", "version": "2.2.1+galaxy0", "description": "transcript assembly and quantification", "labels": [], "edam_operations": ["operation_3680", "operation_3258"], "edam_topics": ["topic_3308", "topic_3170"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "stringtie", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "stringtie", "owner": "iuc", "changeset_revision": "914cfcba0ec8", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "input_options", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "short_reads", "inputs": [{"model_class": "DataToolParameter", "name": "input_bam", "argument": null, "type": "data", "label": "Input short mapped reads", "help": "Input BAM/SAM/CRAM file containing the short reads you want to assemble into transcripts", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["sam", "bam", "cram"], "edam": {"edam_formats": ["format_2573", "format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "long_reads", "inputs": [{"model_class": "DataToolParameter", "name": "input_bam", "argument": null, "type": "data", "label": "Input long mapped reads", "help": "Input BAM/SAM/CRAM file containing the long reads you want to assemble into transcripts", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["sam", "bam", "cram"], "edam": {"edam_formats": ["format_2573", "format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "error_splice", "argument": "-E", "type": "integer", "label": "Window around possibly erroneous splice sites", "help": "This option allows to define window around possibly erroneous splice sites from long reads to look out for correct splice sites. Default: 25", "refresh_on_change": false, "min": 0, "max": 50, "optional": false, "hidden": false, "is_dynamic": false, "value": "25", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "mixed_reads", "inputs": [{"model_class": "DataToolParameter", "name": "input_bam_short", "argument": null, "type": "data", "label": "Input short mapped reads", "help": "Input BAM/SAM/CRAM file containing the short reads you want to assemble into transcripts", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["sam", "bam", "cram"], "edam": {"edam_formats": ["format_2573", "format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_bam_long", "argument": null, "type": "data", "label": "Input long mapped reads", "help": "Input BAM/SAM/CRAM file containing the long reads you want to assemble into transcripts", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["sam", "bam", "cram"], "edam": {"edam_formats": ["format_2573", "format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "error_splice", "argument": "-E", "type": "integer", "label": "Window around possibly erroneous splice sites", "help": "This option allows to define window around possibly erroneous splice sites from long reads to look out for correct splice sites. Default: 25", "refresh_on_change": false, "min": 0, "max": 50, "optional": false, "hidden": false, "is_dynamic": false, "value": "25", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "input_mode", "argument": null, "type": "select", "label": "Input options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "short_reads", "options": [["Short reads", "short_reads", false], ["Long reads", "long_reads", false], ["Mixed mode: short and long reads", "mixed_reads", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "rna_strandness", "argument": null, "type": "select", "label": "Specify strand information", "help": "Select 'Forward (FR)' if your reads are from a forward-stranded library, 'Reverse (RF)' if your reads are from a reverse-stranded library, or 'Unstranded' if your reads are not from a stranded library. See Help section below for more information. Default: Unstranded", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Unstranded", "", true], ["Forward (FR)", "--fr", false], ["Reverse (RF)", "--rf", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "guide", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "Conditional", "name": "guide_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "cached", "inputs": [{"model_class": "SelectToolParameter", "name": "ref_builtin", "argument": null, "type": "select", "label": "Use a built-in GTF", "help": "If the GTF file for your transcriptome of interest is not listed, contact your Galaxy administrator", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "ref_hist", "argument": null, "type": "data", "label": "GTF/GFF3 dataset to guide assembly", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gtf", "gff3"], "edam": {"edam_formats": ["format_2306", "format_1975"], "edam_data": ["data_1255", "data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "guide_gff_select", "argument": null, "type": "select", "label": "Reference file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "cached", "options": [["Use a built-in file", "cached", true], ["Use a file from history", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "input_estimation", "argument": "-e", "type": "boolean", "label": "Use Reference transcripts only?", "help": "Limit the processing of read alignments to only estimate and output the assembled transcripts matching the reference transcripts given with the -G option. With this option, read bundles with no reference transcripts (novel transcripts) will be entirely skipped, which may provide a considerable speed boost when the given set of reference transcripts is limited to a set of target genes, for example. Default: No", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-e", "falsevalue": ""}, {"model_class": "Conditional", "name": "special_outputs", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "ballgown", "inputs": []}, {"model_class": "ConditionalWhen", "value": "deseq2", "inputs": [{"model_class": "IntegerToolParameter", "name": "read_length", "argument": "--length", "type": "integer", "label": "Specify the average read length", "help": "Default: 75", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "75", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "clustering", "argument": "--cluster", "type": "boolean", "label": "Cluster overlapping genes", "help": "Choose whether to cluster genes with different gene IDs that overlap. Transcripts containing the geneID prefix will be ignored. Default: No", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--cluster", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "string", "argument": "--string", "type": "text", "label": "Prefix used for transcripts", "help": "If a different prefix was used for geneIDs assigned by StringTie than the default, specify it here. Only letters and numbers will be retained in this field. Default: MSTRG", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "key", "argument": "--key", "type": "text", "label": "Prefix for clustering", "help": "If clustering, what prefix to use for geneIDs assigned by this script. Only letters and numbers will be retained in this field. Default: prepG", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "special_outputs_select", "argument": null, "type": "select", "label": "Output files for differential expression?", "help": "Select to output additional files that can be used with Ballgown or DESeq2/edgeR. See Help section below for more information", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["Ballgown", "ballgown", false], ["DESeq2/edgeR/limma-voom", "deseq2", false], ["No additional output", "no", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "coverage_file", "argument": "-C", "type": "boolean", "label": "Output coverage file?", "help": "If StringTie is run with this option (requires -G), it returns a file with all the transcripts in the reference annotation that are fully covered, end to end, by reads. The output format is a GTF file as described below. Each line of the GTF corresponds to a gene or transcript in the reference annotation.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-C", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "use_guide", "argument": "-G", "type": "select", "label": "Use a reference file to guide assembly?", "help": "Use the reference annotation file (in GTF or GFF3 format) to guide the assembly process. The output will include expressed reference transcripts as well as any novel transcripts that are assembled. This option is required by option -e (Use Reference transcripts only), see below.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["Use reference GTF/GFF3", "yes", false], ["Do not use reference GTF/GFF3", "no", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "adv", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "abundance_estimation", "argument": "-A", "type": "boolean", "label": "Output gene abundance estimation file?", "help": "If selected, gene abundances will be reported in a tab-delimited file, see below for more information", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-A", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "omit_sequences", "argument": "-x", "type": "text", "label": "Do not assemble any transcripts on these reference sequence(s)", "help": "Ignore all read alignments (and thus do not attempt to perform transcript assembly) on the specified reference sequences. This parameter can be a single reference sequence name (e.g. chrM) or a comma-delimited list of sequence names (e.g. chrM,chrX,chrY). This can speed up StringTie especially in the case of excluding the mitochondrial genome, whose genes may have very high coverage in some cases, even though they may be of no interest for a particular RNA-Seq analysis. The reference sequence names are case sensitive, they must match identically the names of chromosomes/contigs of the target genome against which the RNA-Seq reads were aligned in the first place.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "name_prefix", "argument": "-l", "type": "text", "label": "Name prefix for output transcripts", "help": "This prefix will be added to the name of the transcripts that are output. Only letters and numbers will be retained in this field. Default: STRG", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "fraction", "argument": "-f", "type": "float", "label": "Minimum isoform fraction", "help": "Sets the minimum isoform abundance of the predicted transcripts as a fraction of the most abundant transcript assembled at a given locus. Lower abundance transcripts are often artifacts of incompletely spliced precursors of processed transcripts. Default: 0.15", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.15", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_tlen", "argument": "-m", "type": "integer", "label": "Minimum assembled transcript length", "help": "Sets the minimum length allowed for the predicted transcripts. Default: 200", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "200", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_anchor_len", "argument": "-a", "type": "integer", "label": "Minimum anchor length for junctions", "help": "Junctions that don't have spliced reads that align across them with at least this amount of bases on both sides are filtered out. Default: 10", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_anchor_cov", "argument": "-j", "type": "integer", "label": "Minimum junction coverage", "help": "There should be at least this many spliced reads that align across a junction (i.e. junction coverage). This number can be fractional, since some reads align in more than one place. A read that aligns in n places will contribute 1/n to the junction coverage. Default: 1", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_bundle_cov", "argument": "-c", "type": "integer", "label": "Minimum bundle reads per bp coverage to consider for assembly", "help": "Sets the minimum read coverage allowed for the predicted transcripts. A transcript with a lower coverage than this value is not shown in the output. Default: 2", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "bdist", "argument": "-g", "type": "integer", "label": "Gap between read mappings triggering a new bundle", "help": "Minimum locus gap separation value. Reads that are mapped closer than this distance are merged together in the same processing bundle. Default: 50 (bp)", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "bundle_fraction", "argument": "-M", "type": "float", "label": "Fraction of bundle allowed to be covered by multi-hit reads", "help": "Sets the maximum fraction of muliple-location-mapped reads that are allowed to be present at a given locus. Default: 0.95", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.95", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "disable_trimming", "argument": "-t", "type": "boolean", "label": "Disable trimming of predicted transcripts based on coverage", "help": "This parameter disables trimming at the ends of the assembled transcripts. By default StringTie adjusts the predicted transcript's start and/or stop coordinates based on sudden drops in coverage of the assembled transcript. Default: No", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-t", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "multi_mapping", "argument": "-u", "type": "boolean", "label": "Disable multi-mapping correction", "help": "Default: No", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-u", "falsevalue": ""}, {"model_class": "DataToolParameter", "name": "point_features", "argument": null, "type": "data", "label": "Input point-features dataset", "help": "Loads a list of point-features from a text feature file to guide the transcriptome assembly. Accepted point features are transcription start sites (TSS) and polyadenylation sites (CPAS). There are four tab-delimited columns in the feature file. The first three define the location of the point feature on the cromosome (sequence name, coordinate and strand), and the last is the type of the feature (TSS or CPAS).", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "outputs": [{"model_class": "ToolOutput", "name": "output_gtf", "format": "gtf", "label": "${tool.name} on ${on_string}: Assembled transcripts", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2306", "edam_data": "data_1255", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "gene_abundance_estimation", "format": "tabular", "label": "${tool.name} on ${on_string}: Gene abundance estimates", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "coverage", "format": "gtf", "label": "${tool.name} on ${on_string}: Coverage", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2306", "edam_data": "data_1255", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "exon_expression", "format": "tabular", "label": "${tool.name} on ${on_string}: exon-level expression measurements", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "special_de_output/sample1/e_data.ctab", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "intron_expression", "format": "tabular", "label": "${tool.name} on ${on_string}: intron-level expression measurements", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "special_de_output/sample1/i_data.ctab", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "transcript_expression", "format": "tabular", "label": "${tool.name} on ${on_string}: transcript-level expression measurements", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "special_de_output/sample1/t_data.ctab", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "exon_transcript_mapping", "format": "tabular", "label": "${tool.name} on ${on_string}: exon to transcript mapping", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "special_de_output/sample1/e2t.ctab", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "intron_transcript_mapping", "format": "tabular", "label": "${tool.name} on ${on_string}: intron to transcript mapping", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "special_de_output/sample1/i2t.ctab", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "gene_counts", "format": "tabular", "label": "${tool.name} on ${on_string}: Gene counts", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "special_de_output/sample1/gene_counts.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "transcript_counts", "format": "tabular", "label": "${tool.name} on ${on_string}: Transcript counts", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "special_de_output/sample1/transcript_counts.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "legend", "format": "tabular", "label": "${tool.name} on ${on_string}: legend", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "special_de_output/sample1/legend.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "rna_analysis", "panel_section_name": "RNA Analysis", "form_style": "regular"}