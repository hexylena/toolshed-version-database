{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/goeckslab/pycaret_compare/pycaret_compare/3.3.2+0", "name": "PyCaret Model Comparison", "version": "3.3.2+0", "description": "compares different machine learning models on a dataset using PyCaret. Do feature analyses using Random Forest and LightGBM.", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "pycaret_compare", "owner": "goeckslab", "changeset_revision": "009b18a75dc3", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input_file", "argument": null, "type": "data", "label": "Train Dataset (CSV or TSV)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["csv", "tabular"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "test_file", "argument": null, "type": "data", "label": "Test Dataset (CSV or TSV)", "help": "If a test set is not provided,          the selected training set will be split into training, validation, and test sets.          If a test set is provided, the training set will only be split into training and validation sets.          BTW, cross-validation is always applied by default.", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["csv", "tabular"], "edam": {"edam_formats": ["format_3475", "format_3475"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "ColumnListParameter", "name": "target_feature", "argument": null, "type": "data_column", "label": "Select the target column:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false, "data_ref": "input_file", "numerical": false}, {"model_class": "Conditional", "name": "model_selection", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "classification", "inputs": [{"model_class": "SelectToolParameter", "name": "classification_models", "argument": null, "type": "select", "label": "Only Select Classification Models if you don't want to compare all models", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Logistic Regression", "lr", false], ["K Neighbors Classifier", "knn", false], ["Naive Bayes", "nb", false], ["Decision Tree Classifier", "dt", false], ["SVM - Linear Kernel", "svm", false], ["SVM - Radial Kernel", "rbfsvm", false], ["Gaussian Process Classifier", "gpc", false], ["MLP Classifier", "mlp", false], ["Ridge Classifier", "ridge", false], ["Random Forest Classifier", "rf", false], ["Quadratic Discriminant Analysis", "qda", false], ["Ada Boost Classifier", "ada", false], ["Gradient Boosting Classifier", "gbc", false], ["Linear Discriminant Analysis", "lda", false], ["Extra Trees Classifier", "et", false], ["Extreme Gradient Boosting", "xgboost", false], ["Light Gradient Boosting Machine", "lightgbm", false], ["CatBoost Classifier", "catboost", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "regression", "inputs": [{"model_class": "SelectToolParameter", "name": "regression_models", "argument": null, "type": "select", "label": "Only Select Regression Models if you don't want to compare all models", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Linear Regression", "lr", false], ["Lasso Regression", "lasso", false], ["Ridge Regression", "ridge", false], ["Elastic Net", "en", false], ["Least Angle Regression", "lar", false], ["Lasso Least Angle Regression", "llar", false], ["Orthogonal Matching Pursuit", "omp", false], ["Bayesian Ridge", "br", false], ["Automatic Relevance Determination", "ard", false], ["Passive Aggressive Regressor", "par", false], ["Random Sample Consensus", "ransac", false], ["TheilSen Regressor", "tr", false], ["Huber Regressor", "huber", false], ["Kernel Ridge", "kr", false], ["Support Vector Regression", "svm", false], ["K Neighbors Regressor", "knn", false], ["Decision Tree Regressor", "dt", false], ["Random Forest Regressor", "rf", false], ["Extra Trees Regressor", "et", false], ["AdaBoost Regressor", "ada", false], ["Gradient Boosting Regressor", "gbr", false], ["MLP Regressor", "mlp", false], ["Extreme Gradient Boosting", "xgboost", false], ["Light Gradient Boosting Machine", "lightgbm", false], ["CatBoost Regressor", "catboost", false]], "display": null, "multiple": true, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "model_type", "argument": null, "type": "select", "label": "Task", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "classification", "options": [["classification", "classification", false], ["regression", "regression", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "random_seed", "argument": null, "type": "integer", "label": "Random Seed", "help": "Random seed for reproducibility.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "42", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "advanced_settings", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "FloatToolParameter", "name": "train_size", "argument": null, "type": "float", "label": "Train Size", "help": "Proportion of the dataset to include in the train split.", "refresh_on_change": false, "min": 0.1, "max": 0.9, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.7", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "normalize", "argument": null, "type": "boolean", "label": "Normalize Data", "help": "Whether to normalize data before training.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "feature_selection", "argument": null, "type": "boolean", "label": "Feature Selection", "help": "Whether to perform feature selection.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "Conditional", "name": "cross_validation", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "IntegerToolParameter", "name": "cross_validation_folds", "argument": null, "type": "integer", "label": "Cross Validation Folds", "help": "Number of folds to use for cross-validation. Default: 10", "refresh_on_change": false, "min": 2, "max": 20, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "enable_cross_validation", "argument": null, "type": "select", "label": "Enable Cross Validation?", "help": "Select whether to enable cross-validation. Default: Yes", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "true", "options": [["No", "false", false], ["Yes", "true", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "remove_outliers", "argument": null, "type": "boolean", "label": "Remove Outliers", "help": "Whether to remove outliers from the dataset before training. Default: False", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "remove_multicollinearity", "argument": null, "type": "boolean", "label": "Remove Multicollinearity", "help": "Whether to remove multicollinear features before training. Default: False", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "polynomial_features", "argument": null, "type": "boolean", "label": "Polynomial Features", "help": "Whether to create polynomial features before training. Default: False", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "fix_imbalance", "argument": null, "type": "boolean", "label": "Fix Imbalance", "help": "ONLY for classfication! Whether to use SMOTE or similar methods to fix imbalance in the dataset. Default: False", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "customize_defaults", "argument": null, "type": "select", "label": "Customize Default Settings?", "help": "Select yes if you want to customize the default settings of the experiment.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["No", "false", true], ["Yes", "true", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "model", "format": "h5", "label": "${tool.name} best model on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "pycaret_model.h5", "edam_format": "format_3590", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "comparison_result", "format": "html", "label": "${tool.name} Comparison result on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "comparison_result.html", "edam_format": "format_2331", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "best_model_csv", "format": "csv", "label": "${tool.name} The prams of the best model on ${on_string}", "hidden": true, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "best_model.csv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "machine_learning", "panel_section_name": "Machine Learning", "form_style": "regular"}