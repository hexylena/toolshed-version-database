{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/hepcat72/vcfsamplecompare/vcfsamplecompare/2.013+galaxy2", "name": "vcfsamplecompare", "version": "2.013+galaxy2", "description": "sort/filter variants that differ between sample groups", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "vcfsamplecompare", "owner": "hepcat72", "changeset_revision": "2260dedc4765", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "infile", "argument": "-i", "type": "data", "label": "VCF file", "help": "A VCF file that has more than 1 sample column.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["vcf"], "edam": {"edam_formats": ["format_3016"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"hda": [], "hdca": []}}, {"model_class": "Repeat", "name": "rep_comparisons", "type": "repeat", "title": "Sample Comparison", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "groupone", "argument": null, "type": "text", "label": "Sample Group 1", "help": "Space delimited list of sample names (exactly as they appear in the column headers of the VCF file), e.g. 'wt1 wt2 wt3'.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minone", "argument": null, "type": "integer", "label": "Minimum size of Sample Group 1", "help": "The minimum size of sample group 1 must be an integer between 1 and the number of samples in sample group 1.  The minimum of 1 of the 2 sample groups must represent a majority of that group (to produce meaningful results).  Use-case: If you have 3 wild type replicate samples in group 1 and you want to find at least 2 of 10 mutant samples from group 2 that differ from all of the wildtype samples, you would specify `-d 3` for group 1 and `-d 2` for group 2", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "grouptwo", "argument": null, "type": "text", "label": "Sample Group 2", "help": "Space delimited list of sample names (exactly as they appear in the column headers of the VCF file), e.g. 'mutant1 mutant2 mutant3'.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "mintwo", "argument": null, "type": "integer", "label": "Minimum size of Sample Group 2", "help": "The minimum size of sample group 2 must be an integer between 1 and the number of samples in sample group 2.  The minimum of 1 of the 2 sample groups must represent a majority of that group (to produce meaningful results).  Use-case: If you have 3 wild type replicate samples in group 1 and you want to find at least 2 of 10 mutant samples from group 2 that differ from all of the wildtype samples, you would specify `-d 3` for group 1 and `-d 2` for group 2", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "FloatToolParameter", "name": "obsrat", "argument": "-a", "type": "float", "label": "Allelic frequency difference gap", "help": "A decimal value between 0.0 and 1.0 (inclusive) indicating the minimum difference in the observation ratio averages of a particular variant state (e.g. 'AO/DP') in the sample groups being compared.  Not used in genotype mode.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.6", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "genotypemode", "argument": "--genotype|--nogenotype", "type": "select", "label": "Comparison mode", "help": "The basis for the degree of difference between the 2 sample groups can be either the genotype calls or allelic frequency (i.e. observation ratios (AO/DP)).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "--genotype", "options": [["Genotype calls", "--genotype", true], ["Allelic Frequencies", "--nogenotype", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "filtermode", "argument": "--filter|--nofilter", "type": "select", "label": "Comparison mode", "help": "Filtering will omit rows based on the comparison mode.  If the comparison mode is based on genotype calls, the sample groups must not share any genotype calls in common.  If the comparison mode is allelic frequencies, the difference between the average observation ratios in the sample groups must be greater than (or equal to) the allelic frequency difference gap (-a).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "--filter", "options": [["Filter", "--filter", true], ["Do not filter", "--nofilter", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "growmode", "argument": "--grow|--nogrow", "type": "select", "label": "Grow mode", "help": "Sample groups will initially be greedily created using their minimum size (-d).  If the minimum sample group size is less than the number of samples available for a group, samples will be added when in grow mode (in a way consistent with the comparison mode).  If the comparison mode is based on genotype calls, as long as the sample groups do not share any genotype calls in common, samples will be greedily added to each group.  If the comparison mode is allelic frequencies, as long as the difference between the average observation ratios in the sample groups is greater than (or equal to) the allelic frequency difference gap (-a), samples will be greedily added to each group.  Note, grow mode may lower the sort order of a variant in allelic frequency mode.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "--grow", "options": [["Grow sample groups from the minimum size (-d)", "--grow", true], ["Do not grow sample groups", "--nogrow", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "HiddenToolParameter", "name": "header", "argument": "--header|--noheader", "type": "hidden", "label": "Header", "help": "", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": "--noheader"}], "outputs": [{"model_class": "ToolOutput", "name": "vcfoutfile", "format": "vcf", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3016", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "rvcfoutfile", "format": "tabular", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "ngs:snippy", "panel_section_name": "NGS:Snippy", "form_style": "regular"}