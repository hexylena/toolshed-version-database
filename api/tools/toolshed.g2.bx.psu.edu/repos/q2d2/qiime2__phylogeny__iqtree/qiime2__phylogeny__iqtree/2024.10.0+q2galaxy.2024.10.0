{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/q2d2/qiime2__phylogeny__iqtree/qiime2__phylogeny__iqtree/2024.10.0+q2galaxy.2024.10.0", "name": "qiime2 phylogeny iqtree", "version": "2024.10.0+q2galaxy.2024.10.0", "description": "Construct a phylogenetic tree with IQ-TREE.", "labels": [], "edam_operations": ["operation_0337", "operation_3460", "operation_3933", "operation_0324"], "edam_topics": ["topic_0084", "topic_3941", "topic_3697", "topic_3174"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "qiime2", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "qiime2__phylogeny__iqtree", "owner": "q2d2", "changeset_revision": "77c94392c3e8", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "alignment", "argument": null, "type": "data", "label": "alignment: FeatureData[AlignedSequence]", "help": "[required]  Aligned sequences to be used for phylogenetic reconstruction.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "extensions": ["qza"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "__q2galaxy__GUI__section__extra_opts__", "type": "section", "title": "Click here for additional options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "seed", "argument": null, "type": "integer", "label": "seed: Int", "help": "[optional]  Random number seed. If not set, program defaults will be used. See IQ-TREE manual for details.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_runs", "argument": null, "type": "integer", "label": "n_runs: Int % Range(1, None)", "help": "[default: 1]  Number of indepedent runs. Multiple  independent runs (e.g. 10) can outperform a single run in terms of likelihood maximisation.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "substitution_model", "argument": null, "type": "select", "label": "substitution_model: Str % Choices('JC', 'JC+I', 'JC+G', 'JC+I+G', 'JC+R2', 'JC+R3', 'JC+R4', 'JC+R5', 'JC+R6', 'JC+R7', 'JC+R8', 'JC+R9', 'JC+R10', 'F81', 'F81+I', 'F81+G', 'F81+I+G', 'F81+R2', 'F81+R3', 'F81+R4', 'F81+R5', 'F81+R6', 'F81+R7', 'F81+R8', 'F81+R9', 'F81+R10', 'K80', 'K80+I', 'K80+G', 'K80+I+G', 'K80+R2', 'K80+R3', 'K80+R4', 'K80+R5', 'K80+R6', 'K80+R7', 'K80+R8', 'K80+R9', 'K80+R10', 'HKY', 'HKY+I', 'HKY+G', 'HKY+I+G', 'HKY+R2', 'HKY+R3', 'HKY+R4', 'HKY+R5', 'HKY+R6', 'HKY+R7', 'HKY+R8', 'HKY+R9', 'HKY+R10', 'TNe', 'TNe+I', 'TNe+G', 'TNe+I+G', 'TNe+R2', 'TNe+R3', 'TNe+R4', 'TNe+R5', 'TNe+R6', 'TNe+R7', 'TNe+R8', 'TNe+R9', 'TNe+R10', 'TN', 'TN+I', 'TN+G', 'TN+I+G', 'TN+R2', 'TN+R3', 'TN+R4', 'TN+R5', 'TN+R6', 'TN+R7', 'TN+R8', 'TN+R9', 'TN+R10', 'K81', 'K81+I', 'K81+G', 'K81+I+G', 'K81+R2', 'K81+R3', 'K81+R4', 'K81+R5', 'K81+R6', 'K81+R7', 'K81+R8', 'K81+R9', 'K81+R10', 'K81u', 'K81u+I', 'K81u+G', 'K81u+I+G', 'K81u+R2', 'K81u+R3', 'K81u+R4', 'K81u+R5', 'K81u+R6', 'K81u+R7', 'K81u+R8', 'K81u+R9', 'K81u+R10', 'TPM2', 'TPM2+I', 'TPM2+G', 'TPM2+I+G', 'TPM2+R2', 'TPM2+R3', 'TPM2+R4', 'TPM2+R5', 'TPM2+R6', 'TPM2+R7', 'TPM2+R8', 'TPM2+R9', 'TPM2+R10', 'TPM2u', 'TPM2u+I', 'TPM2u+G', 'TPM2u+I+G', 'TPM2u+R2', 'TPM2u+R3', 'TPM2u+R4', 'TPM2u+R5', 'TPM2u+R6', 'TPM2u+R7', 'TPM2u+R8', 'TPM2u+R9', 'TPM2u+R10', 'TPM3', 'TPM3+I', 'TPM3+G', 'TPM3+I+G', 'TPM3+R2', 'TPM3+R3', 'TPM3+R4', 'TPM3+R5', 'TPM3+R6', 'TPM3+R7', 'TPM3+R8', 'TPM3+R9', 'TPM3+R10', 'TPM3u', 'TPM3u+I', 'TPM3u+G', 'TPM3u+I+G', 'TPM3u+R2', 'TPM3u+R3', 'TPM3u+R4', 'TPM3u+R5', 'TPM3u+R6', 'TPM3u+R7', 'TPM3u+R8', 'TPM3u+R9', 'TPM3u+R10', 'TIMe', 'TIMe+I', 'TIMe+G', 'TIMe+I+G', 'TIMe+R2', 'TIMe+R3', 'TIMe+R4', 'TIMe+R5', 'TIMe+R6', 'TIMe+R7', 'TIMe+R8', 'TIMe+R9', 'TIMe+R10', 'TIM', 'TIM+I', 'TIM+G', 'TIM+I+G', 'TIM+R2', 'TIM+R3', 'TIM+R4', 'TIM+R5', 'TIM+R6', 'TIM+R7', 'TIM+R8', 'TIM+R9', 'TIM+R10', 'TIM2e', 'TIM2e+I', 'TIM2e+G', 'TIM2e+I+G', 'TIM2e+R2', 'TIM2e+R3', 'TIM2e+R4', 'TIM2e+R5', 'TIM2e+R6', 'TIM2e+R7', 'TIM2e+R8', 'TIM2e+R9', 'TIM2e+R10', 'TIM2', 'TIM2+I', 'TIM2+G', 'TIM2+I+G', 'TIM2+R2', 'TIM2+R3', 'TIM2+R4', 'TIM2+R5', 'TIM2+R6', 'TIM2+R7', 'TIM2+R8', 'TIM2+R9', 'TIM2+R10', 'TIM3e', 'TIM3e+I', 'TIM3e+G', 'TIM3e+I+G', 'TIM3e+R2', 'TIM3e+R3', 'TIM3e+R4', 'TIM3e+R5', 'TIM3e+R6', 'TIM3e+R7', 'TIM3e+R8', 'TIM3e+R9', 'TIM3e+R10', 'TIM3', 'TIM3+I', 'TIM3+G', 'TIM3+I+G', 'TIM3+R2', 'TIM3+R3', 'TIM3+R4', 'TIM3+R5', 'TIM3+R6', 'TIM3+R7', 'TIM3+R8', 'TIM3+R9', 'TIM3+R10', 'TVMe', 'TVMe+I', 'TVMe+G', 'TVMe+I+G', 'TVMe+R2', 'TVMe+R3', 'TVMe+R4', 'TVMe+R5', 'TVMe+R6', 'TVMe+R7', 'TVMe+R8', 'TVMe+R9', 'TVMe+R10', 'TVM', 'TVM+I', 'TVM+G', 'TVM+I+G', 'TVM+R2', 'TVM+R3', 'TVM+R4', 'TVM+R5', 'TVM+R6', 'TVM+R7', 'TVM+R8', 'TVM+R9', 'TVM+R10', 'SYM', 'SYM+I', 'SYM+G', 'SYM+I+G', 'SYM+R2', 'SYM+R3', 'SYM+R4', 'SYM+R5', 'SYM+R6', 'SYM+R7', 'SYM+R8', 'SYM+R9', 'SYM+R10', 'GTR', 'GTR+I', 'GTR+G', 'GTR+I+G', 'GTR+R2', 'GTR+R3', 'GTR+R4', 'GTR+R5', 'GTR+R6', 'GTR+R7', 'GTR+R8', 'GTR+R9', 'GTR+R10', 'MFP', 'TEST')", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "MFP", "options": [["JC", "JC", false], ["JC+I", "JC+I", false], ["JC+G", "JC+G", false], ["JC+I+G", "JC+I+G", false], ["JC+R2", "JC+R2", false], ["JC+R3", "JC+R3", false], ["JC+R4", "JC+R4", false], ["JC+R5", "JC+R5", false], ["JC+R6", "JC+R6", false], ["JC+R7", "JC+R7", false], ["JC+R8", "JC+R8", false], ["JC+R9", "JC+R9", false], ["JC+R10", "JC+R10", false], ["F81", "F81", false], ["F81+I", "F81+I", false], ["F81+G", "F81+G", false], ["F81+I+G", "F81+I+G", false], ["F81+R2", "F81+R2", false], ["F81+R3", "F81+R3", false], ["F81+R4", "F81+R4", false], ["F81+R5", "F81+R5", false], ["F81+R6", "F81+R6", false], ["F81+R7", "F81+R7", false], ["F81+R8", "F81+R8", false], ["F81+R9", "F81+R9", false], ["F81+R10", "F81+R10", false], ["K80", "K80", false], ["K80+I", "K80+I", false], ["K80+G", "K80+G", false], ["K80+I+G", "K80+I+G", false], ["K80+R2", "K80+R2", false], ["K80+R3", "K80+R3", false], ["K80+R4", "K80+R4", false], ["K80+R5", "K80+R5", false], ["K80+R6", "K80+R6", false], ["K80+R7", "K80+R7", false], ["K80+R8", "K80+R8", false], ["K80+R9", "K80+R9", false], ["K80+R10", "K80+R10", false], ["HKY", "HKY", false], ["HKY+I", "HKY+I", false], ["HKY+G", "HKY+G", false], ["HKY+I+G", "HKY+I+G", false], ["HKY+R2", "HKY+R2", false], ["HKY+R3", "HKY+R3", false], ["HKY+R4", "HKY+R4", false], ["HKY+R5", "HKY+R5", false], ["HKY+R6", "HKY+R6", false], ["HKY+R7", "HKY+R7", false], ["HKY+R8", "HKY+R8", false], ["HKY+R9", "HKY+R9", false], ["HKY+R10", "HKY+R10", false], ["TNe", "TNe", false], ["TNe+I", "TNe+I", false], ["TNe+G", "TNe+G", false], ["TNe+I+G", "TNe+I+G", false], ["TNe+R2", "TNe+R2", false], ["TNe+R3", "TNe+R3", false], ["TNe+R4", "TNe+R4", false], ["TNe+R5", "TNe+R5", false], ["TNe+R6", "TNe+R6", false], ["TNe+R7", "TNe+R7", false], ["TNe+R8", "TNe+R8", false], ["TNe+R9", "TNe+R9", false], ["TNe+R10", "TNe+R10", false], ["TN", "TN", false], ["TN+I", "TN+I", false], ["TN+G", "TN+G", false], ["TN+I+G", "TN+I+G", false], ["TN+R2", "TN+R2", false], ["TN+R3", "TN+R3", false], ["TN+R4", "TN+R4", false], ["TN+R5", "TN+R5", false], ["TN+R6", "TN+R6", false], ["TN+R7", "TN+R7", false], ["TN+R8", "TN+R8", false], ["TN+R9", "TN+R9", false], ["TN+R10", "TN+R10", false], ["K81", "K81", false], ["K81+I", "K81+I", false], ["K81+G", "K81+G", false], ["K81+I+G", "K81+I+G", false], ["K81+R2", "K81+R2", false], ["K81+R3", "K81+R3", false], ["K81+R4", "K81+R4", false], ["K81+R5", "K81+R5", false], ["K81+R6", "K81+R6", false], ["K81+R7", "K81+R7", false], ["K81+R8", "K81+R8", false], ["K81+R9", "K81+R9", false], ["K81+R10", "K81+R10", false], ["K81u", "K81u", false], ["K81u+I", "K81u+I", false], ["K81u+G", "K81u+G", false], ["K81u+I+G", "K81u+I+G", false], ["K81u+R2", "K81u+R2", false], ["K81u+R3", "K81u+R3", false], ["K81u+R4", "K81u+R4", false], ["K81u+R5", "K81u+R5", false], ["K81u+R6", "K81u+R6", false], ["K81u+R7", "K81u+R7", false], ["K81u+R8", "K81u+R8", false], ["K81u+R9", "K81u+R9", false], ["K81u+R10", "K81u+R10", false], ["TPM2", "TPM2", false], ["TPM2+I", "TPM2+I", false], ["TPM2+G", "TPM2+G", false], ["TPM2+I+G", "TPM2+I+G", false], ["TPM2+R2", "TPM2+R2", false], ["TPM2+R3", "TPM2+R3", false], ["TPM2+R4", "TPM2+R4", false], ["TPM2+R5", "TPM2+R5", false], ["TPM2+R6", "TPM2+R6", false], ["TPM2+R7", "TPM2+R7", false], ["TPM2+R8", "TPM2+R8", false], ["TPM2+R9", "TPM2+R9", false], ["TPM2+R10", "TPM2+R10", false], ["TPM2u", "TPM2u", false], ["TPM2u+I", "TPM2u+I", false], ["TPM2u+G", "TPM2u+G", false], ["TPM2u+I+G", "TPM2u+I+G", false], ["TPM2u+R2", "TPM2u+R2", false], ["TPM2u+R3", "TPM2u+R3", false], ["TPM2u+R4", "TPM2u+R4", false], ["TPM2u+R5", "TPM2u+R5", false], ["TPM2u+R6", "TPM2u+R6", false], ["TPM2u+R7", "TPM2u+R7", false], ["TPM2u+R8", "TPM2u+R8", false], ["TPM2u+R9", "TPM2u+R9", false], ["TPM2u+R10", "TPM2u+R10", false], ["TPM3", "TPM3", false], ["TPM3+I", "TPM3+I", false], ["TPM3+G", "TPM3+G", false], ["TPM3+I+G", "TPM3+I+G", false], ["TPM3+R2", "TPM3+R2", false], ["TPM3+R3", "TPM3+R3", false], ["TPM3+R4", "TPM3+R4", false], ["TPM3+R5", "TPM3+R5", false], ["TPM3+R6", "TPM3+R6", false], ["TPM3+R7", "TPM3+R7", false], ["TPM3+R8", "TPM3+R8", false], ["TPM3+R9", "TPM3+R9", false], ["TPM3+R10", "TPM3+R10", false], ["TPM3u", "TPM3u", false], ["TPM3u+I", "TPM3u+I", false], ["TPM3u+G", "TPM3u+G", false], ["TPM3u+I+G", "TPM3u+I+G", false], ["TPM3u+R2", "TPM3u+R2", false], ["TPM3u+R3", "TPM3u+R3", false], ["TPM3u+R4", "TPM3u+R4", false], ["TPM3u+R5", "TPM3u+R5", false], ["TPM3u+R6", "TPM3u+R6", false], ["TPM3u+R7", "TPM3u+R7", false], ["TPM3u+R8", "TPM3u+R8", false], ["TPM3u+R9", "TPM3u+R9", false], ["TPM3u+R10", "TPM3u+R10", false], ["TIMe", "TIMe", false], ["TIMe+I", "TIMe+I", false], ["TIMe+G", "TIMe+G", false], ["TIMe+I+G", "TIMe+I+G", false], ["TIMe+R2", "TIMe+R2", false], ["TIMe+R3", "TIMe+R3", false], ["TIMe+R4", "TIMe+R4", false], ["TIMe+R5", "TIMe+R5", false], ["TIMe+R6", "TIMe+R6", false], ["TIMe+R7", "TIMe+R7", false], ["TIMe+R8", "TIMe+R8", false], ["TIMe+R9", "TIMe+R9", false], ["TIMe+R10", "TIMe+R10", false], ["TIM", "TIM", false], ["TIM+I", "TIM+I", false], ["TIM+G", "TIM+G", false], ["TIM+I+G", "TIM+I+G", false], ["TIM+R2", "TIM+R2", false], ["TIM+R3", "TIM+R3", false], ["TIM+R4", "TIM+R4", false], ["TIM+R5", "TIM+R5", false], ["TIM+R6", "TIM+R6", false], ["TIM+R7", "TIM+R7", false], ["TIM+R8", "TIM+R8", false], ["TIM+R9", "TIM+R9", false], ["TIM+R10", "TIM+R10", false], ["TIM2e", "TIM2e", false], ["TIM2e+I", "TIM2e+I", false], ["TIM2e+G", "TIM2e+G", false], ["TIM2e+I+G", "TIM2e+I+G", false], ["TIM2e+R2", "TIM2e+R2", false], ["TIM2e+R3", "TIM2e+R3", false], ["TIM2e+R4", "TIM2e+R4", false], ["TIM2e+R5", "TIM2e+R5", false], ["TIM2e+R6", "TIM2e+R6", false], ["TIM2e+R7", "TIM2e+R7", false], ["TIM2e+R8", "TIM2e+R8", false], ["TIM2e+R9", "TIM2e+R9", false], ["TIM2e+R10", "TIM2e+R10", false], ["TIM2", "TIM2", false], ["TIM2+I", "TIM2+I", false], ["TIM2+G", "TIM2+G", false], ["TIM2+I+G", "TIM2+I+G", false], ["TIM2+R2", "TIM2+R2", false], ["TIM2+R3", "TIM2+R3", false], ["TIM2+R4", "TIM2+R4", false], ["TIM2+R5", "TIM2+R5", false], ["TIM2+R6", "TIM2+R6", false], ["TIM2+R7", "TIM2+R7", false], ["TIM2+R8", "TIM2+R8", false], ["TIM2+R9", "TIM2+R9", false], ["TIM2+R10", "TIM2+R10", false], ["TIM3e", "TIM3e", false], ["TIM3e+I", "TIM3e+I", false], ["TIM3e+G", "TIM3e+G", false], ["TIM3e+I+G", "TIM3e+I+G", false], ["TIM3e+R2", "TIM3e+R2", false], ["TIM3e+R3", "TIM3e+R3", false], ["TIM3e+R4", "TIM3e+R4", false], ["TIM3e+R5", "TIM3e+R5", false], ["TIM3e+R6", "TIM3e+R6", false], ["TIM3e+R7", "TIM3e+R7", false], ["TIM3e+R8", "TIM3e+R8", false], ["TIM3e+R9", "TIM3e+R9", false], ["TIM3e+R10", "TIM3e+R10", false], ["TIM3", "TIM3", false], ["TIM3+I", "TIM3+I", false], ["TIM3+G", "TIM3+G", false], ["TIM3+I+G", "TIM3+I+G", false], ["TIM3+R2", "TIM3+R2", false], ["TIM3+R3", "TIM3+R3", false], ["TIM3+R4", "TIM3+R4", false], ["TIM3+R5", "TIM3+R5", false], ["TIM3+R6", "TIM3+R6", false], ["TIM3+R7", "TIM3+R7", false], ["TIM3+R8", "TIM3+R8", false], ["TIM3+R9", "TIM3+R9", false], ["TIM3+R10", "TIM3+R10", false], ["TVMe", "TVMe", false], ["TVMe+I", "TVMe+I", false], ["TVMe+G", "TVMe+G", false], ["TVMe+I+G", "TVMe+I+G", false], ["TVMe+R2", "TVMe+R2", false], ["TVMe+R3", "TVMe+R3", false], ["TVMe+R4", "TVMe+R4", false], ["TVMe+R5", "TVMe+R5", false], ["TVMe+R6", "TVMe+R6", false], ["TVMe+R7", "TVMe+R7", false], ["TVMe+R8", "TVMe+R8", false], ["TVMe+R9", "TVMe+R9", false], ["TVMe+R10", "TVMe+R10", false], ["TVM", "TVM", false], ["TVM+I", "TVM+I", false], ["TVM+G", "TVM+G", false], ["TVM+I+G", "TVM+I+G", false], ["TVM+R2", "TVM+R2", false], ["TVM+R3", "TVM+R3", false], ["TVM+R4", "TVM+R4", false], ["TVM+R5", "TVM+R5", false], ["TVM+R6", "TVM+R6", false], ["TVM+R7", "TVM+R7", false], ["TVM+R8", "TVM+R8", false], ["TVM+R9", "TVM+R9", false], ["TVM+R10", "TVM+R10", false], ["SYM", "SYM", false], ["SYM+I", "SYM+I", false], ["SYM+G", "SYM+G", false], ["SYM+I+G", "SYM+I+G", false], ["SYM+R2", "SYM+R2", false], ["SYM+R3", "SYM+R3", false], ["SYM+R4", "SYM+R4", false], ["SYM+R5", "SYM+R5", false], ["SYM+R6", "SYM+R6", false], ["SYM+R7", "SYM+R7", false], ["SYM+R8", "SYM+R8", false], ["SYM+R9", "SYM+R9", false], ["SYM+R10", "SYM+R10", false], ["GTR", "GTR", false], ["GTR+I", "GTR+I", false], ["GTR+G", "GTR+G", false], ["GTR+I+G", "GTR+I+G", false], ["GTR+R2", "GTR+R2", false], ["GTR+R3", "GTR+R3", false], ["GTR+R4", "GTR+R4", false], ["GTR+R5", "GTR+R5", false], ["GTR+R6", "GTR+R6", false], ["GTR+R7", "GTR+R7", false], ["GTR+R8", "GTR+R8", false], ["GTR+R9", "GTR+R9", false], ["GTR+R10", "GTR+R10", false], ["MFP", "MFP", true], ["TEST", "TEST", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "n_init_pars_trees", "argument": null, "type": "integer", "label": "n_init_pars_trees: Int % Range(1, None)", "help": "[optional]  Number of initial parsimony trees. If not set, program defaults will be used. See IQ-TREE manual for details.", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_top_init_trees", "argument": null, "type": "integer", "label": "n_top_init_trees: Int % Range(1, None)", "help": "[optional]  Number of top initial trees. If not set, program defaults will be used. See IQ-TREE manual for details.", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_best_retain_trees", "argument": null, "type": "integer", "label": "n_best_retain_trees: Int % Range(1, None)", "help": "[optional]  Number of best trees retained during search. If not set, program defaults will be used. See IQ-TREE manual for details.", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_iter", "argument": null, "type": "integer", "label": "n_iter: Int % Range(1, None)", "help": "[optional]  Fix number of iterations to stop. If not set, program defaults will be used. See IQ-TREE manual for details.", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "stop_iter", "argument": null, "type": "integer", "label": "stop_iter: Int % Range(1, None)", "help": "[optional]  Number of unsuccessful iterations to stop. If not set, program defaults will be used. See IQ-TREE manual for details.", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "perturb_nni_strength", "argument": null, "type": "float", "label": "perturb_nni_strength: Float % Range(0.01, 1.0)", "help": "[optional]  Perturbation strength for randomized NNI. If not set, program defaults will be used. See IQ-TREE manual for details.", "refresh_on_change": false, "min": 0.01, "max": 0.999999, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "spr_radius", "argument": null, "type": "integer", "label": "spr_radius: Int % Range(1, None)", "help": "[optional]  Radius for parsimony SPR search. If not set, program defaults will be used. See IQ-TREE manual for details.", "refresh_on_change": false, "min": 1, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "allnni", "argument": null, "type": "boolean", "label": "allnni: Bool", "help": "[default: No]  Perform more thorough NNI search.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "__q2galaxy__::literal::True", "falsevalue": "__q2galaxy__::literal::False"}, {"model_class": "BooleanToolParameter", "name": "fast", "argument": null, "type": "boolean", "label": "fast: Bool", "help": "[default: No]  Fast search to resemble FastTree.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "__q2galaxy__::literal::True", "falsevalue": "__q2galaxy__::literal::False"}, {"model_class": "IntegerToolParameter", "name": "alrt", "argument": null, "type": "integer", "label": "alrt: Int % Range(1000, None)", "help": "[optional]  Single branch test method. Number of bootstrap replicates to perform an SH-like approximate likelihood ratio test (SH-aLRT). Minimum of 1000 replicates is required. Can be used with other 'single branch test methods'. Values reported in the order of: alrt, lbp, abayes.", "refresh_on_change": false, "min": 1000, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "abayes", "argument": null, "type": "boolean", "label": "abayes: Bool", "help": "[default: No]  Single branch test method. Approximate Bayes test. Can be used with other 'single branch test methods'. Values reported in the order of: alrt, lbp, abayes.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "__q2galaxy__::literal::True", "falsevalue": "__q2galaxy__::literal::False"}, {"model_class": "IntegerToolParameter", "name": "lbp", "argument": null, "type": "integer", "label": "lbp: Int % Range(1000, None)", "help": "[optional]  Single branch test method. Number of bootstrap replicates to perform a fast local bootstrap probability method. Minimum of 1000 replicates is required. Can be used with other 'single branch test methods'. Values reported in the order of: alrt, lbp, abayes.", "refresh_on_change": false, "min": 1000, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "safe", "argument": null, "type": "boolean", "label": "safe: Bool", "help": "[default: No]  Safe likelihood kernel to avoid numerical underflow.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "__q2galaxy__::literal::True", "falsevalue": "__q2galaxy__::literal::False"}]}], "outputs": [{"model_class": "ToolOutput", "name": "tree", "format": "qza", "label": "${tool.name} on ${on_string}: tree.qza", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "tree.qza", "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "qiime_2", "panel_section_name": "QIIME 2", "form_style": "regular"}