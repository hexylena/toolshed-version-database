{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16", "name": "Cutadapt", "version": "1.16", "description": "Remove adapter sequences from Fastq/Fasta", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "cutadapt", "owner": "lparsons", "changeset_revision": "8665bcc8b847", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "library", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/A file", "help": "Should be of datatype \"fastq.gz\" or \"fasta\"", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq.gz", "fastq", "fastqsanger", "fastqsanger.gz", "fastqsanger.bz2", "fasta"], "edam": {"edam_formats": ["format_1930", "format_1930", "format_1932", "format_1932", "format_1932", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "r1", "type": "section", "title": "Read 1 Options", "help": null, "expanded": true, "inputs": [{"model_class": "Repeat", "name": "adapters", "type": "repeat", "title": "3' (End) Adapters", "help": "Sequence of an adapter ligated to the 3' end (paired data: of the first read). The adapter and subsequent bases are trimmed. If a '$' character is appended ('anchoring'), the adapter is only found if it is a suffix of the read. To search for a linked adapter, separate the 2 sequences with 3 dots (ADAPTER1...ADAPTER2), see Help below.", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "adapter_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "adapter_name", "argument": null, "type": "text", "label": "Enter custom 3' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "adapter", "argument": "-a", "type": "text", "label": "Enter custom 3' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "adapter", "argument": "-a", "type": "select", "label": "Choose 3' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "adapter_source_list", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Repeat", "name": "front_adapters", "type": "repeat", "title": "5' (Front) Adapters", "help": "Sequence of an adapter ligated to the 5' end (paired data: of the first read). The adapter and any preceding bases are trimmed. Partial matches at the 5' end are allowed. If a '^' character is prepended ('anchoring'), the adapter is only found if it is a prefix of the read. To search for a linked adapter, separate the 2 sequences with 3 dots (ADAPTER1...ADAPTER2), see Help below.", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "front_adapter_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "front_adapter_name", "argument": null, "type": "text", "label": "Enter custom 5' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "front_adapter", "argument": "-g", "type": "text", "label": "Enter custom 5' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "front_adapter", "argument": "-g", "type": "select", "label": "Choose 5' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "front_adapter_source_list", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Repeat", "name": "anywhere_adapters", "type": "repeat", "title": "5' or 3' (Anywhere) Adapters", "help": "Sequence of an adapter that may be ligated to the 5' or 3' end (paired data: of the first read). Both types of matches as described under 3' und 5' Adapters are allowed. If the first base of the read is part of the match, the behavior is as with 5' Adapters, otherwise as with 3' Adapters. This option is mostly for rescuing failed library preparations - do not use if you know which end your adapter was ligated to!", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "anywhere_adapter_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "anywhere_adapter_name", "argument": null, "type": "text", "label": "Enter custom 5' or 3' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "anywhere_adapter", "argument": "-b", "type": "text", "label": "Enter custom 5' or 3' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "anywhere_adapter", "argument": "-b", "type": "select", "label": "Choose 5' or 3' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "anywhere_adapter_source_list", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "IntegerToolParameter", "name": "cut", "argument": "-u", "type": "integer", "label": "Cut bases from reads before adapter trimming", "help": "Remove bases from each read (first read only if paired). If positive, remove bases from the beginning. If negative, remove bases from the end. This is applied *before* adapter trimming.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "FASTQ/A file #1", "help": "Should be of datatype \"fastq.gz\"or \"fasta\"", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqsanger.gz", "fastqsanger.bz2", "fasta"], "edam": {"edam_formats": ["format_1932", "format_1932", "format_1932", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_2", "argument": null, "type": "data", "label": "FASTQ/A file #2", "help": "Should be of datatype \"fastq.gz\"or \"fasta\"", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqsanger.gz", "fastqsanger.bz2", "fasta"], "edam": {"edam_formats": ["format_1932", "format_1932", "format_1932", "format_1929"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "r1", "type": "section", "title": "Read 1 Options", "help": null, "expanded": true, "inputs": [{"model_class": "Repeat", "name": "adapters", "type": "repeat", "title": "3' (End) Adapters", "help": "Sequence of an adapter ligated to the 3' end (paired data: of the first read). The adapter and subsequent bases are trimmed. If a '$' character is appended ('anchoring'), the adapter is only found if it is a suffix of the read. To search for a linked adapter, separate the 2 sequences with 3 dots (ADAPTER1...ADAPTER2), see Help below.", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "adapter_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "adapter_name", "argument": null, "type": "text", "label": "Enter custom 3' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "adapter", "argument": "-a", "type": "text", "label": "Enter custom 3' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "adapter", "argument": "-a", "type": "select", "label": "Choose 3' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "adapter_source_list", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Repeat", "name": "front_adapters", "type": "repeat", "title": "5' (Front) Adapters", "help": "Sequence of an adapter ligated to the 5' end (paired data: of the first read). The adapter and any preceding bases are trimmed. Partial matches at the 5' end are allowed. If a '^' character is prepended ('anchoring'), the adapter is only found if it is a prefix of the read. To search for a linked adapter, separate the 2 sequences with 3 dots (ADAPTER1...ADAPTER2), see Help below.", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "front_adapter_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "front_adapter_name", "argument": null, "type": "text", "label": "Enter custom 5' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "front_adapter", "argument": "-g", "type": "text", "label": "Enter custom 5' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "front_adapter", "argument": "-g", "type": "select", "label": "Choose 5' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "front_adapter_source_list", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Repeat", "name": "anywhere_adapters", "type": "repeat", "title": "5' or 3' (Anywhere) Adapters", "help": "Sequence of an adapter that may be ligated to the 5' or 3' end (paired data: of the first read). Both types of matches as described under 3' und 5' Adapters are allowed. If the first base of the read is part of the match, the behavior is as with 5' Adapters, otherwise as with 3' Adapters. This option is mostly for rescuing failed library preparations - do not use if you know which end your adapter was ligated to!", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "anywhere_adapter_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "anywhere_adapter_name", "argument": null, "type": "text", "label": "Enter custom 5' or 3' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "anywhere_adapter", "argument": "-b", "type": "text", "label": "Enter custom 5' or 3' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "anywhere_adapter", "argument": "-b", "type": "select", "label": "Choose 5' or 3' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "anywhere_adapter_source_list", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "IntegerToolParameter", "name": "cut", "argument": "-u", "type": "integer", "label": "Cut bases from reads before adapter trimming", "help": "Remove bases from each read (first read only if paired). If positive, remove bases from the beginning. If negative, remove bases from the end. This is applied *before* adapter trimming.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "r2", "type": "section", "title": "Read 2 Options", "help": null, "expanded": true, "inputs": [{"model_class": "Repeat", "name": "adapters2", "type": "repeat", "title": "3' (End) Adapters", "help": "Sequence of an adapter ligated to the 3' end of the second read in each pair. The adapter and subsequent bases are trimmed. If a '$' character is appended ('anchoring'), the adapter is only found if it is a suffix of the read. To search for a linked adapter, separate the 2 sequences with 3 dots (ADAPTER1...ADAPTER2), see Help below.", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "adapter_source2", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "adapter_name2", "argument": null, "type": "text", "label": "Enter custom 3' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "adapter2", "argument": "-A", "type": "text", "label": "Enter custom 3' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "adapter2", "argument": "-A", "type": "select", "label": "Choose 3' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "adapter_source_list2", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Repeat", "name": "front_adapters2", "type": "repeat", "title": "5' (Front) Adapters", "help": "Sequence of an adapter ligated to the 5' end of the second read in each pair. The adapter and any preceding bases are trimmed. Partial matches at the 5' end are allowed. If a '^' character is prepended ('anchoring'), the adapter is only found if it is a prefix of the read. To search for a linked adapter, separate the 2 sequences with 3 dots (ADAPTER1...ADAPTER2), see Help below.", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "front_adapter_source2", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "front_adapter_name2", "argument": null, "type": "text", "label": "Enter custom 5' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "front_adapter2", "argument": "-G", "type": "text", "label": "Enter custom 5' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "front_adapter2", "argument": "-G", "type": "select", "label": "Choose 5' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "front_adapter_source_list2", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Repeat", "name": "anywhere_adapters2", "type": "repeat", "title": "5' or 3' (Anywhere) Adapters", "help": "Sequence of an adapter that may be ligated to the 5' or 3' end of the second read in each pair. Both types of matches as described under under 3' und 5' Adapters are allowed. If the first base of the read is part of the match, the behavior is as with 5' Adapters, otherwise as with 3' Adapters. This option is mostly for rescuing failed library preparations - do not use if you know which end your adapter was ligated to!", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "anywhere_adapter_source2", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "anywhere_adapter_name2", "argument": null, "type": "text", "label": "Enter custom 5' or 3' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "anywhere_adapter2", "argument": "-B", "type": "text", "label": "Enter custom 5' or 3' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "anywhere_adapter2", "argument": "-B", "type": "select", "label": "Choose 5' or 3' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "anywhere_adapter_source_list2", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "IntegerToolParameter", "name": "cut2", "argument": "-U", "type": "integer", "label": "Cut bases from the second read in each pair.", "help": "Remove bases from the beginning or end of each read before trimming adapters. If positive, the bases are removed from the beginning of each read. If negative, the bases are removed from the end of each read.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "paired_collection", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "input_1", "argument": null, "type": "data_collection", "label": "Paired Collection", "help": "Should be of datatype \"fastq.gz\" or \"fasta\"", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastqsanger", "fastqsanger.gz", "fastqsanger.bz2", "fasta"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}, {"model_class": "Section", "name": "r1", "type": "section", "title": "Read 1 Options", "help": null, "expanded": true, "inputs": [{"model_class": "Repeat", "name": "adapters", "type": "repeat", "title": "3' (End) Adapters", "help": "Sequence of an adapter ligated to the 3' end (paired data: of the first read). The adapter and subsequent bases are trimmed. If a '$' character is appended ('anchoring'), the adapter is only found if it is a suffix of the read. To search for a linked adapter, separate the 2 sequences with 3 dots (ADAPTER1...ADAPTER2), see Help below.", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "adapter_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "adapter_name", "argument": null, "type": "text", "label": "Enter custom 3' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "adapter", "argument": "-a", "type": "text", "label": "Enter custom 3' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "adapter", "argument": "-a", "type": "select", "label": "Choose 3' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "adapter_source_list", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Repeat", "name": "front_adapters", "type": "repeat", "title": "5' (Front) Adapters", "help": "Sequence of an adapter ligated to the 5' end (paired data: of the first read). The adapter and any preceding bases are trimmed. Partial matches at the 5' end are allowed. If a '^' character is prepended ('anchoring'), the adapter is only found if it is a prefix of the read. To search for a linked adapter, separate the 2 sequences with 3 dots (ADAPTER1...ADAPTER2), see Help below.", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "front_adapter_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "front_adapter_name", "argument": null, "type": "text", "label": "Enter custom 5' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "front_adapter", "argument": "-g", "type": "text", "label": "Enter custom 5' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "front_adapter", "argument": "-g", "type": "select", "label": "Choose 5' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "front_adapter_source_list", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Repeat", "name": "anywhere_adapters", "type": "repeat", "title": "5' or 3' (Anywhere) Adapters", "help": "Sequence of an adapter that may be ligated to the 5' or 3' end (paired data: of the first read). Both types of matches as described under 3' und 5' Adapters are allowed. If the first base of the read is part of the match, the behavior is as with 5' Adapters, otherwise as with 3' Adapters. This option is mostly for rescuing failed library preparations - do not use if you know which end your adapter was ligated to!", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "anywhere_adapter_source", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "anywhere_adapter_name", "argument": null, "type": "text", "label": "Enter custom 5' or 3' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "anywhere_adapter", "argument": "-b", "type": "text", "label": "Enter custom 5' or 3' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "anywhere_adapter", "argument": "-b", "type": "select", "label": "Choose 5' or 3' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "anywhere_adapter_source_list", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "IntegerToolParameter", "name": "cut", "argument": "-u", "type": "integer", "label": "Cut bases from reads before adapter trimming", "help": "Remove bases from each read (first read only if paired). If positive, remove bases from the beginning. If negative, remove bases from the end. This is applied *before* adapter trimming.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "r2", "type": "section", "title": "Read 2 Options", "help": null, "expanded": true, "inputs": [{"model_class": "Repeat", "name": "adapters2", "type": "repeat", "title": "3' (End) Adapters", "help": "Sequence of an adapter ligated to the 3' end of the second read in each pair. The adapter and subsequent bases are trimmed. If a '$' character is appended ('anchoring'), the adapter is only found if it is a suffix of the read. To search for a linked adapter, separate the 2 sequences with 3 dots (ADAPTER1...ADAPTER2), see Help below.", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "adapter_source2", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "adapter_name2", "argument": null, "type": "text", "label": "Enter custom 3' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "adapter2", "argument": "-A", "type": "text", "label": "Enter custom 3' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "adapter2", "argument": "-A", "type": "select", "label": "Choose 3' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "adapter_source_list2", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Repeat", "name": "front_adapters2", "type": "repeat", "title": "5' (Front) Adapters", "help": "Sequence of an adapter ligated to the 5' end of the second read in each pair. The adapter and any preceding bases are trimmed. Partial matches at the 5' end are allowed. If a '^' character is prepended ('anchoring'), the adapter is only found if it is a prefix of the read. To search for a linked adapter, separate the 2 sequences with 3 dots (ADAPTER1...ADAPTER2), see Help below.", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "front_adapter_source2", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "front_adapter_name2", "argument": null, "type": "text", "label": "Enter custom 5' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "front_adapter2", "argument": "-G", "type": "text", "label": "Enter custom 5' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "front_adapter2", "argument": "-G", "type": "select", "label": "Choose 5' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "front_adapter_source_list2", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Repeat", "name": "anywhere_adapters2", "type": "repeat", "title": "5' or 3' (Anywhere) Adapters", "help": "Sequence of an adapter that may be ligated to the 5' or 3' end of the second read in each pair. Both types of matches as described under under 3' und 5' Adapters are allowed. If the first base of the read is part of the match, the behavior is as with 5' Adapters, otherwise as with 3' Adapters. This option is mostly for rescuing failed library preparations - do not use if you know which end your adapter was ligated to!", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "Conditional", "name": "anywhere_adapter_source2", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "user", "inputs": [{"model_class": "TextToolParameter", "name": "anywhere_adapter_name2", "argument": null, "type": "text", "label": "Enter custom 5' or 3' adapter name (Optional)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "anywhere_adapter2", "argument": "-B", "type": "text", "label": "Enter custom 5' or 3' adapter sequence", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "AATTGGCC", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "builtin", "inputs": [{"model_class": "SelectToolParameter", "name": "anywhere_adapter2", "argument": "-B", "type": "select", "label": "Choose 5' or 3' adapter", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "TGTAGGCC", "options": [["Dummy-Adapter (do not use me)", "TGTAGGCC", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "anywhere_adapter_source_list2", "argument": null, "type": "select", "label": "Source", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "builtin", "options": [["Standard (select from the list below)", "builtin", true], ["Enter custom sequence", "user", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "IntegerToolParameter", "name": "cut2", "argument": "-U", "type": "integer", "label": "Cut bases from the second read in each pair.", "help": "Remove bases from the beginning or end of each read before trimming adapters. If positive, the bases are removed from the beginning of each read. If negative, the bases are removed from the end of each read.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "type", "argument": null, "type": "select", "label": "Single-end or Paired-end reads?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "single", "options": [["Single-end", "single", false], ["Paired-end", "paired", false], ["Paired-end Collection", "paired_collection", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "adapter_options", "type": "section", "title": "Adapter Options", "help": null, "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "error_rate", "argument": "--error-rate", "type": "float", "label": "Maximum error rate", "help": "Maximum allowed error rate (no. of errors divided by the length of the matching region).", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "no_indels", "argument": "--no-indels", "type": "boolean", "label": "Do not allow indels (Use ONLY with anchored 5' (front) adapters).", "help": "Do not allow indels in the alignments. That is, allow only mismatches. This option is currently only supported for anchored 5' adapters ('^ADAPTER') (default: both mismatches and indels are allowed).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-indels", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "count", "argument": "--times", "type": "integer", "label": "Match times", "help": "Try to remove adapters at most COUNT times. Useful when an adapter gets appended multiple times.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "overlap", "argument": "--overlap", "type": "integer", "label": "Minimum overlap length", "help": "Minimum overlap length. If the overlap between the adapter and the sequence is shorter than LENGTH, the read is not modified. This reduces the number of bases trimmed purely due to short random adapter matches.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "match_read_wildcards", "argument": "--match-read-wildcards", "type": "boolean", "label": "Match Read Wildcards", "help": "Allow 'N's in the read as matches to the adapter.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--match-read-wildcards", "falsevalue": ""}]}, {"model_class": "Section", "name": "filter_options", "type": "section", "title": "Filter Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "discard", "argument": "--discard-trimmed", "type": "boolean", "label": "Discard Trimmed Reads", "help": "Discard reads that contain the adapter instead of trimming them. Use the 'Minimum overlap length' option in order to avoid throwing away too many randomly matching reads!", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--discard", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "discard_untrimmed", "argument": "--discard_untrimmed", "type": "boolean", "label": "Discard Untrimmed Reads", "help": "Discard reads that do not contain the adapter.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--discard-untrimmed", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "min", "argument": "--minimum-length", "type": "integer", "label": "Minimum length", "help": "Discard trimmed reads that are shorter than LENGTH.  Reads that are too short even before adapter removal are also discarded. In colorspace, an initial primer is not counted. Value of 0 means no minimum length.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max", "argument": "--maximum-length", "type": "integer", "label": "Maximum length", "help": "Discard trimmed reads that are longer than LENGTH.  Reads that are too long even before adapter removal are also discarded. In colorspace, an initial primer is not counted. Value of 0 means no maximum length.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "no_trim", "argument": "--no-trim", "type": "boolean", "label": "Do not trim adapters", "help": "Match and redirect reads to output/untrimmed-output as usual, but don't remove the adapters (default: trim the adapters).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-trim", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "mask_adapter", "argument": "--mask-adapter", "type": "boolean", "label": "Mask Adapters", "help": "Mask adapter bases with 'N' instead of trimming them (default: trim adapters).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--mask-adapter", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "max_n", "argument": "--max-n", "type": "float", "label": "Max N", "help": "Discard reads with more than this number of 'N' bases. A number between 0 and 1 is interpreted as a fraction of the read length.", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "pair_filter", "argument": "--pair-filter", "type": "select", "label": "Pair filter", "help": "Which of the reads in a paired-end read have to match the filtering criterion in order for the pair to be filtered. Default: any", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "any", "options": [["any", "any", true], ["both", "both", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "Section", "name": "read_mod_options", "type": "section", "title": "Read Modification Options", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "quality_cutoff", "argument": "--quality-cutoff", "type": "text", "label": "Quality cutoff", "help": " Trim low-quality bases from 5' and/or 3' ends of each read before adapter removal. Applied to both reads if data is paired. If one value is given, only the 3' end is trimmed. If two comma-separated cutoffs are given, the 5' end is trimmed with the first cutoff, the 3' end with the second.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "nextseq_trim", "argument": "--nextseq-trim", "type": "integer", "label": "NextSeq trimming", "help": "Experimental option for quality trimming of NextSeq data. This is necessary because that machine cannot distinguish between G and reaching the end of the fragment (it encodes G as \u2018black\u2019). This option works like regular quality trimming (where one would use -q 20 instead), except that the qualities of G bases are ignored.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "trim_n", "argument": "--trim-n", "type": "boolean", "label": "Trim Ns", "help": "Trim N's on ends of reads.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--trim-n", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "prefix", "argument": "--prefix", "type": "text", "label": "Prefix", "help": "Add this prefix to read names", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "suffix", "argument": "--suffix", "type": "text", "label": "Suffix", "help": "Add this suffix to read names", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "strip_suffix", "argument": "--strip-suffix", "type": "text", "label": "Strip suffix", "help": "Remove this suffix from read names if present.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "length", "argument": "--length", "type": "integer", "label": "Length", "help": "Shorten reads to this length. This modification is applied after adapter trimming.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "length_tag", "argument": "--length-tag", "type": "text", "label": "Length Tag", "help": "Search for TAG followed by a decimal number in the name of the read (description/comment field of the FASTA or FASTQ file). Replace the decimal number with the correct length of the trimmed read. For example, use --length-tag 'length=' to search for fields like 'length=123'.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "Section", "name": "output_options", "type": "section", "title": "Output Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "report", "argument": null, "type": "boolean", "label": "Report", "help": "Cutadapt's per-adapter statistics.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "info_file", "argument": "--info-file", "type": "boolean", "label": "Info File", "help": "Write information about each read and its adapter matches to a file.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "rest_file", "argument": "--rest-file", "type": "boolean", "label": "Rest of Read", "help": "When the adapter matches in the middle of a read, write the rest (after the adapter) into a file.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "wildcard_file", "argument": "--wildcard-file", "type": "boolean", "label": "Wildcard File", "help": "When the adapter has wildcard bases ('N's) write adapter bases matching wildcard positions to file.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "too_short_file", "argument": "--too-short-output", "type": "boolean", "label": "Too Short Reads", "help": "Write reads that are too short (according to minimum length specified) to a file. (default: discard reads)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "too_long_file", "argument": "--too-long-output", "type": "boolean", "label": "Too Long Reads", "help": "Write reads that are too long (according to maximum length specified) to a file. (default: discard reads)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "untrimmed_file", "argument": "--untrimmed-output", "type": "boolean", "label": "Untrimmed Reads", "help": "Write reads that do not contain the adapter to a separate file, instead of writing them to the regular output file.  (default: output to same file as trimmed)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}], "outputs": [{"model_class": "ToolOutput", "name": "out1", "format": "data", "label": "${tool.name} on ${on_string}: Read 1 Output", "hidden": false, "output_type": "data", "format_source": "input_1", "default_identifier_source": "None", "metadata_source": "input_1", "parent": null, "count": 1, "from_work_dir": "out1*", "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "out2", "format": "data", "label": "${tool.name} on ${on_string}: Read 2 Output", "hidden": false, "output_type": "data", "format_source": "input_2", "default_identifier_source": "None", "metadata_source": "input_2", "parent": null, "count": 1, "from_work_dir": "out2*", "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "report", "format": "txt", "label": "${tool.name} on ${on_string}: Report", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "report.txt", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "info_file", "format": "data", "label": "${tool.name} on ${on_string}: Info File", "hidden": false, "output_type": "data", "format_source": "txt", "default_identifier_source": "None", "metadata_source": "input_1", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "rest_output", "format": "data", "label": "${tool.name} on ${on_string}: Rest of Reads (R1 only)", "hidden": false, "output_type": "data", "format_source": "input_1", "default_identifier_source": "None", "metadata_source": "input_1", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "wild_output", "format": "data", "label": "${tool.name} on ${on_string}: Wildcard File", "hidden": false, "output_type": "data", "format_source": "txt", "default_identifier_source": "None", "metadata_source": "input_1", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "untrimmed_output", "format": "data", "label": "${tool.name} on ${on_string}: Untrimmed Read 1", "hidden": false, "output_type": "data", "format_source": "input_1", "default_identifier_source": "None", "metadata_source": "input_1", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "untrimmed_paired_output", "format": "data", "label": "${tool.name} on ${on_string}: Untrimmed Read 2", "hidden": false, "output_type": "data", "format_source": "input_2", "default_identifier_source": "None", "metadata_source": "input_2", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "too_short_output", "format": "data", "label": "${tool.name} on ${on_string}: Too Short Read 1", "hidden": false, "output_type": "data", "format_source": "input_1", "default_identifier_source": "None", "metadata_source": "input_1", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "too_short_paired_output", "format": "data", "label": "${tool.name} on ${on_string}: Too Short Read 2", "hidden": false, "output_type": "data", "format_source": "input_2", "default_identifier_source": "None", "metadata_source": "input_2", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "too_long_output", "format": "data", "label": "${tool.name} on ${on_string}: Too Long Read 1", "hidden": false, "output_type": "data", "format_source": "input_1", "default_identifier_source": "None", "metadata_source": "input_1", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "too_long_paired_output", "format": "data", "label": "${tool.name} on ${on_string}: Too Long Read 2", "hidden": false, "output_type": "data", "format_source": "input_2", "default_identifier_source": "None", "metadata_source": "input_2", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "fasta_fastq", "panel_section_name": "FASTA/FASTQ", "form_style": "regular"}