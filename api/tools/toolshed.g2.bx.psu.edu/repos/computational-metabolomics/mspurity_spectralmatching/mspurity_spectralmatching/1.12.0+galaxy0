{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/computational-metabolomics/mspurity_spectralmatching/mspurity_spectralmatching/1.12.0+galaxy1", "name": "msPurity.spectralMatching", "version": "1.12.0+galaxy1", "description": "Perform spectral matching to MS/MS spectral libraries", "labels": [], "edam_operations": ["operation_3214"], "edam_topics": ["topic_0121", "topic_3520", "topic_0154"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "mspurity", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "mspurity_spectralmatching", "owner": "computational-metabolomics", "changeset_revision": "4db043151468", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Section", "name": "Query", "type": "section", "title": "Query spectra input and filters", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "q_dbPth_con", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "sqlite", "inputs": [{"model_class": "DataToolParameter", "name": "q_dbPth", "argument": "--q_dbPth", "type": "data", "label": "Query SQLite database", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["sqlite"], "edam": {"edam_formats": ["format_3621"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "local_config", "inputs": []}, {"model_class": "ConditionalWhen", "value": "msPurityData", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "q_dbPth_select", "argument": "--q_dbPth_select", "type": "select", "label": "Input", "help": "Query SQLite database - in the standard XCMS msPurity workflow - the output                     of msPurity.createDatabase should be used here. However any SQLite database                     following the schema of as https://bioconductor.org/packages/release/bioc/vignettes/msPurity/inst/doc/msPurity-spectral-database-vignette.html can be used as input", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "sqlite", "options": [["SQLite database of (LC)-MS/MS data", "sqlite", true], ["Locally configured SQLite, MySQL or PostgreSQL database", "local_config", true], ["Prepared database of MassBank, HMDB, LipidBlast and GNPS", "msPurityData", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "q_filters", "type": "section", "title": "Filters", "help": null, "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "q_ppmPrec", "argument": "--q_ppmPrec", "type": "float", "label": "ppm error of the precursor for spectra", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "q_ppmProd", "argument": "--q_ppmProd", "type": "float", "label": "ppm error of the product for spectra", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "q_raThres_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "FloatToolParameter", "name": "q_raThres", "argument": "--q_raThres", "type": "float", "label": "Relative abundance threshold", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "q_raThres_bool", "argument": null, "type": "boolean", "label": "Filter on relative abundance threshold?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "q_polarity_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "SelectToolParameter", "name": "q_polarity", "argument": "--q_polarity", "type": "select", "label": "Polarity", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Positive", "positive", false], ["Negative", "negative", false], ["NA", "NA", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "q_polarity_bool", "argument": null, "type": "boolean", "label": "Filter on polarity?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "q_purity_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "FloatToolParameter", "name": "q_purity", "argument": "--q_purity", "type": "float", "label": "Precursor ion purity threshold", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.6", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "q_purity_bool", "argument": null, "type": "boolean", "label": "Filter on precursor ion purity?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "q_xcmsGroups_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "q_xcmsGroups", "argument": "--q_xcmsGroups", "type": "text", "label": "XCMS group ids of spectra", "help": "comma seperated list of grpids (correspond to column 'grpid in c_peak_group'))                                 e.g '12,27,30'", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "q_xcmsGroups_bool", "argument": null, "type": "boolean", "label": "Filter on XCMS groups ids?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "q_pids_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "q_pids", "argument": "--q_pids", "type": "text", "label": "pids of spectra (correspond to column 'pid; in s_peak_meta)", "help": "comma seperated list of pids (correspond to column 'pid; in s_peak_meta))                                 e.g '3001,5561'", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "q_pids_bool", "argument": null, "type": "boolean", "label": "Filter on pids?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "q_rtrange_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "FloatToolParameter", "name": "q_rtrangeMin", "argument": "--q_rtrangeMin", "type": "float", "label": "Minimum retention time range (seconds)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "q_rtrangeMax", "argument": "--q_rtrangeMax", "type": "float", "label": "Maximum retention time range (seconds)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3000.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "q_rtrange_bool", "argument": null, "type": "boolean", "label": "Filter on retention time range?", "help": "Filter the spectra between two points of retention time range", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "q_accessions_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "q_accessions", "argument": "--q_accessions", "type": "text", "label": "Spectra accessions", "help": "Comma seperated list of accessions))                                 e.g 'AC000001,BS001003,LIT00001'", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "q_accessions_bool", "argument": null, "type": "boolean", "label": "Filter on accessions?", "help": "Filter on unique accessions IDs (e.g. from MassBank and MoNA)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "q_sources_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "SelectToolParameter", "name": "q_sources", "argument": "--q_sources", "type": "select", "label": "", "help": "q The default internal SQLite database of library (reference) spectra                        contains fragmentation spectra from MassBank, LipidBlast and GNPS. A copy is                        available from here:                        https://bioconductor.org/packages/release/data/experiment/html/msPurityData.html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["massbank", "gnps", "hmdb", "lipidblast"], "options": [["MassBank from MoNa", "massbank", true], ["GNPS", "gnps", true], ["HMDB", "hmdb", true], ["LipidBlast", "lipidblast", true]], "display": null, "multiple": true, "textable": false}, {"model_class": "TextToolParameter", "name": "q_sourcesUser", "argument": null, "type": "text", "label": "Sources - user specific", "help": "comma seperated list of additional sources (e.g. if the user has other                       sources - like there own personal library)                       e.g 'LIPIDS_03052019,HILIC_03052019'", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "q_sources_bool", "argument": null, "type": "boolean", "label": "Filter on sources?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "q_instrumentTypes_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "SelectToolParameter", "name": "q_instrumentTypes", "argument": "--q_instrumentTypes", "type": "select", "label": "", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["APCI-ITFT", "APCI-ITTOF", "CE-ESI-TOF", "ESI-ITFT", "ESI-ITTOF", "ESI-QFT", "ESI-QTOF", "ESI-TOF", "in source CID", "In-silico QTOF", "Ion trap", "LC-APCI-ITFT", "LC-APCI-QTOF", "LC-APCI-Q", "LC-ESI-IT", "LC-ESI-ITFT", "LC-ESI-ITTOF", "LC-ESI-Q", "LC-ESI-QFT", "LC-ESI-QIT", "LC-ESI-QQ", "LC-ESI-QTOF", "LC-ESI-TOF", "LC-Q-TOF/MS", "LC-QTOF", "Linear Ion Trap", "LIT", "MALDI-QIT", "MALDI-TOF", "MALDI-TOFTOF", "orbitrap", "QIT", "QIT-FT", "QIT-TOF", "QqQ", "Q-TOF", "Quattro_QQQ"], "options": [["APCI-ITFT", "APCI-ITFT", true], ["APCI-ITTOF", "APCI-ITTOF", true], ["CE-ESI-TOF", "CE-ESI-TOF", true], ["CI-B", "CI-B", false], ["EI-B", "EI-B", false], ["EI-EBEB", "EI-EBEB", false], ["ESI-ITFT", "ESI-ITFT", true], ["ESI-ITTOF", "ESI-ITTOF", true], ["ESI-QFT", "ESI-QFT", true], ["ESI-QTOF", "ESI-QTOF", true], ["ESI-TOF", "ESI-TOF", true], ["FAB-B", "FAB-B", false], ["FAB-BE", "FAB-BE", false], ["FAB-EB", "FAB-EB", false], ["FD-B", "FAB-EBEB", false], ["FI-B", "FI-B", false], ["Flow-injection QqQ/MS", "Flow-injection QqQ/MS", false], ["GC-EI-Q", "GC-EI-Q", false], ["GC-EI-QQ", "GC-EI-QQ", false], ["GC-EI-TOF", "GC-EI-TOF", false], ["GC-MS", "GC-MS", false], ["Hybrid FT", "Hybrid FT", false], ["in source CID", "in source CID", true], ["In-silico QTOF", "In-silico QTOF", true], ["Ion trap", "Ion trap", true], ["LC-APCI-ITFT", "LC-APCI-ITFT", true], ["LC-APCI-QTOF", "LC-APCI-QTOF", true], ["LC-APCI-Q", "LC-APCI-Q", true], ["LC-APPI-QQ", "LC-APPI-QQ", false], ["LC-ESI-IT", "LC-ESI-IT", true], ["LC-ESI-ITFT", "LC-ESI-ITFT", true], ["LC-ESI-ITTOF", "LC-ESI-ITTOF", true], ["LC-ESI-Q", "LC-ESI-Q", true], ["LC-ESI-QFT", "LC-ESI-QFT", true], ["LC-ESI-QIT", "LC-ESI-QIT", true], ["LC-ESI-QQ", "LC-ESI-QQ", true], ["LC-ESI-QTOF", "LC-ESI-QTOF", true], ["LC-ESI-TOF", "LC-ESI-TOF", true], ["LC-Q-TOF/MS", "LC-Q-TOF/MS", true], ["LC-QTOF", "LC-QTOF", true], ["Linear Ion Trap", "Linear Ion Trap", true], ["LIT", "LIT", true], ["MALDI-QIT", "MALDI-QIT", true], ["MALDI-TOF", "MALDI-TOF", true], ["MALDI-TOFTOF", "MALDI-TOFTOF", true], ["orbitrap", "orbitrap", true], ["QIT", "QIT", true], ["QIT-FT", "QIT-FT", true], ["QIT-TOF", "QIT-TOF", true], ["QqQ", "QqQ", true], ["Q-TOF", "Q-TOF", true], ["Quattro_QQQ", "Quattro_QQQ", true], ["None", "none", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "TextToolParameter", "name": "q_instrumentTypesUser", "argument": "--q_instrumentTypesUser", "type": "text", "label": "", "help": "Types of the instruments to be included in the search. Use a comma to                                separate the instrument types or leave empty to ignore filter.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "q_instrumentTypes_bool", "argument": null, "type": "boolean", "label": "Filter on instrument type?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "q_instruments_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "q_instruments", "argument": "--q_instruments", "type": "text", "label": "", "help": "Known instrument names to filter on. Use a comma to                                separate the instrument types or leave empty to ignore filter.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "q_instruments_bool", "argument": null, "type": "boolean", "label": "Filter on instrument name?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "q_spectraTypes_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "SelectToolParameter", "name": "q_spectraTypes", "argument": "--q_spectraTypes", "type": "select", "label": "Spectra type", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "av_all", "options": [["Averaged all spectra ignoring inter-intra relationships ", "av_all", true], ["Averaged inter spectra", "av_inter", false], ["Averaged intra spectra ", "av_intra", false], ["All individual scans", "scans", false], ["Not applicable/defined", "NA", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "q_spectraTypes_bool", "argument": null, "type": "boolean", "label": "Filter on spectral type?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "BooleanToolParameter", "name": "q_spectraFilter", "argument": "--q_spectraFilter", "type": "boolean", "label": "Ignore any peaks flagged in the spectra in previous stages?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}]}]}, {"model_class": "Section", "name": "Library", "type": "section", "title": "Library spectra input and filters", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "l_dbPth_con", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "sqlite", "inputs": [{"model_class": "DataToolParameter", "name": "l_dbPth", "argument": "--l_dbPth", "type": "data", "label": "Library SQLite database", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["sqlite"], "edam": {"edam_formats": ["format_3621"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "local_config", "inputs": []}, {"model_class": "ConditionalWhen", "value": "msPurityData", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "l_dbPth_select", "argument": "--l_dbPth_select", "type": "select", "label": "Input", "help": "Library SQLite database - in the standard XCMS msPurity workflow - a default                     database of MassBank, HMDB, LipidBlast and GNPS is used. However any SQLite                     database following the schema of https://bioconductor.org/packages/release/bioc/vignettes/msPurity/inst/doc/msPurity-spectral-database-vignette.html can be used as input", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "msPurityData", "options": [["SQLite database of (LC)-MS/MS data", "sqlite", false], ["Locally configured SQLite, MySQL or PostgreSQL database", "local_config", false], ["Prepared database of MassBank, HMDB, LipidBlast and GNPS", "msPurityData", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "l_filters", "type": "section", "title": "Filters", "help": null, "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "l_ppmPrec", "argument": "--l_ppmPrec", "type": "float", "label": "ppm error of the precursor for spectra", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "l_ppmProd", "argument": "--l_ppmProd", "type": "float", "label": "ppm error of the product for spectra", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "l_raThres_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "FloatToolParameter", "name": "l_raThres", "argument": "--l_raThres", "type": "float", "label": "Relative abundance threshold", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "l_raThres_bool", "argument": null, "type": "boolean", "label": "Filter on relative abundance threshold?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "l_polarity_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "SelectToolParameter", "name": "l_polarity", "argument": "--l_polarity", "type": "select", "label": "Polarity", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Positive", "positive", false], ["Negative", "negative", false], ["NA", "NA", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "l_polarity_bool", "argument": null, "type": "boolean", "label": "Filter on polarity?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "l_purity_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "FloatToolParameter", "name": "l_purity", "argument": "--l_purity", "type": "float", "label": "Precursor ion purity threshold", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.6", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "l_purity_bool", "argument": null, "type": "boolean", "label": "Filter on precursor ion purity?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "l_xcmsGroups_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "l_xcmsGroups", "argument": "--l_xcmsGroups", "type": "text", "label": "XCMS group ids of spectra", "help": "comma seperated list of grpids (correspond to column 'grpid in c_peak_group'))                                 e.g '12,27,30'", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "l_xcmsGroups_bool", "argument": null, "type": "boolean", "label": "Filter on XCMS groups ids?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "l_pids_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "l_pids", "argument": "--l_pids", "type": "text", "label": "pids of spectra (correspond to column 'pid; in s_peak_meta)", "help": "comma seperated list of pids (correspond to column 'pid; in s_peak_meta))                                 e.g '3001,5561'", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "l_pids_bool", "argument": null, "type": "boolean", "label": "Filter on pids?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "l_rtrange_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "FloatToolParameter", "name": "l_rtrangeMin", "argument": "--l_rtrangeMin", "type": "float", "label": "Minimum retention time range (seconds)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "l_rtrangeMax", "argument": "--l_rtrangeMax", "type": "float", "label": "Maximum retention time range (seconds)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3000.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "l_rtrange_bool", "argument": null, "type": "boolean", "label": "Filter on retention time range?", "help": "Filter the spectra between two points of retention time range", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "l_accessions_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "l_accessions", "argument": "--l_accessions", "type": "text", "label": "Spectra accessions", "help": "Comma seperated list of accessions))                                 e.g 'AC000001,BS001003,LIT00001'", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "l_accessions_bool", "argument": null, "type": "boolean", "label": "Filter on accessions?", "help": "Filter on unique accessions IDs (e.g. from MassBank and MoNA)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "l_sources_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "SelectToolParameter", "name": "l_sources", "argument": "--l_sources", "type": "select", "label": "", "help": "l The default internal SQLite database of library (reference) spectra                        contains fragmentation spectra from MassBank, LipidBlast and GNPS. A copy is                        available from here:                        https://bioconductor.org/packages/release/data/experiment/html/msPurityData.html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["massbank", "gnps", "hmdb", "lipidblast"], "options": [["MassBank from MoNa", "massbank", true], ["GNPS", "gnps", true], ["HMDB", "hmdb", true], ["LipidBlast", "lipidblast", true]], "display": null, "multiple": true, "textable": false}, {"model_class": "TextToolParameter", "name": "l_sourcesUser", "argument": null, "type": "text", "label": "Sources - user specific", "help": "comma seperated list of additional sources (e.g. if the user has other                       sources - like there own personal library)                       e.g 'LIPIDS_03052019,HILIC_03052019'", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "l_sources_bool", "argument": null, "type": "boolean", "label": "Filter on sources?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "l_instrumentTypes_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "SelectToolParameter", "name": "l_instrumentTypes", "argument": "--l_instrumentTypes", "type": "select", "label": "", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["APCI-ITFT", "APCI-ITTOF", "CE-ESI-TOF", "ESI-ITFT", "ESI-ITTOF", "ESI-QFT", "ESI-QTOF", "ESI-TOF", "in source CID", "In-silico QTOF", "Ion trap", "LC-APCI-ITFT", "LC-APCI-QTOF", "LC-APCI-Q", "LC-ESI-IT", "LC-ESI-ITFT", "LC-ESI-ITTOF", "LC-ESI-Q", "LC-ESI-QFT", "LC-ESI-QIT", "LC-ESI-QQ", "LC-ESI-QTOF", "LC-ESI-TOF", "LC-Q-TOF/MS", "LC-QTOF", "Linear Ion Trap", "LIT", "MALDI-QIT", "MALDI-TOF", "MALDI-TOFTOF", "orbitrap", "QIT", "QIT-FT", "QIT-TOF", "QqQ", "Q-TOF", "Quattro_QQQ"], "options": [["APCI-ITFT", "APCI-ITFT", true], ["APCI-ITTOF", "APCI-ITTOF", true], ["CE-ESI-TOF", "CE-ESI-TOF", true], ["CI-B", "CI-B", false], ["EI-B", "EI-B", false], ["EI-EBEB", "EI-EBEB", false], ["ESI-ITFT", "ESI-ITFT", true], ["ESI-ITTOF", "ESI-ITTOF", true], ["ESI-QFT", "ESI-QFT", true], ["ESI-QTOF", "ESI-QTOF", true], ["ESI-TOF", "ESI-TOF", true], ["FAB-B", "FAB-B", false], ["FAB-BE", "FAB-BE", false], ["FAB-EB", "FAB-EB", false], ["FD-B", "FAB-EBEB", false], ["FI-B", "FI-B", false], ["Flow-injection QqQ/MS", "Flow-injection QqQ/MS", false], ["GC-EI-Q", "GC-EI-Q", false], ["GC-EI-QQ", "GC-EI-QQ", false], ["GC-EI-TOF", "GC-EI-TOF", false], ["GC-MS", "GC-MS", false], ["Hybrid FT", "Hybrid FT", false], ["in source CID", "in source CID", true], ["In-silico QTOF", "In-silico QTOF", true], ["Ion trap", "Ion trap", true], ["LC-APCI-ITFT", "LC-APCI-ITFT", true], ["LC-APCI-QTOF", "LC-APCI-QTOF", true], ["LC-APCI-Q", "LC-APCI-Q", true], ["LC-APPI-QQ", "LC-APPI-QQ", false], ["LC-ESI-IT", "LC-ESI-IT", true], ["LC-ESI-ITFT", "LC-ESI-ITFT", true], ["LC-ESI-ITTOF", "LC-ESI-ITTOF", true], ["LC-ESI-Q", "LC-ESI-Q", true], ["LC-ESI-QFT", "LC-ESI-QFT", true], ["LC-ESI-QIT", "LC-ESI-QIT", true], ["LC-ESI-QQ", "LC-ESI-QQ", true], ["LC-ESI-QTOF", "LC-ESI-QTOF", true], ["LC-ESI-TOF", "LC-ESI-TOF", true], ["LC-Q-TOF/MS", "LC-Q-TOF/MS", true], ["LC-QTOF", "LC-QTOF", true], ["Linear Ion Trap", "Linear Ion Trap", true], ["LIT", "LIT", true], ["MALDI-QIT", "MALDI-QIT", true], ["MALDI-TOF", "MALDI-TOF", true], ["MALDI-TOFTOF", "MALDI-TOFTOF", true], ["orbitrap", "orbitrap", true], ["QIT", "QIT", true], ["QIT-FT", "QIT-FT", true], ["QIT-TOF", "QIT-TOF", true], ["QqQ", "QqQ", true], ["Q-TOF", "Q-TOF", true], ["Quattro_QQQ", "Quattro_QQQ", true], ["None", "none", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "TextToolParameter", "name": "l_instrumentTypesUser", "argument": "--l_instrumentTypesUser", "type": "text", "label": "", "help": "Types of the instruments to be included in the search. Use a comma to                                separate the instrument types or leave empty to ignore filter.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "l_instrumentTypes_bool", "argument": null, "type": "boolean", "label": "Filter on instrument type?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "l_instruments_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "l_instruments", "argument": "--l_instruments", "type": "text", "label": "", "help": "Known instrument names to filter on. Use a comma to                                separate the instrument types or leave empty to ignore filter.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "l_instruments_bool", "argument": null, "type": "boolean", "label": "Filter on instrument name?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "Conditional", "name": "l_spectraTypes_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "SelectToolParameter", "name": "l_spectraTypes", "argument": "--l_spectraTypes", "type": "select", "label": "Spectra type", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "av_all", "options": [["Averaged all spectra ignoring inter-intra relationships ", "av_all", true], ["Averaged inter spectra", "av_inter", false], ["Averaged intra spectra ", "av_intra", false], ["All individual scans", "scans", false], ["Not applicable/defined", "NA", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "l_spectraTypes_bool", "argument": null, "type": "boolean", "label": "Filter on spectral type?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "BooleanToolParameter", "name": "l_spectraFilter", "argument": "--l_spectraFilter", "type": "boolean", "label": "Ignore any peaks flagged in the spectra in previous stages?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}]}]}, {"model_class": "Section", "name": "General", "type": "section", "title": "General arguments", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "rttol_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "FloatToolParameter", "name": "rttol", "argument": null, "type": "float", "label": "Retention time tolerance (seconds)", "help": "Retention time tolerance in seconds to match precursors", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "30.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "rttol_bool", "argument": null, "type": "boolean", "label": "Filter on retention time match?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "BooleanToolParameter", "name": "usePrecursors", "argument": null, "type": "boolean", "label": "Filter on matching precursors?", "help": "If True, spectra will be filtered by similarity of precursors based on                     the library and query ppm defined tolerance", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "FloatToolParameter", "name": "raW", "argument": null, "type": "float", "label": "Weighting for relative abundance", "help": "Relative abundance weight for spectra (default to 0.5 as determined by                     massbank for ESI data)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mzW", "argument": null, "type": "float", "label": "Weighting for mz", "help": "mz weight for spectra (default to 2 as determined by massbank for ESI data)", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2.0", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "updateDb_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "BooleanToolParameter", "name": "copyDb", "argument": null, "type": "boolean", "label": "Make a copy of the database?", "help": "A copy will be made of the input SQLite target database and the                                 results will be added to this copy.  When False, the input SQLite                                 database will be updated  with the matching results. Use False if                                 you want to reduce storage space being used.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "updateDb", "argument": null, "type": "boolean", "label": "Update database with results?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}}]}], "outputs": [{"model_class": "ToolOutput", "name": "sqlite_results", "format": "sqlite", "label": "${tool.name} on ${on_string}: SQLite results", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "db_with_spectral_matching.sqlite", "edam_format": "format_3621", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "matches", "format": "tsv", "label": "${tool.name} on ${on_string}: matches", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "matched_results.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "xcms_matches", "format": "tsv", "label": "${tool.name} on ${on_string}: XCMS matches", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "xcms_matched_results.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "metabolomics", "panel_section_name": "Metabolomics", "form_style": "regular"}