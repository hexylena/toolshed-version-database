{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/computational-metabolomics/metfrag/metfrag/2.4.5+galaxy3", "name": "MetFrag", "version": "2.4.5+galaxy3", "description": "in silico fragmentor for compound annotation of mass spectrometry fragmentation spectra", "labels": [], "edam_operations": ["operation_2423"], "edam_topics": ["topic_3391"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "metfrag", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "metfrag", "owner": "computational-metabolomics", "changeset_revision": "f151ee133612", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "MSP file (Output from Create MSP tool)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["msp"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "db_select", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "MetChem", "inputs": [{"model_class": "TextToolParameter", "name": "LocalMetChemDatabaseServerIp", "argument": "--LocalMetChemDatabaseServerIp", "type": "text", "label": "MetChem URL", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "LocalCSV", "inputs": [{"model_class": "DataToolParameter", "name": "LocalDatabasePath", "argument": "--LocalDatabasePath", "type": "data", "label": "Local database of compounds (CSV format)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["csv"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "KEGG", "inputs": []}, {"model_class": "ConditionalWhen", "value": "PubChem", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "MetFragDatabaseType", "argument": "--MetFragDatabaseType", "type": "select", "label": "Choose Compound Database", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "PubChem", "options": [["PubChem", "PubChem", true], ["KEGG", "KEGG", false], ["Local database (csv)", "LocalCSV", false], ["MetChem", "MetChem", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "FloatToolParameter", "name": "DatabaseSearchRelativeMassDeviation", "argument": "--DatabaseSearchRelativeMassDeviation", "type": "float", "label": "Relative Mass Deviation for database search (ppm)", "help": "A value in ppm that defines the deviation of theoretical masses in the database                vs. the measured masses", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "FragmentPeakMatchRelativeMassDeviation", "argument": "--FragmentPeakMatchRelativeMassDeviation", "type": "float", "label": "Fragment Peak Match Relative Mass Deviation (ppm)", "help": "Relative mass deviation in ppm of theoretical fragment peaks vs. measured fragment peaks", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "FragmentPeakMatchAbsoluteMassDeviation", "argument": "--FragmentPeakMatchAbsoluteMassDeviation", "type": "float", "label": "Fragment Peak Match Absolute Mass Deviation (Da)", "help": "Absolute mass deviation in Dalton of theoretical fragment peaks vs. measured fragment peaks", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.001", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "polarity", "argument": "--polarity", "type": "select", "label": "Polarity", "help": "The polarity used for the mode of acquisition", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "pos", "options": [["Positive", "pos", true], ["Negative", "neg", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "schema", "argument": "--schema", "type": "select", "label": "Schema", "help": "The schema used for the MSP file (auto will try automatically determine the schema)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["Auto", "auto", true], ["Generic MSP", "msp", false], ["MassBank", "massbank", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "meta_select_col", "argument": "--meta_select_col", "type": "select", "label": "Choose how additional metadata columns are extracted", "help": "The MetFrag output can have additional meta data columns added, these can be either extracted                from the MSP parameters or from the 'Name' and 'RECORD_TITLE' MSP parameter. Additionally, columns                can be added from the 'Name' or 'RECORD_TITLE' parameter by splitting on | and :                e.g. 'MZ:100.2 | RT:20 | xcms_grp_id:1' would create MZ,RT and xcms_grp_id columns", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "all", "options": [["Extra metadata columns from the Name or RECORD_TITLE", "name", false], ["Extra metadata columns from the Name or RECORD_TITLE (each column is split on \"|\" and \":\" ) ", "name_split", false], ["Extra metadata columns from MSP parameters", "all", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "suspectlist", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "includesuspects", "inputs": [{"model_class": "Conditional", "name": "includesuspects_default_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "true", "inputs": []}, {"model_class": "ConditionalWhen", "value": "false", "inputs": [{"model_class": "DataToolParameter", "name": "ScoreSuspectLists", "argument": "--ScoreSuspectLists", "type": "data", "label": "Suspect list file", "help": "File containing a list of suspects inchikeys", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "BooleanToolParameter", "name": "includesuspects_default_bool", "argument": null, "type": "boolean", "label": "Use default list of suspect compounds?", "help": "Either provide a file containing a list of suspect compounds or a default file                                  of an aggregated list of in silico predicted MS/MS spectra of natural products                                  from the Universal Natural Products Database (http://pkuxxj.pku.edu.cn/UNPD/index.php).                                   The list is an aggregated version of the github repository https://github.com/oolonek/ISDB/tree/master/Data/dbs.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "SelectToolParameter", "name": "MetFragScoreTypes", "argument": "--MetFragScoreTypes", "type": "select", "label": "MetFrag Score Types", "help": "The type of scores MetFrag is calculating", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["FragmenterScore", "OfflineMetFusionScore", "SuspectListScore"], "options": [["FragmenterScore", "FragmenterScore", true], ["OfflineMetFusionScore", "OfflineMetFusionScore", true], ["SuspectListScore", "SuspectListScore", true]], "display": null, "multiple": true, "textable": false}, {"model_class": "TextToolParameter", "name": "MetFragScoreWeights", "argument": null, "type": "text", "label": "MetFrag Score Weights", "help": "The weights of the different score types, separated with a comma and without                        whitespaces. 1.0 means 100 percent.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.4,0.6,1.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "excludesuspects", "inputs": [{"model_class": "SelectToolParameter", "name": "MetFragScoreTypes", "argument": "--MetFragScoreTypes", "type": "select", "label": "MetFrag Score Types", "help": "The type of scores MetFrag is calculating", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["FragmenterScore", "OfflineMetFusionScore"], "options": [["FragmenterScore", "FragmenterScore", true], ["OfflineMetFusionScore", "OfflineMetFusionScore", true], ["SuspectListScore", "SuspectListScore", false]], "display": null, "multiple": true, "textable": false}, {"model_class": "TextToolParameter", "name": "MetFragScoreWeights", "argument": null, "type": "text", "label": "MetFrag Score Weights", "help": "The weights of the different score types, separated with a comma and without                        whitespaces. 1.0 means 100 percent.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "1.0,1.0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "suspectselector", "argument": null, "type": "select", "label": "Suspect list", "help": "Choose whether to include a suspect list", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "excludesuspects", "options": [["Include suspect list", "includesuspects", false], ["Do not include suspect list", "excludesuspects", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "adducts_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "msp", "inputs": []}, {"model_class": "ConditionalWhen", "value": "select", "inputs": [{"model_class": "SelectToolParameter", "name": "adducts", "argument": "--adducts", "type": "select", "label": "Select adducts", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "[M+H]+", "options": [["[M+H]+ 1.007276", "[M+H]+", true], ["[M+NH4]+ 18.034374", "[M+NH4]+", false], ["[M+Na]+ 22.989218", "[M+Na]+", false], ["[M+K]+ 38.963158", "[M+K]+", false], ["[M+CH3OH+H]+ 33.033489", "[M+CH3OH+H]+", false], ["[M+ACN+H]+ 42.033823", "[M+ACN+H]+", false], ["[M+ACN+Na]+ 64.015765", "[M+ACN+Na]+", false], ["[M+2ACN+H]+ 83.06037", "[M+2ACN+H]+", false], ["[M-H]- -1.007276", "[M-H]-", false], ["[M+Cl]- 34.969402", "[M+Cl]-", false], ["[M+HCOO]- 44.99819", "[M+HCOO]-", false], ["[M+CH3COO]- 59.01385", "[M+CH3COO]-", false]], "display": "checkboxes", "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "all", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "adducts_selector", "argument": null, "type": "select", "label": "How to handle adducts", "help": "Choose whether to include a suspect list", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "msp", "options": [["Use adducts defined in MSP file", "msp", true], ["Select from list", "select", false], ["Use all available adducts for either pos or neg ionisation mode", "all", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "skip_invalid_adducts", "argument": "--skip_invalid_adducts", "type": "boolean", "label": "Skip invalid or undefined adduct types?", "help": "If no adduct type is provided within the MSP file or if the adduct type is not usable                      with MetFrag, set to 'yes' if these spectra should be skipped or 'no' if the default                      of [M+H]+ for pos data or [M-H]- for neg data should be used", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "--skip_invalid_adducts", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "minMSMSpeaks", "argument": "minMSMSpeaks", "type": "integer", "label": "Minimum number of MS/MS peaks", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "output_cl", "argument": "--output_cl", "type": "boolean", "label": "Output the MetFrag command line call", "help": "This will output all the parameters used                                                                       for each MetFrag command line call (including the fragment peaks)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "--output_cl", "falsevalue": ""}, {"model_class": "Section", "name": "PreProcessFilter", "type": "section", "title": "PreProcessing filters", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "UnconnectedCompoundFilter", "argument": "--UnconnectedCompoundFilter", "type": "boolean", "label": "filter non-connected compounds (e.g. salts)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--UnconnectedCompoundFilter", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "IsotopeFilter", "argument": "--IsotopeFilter", "type": "boolean", "label": "filter compounds containing non-standard isotopes", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--IsotopeFilter", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "FilterMinimumElements", "argument": "--FilterMinimumElements", "type": "text", "label": "Minimum Elements Filter", "help": "Filter by minimum of contained elements. Ex: N2O3 include compounds with at least                          2 nitrogens and 3 oxygens", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "FilterMaximumElements", "argument": "--FilterMaximumElements", "type": "text", "label": "Maximum Elements Filter", "help": "Filter by maximum of contained elements. Ex: N5O7 filter out compounds with at                          maximum 5 nitrogens and 7 oxygens", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "FilterSmartsInclusionList", "argument": "--FilterSmartsInclusionList", "type": "text", "label": "Include substructures", "help": "Filter by presence of defined sub-structures. Ex: c1ccccc1 include compounds                          containing benzene", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "FilterSmartsExclusionList", "argument": "--FilterSmartsExclusionList", "type": "text", "label": "Exclude substructures", "help": "Filter by absence of defined sub-structures. Ex: [OX2H] filter out compounds                          containing hydroxyl groups", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "FilterIncludedElements", "argument": "--FilterIncludedElements", "type": "text", "label": "Include elements", "help": "Filter by presence of defined elements (other elements are allowed).                          Ex: 'N,O' include compounds containing nitrogen and oxygen", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "FilterIncludedExclusiveElements", "argument": "--FilterIncludedExclusiveElements", "type": "text", "label": "Include elements (exclusive)", "help": "Filter by presence of defined elements (no other elements are allowed).                          Ex: 'N,O' include compounds only composed of nitrogen and oxygen", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "FilterExcludedElements", "argument": "--FilterExcludedElements", "type": "text", "label": "Exclude elements", "help": "Filter by absence of defined sub-structures. Ex: 'Cl,Br' filter out                          compounds including bromine or chlorine", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "Section", "name": "PostProcessFilter", "type": "section", "title": "PostProcessing filters", "help": null, "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "score_thrshld", "argument": "--score_thrshld", "type": "float", "label": "Threshold for score after MetFrag search", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "pctexplpeak_thrshld", "argument": "--pctexplpeak_thrshld", "type": "float", "label": "Minimum percentage of explain peaks", "help": "", "refresh_on_change": false, "min": 0.0, "max": 100.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}], "outputs": [{"model_class": "ToolOutput", "name": "results", "format": "tabular", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "metabolomics", "panel_section_name": "Metabolomics", "form_style": "regular"}