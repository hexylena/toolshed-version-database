{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/feature_alignment/feature_alignment/0.11.0+galaxy0", "name": "TRIC", "version": "0.11.0+galaxy0", "description": "integrates information from all available runs via a graph-based alignment strategy", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "feature_alignment", "owner": "galaxyp", "changeset_revision": "7ac5166f8bbc", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "inputs", "argument": null, "type": "data", "label": "Output files containing all peakgroups from OpenSWATH (using either mProphet or pyProphet) or Peakview.", "help": "(--in)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "iformat", "argument": null, "type": "select", "label": "Which input file format is used", "help": "(--file_format)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "openswath", "options": [["OpenSwath", "openswath", true], ["mProphet (mQuest)", "mprophet", false], ["PeakView", "peakview", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "method_sel", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "best_overall", "inputs": []}, {"model_class": "ConditionalWhen", "value": "best_cluster_score", "inputs": []}, {"model_class": "ConditionalWhen", "value": "global_best_cluster_score", "inputs": []}, {"model_class": "ConditionalWhen", "value": "global_best_overall", "inputs": []}, {"model_class": "ConditionalWhen", "value": "LocalMST", "inputs": [{"model_class": "BooleanToolParameter", "name": "mst_useRTCorrection", "argument": null, "type": "boolean", "label": "Use aligned peakgroup RT to continue threading", "help": "Use aligned peakgroup RT to continue threading in MST algorithm. It is highly recommend to set this to 'True'", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}, {"model_class": "FloatToolParameter", "name": "mst_Stdev_multiplier", "argument": null, "type": "float", "label": "Standard deviation multiplier", "help": "Turn on adaptive RT tolerances: How many standard deviations the peakgroup can deviate in RT during the alignment (if less than max_rt_diff, then max_rt_diff is used). It is recommended to set this to a value between 2.0 and 4.0.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "mst_useLocalStdev", "argument": null, "type": "boolean", "label": "Use local standard deviation", "help": "Use standard deviation of local region of the chromatogram. This is experimental and may not work.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "mst_useReference", "argument": null, "type": "boolean", "label": "Use a reference-based tree for alignment", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}]}, {"model_class": "ConditionalWhen", "value": "LocalMSTAllCluster", "inputs": [{"model_class": "BooleanToolParameter", "name": "mst_useRTCorrection", "argument": null, "type": "boolean", "label": "Use aligned peakgroup RT to continue threading", "help": "Use aligned peakgroup RT to continue threading in MST algorithm. It is highly recommend to set this to 'True'", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}, {"model_class": "FloatToolParameter", "name": "mst_Stdev_multiplier", "argument": null, "type": "float", "label": "Standard deviation multiplier", "help": "Turn on adaptive RT tolerances: How many standard deviations the peakgroup can deviate in RT during the alignment (if less than max_rt_diff, then max_rt_diff is used). It is recommended to set this to a value between 2.0 and 4.0.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "mst_useLocalStdev", "argument": null, "type": "boolean", "label": "Use local standard deviation", "help": "Use standard deviation of local region of the chromatogram. This is experimental and may not work.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "BooleanToolParameter", "name": "mst_useReference", "argument": null, "type": "boolean", "label": "Use a reference-based tree for alignment", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "method", "argument": null, "type": "select", "label": "Which method to use for the clustering", "help": "Note that the MST options will perform a local, MST guided alignment while the other options will use a reference-guided alignment. The global option will also move peaks which are below the selected FDR threshold. (--method)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "best_overall", "options": [["best overall", "best_overall", true], ["best cluster score", "best_cluster_score", false], ["global best cluster score", "global_best_cluster_score", false], ["global best overall", "global_best_overall", false], ["LocalMST", "LocalMST", false], ["LocalMSTAllCluster", "LocalMSTAllCluster", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "matrix_output_method", "argument": null, "type": "select", "label": "Which columns are written besides Intensity", "help": "(--matrix_output_method)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["None", "none", true], ["RT", "RT", false], ["Score", "score", false], ["Source", "source", false], ["Full", "full", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "realign_method", "argument": null, "type": "select", "label": "How to re-align runs in retention time", "help": "(--realign_method)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "diRT", "options": [["Use only deltaiRT (diRT) from the input file", "diRT", true], ["Perform a linear regression using best peakgroups", "linear", false], ["Use Robust locally weighted regression (lowess smoother)", "lowess", false], ["Use Python native spline from scikits.datasmooth (slow!)", "splinePy", false], ["Splines with cross-validation", "CVSpline", false], ["Splines without cross-validation", "nonCVSpline", false], ["WeightedNearestNeighbour", "WeightedNearestNeighbour", false], ["SmoothLLDMedian", "SmoothLLDMedian", false], ["Perform a spline fit using R", "splineR", false], ["Perform a spline fit using R (external)", "splineR_external", false], ["Use Multivariate Adaptive Regression Splines using py-earth", "Earth", false], ["lowess_cython", "lowess_cython", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "max_rt_diff_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "opt_max_rt_diff_disabled", "inputs": []}, {"model_class": "ConditionalWhen", "value": "opt_max_rt_diff_enabled", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_rt_diff", "argument": null, "type": "integer", "label": "Difference in RT (in seconds) for two aligned features", "help": "(--max_rt_diff)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "30", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "max_rt_diff_sel", "argument": null, "type": "select", "label": "Enable difference in RT for two aligned features", "help": "Maximal difference in RT for two aligned features", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "opt_max_rt_diff_disabled", "options": [["disabled", "opt_max_rt_diff_disabled", true], ["set difference in RT", "opt_max_rt_diff_enabled", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "iso_max_rt_diff_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "opt_iso_max_rt_diff_disabled", "inputs": []}, {"model_class": "ConditionalWhen", "value": "opt_iso_max_rt_diff_enabled", "inputs": [{"model_class": "IntegerToolParameter", "name": "iso_max_rt_diff", "argument": null, "type": "integer", "label": "Difference in RT (in seconds) for two isotopic channels.", "help": "(--iso_max_rt_diff)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "30", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "iso_max_rt_diff_sel", "argument": null, "type": "select", "label": "Enable difference in RT for two isotopic channels", "help": "Maximal difference in RT (in seconds) for two isotopic channels in the same run", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "opt_iso_max_rt_diff_disabled", "options": [["disabled", "opt_iso_max_rt_diff_disabled", true], ["set difference in RT", "opt_iso_max_rt_diff_enabled", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "frac_selected_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "opt_frac_selected_disabled", "inputs": []}, {"model_class": "ConditionalWhen", "value": "opt_frac_selected_enabled", "inputs": [{"model_class": "FloatToolParameter", "name": "frac_selected", "argument": null, "type": "float", "label": "Fraction of runs", "help": "(--frac_selected)", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "frac_selected_sel", "argument": null, "type": "select", "label": "Enable fraction of runs", "help": "Do not write peakgroup if selected in less than this fraction of runs", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "opt_frac_selected_disabled", "options": [["disabled", "opt_frac_selected_disabled", true], ["set fraction of runs", "opt_frac_selected_enabled", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "fdr_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "opt_fdr_disabled", "inputs": []}, {"model_class": "ConditionalWhen", "value": "opt_target_fdr", "inputs": [{"model_class": "FloatToolParameter", "name": "target_fdr", "argument": null, "type": "float", "label": "Target FDR", "help": "Refers to the desired FDR on assay level. (--target_fdr)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "opt_fdr_cutoff", "inputs": [{"model_class": "FloatToolParameter", "name": "fdr_cutoff", "argument": null, "type": "float", "label": "Seeding score cutoff", "help": "A fixed m-score cutoff which does not take into account the number of runs (use target_fdr instead). (--fdr_cutoff)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "fdr_sel", "argument": null, "type": "select", "label": "Choose FDR method", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "opt_target_fdr", "options": [["disabled", "opt_fdr_disabled", false], ["Target FDR", "opt_target_fdr", true], ["FDR cutoff", "opt_fdr_cutoff", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "FloatToolParameter", "name": "max_fdr_quality", "argument": null, "type": "float", "label": "Extension score cutoff", "help": "During the extension phase of the algorithm, peakgroups of this quality will still be considered for alignment (in FDR) - it is possible to give a range in the format lower,higher+stepsize,stepsize - e.g. 0,0.31,0.01  (-1 will set it to fdr_cutoff) (--max_fdr_quality)", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "Section", "name": "further_params", "type": "section", "title": "Further parameters", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "disable_isotopic_grouping", "argument": null, "type": "boolean", "label": "Disable grouping of isotopic variants", "help": "Disable grouping of isotopic variants by peptide_group_label, thus disabling matching of isotopic variants of the same peptide across channels. If turned off, each isotopic channel will be matched independently of the other. If enabled, the more certain identification will be used to infer the location of the peak in the other channel. (--disable_isotopic_grouping)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "True", "falsevalue": "False"}, {"model_class": "Conditional", "name": "dscore_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "opt_dscore_disabled", "inputs": []}, {"model_class": "ConditionalWhen", "value": "opt_dscore_enabled", "inputs": [{"model_class": "FloatToolParameter", "name": "dscore_cutoff", "argument": null, "type": "float", "label": "d score cut-off", "help": "Quality cutoff to still consider a feature for alignment using the d_score: everything below this d-score is discarded (this is mainly for speedup). (--dscore_cutoff)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.96", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "dscore_sel", "argument": null, "type": "select", "label": "Enable the filter by d score (this is mainly for speedup)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "opt_dscore_disabled", "options": [["disabled", "opt_dscore_disabled", true], ["Use d score filter", "opt_dscore_enabled", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "nr_high_conf_exp_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "opt_nr_high_conf_exp_disabled", "inputs": []}, {"model_class": "ConditionalWhen", "value": "opt_nr_high_conf_exp_enabled", "inputs": [{"model_class": "IntegerToolParameter", "name": "nr_high_conf_exp", "argument": null, "type": "integer", "label": "Number of experiments with high confidence", "help": "Number of experiments in which the peptide needs to be identified with high confidence (e.g. above fdr_curoff). (--nr_high_conf_exp)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "nr_high_conf_exp_sel", "argument": null, "type": "select", "label": "Enable the filter by d score (this is mainly for speedup)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "opt_nr_high_conf_exp_disabled", "options": [["disabled", "opt_nr_high_conf_exp_disabled", true], ["Use number of experiments", "opt_nr_high_conf_exp_enabled", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "readmethod", "argument": null, "type": "select", "label": "Read full or minimal transition groups", "help": "(--readmethod)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "disabled", "options": [["disabled", "disabled", true], ["minimal", "minimal", false], ["full", "full", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "alignment_score_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "opt_alignment_score_disabled", "inputs": []}, {"model_class": "ConditionalWhen", "value": "opt_alignment_score_enabled", "inputs": [{"model_class": "FloatToolParameter", "name": "alignment_score", "argument": null, "type": "float", "label": "Alignment score", "help": "Minimal score needed for a feature to be considered for alignment between runs (e.g. score needed to be considered an 'anchor point' for pairwise alignment). (--alignment_score)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0001", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "alignment_score_sel", "argument": null, "type": "select", "label": "Enable the filter by d score (this is mainly for speedup)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "opt_alignment_score_disabled", "options": [["disabled", "opt_alignment_score_disabled", true], ["Use number of experiments", "opt_alignment_score_enabled", false]], "display": null, "multiple": false, "textable": false}}]}], "outputs": [{"model_class": "ToolOutput", "name": "out_matrix", "format": "tabular", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "out_ids", "format": "tabular", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "out", "format": "tabular", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "proteomics", "panel_section_name": "Proteomics", "form_style": "regular"}