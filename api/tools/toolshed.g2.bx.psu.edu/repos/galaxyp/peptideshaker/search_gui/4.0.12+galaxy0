{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/peptideshaker/search_gui/4.0.12+galaxy0", "name": "Search GUI", "version": "4.0.12+galaxy0", "description": "Perform protein identification using various search engines and prepare results for input to Peptide Shaker", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": true, "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "peptideshaker", "owner": "galaxyp", "changeset_revision": "1beff3ddce58", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input_parameters_file", "argument": null, "type": "data", "label": "Identification Parameters file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["json"], "edam": {"edam_formats": ["format_3464"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_fasta_file", "argument": null, "type": "data", "label": "Fasta file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "peak_lists_files", "argument": null, "type": "data", "label": "Input Peak Lists", "help": "Select appropriate MGF/MZML dataset(s) from history", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["mgf", "mzml"], "edam": {"edam_formats": ["format_3651", "format_3244"], "edam_data": ["data_2536", "data_2536"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "search_engines_options", "type": "section", "title": "Search Engine Options", "help": null, "expanded": true, "inputs": [{"model_class": "SelectToolParameter", "name": "engines", "argument": null, "type": "select", "label": "DB-Search Engines", "help": "Comet and Tide shouldn't both be selected since they use a similar algoritm. OMSSA may not work into isolated environments like containers.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["X!Tandem", "MSGF"], "options": [["X!Tandem", "X!Tandem", true], ["MS-GF+", "MSGF", true], ["OMSSA", "OMSSA", false], ["Comet", "Comet", false], ["Tide", "Tide", false], ["MyriMatch", "MyriMatch", false], ["MS_Amanda", "MS_Amanda", false], ["DirecTag", "DirecTag", false], ["Novor (Select for non-commercial use only)", "Novor", false]], "display": "checkboxes", "multiple": true, "textable": false}]}, {"model_class": "Conditional", "name": "searchgui_advanced", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "basic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "SelectToolParameter", "name": "correct_titles", "argument": null, "type": "select", "label": "How should PeptideShaker deal with duplicate spectra?", "help": "Unless you suspect some input files to be genuine duplicates then rename spectra is the safest option", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["no correction", "0", false], ["rename spectra", "1", true], ["delete spectra", "2", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "missing_titles", "argument": null, "type": "boolean", "label": "Add missing spectrum titles", "help": "(-missing_titles)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-missing_titles 1", "falsevalue": "-missing_titles 0"}, {"model_class": "IntegerToolParameter", "name": "mgf_splitting", "argument": null, "type": "integer", "label": "The maximum mgf file size in MB before splitting the mgf", "help": "Choose a smaller value if you are running on a machine with limited memory", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "mgf_spectrum_count", "argument": null, "type": "integer", "label": "The maximum number of spectra per mgf file when splitting", "help": "Choose a smaller value if you are running on a machine with limited memory", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "25000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "output_gzip", "argument": null, "type": "boolean", "label": "Gzip result files", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "1", "falsevalue": "0"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "searchgui_advanced_selector", "argument": null, "type": "select", "label": "SearchGUI Options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "basic", "options": [["Default", "basic", true], ["Advanced", "advanced", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "searchgui_results", "format": "searchgui_archive", "label": "${tool.name} on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "searchgui_out.zip", "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "proteomics", "panel_section_name": "Proteomics", "form_style": "regular"}