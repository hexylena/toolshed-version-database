{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/pyprophet_export/pyprophet_export/2.1.4.1", "name": "PyProphet export", "version": "2.1.4.1", "description": "Export tabular files, optional swath2stats export", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "pyprophet_export", "owner": "galaxyp", "changeset_revision": "3cf580bf28e2", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Input file", "help": "This file needs to be in OSW format (--in)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["osw"], "edam": {"edam_formats": ["format_3621"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "conditional_output", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "legacy_split", "inputs": [{"model_class": "BooleanToolParameter", "name": "transition_quant", "argument": null, "type": "boolean", "label": "Report aggregated transition-level quantification", "help": "(--transition_quantification / --no-transition_quantification)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "--transition_quantification", "falsevalue": "--no-transition_quantification"}, {"model_class": "FloatToolParameter", "name": "max_transition_pep", "argument": "max_transition_pep", "type": "float", "label": "Maximum PEP to retain scored transitions for quantification (requires transition-level scoring)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.7", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "ipf", "argument": "ipf", "type": "select", "label": "Should IPF results be reported if present? 'peptidoform': Report results on peptidoform-level, 'augmented': Augment OpenSWATH results with IPF scores, 'disable': Ignore IPF results", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "peptidoform", "options": [["peptidoform ", "peptidoform", true], ["augmented", "augmented", false], ["disable", "disable", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "ipf_max_peptidoform_pep", "argument": "ipf_max_peptidoform_pep", "type": "float", "label": "IPF: Filter results to maximum run-specific peptidoform-level PEP", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.4", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_rs_peakgroup_qvalue", "argument": "max_rs_peakgroup_qvalue", "type": "float", "label": "Filter results to maximum run-specific peak group-level q-value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_global_peptide_qvalue", "argument": "max_global_peptide_qvalue", "type": "float", "label": "Filter results to maximum global peptide-level q-value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_global_protein_qvalue", "argument": "max_global_protein_qvalue", "type": "float", "label": "ilter results to maximum global protein-level q-value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "legacy_merged", "inputs": [{"model_class": "BooleanToolParameter", "name": "transition_quant", "argument": null, "type": "boolean", "label": "Report aggregated transition-level quantification", "help": "(--transition_quantification / --no-transition_quantification)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "--transition_quantification", "falsevalue": "--no-transition_quantification"}, {"model_class": "FloatToolParameter", "name": "max_transition_pep", "argument": "max_transition_pep", "type": "float", "label": "Maximum PEP to retain scored transitions for quantification (requires transition-level scoring)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.7", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "ipf", "argument": "ipf", "type": "select", "label": "Should IPF results be reported if present? 'peptidoform': Report results on peptidoform-level, 'augmented': Augment OpenSWATH results with IPF scores, 'disable': Ignore IPF results", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "peptidoform", "options": [["peptidoform ", "peptidoform", true], ["augmented", "augmented", false], ["disable", "disable", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "ipf_max_peptidoform_pep", "argument": "ipf_max_peptidoform_pep", "type": "float", "label": "IPF: Filter results to maximum run-specific peptidoform-level PEP", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.4", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_rs_peakgroup_qvalue", "argument": "max_rs_peakgroup_qvalue", "type": "float", "label": "Filter results to maximum run-specific peak group-level q-value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_global_peptide_qvalue", "argument": "max_global_peptide_qvalue", "type": "float", "label": "Filter results to maximum global peptide-level q-value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_global_protein_qvalue", "argument": "max_global_protein_qvalue", "type": "float", "label": "ilter results to maximum global protein-level q-value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "matrix", "inputs": [{"model_class": "SelectToolParameter", "name": "ipf", "argument": "ipf", "type": "select", "label": "Should IPF results be reported if present? 'peptidoform': Report results on peptidoform-level, 'augmented': Augment OpenSWATH results with IPF scores, 'disable': Ignore IPF results", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "peptidoform", "options": [["peptidoform ", "peptidoform", true], ["augmented", "augmented", false], ["disable", "disable", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "ipf_max_peptidoform_pep", "argument": "ipf_max_peptidoform_pep", "type": "float", "label": "IPF: Filter results to maximum run-specific peptidoform-level PEP", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.4", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_rs_peakgroup_qvalue", "argument": "max_rs_peakgroup_qvalue", "type": "float", "label": "Filter results to maximum run-specific peak group-level q-value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_global_peptide_qvalue", "argument": "max_global_peptide_qvalue", "type": "float", "label": "Filter results to maximum global peptide-level q-value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_global_protein_qvalue", "argument": "max_global_protein_qvalue", "type": "float", "label": "ilter results to maximum global protein-level q-value", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.01", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "score_plots", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "format", "argument": "format", "type": "select", "label": "Export format, either matrix, legacy_split, legacy_merged (mProphet/PyProphet) or score_plots format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "legacy_split", "options": [["legacy_split", "legacy_split", true], ["legacy_merged", "legacy_merged", false], ["matrix", "matrix", false], ["score_plots", "score_plots", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "peptide_error", "argument": null, "type": "boolean", "label": "Append peptide-level error-rate estimates if available", "help": "(--peptide / --no-peptide)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "--peptide", "falsevalue": "--no-peptide"}, {"model_class": "BooleanToolParameter", "name": "protein_error", "argument": null, "type": "boolean", "label": "Append protein-level error-rate estimates if available", "help": "(--protein / --no-protein)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "--protein", "falsevalue": "--no-protein"}, {"model_class": "Conditional", "name": "conditional_swath2stats", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "yes_swath2stats", "inputs": [{"model_class": "DataToolParameter", "name": "study_design", "argument": null, "type": "data", "label": "Study design tabular file", "help": "Needs to have columns with Filename, Condition, BioReplicate, Run", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular"], "edam": {"edam_formats": ["format_3475"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "conditional_fdr_replica", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "calc_fdr_replica_yes", "inputs": [{"model_class": "FloatToolParameter", "name": "fft", "argument": null, "type": "float", "label": "FFT. Ratio of false positives to true negatives, q-values from pyProphet stats output", "help": "As an approximation, the q-values of multiple runs are averaged and supplied as argument FFT. Numeric from 0 to 1.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "n_range", "argument": null, "type": "float", "label": "Option to set the number of magnitude for which the m_score threshold is decreased", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "fdr_target", "argument": null, "type": "float", "label": "FDR target.", "help": "An m_score cutoff achieving and FDR smaller fdr_target will be selected. Calculated as FDR = decoys*FFT/targets", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_replica", "argument": null, "type": "integer", "label": "Number Replicates.", "help": "Number of measurements within at least one condition that have to pass the mscore threshold for this transition.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "calc_fdr_replica_no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "calc_fdr_replica", "argument": null, "type": "select", "label": "Filter for fdr and number of replicates", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "calc_fdr_replica_yes", "options": [["Yes", "calc_fdr_replica_yes", true], ["No", "calc_fdr_replica_no", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "conditional_max_pep", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "filter_max_pep_yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_peptides_max", "argument": null, "type": "integer", "label": "Maximum number of peptides per protein.", "help": "Maximum number of highest intense peptides to filter the data on.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "filter_max_pep_no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "filter_max_pep", "argument": null, "type": "select", "label": "Filter for a maximum number of peptides per protein", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "filter_max_pep_yes", "options": [["Yes", "filter_max_pep_yes", true], ["No", "filter_max_pep_no", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "conditional_min_pep", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "filter_min_pep_yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_peptides_min", "argument": null, "type": "integer", "label": "Minimum number of peptides per protein", "help": "Number of minimal number of peptide IDs associated with a protein ID in order to be kept in the dataset.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "filter_min_pep_no", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "filter_min_pep", "argument": null, "type": "select", "label": "Filter for a proteins that are supported by a minimum number of peptides", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "filter_min_pep_yes", "options": [["Yes", "filter_min_pep_yes", true], ["No", "filter_min_pep_no", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "no_swath2stats", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "swath2stats", "argument": null, "type": "select", "label": "Use swath2stats to export file for statsics", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes_swath2stats", "options": [["yes", "yes_swath2stats", true], ["no", "no_swath2stats", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "export_file", "format": "tabular", "label": "${tool.name} on ${on_string}: export.tabular", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "score_plots", "format": "pdf", "label": "${tool.name} on ${on_string}: score_plots.pdf", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3508", "edam_data": "data_2968", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "summary", "format": "pdf", "label": "${tool.name} on ${on_string}: summary.pdf", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "summary.pdf", "edam_format": "format_3508", "edam_data": "data_2968", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "peptide_signal", "format": "tabular", "label": "${tool.name} on ${on_string}: peptide_signal.tabular", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "peptide_signal.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "protein_signal", "format": "tabular", "label": "${tool.name} on ${on_string}: protein_signal.tabular", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "protein_signal.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "msstats_input", "format": "tabular", "label": "${tool.name} on ${on_string}: msstats_input.tabular", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "msstats_input.tabular", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "proteomics", "panel_section_name": "Proteomics", "form_style": "regular"}