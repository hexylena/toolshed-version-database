{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/openms_fileconverter/FileConverter/2.6+galaxy0", "name": "FileConverter", "version": "2.6+galaxy0", "description": "Converts between different MS file formats.", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "openms_fileconverter", "owner": "galaxyp", "changeset_revision": "9b7977080f6d", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "in", "argument": "-in", "type": "data", "label": "Input file to convert", "help": " select consensusxml,dta,dta2d,edta,featurexml,kroenik,mgf,ms2,mzdata,mzml,mzxml,peplist,tabular,thermo.raw data sets(s)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["consensusxml", "dta", "dta2d", "edta", "featurexml", "kroenik", "mgf", "ms2", "mzdata", "mzml", "mzxml", "peplist", "tabular", "thermo.raw"], "edam": {"edam_formats": ["format_2032", "format_3475", "format_3475", "format_3475", "format_2032", "format_3475", "format_3651", "format_2330", "format_3245", "format_3244", "format_3654", "format_3475", "format_3475", "format_3712"], "edam_data": ["data_2536", "data_0006", "data_0006", "data_0006", "data_2536", "data_0006", "data_2536", "data_0006", "data_2536", "data_2536", "data_2536", "data_0006", "data_0006", "data_2536"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "out_type", "argument": "-out_type", "type": "select", "label": "Output file type -- default: determined from file extension or content", "help": "Note: that not all conversion paths work or make sense", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "consensusXML", "options": [["consensusxml", "consensusXML", false], ["csv", "csv", false], ["dta2d", "dta2d", false], ["edta", "edta", false], ["featurexml", "featureXML", false], ["mgf", "mgf", false], ["mzdata", "mzData", false], ["mzml", "mzML", false], ["mzxml", "mzXML", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "adv_opts_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "basic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "SelectToolParameter", "name": "UID_postprocessing", "argument": "-UID_postprocessing", "type": "select", "label": "unique ID post-processing for output data", "help": "'none' keeps current IDs even if invalid.. 'ensure' keeps current IDs but reassigns invalid ones.. 'reassign' assigns new unique IDs", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ensure", "options": [["none", "none", false], ["ensure", "ensure", true], ["reassign", "reassign", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "TIC_DTA2D", "argument": "-TIC_DTA2D", "type": "boolean", "label": "Export the TIC instead of the entire experiment in mzML/mzData/mzXML -> DTA2D conversions", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "MGF_compact", "argument": "-MGF_compact", "type": "boolean", "label": "Use a more compact format when writing MGF (no zero-intensity peaks, limited number of decimal places)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "force_MaxQuant_compatibility", "argument": "-force_MaxQuant_compatibility", "type": "boolean", "label": "[mzXML output only] Make sure that MaxQuant can read the mzXML and set the msManufacturer to 'Thermo Scientific'", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "convert_to_chromatograms", "argument": "-convert_to_chromatograms", "type": "boolean", "label": "[mzML output only] Assumes that the provided spectra represent data in SRM mode or targeted MS1 mode and converts them to chromatogram data", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "force_TPP_compatibility", "argument": "-force_TPP_compatibility", "type": "boolean", "label": "[mzML output only] Make sure that TPP parsers can read the mzML and the precursor ion m/z in the file (otherwise it will be set to zero by the TPP)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "SelectToolParameter", "name": "change_im_format", "argument": "-change_im_format", "type": "select", "label": "[mzML output only] How to store ion mobility scans (none: no change in format, multiple: store each frame as multiple scans, one per drift time value, single: store whole frame as single scan with IM values in a FloatDataArray", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["none", "none", true], ["multiple", "multiple", false], ["single", "single", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "write_scan_index", "argument": "-write_scan_index", "type": "boolean", "label": "Append an index when writing mzML or mzXML files", "help": "Some external tools might rely on it", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "lossy_compression", "argument": "-lossy_compression", "type": "boolean", "label": "Use numpress compression to achieve optimally small file size using linear compression for m/z domain and slof for intensity and float data arrays (attention: may cause small loss of precision; only for mzML data)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "FloatToolParameter", "name": "lossy_mass_accuracy", "argument": "-lossy_mass_accuracy", "type": "float", "label": "Desired (absolute) m/z accuracy for lossy compression", "help": "(e.g. use 0.0001 for a mass accuracy of 0.2 ppm at 500 m/z, default uses -1.0 for maximal accuracy)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "-1.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "process_lowmemory", "argument": "-process_lowmemory", "type": "boolean", "label": "Whether to process the file on the fly without loading the whole file into memory first (only for conversions of mzXML/mzML to mzML)", "help": "Note: this flag will prevent conversion from spectra to chromatograms", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "no_peak_picking", "argument": "-no_peak_picking", "type": "boolean", "label": "Disables vendor peak picking for raw files", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "force", "argument": "-force", "type": "boolean", "label": "Overrides tool-specific checks", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "HiddenToolParameter", "name": "test", "argument": "-test", "type": "hidden", "label": "Enables the test mode (needed for internal use only)", "help": "", "refresh_on_change": false, "optional": true, "hidden": true, "is_dynamic": false, "value": "False"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "adv_opts_selector", "argument": null, "type": "select", "label": "Advanced Options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "basic", "options": [["Hide Advanced Options", "basic", true], ["Show Advanced Options", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "OPTIONAL_OUTPUTS", "argument": null, "type": "select", "label": "Optional outputs", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Output used ctd (ini) configuration file", "ctd_out_FLAG", false]], "display": null, "multiple": true, "textable": false}], "outputs": [{"model_class": "ToolOutput", "name": "out", "format": "data", "label": "${tool.name} on ${on_string}: out", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1915", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "ctd_out", "format": "xml", "label": "${tool.name} on ${on_string}: ctd", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2332", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "proteomics", "panel_section_name": "Proteomics", "form_style": "regular"}