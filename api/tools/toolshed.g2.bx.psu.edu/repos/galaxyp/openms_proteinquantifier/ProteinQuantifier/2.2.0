{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/openms_proteinquantifier/ProteinQuantifier/2.2.0", "name": "ProteinQuantifier", "version": "2.2.0", "description": "Compute peptide and protein abundances", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "openms_proteinquantifier", "owner": "galaxyp", "changeset_revision": "908ae1e4eb28", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "param_in", "argument": null, "type": "data", "label": "Input file", "help": "(-in) ", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["featurexml", "consensusxml", "idxml"], "edam": {"edam_formats": ["format_2032", "format_2032", "format_2032"], "edam_data": ["data_2536", "data_2536", "data_2536"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "param_protein_groups", "argument": null, "type": "data", "label": "Protein inference results for the identification runs that were used to annotate the input (", "help": "(-protein_groups) e.g. from ProteinProphet via IDFileConverter or Fido via FidoAdapter). <br>Information about indistinguishable proteins will be used for protein quantification", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["idxml"], "edam": {"edam_formats": ["format_2032"], "edam_data": ["data_2536"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "param_top", "argument": null, "type": "integer", "label": "Calculate protein abundance from this number of proteotypic peptides (most abundant first; '0' for all)", "help": "(-top) ", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "param_average", "argument": null, "type": "select", "label": "Averaging method used to compute protein abundances from peptide abundances", "help": "(-average) ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "median", "options": [["median", "median", true], ["mean", "mean", false], ["weighted_mean", "weighted_mean", false], ["sum", "sum", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "param_include_all", "argument": null, "type": "boolean", "label": "Include results for proteins with fewer proteotypic peptides than indicated by 'top' (no effect if 'top' is 0 or 1)", "help": "(-include_all) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-include_all", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "param_filter_charge", "argument": null, "type": "boolean", "label": "Distinguish between charge states of a peptide", "help": "(-filter_charge) For peptides, abundances will be reported separately for each charge; <br>for proteins, abundances will be computed based only on the most prevalent charge of each peptide. <br>By default, abundances are summed over all charge states", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-filter_charge", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "param_ratios", "argument": null, "type": "boolean", "label": "Add the log2 ratios of the abundance values to the output", "help": "(-ratios) Format: log_2(x_0/x_0) <sep> log_2(x_1/x_0) <sep> log_2(x_2/x_0) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-ratios", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "param_ratiosSILAC", "argument": null, "type": "boolean", "label": "Add the log2 ratios for a triple SILAC experiment to the output", "help": "(-ratiosSILAC) Only applicable to consensus maps of exactly three sub-maps. Format: log_2(heavy/light) <sep> log_2(heavy/middle) <sep> log_2(middle/light)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-ratiosSILAC", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "param_consensus_normalize", "argument": null, "type": "boolean", "label": "Scale peptide abundances so that medians of all samples are equal", "help": "(-normalize) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-consensus:normalize", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "param_consensus_fix_peptides", "argument": null, "type": "boolean", "label": "Use the same peptides for protein quantification across all samples", "help": "(-fix_peptides) <br>With 'top 0', all peptides that occur in every sample are considered. <br>Otherwise ('top N'), the N peptides that occur in the most samples (independently of each other) are selected, <br>breaking ties by total abundance (there is no guarantee that the best co-ocurring peptides are chosen!)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-consensus:fix_peptides", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "param_format_separator", "argument": null, "type": "text", "label": "Character(s) used to separate fields; by default, the 'tab' character is used", "help": "(-separator) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "param_format_quoting", "argument": null, "type": "select", "label": "Method for quoting of strings: 'none' for no quoting, 'double' for quoting with doubling of embedded quotes, <br>'escape' for quoting with backslash-escaping of embedded quotes", "help": "(-quoting) ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "double", "options": [["none", "none", false], ["double", "double", true], ["escape", "escape", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "param_format_replacement", "argument": null, "type": "text", "label": "If 'quoting' is 'none', used to replace occurrences of the separator in strings before writing", "help": "(-replacement) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "_", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "adv_opts", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "basic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "BooleanToolParameter", "name": "param_force", "argument": null, "type": "boolean", "label": "Overwrite tool specific checks", "help": "(-force) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-force", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "adv_opts_selector", "argument": null, "type": "select", "label": "Advanced Options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "basic", "options": [["Hide Advanced Options", "basic", true], ["Show Advanced Options", "advanced", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "param_out", "format": "tabular", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "param_peptide_out", "format": "tabular", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "proteomics", "panel_section_name": "Proteomics", "form_style": "regular"}