{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/openms_openswathrtnormalizer/OpenSwathRTNormalizer/3.1+galaxy0", "name": "OpenSwathRTNormalizer", "version": "3.1+galaxy0", "description": "This tool will take a description of RT peptides and their normalized retention time to write out a transformation file on how to transform the RT space into the normalized space", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "openms_openswathrtnormalizer", "owner": "galaxyp", "changeset_revision": "0eaf3d4219cf", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "in_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": [{"model_class": "DataToolParameter", "name": "in", "argument": "-in", "type": "data", "label": "Input files separated by blank", "help": " select mzml data sets(s)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["mzml"], "edam": {"edam_formats": ["format_3244"], "edam_data": ["data_2536"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "DataToolParameter", "name": "in", "argument": "-in", "type": "data", "label": "Input files separated by blank", "help": " select mzml data sets(s)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["mzml"], "edam": {"edam_formats": ["format_3244"], "edam_data": ["data_2536"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "in_select", "argument": null, "type": "select", "label": "Run tool in batch mode for -in", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No: process all datasets jointly", "no", false], ["Yes: process each dataset in an independent job", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "DataToolParameter", "name": "tr", "argument": "-tr", "type": "data", "label": "transition file with the RT peptides ('TraML' or 'csv')", "help": " select csv,traml data sets(s)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["csv", "traml"], "edam": {"edam_formats": ["format_3475", "format_3246"], "edam_data": ["data_0006", "data_2536"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "rt_norm", "argument": "-rt_norm", "type": "data", "label": "RT normalization file (how to map the RTs of this run to the ones stored in the library)", "help": " select trafoxml data sets(s)", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["trafoxml"], "edam": {"edam_formats": ["format_2032"], "edam_data": ["data_2536"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "FloatToolParameter", "name": "min_rsq", "argument": "-min_rsq", "type": "float", "label": "Minimum r-squared of RT peptides regression", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.95", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_coverage", "argument": "-min_coverage", "type": "float", "label": "Minimum relative amount of RT peptides to keep", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.6", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "estimateBestPeptides", "argument": "-estimateBestPeptides", "type": "boolean", "label": "Whether the algorithms should try to choose the best peptides based on their peak shape for normalization", "help": "Use this option you do not expect all your peptides to be detected in a sample and too many 'bad' peptides enter the outlier removal step (e.g. due to them being endogenous peptides or using a less curated list of peptides)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "Section", "name": "RTNormalization", "type": "section", "title": "Parameters for the RTNormalization", "help": "RT normalization and outlier detection can be done iteratively (by default) which removes one outlier per iteration or using the RANSAC algorithm", "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "outlierMethod", "argument": "-RTNormalization:outlierMethod", "type": "select", "label": "Which outlier detection method to use (valid: 'iter_residual', 'iter_jackknife', 'ransac', 'none')", "help": "Iterative methods remove one outlier at a time. Jackknife approach optimizes for maximum r-squared improvement while 'iter_residual' removes the datapoint with the largest residual error (removal by residual is computationally cheaper, use this with lots of peptides)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "iter_residual", "options": [["iter_residual", "iter_residual", true], ["iter_jackknife", "iter_jackknife", false], ["ransac", "ransac", false], ["none", "none", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "useIterativeChauvenet", "argument": "-RTNormalization:useIterativeChauvenet", "type": "boolean", "label": "Whether to use Chauvenet's criterion when using iterative methods", "help": "This should be used if the algorithm removes too many datapoints but it may lead to true outliers being retained", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "IntegerToolParameter", "name": "RANSACMaxIterations", "argument": "-RTNormalization:RANSACMaxIterations", "type": "integer", "label": "Maximum iterations for the RANSAC outlier detection algorithm", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "RANSACMaxPercentRTThreshold", "argument": "-RTNormalization:RANSACMaxPercentRTThreshold", "type": "integer", "label": "Maximum threshold in RT dimension for the RANSAC outlier detection algorithm (in percent of the total gradient)", "help": "Default is set to 3% which is around +/- 4 minutes on a 120 gradient", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "RANSACSamplingSize", "argument": "-RTNormalization:RANSACSamplingSize", "type": "integer", "label": "Sampling size of data points per iteration for the RANSAC outlier detection algorithm", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "algorithm", "type": "section", "title": "Algorithm parameters section", "help": "", "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "stop_report_after_feature", "argument": "-algorithm:stop_report_after_feature", "type": "integer", "label": "Stop reporting after feature (ordered by quality; -1 means do not stop)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "rt_extraction_window", "argument": "-algorithm:rt_extraction_window", "type": "float", "label": "Only extract RT around this value (-1 means extract over the whole range, a value of 500 means to extract around +/- 500 s of the expected elution)", "help": "For this to work, the TraML input file needs to contain normalized RT values", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "rt_normalization_factor", "argument": "-algorithm:rt_normalization_factor", "type": "float", "label": "The normalized RT is expected to be between 0 and 1", "help": "If your normalized RT has a different range, pass this here (e.g. it goes from 0 to 100, set this value to 100)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "quantification_cutoff", "argument": "-algorithm:quantification_cutoff", "type": "float", "label": "Cutoff in m/z below which peaks should not be used for quantification any more", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "write_convex_hull", "argument": "-algorithm:write_convex_hull", "type": "boolean", "label": "Whether to write out all points of all features into the featureXML", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "SelectToolParameter", "name": "spectrum_addition_method", "argument": "-algorithm:spectrum_addition_method", "type": "select", "label": "For spectrum addition, either use simple concatenation or use peak resampling", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "simple", "options": [["simple", "simple", true], ["resample", "resample", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "add_up_spectra", "argument": "-algorithm:add_up_spectra", "type": "integer", "label": "Add up spectra around the peak apex (needs to be a non-even integer)", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "spacing_for_spectra_resampling", "argument": "-algorithm:spacing_for_spectra_resampling", "type": "float", "label": "If spectra are to be added, use this spacing to add them up", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.005", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "uis_threshold_sn", "argument": "-algorithm:uis_threshold_sn", "type": "integer", "label": "S/N threshold to consider identification transition (set to -1 to consider all)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "uis_threshold_peak_area", "argument": "-algorithm:uis_threshold_peak_area", "type": "integer", "label": "Peak area threshold to consider identification transition (set to -1 to consider all)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "scoring_model", "argument": "-algorithm:scoring_model", "type": "select", "label": "Scoring model to use", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["default", "default", true], ["single_transition", "single_transition", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "im_extra_drift", "argument": "-algorithm:im_extra_drift", "type": "float", "label": "Extra drift time to extract for IM scoring (as a fraction", "help": "e.g. 0.25 means 25% extra on each side)", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "strict", "argument": "-algorithm:strict", "type": "boolean", "label": "Whether to error (true) or skip (false) if a transition in a transition group does not have a corresponding chromatogram", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "Section", "name": "TransitionGroupPicker", "type": "section", "title": "", "help": "", "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "stop_after_feature", "argument": "-algorithm:TransitionGroupPicker:stop_after_feature", "type": "integer", "label": "Stop finding after feature (ordered by intensity; -1 means do not stop)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "stop_after_intensity_ratio", "argument": "-algorithm:TransitionGroupPicker:stop_after_intensity_ratio", "type": "float", "label": "Stop after reaching intensity ratio", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0001", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_peak_width", "argument": "-algorithm:TransitionGroupPicker:min_peak_width", "type": "float", "label": "Minimal peak width (s), discard all peaks below this value (-1 means no action)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.001", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "peak_integration", "argument": "-algorithm:TransitionGroupPicker:peak_integration", "type": "select", "label": "Calculate the peak area and height either the smoothed or the raw chromatogram data", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "original", "options": [["original", "original", true], ["smoothed", "smoothed", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "background_subtraction", "argument": "-algorithm:TransitionGroupPicker:background_subtraction", "type": "select", "label": "Remove background from peak signal using estimated noise levels", "help": "The 'original' method is only provided for historical purposes, please use the 'exact' method and set parameters using the PeakIntegrator: settings. The same original or smoothed chromatogram specified by peak_integration will be used for background estimation", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["none", "none", true], ["original", "original", false], ["exact", "exact", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "recalculate_peaks", "argument": "-algorithm:TransitionGroupPicker:recalculate_peaks", "type": "boolean", "label": "Tries to get better peak picking by looking at peak consistency of all picked peaks", "help": "Tries to use the consensus (median) peak border if the variation within the picked peaks is too large", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_precursors", "argument": "-algorithm:TransitionGroupPicker:use_precursors", "type": "boolean", "label": "Use precursor chromatogram for peak picking (note that this may lead to precursor signal driving the peak picking)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_consensus", "argument": "-algorithm:TransitionGroupPicker:use_consensus", "type": "boolean", "label": "Use consensus peak boundaries when computing transition group picking (if false, compute independent peak boundaries for each transition)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "FloatToolParameter", "name": "recalculate_peaks_max_z", "argument": "-algorithm:TransitionGroupPicker:recalculate_peaks_max_z", "type": "float", "label": "Determines the maximal Z-Score (difference measured in standard deviations) that is considered too large for peak boundaries", "help": "If the Z-Score is above this value, the median is used for peak boundaries (default value 1.0)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "minimal_quality", "argument": "-algorithm:TransitionGroupPicker:minimal_quality", "type": "float", "label": "Only if compute_peak_quality is set, this parameter will not consider peaks below this quality threshold", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-10000.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "resample_boundary", "argument": "-algorithm:TransitionGroupPicker:resample_boundary", "type": "float", "label": "For computing peak quality, how many extra seconds should be sample left and right of the actual peak", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "15.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "compute_peak_quality", "argument": "-algorithm:TransitionGroupPicker:compute_peak_quality", "type": "boolean", "label": "Tries to compute a quality value for each peakgroup and detect outlier transitions", "help": "The resulting score is centered around zero and values above 0 are generally good and below -1 or -2 are usually bad", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "compute_peak_shape_metrics", "argument": "-algorithm:TransitionGroupPicker:compute_peak_shape_metrics", "type": "boolean", "label": "Calculates various peak shape metrics", "help": "(e.g., tailing) that can be used for downstream QC/QA", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "compute_total_mi", "argument": "-algorithm:TransitionGroupPicker:compute_total_mi", "type": "boolean", "label": "Compute mutual information metrics for individual transitions that can be used for OpenSWATH/IPF scoring", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "SelectToolParameter", "name": "boundary_selection_method", "argument": "-algorithm:TransitionGroupPicker:boundary_selection_method", "type": "select", "label": "Method to use when selecting the best boundaries for peaks", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "largest", "options": [["largest", "largest", true], ["widest", "widest", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Section", "name": "PeakPickerMRM", "type": "section", "title": "", "help": "", "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "sgolay_frame_length", "argument": "-algorithm:TransitionGroupPicker:PeakPickerMRM:sgolay_frame_length", "type": "integer", "label": "The number of subsequent data points used for smoothing", "help": "This number has to be uneven. If it is not, 1 will be added", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "15", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "sgolay_polynomial_order", "argument": "-algorithm:TransitionGroupPicker:PeakPickerMRM:sgolay_polynomial_order", "type": "integer", "label": "Order of the polynomial that is fitted", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "gauss_width", "argument": "-algorithm:TransitionGroupPicker:PeakPickerMRM:gauss_width", "type": "float", "label": "Gaussian width in seconds, estimated peak size", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "use_gauss", "argument": "-algorithm:TransitionGroupPicker:PeakPickerMRM:use_gauss", "type": "boolean", "label": "Use Gaussian filter for smoothing (alternative is Savitzky-Golay filter)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "FloatToolParameter", "name": "peak_width", "argument": "-algorithm:TransitionGroupPicker:PeakPickerMRM:peak_width", "type": "float", "label": "Force a certain minimal peak_width on the data", "help": "(e.g. extend the peak at least by this amount on both sides) in seconds. -1 turns this feature off", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "signal_to_noise", "argument": "-algorithm:TransitionGroupPicker:PeakPickerMRM:signal_to_noise", "type": "float", "label": "Signal-to-noise threshold at which a peak will not be extended any more", "help": "Note that setting this too high (e.g. 1.0) can lead to peaks whose flanks are not fully captured", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "sn_win_len", "argument": "-algorithm:TransitionGroupPicker:PeakPickerMRM:sn_win_len", "type": "float", "label": "Signal to noise window length", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "sn_bin_count", "argument": "-algorithm:TransitionGroupPicker:PeakPickerMRM:sn_bin_count", "type": "integer", "label": "Signal to noise bin count", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "30", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "write_sn_log_messages", "argument": "-algorithm:TransitionGroupPicker:PeakPickerMRM:write_sn_log_messages", "type": "boolean", "label": "Write out log messages of the signal-to-noise estimator in case of sparse windows or median in rightmost histogram bin", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "remove_overlapping_peaks", "argument": "-algorithm:TransitionGroupPicker:PeakPickerMRM:remove_overlapping_peaks", "type": "boolean", "label": "Try to remove overlapping peaks during peak picking", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "SelectToolParameter", "name": "method", "argument": "-algorithm:TransitionGroupPicker:PeakPickerMRM:method", "type": "select", "label": "Which method to choose for chromatographic peak-picking (OpenSWATH legacy on raw data, corrected picking on smoothed chromatogram or Crawdad on smoothed chromatogram)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "corrected", "options": [["legacy", "legacy", false], ["corrected", "corrected", true], ["crawdad", "crawdad", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "Section", "name": "PeakIntegrator", "type": "section", "title": "", "help": "", "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "integration_type", "argument": "-algorithm:TransitionGroupPicker:PeakIntegrator:integration_type", "type": "select", "label": "The integration technique to use in integratePeak() and estimateBackground() which uses either the summed intensity, integration by Simpson's rule or trapezoidal integration", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "intensity_sum", "options": [["intensity_sum", "intensity_sum", true], ["simpson", "simpson", false], ["trapezoid", "trapezoid", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "baseline_type", "argument": "-algorithm:TransitionGroupPicker:PeakIntegrator:baseline_type", "type": "select", "label": "The baseline type to use in estimateBackground() based on the peak boundaries", "help": "A rectangular baseline shape is computed based either on the minimal intensity of the peak boundaries, the maximum intensity or the average intensity (base_to_base)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "base_to_base", "options": [["base_to_base", "base_to_base", true], ["vertical_division", "vertical_division", false], ["vertical_division_min", "vertical_division_min", false], ["vertical_division_max", "vertical_division_max", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "fit_EMG", "argument": "-algorithm:TransitionGroupPicker:PeakIntegrator:fit_EMG", "type": "boolean", "label": "Fit the chromatogram/spectrum to the EMG peak model", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}]}, {"model_class": "Section", "name": "DIAScoring", "type": "section", "title": "", "help": "", "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "dia_extraction_window", "argument": "-algorithm:DIAScoring:dia_extraction_window", "type": "float", "label": "DIA extraction window in Th or ppm", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "dia_extraction_unit", "argument": "-algorithm:DIAScoring:dia_extraction_unit", "type": "select", "label": "DIA extraction window unit", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Th", "options": [["Th", "Th", true], ["ppm", "ppm", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "dia_centroided", "argument": "-algorithm:DIAScoring:dia_centroided", "type": "boolean", "label": "Use centroided DIA data", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "FloatToolParameter", "name": "dia_byseries_intensity_min", "argument": "-algorithm:DIAScoring:dia_byseries_intensity_min", "type": "float", "label": "DIA b/y series minimum intensity to conside", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "300.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "dia_byseries_ppm_diff", "argument": "-algorithm:DIAScoring:dia_byseries_ppm_diff", "type": "float", "label": "DIA b/y series minimal difference in ppm to conside", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "dia_nr_isotopes", "argument": "-algorithm:DIAScoring:dia_nr_isotopes", "type": "integer", "label": "DIA number of isotopes to conside", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "dia_nr_charges", "argument": "-algorithm:DIAScoring:dia_nr_charges", "type": "integer", "label": "DIA number of charges to conside", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "peak_before_mono_max_ppm_diff", "argument": "-algorithm:DIAScoring:peak_before_mono_max_ppm_diff", "type": "float", "label": "DIA maximal difference in ppm to count a peak at lower m/z when searching for evidence that a peak might not be monoisotopic", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20.0", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "EMGScoring", "type": "section", "title": "", "help": "", "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "interpolation_step", "argument": "-algorithm:EMGScoring:interpolation_step", "type": "float", "label": "Sampling rate for the interpolation of the model function", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.2", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "tolerance_stdev_bounding_box", "argument": "-algorithm:EMGScoring:tolerance_stdev_bounding_box", "type": "float", "label": "Bounding box has range [minimim of data, maximum of data] enlarged by tolerance_stdev_bounding_box times the standard deviation of the data", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_iteration", "argument": "-algorithm:EMGScoring:max_iteration", "type": "integer", "label": "Maximum number of iterations using by Levenberg-Marquardt algorithm", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "init_mom", "argument": "-algorithm:EMGScoring:init_mom", "type": "boolean", "label": "Initialize parameters using method of moments estimators", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "Section", "name": "statistics", "type": "section", "title": "", "help": "", "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "mean", "argument": "-algorithm:EMGScoring:statistics:mean", "type": "float", "label": "Centroid position of the model", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "variance", "argument": "-algorithm:EMGScoring:statistics:variance", "type": "float", "label": "Variance of the model", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}]}, {"model_class": "Section", "name": "Scores", "type": "section", "title": "", "help": "", "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "use_shape_score", "argument": "-algorithm:Scores:use_shape_score", "type": "boolean", "label": "Use the shape score (this score measures the similarity in shape of the transitions using a cross-correlation)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_coelution_score", "argument": "-algorithm:Scores:use_coelution_score", "type": "boolean", "label": "Use the coelution score (this score measures the similarity in coelution of the transitions using a cross-correlation)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_rt_score", "argument": "-algorithm:Scores:use_rt_score", "type": "boolean", "label": "Use the retention time score (this score measure the difference in retention time)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_library_score", "argument": "-algorithm:Scores:use_library_score", "type": "boolean", "label": "Use the library score", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_elution_model_score", "argument": "-algorithm:Scores:use_elution_model_score", "type": "boolean", "label": "Use the elution model (EMG) score (this score fits a gaussian model to the peak and checks the fit)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_intensity_score", "argument": "-algorithm:Scores:use_intensity_score", "type": "boolean", "label": "Use the intensity score", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_nr_peaks_score", "argument": "-algorithm:Scores:use_nr_peaks_score", "type": "boolean", "label": "Use the number of peaks score", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_total_xic_score", "argument": "-algorithm:Scores:use_total_xic_score", "type": "boolean", "label": "Use the total XIC score", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_total_mi_score", "argument": "-algorithm:Scores:use_total_mi_score", "type": "boolean", "label": "Use the total MI score", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_sn_score", "argument": "-algorithm:Scores:use_sn_score", "type": "boolean", "label": "Use the SN (signal to noise) score", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_mi_score", "argument": "-algorithm:Scores:use_mi_score", "type": "boolean", "label": "Use the MI (mutual information) score", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_dia_scores", "argument": "-algorithm:Scores:use_dia_scores", "type": "boolean", "label": "Use the DIA (SWATH) scores", "help": "If turned off, will not use fragment ion spectra for scoring", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_ms1_correlation", "argument": "-algorithm:Scores:use_ms1_correlation", "type": "boolean", "label": "Use the correlation scores with the MS1 elution profiles", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_sonar_scores", "argument": "-algorithm:Scores:use_sonar_scores", "type": "boolean", "label": "Use the scores for SONAR scans (scanning swath)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_ion_mobility_scores", "argument": "-algorithm:Scores:use_ion_mobility_scores", "type": "boolean", "label": "Use the scores for Ion Mobility scans", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_ms1_fullscan", "argument": "-algorithm:Scores:use_ms1_fullscan", "type": "boolean", "label": "Use the full MS1 scan at the peak apex for scoring (ppm accuracy of precursor and isotopic pattern)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_ms1_mi", "argument": "-algorithm:Scores:use_ms1_mi", "type": "boolean", "label": "Use the MS1 MI score", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_uis_scores", "argument": "-algorithm:Scores:use_uis_scores", "type": "boolean", "label": "Use UIS scores for peptidoform identification", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_ionseries_scores", "argument": "-algorithm:Scores:use_ionseries_scores", "type": "boolean", "label": "Use MS2-level b/y ion-series scores for peptidoform identification", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "use_ms2_isotope_scores", "argument": "-algorithm:Scores:use_ms2_isotope_scores", "type": "boolean", "label": "Use MS2-level isotope scores (pearson & manhattan) across product transitions (based on ID if annotated or averagine)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}]}]}, {"model_class": "Section", "name": "peptideEstimation", "type": "section", "title": "Parameters for the peptide estimation (use -estimateBestPeptides to enable)", "help": "", "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "InitialQualityCutoff", "argument": "-peptideEstimation:InitialQualityCutoff", "type": "float", "label": "The initial overall quality cutoff for a peak to be scored (range ca", "help": "-2 to 2)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "OverallQualityCutoff", "argument": "-peptideEstimation:OverallQualityCutoff", "type": "float", "label": "The overall quality cutoff for a peak to go into the retention time estimation (range ca", "help": "0 to 10)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5.5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "NrRTBins", "argument": "-peptideEstimation:NrRTBins", "type": "integer", "label": "Number of RT bins to use to compute coverage", "help": "This option should be used to ensure that there is a complete coverage of the RT space (this should detect cases where only a part of the RT gradient is actually covered by normalization peptides)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "MinPeptidesPerBin", "argument": "-peptideEstimation:MinPeptidesPerBin", "type": "integer", "label": "Minimal number of peptides that are required for a bin to counted as 'covered'", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "MinBinsFilled", "argument": "-peptideEstimation:MinBinsFilled", "type": "integer", "label": "Minimal number of bins required to be covered", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "8", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "adv_opts", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "force", "argument": "-force", "type": "boolean", "label": "Overrides tool-specific checks", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "HiddenToolParameter", "name": "test", "argument": "-test", "type": "hidden", "label": "Enables the test mode (needed for internal use only)", "help": "", "refresh_on_change": false, "optional": true, "hidden": true, "is_dynamic": false, "value": "False"}]}, {"model_class": "SelectToolParameter", "name": "OPTIONAL_OUTPUTS", "argument": null, "type": "select", "label": "Optional outputs", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Output used ctd (ini) configuration file", "ctd_out_FLAG", false]], "display": null, "multiple": true, "textable": false}], "outputs": [{"model_class": "ToolOutput", "name": "out", "format": "trafoxml", "label": "${tool.name} on ${on_string}: out", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2032", "edam_data": "data_2536", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "ctd_out", "format": "xml", "label": "${tool.name} on ${on_string}: ctd", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2332", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "proteomics", "panel_section_name": "Proteomics", "form_style": "regular"}