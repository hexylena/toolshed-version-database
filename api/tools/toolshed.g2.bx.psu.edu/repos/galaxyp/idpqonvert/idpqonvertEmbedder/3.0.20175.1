{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/idpqonvert/idpqonvertEmbedder/3.0.20175.1", "name": "idpEmbedder", "version": "3.0.20175.1", "description": "Embed human/mouse gene metadata into IDPicker files", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "idpqonvert", "owner": "galaxyp", "changeset_revision": "3a95a7f42698", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Input idpDB file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["idpdb"], "edam": {"edam_formats": ["format_3621"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "EmbedGeneMetadata", "argument": "-EmbedGeneMetadata", "type": "boolean", "label": "Embed Gene Metadata?", "help": "Allows gene-centric analysis in IDPicker. The gene metadata embedding only works for human/mouse proteins from a RefSeq database. For best results, run idpQonvert with RefSeq no matter what database was used for the search: idpQonvert always remap the peptides anyway. Non-human/mouse proteins and any unmappable human/mouse proteins will get gene ids like \"Unmapped_<protein accession>\". This option, run by itself, is very fast.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "Conditional", "name": "use_raw_data_condition", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "false", "inputs": []}, {"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "DataToolParameter", "name": "input_raw", "argument": null, "type": "data", "label": "Input raw MS files", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["mzml", "mzxml", "mgf", "ms2", "mz5"], "edam": {"edam_formats": ["format_3244", "format_3654", "format_3651", "format_2330", "format_3590"], "edam_data": ["data_2536", "data_2536", "data_2536", "data_0006", "data_0006"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "EmbedSpectrumSources", "argument": "-EmbedSpectrumSources", "type": "boolean", "label": "Embed Spectrum Sources?", "help": "Allows visualizing peptide-spectrum-matches without downloading the raw data. Embedding spectra will greatly increase the size of the database, even though only spectra that passed the import FDR filter will be included. This option can take a LONG time to run.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "EmbedSpectrumScanTimes", "argument": "-EmbedSpectrumScanTimes", "type": "boolean", "label": "Embed Spectrum Scan Times?", "help": "If the pepXML/mzIdentML file did not contain scan time (retention time) information, this will look up that information in the raw data. This option, run by itself, will take some time (it has to open every raw file).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "Conditional", "name": "quantitation_method_condition", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "ITRAQ4plex", "inputs": [{"model_class": "FloatToolParameter", "name": "ReporterIonMzTolerance", "argument": "-ReporterIonMzTolerance", "type": "float", "label": "Tolerance window to search for iTRAQ/TMT reporter ions", "help": "The most intense ion in the tolerance window is used as the reporter ion intensity.", "refresh_on_change": false, "min": 1e-06, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.015", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "ReporterIonMzTolerance_units", "argument": null, "type": "select", "label": "Tolerance units", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "daltons", "options": [["Parts per million", "ppm", false], ["Daltons", "daltons", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "NormalizeReporterIons", "argument": "-NormalizeReporterIons", "type": "boolean", "label": "Normalize reporter ion channels to match 1:1 ratio?", "help": "This option will adjust the intensity of each channel so that the total intensity of each channel across an entire source file is the same.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "ITRAQ8plex", "inputs": [{"model_class": "FloatToolParameter", "name": "ReporterIonMzTolerance", "argument": "-ReporterIonMzTolerance", "type": "float", "label": "Tolerance window to search for iTRAQ/TMT reporter ions", "help": "The most intense ion in the tolerance window is used as the reporter ion intensity.", "refresh_on_change": false, "min": 1e-06, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.015", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "ReporterIonMzTolerance_units", "argument": null, "type": "select", "label": "Tolerance units", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "daltons", "options": [["Parts per million", "ppm", false], ["Daltons", "daltons", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "NormalizeReporterIons", "argument": "-NormalizeReporterIons", "type": "boolean", "label": "Normalize reporter ion channels to match 1:1 ratio?", "help": "This option will adjust the intensity of each channel so that the total intensity of each channel across an entire source file is the same.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "TMT2plex", "inputs": [{"model_class": "FloatToolParameter", "name": "ReporterIonMzTolerance", "argument": "-ReporterIonMzTolerance", "type": "float", "label": "Tolerance window to search for iTRAQ/TMT reporter ions", "help": "The most intense ion in the tolerance window is used as the reporter ion intensity.", "refresh_on_change": false, "min": 1e-06, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.015", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "ReporterIonMzTolerance_units", "argument": null, "type": "select", "label": "Tolerance units", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "daltons", "options": [["Parts per million", "ppm", false], ["Daltons", "daltons", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "NormalizeReporterIons", "argument": "-NormalizeReporterIons", "type": "boolean", "label": "Normalize reporter ion channels to match 1:1 ratio?", "help": "This option will adjust the intensity of each channel so that the total intensity of each channel across an entire source file is the same.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "TMT6plex", "inputs": [{"model_class": "FloatToolParameter", "name": "ReporterIonMzTolerance", "argument": "-ReporterIonMzTolerance", "type": "float", "label": "Tolerance window to search for iTRAQ/TMT reporter ions", "help": "The most intense ion in the tolerance window is used as the reporter ion intensity.", "refresh_on_change": false, "min": 1e-06, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.015", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "ReporterIonMzTolerance_units", "argument": null, "type": "select", "label": "Tolerance units", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "daltons", "options": [["Parts per million", "ppm", false], ["Daltons", "daltons", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "NormalizeReporterIons", "argument": "-NormalizeReporterIons", "type": "boolean", "label": "Normalize reporter ion channels to match 1:1 ratio?", "help": "This option will adjust the intensity of each channel so that the total intensity of each channel across an entire source file is the same.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "TMT10plex", "inputs": [{"model_class": "FloatToolParameter", "name": "ReporterIonMzTolerance", "argument": "-ReporterIonMzTolerance", "type": "float", "label": "Tolerance window to search for iTRAQ/TMT reporter ions", "help": "The most intense ion in the tolerance window is used as the reporter ion intensity.", "refresh_on_change": false, "min": 1e-06, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.003", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "ReporterIonMzTolerance_units", "argument": null, "type": "select", "label": "Tolerance units", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "daltons", "options": [["Parts per million", "ppm", false], ["Daltons", "daltons", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "NormalizeReporterIons", "argument": "-NormalizeReporterIons", "type": "boolean", "label": "Normalize reporter ion channels to match 1:1 ratio?", "help": "This option will adjust the intensity of each channel so that the total intensity of each channel across an entire source file is the same.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "TMT11plex", "inputs": [{"model_class": "FloatToolParameter", "name": "ReporterIonMzTolerance", "argument": "-ReporterIonMzTolerance", "type": "float", "label": "Tolerance window to search for iTRAQ/TMT reporter ions", "help": "The most intense ion in the tolerance window is used as the reporter ion intensity.", "refresh_on_change": false, "min": 1e-06, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.003", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "ReporterIonMzTolerance_units", "argument": null, "type": "select", "label": "Tolerance units", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "daltons", "options": [["Parts per million", "ppm", false], ["Daltons", "daltons", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "NormalizeReporterIons", "argument": "-NormalizeReporterIons", "type": "boolean", "label": "Normalize reporter ion channels to match 1:1 ratio?", "help": "This option will adjust the intensity of each channel so that the total intensity of each channel across an entire source file is the same.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "TMTpro16plex", "inputs": [{"model_class": "FloatToolParameter", "name": "ReporterIonMzTolerance", "argument": "-ReporterIonMzTolerance", "type": "float", "label": "Tolerance window to search for iTRAQ/TMT reporter ions", "help": "The most intense ion in the tolerance window is used as the reporter ion intensity.", "refresh_on_change": false, "min": 1e-06, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.003", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "ReporterIonMzTolerance_units", "argument": null, "type": "select", "label": "Tolerance units", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "daltons", "options": [["Parts per million", "ppm", false], ["Daltons", "daltons", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "NormalizeReporterIons", "argument": "-NormalizeReporterIons", "type": "boolean", "label": "Normalize reporter ion channels to match 1:1 ratio?", "help": "This option will adjust the intensity of each channel so that the total intensity of each channel across an entire source file is the same.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}, {"model_class": "ConditionalWhen", "value": "None", "inputs": []}, {"model_class": "ConditionalWhen", "value": "LabelFree", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "QuantitationMethod", "argument": "-QuantitationMethod", "type": "select", "label": "Quantitation Method", "help": "Enables quantitation methods other than spectral counting. For isobaric isotope labelling quantitation (iTRAQ/TMT) or intensity-based label-free quantitation (XIC), select the appropriate QuantitationMethod here. You have to keep iTRAQ/TMT and label-free data separate since you can only specify a single QuantitationMethod for the entire assembly. Like embedding spectrum sources, this option can take a LONG time to run, although not quite as long.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "None", "options": [["None", "None", true], ["Label-free (XIC)", "LabelFree", false], ["iTRAQ 4-plex", "ITRAQ4plex", false], ["iTRAQ 8-plex", "ITRAQ8plex", false], ["TMT 2-plex", "TMT2plex", false], ["TMT 6-plex", "TMT6plex", false], ["TMT 10-plex", "TMT10plex", false], ["TMT 11-plex", "TMT11plex", false], ["TMTpro 16-plex", "TMTpro16plex", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "BooleanToolParameter", "name": "use_raw_data", "argument": null, "type": "boolean", "label": "Do you have the raw data (spectra)?", "help": "More embed options are available if the raw spectra are available.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}], "outputs": [{"model_class": "ToolOutput", "name": "output", "format": "idpdb", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output", "edam_format": "format_3621", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "proteomics", "panel_section_name": "Proteomics", "form_style": "regular"}