{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/openms_msfraggeradapter/MSFraggerAdapter/2.8+galaxy0", "name": "MSFraggerAdapter", "version": "2.8+galaxy0", "description": "Peptide Identification with MSFragger.Important note:The Regents of the University of Michigan (\u201cMichigan\u201d) grants us permission to redistribute    the MS Fragger application developed by Michigan within the OpenMS Pipeline and make available for use on related service offerings supported by the University of Tubingen and the Center forIntegrative Bioinformatics.                                                                    Per the license agreement the use of the pipeline and associated materials is for academic     research, non-commercial or educational purposes. Any commercial use inquiries                 must be directed to the University of Michigan Technology Transfer Office at                   techtransfer@umich.edu. All right title and interest in MS Fragger shall remain with the       University of Michigan.For details, please see the supplied license file or                                           https://raw.githubusercontent.com/OpenMS/THIRDPARTY/master/All/MSFragger/License.txt", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "openms_msfraggeradapter", "owner": "galaxyp", "changeset_revision": "9866e1170611", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "SelectToolParameter", "name": "license", "argument": "-license", "type": "select", "label": "Set to yes, if you have read and agreed to the MSFragger license terms", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["yes", "yes", false], ["no", "no", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "java_heapmemory", "argument": "-java_heapmemory", "type": "integer", "label": "Maximum Java heap size (in MB)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "3500", "area": false, "datalist": []}, {"model_class": "DataToolParameter", "name": "in", "argument": "-in", "type": "data", "label": "Input File with specta for MSFragge", "help": " select mzml,mzxml data sets(s)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["mzml", "mzxml"], "edam": {"edam_formats": ["format_3244", "format_3654"], "edam_data": ["data_2536", "data_2536"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "database", "argument": "-database", "type": "data", "label": "Protein FASTA database file path", "help": " select fasta data sets(s)", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "reindex", "argument": "-reindex", "type": "boolean", "label": "Recalculate peptide to protein association using OpenMS", "help": "Annotates target-decoy information", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "Section", "name": "tolerance", "type": "section", "title": "Search Tolerances", "help": "", "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "precursor_mass_tolerance_lower", "argument": "-tolerance:precursor_mass_tolerance_lower", "type": "float", "label": "Lower precursor mass tolerance", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "20.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "precursor_mass_tolerance_upper", "argument": "-tolerance:precursor_mass_tolerance_upper", "type": "float", "label": "Upper precursor mass tolerance", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "20.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "precursor_mass_unit", "argument": "-tolerance:precursor_mass_unit", "type": "select", "label": "Unit of precursor mass tolerance", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "ppm", "options": [["Da", "Da", false], ["ppm", "ppm", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "precursor_true_tolerance", "argument": "-tolerance:precursor_true_tolerance", "type": "float", "label": "True precursor mass tolerance (window is +/- this value)", "help": "Used for tie breaker of results (in spectrally ambiguous cases) and zero bin boosting in open searches (0 disables these features). This option is STRONGLY recommended for open searches", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "precursor_true_unit", "argument": "-tolerance:precursor_true_unit", "type": "select", "label": "Unit of precursor true tolerance", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "ppm", "options": [["Da", "Da", false], ["ppm", "ppm", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "fragment_mass_tolerance", "argument": "-tolerance:fragment_mass_tolerance", "type": "float", "label": "Fragment mass tolerance (window is +/- this value)", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "20.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fragment_mass_unit", "argument": "-tolerance:fragment_mass_unit", "type": "select", "label": "Unit of fragment mass tolerance", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "ppm", "options": [["Da", "Da", false], ["ppm", "ppm", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "isotope_error", "argument": "-tolerance:isotope_error", "type": "select", "label": "Isotope correction for MS/MS events triggered on isotopic peaks", "help": "Should be set to 0 (disabled) for open search or 0/1/2 for correction of narrow window searches. Shifts the precursor mass window to multiples of this value multiplied by the mass of C13-C12", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "options": [["0", "0", true], ["1", "1", false], ["2", "2", false], ["0/1/2", "0/1/2", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "Section", "name": "digest", "type": "section", "title": "In-Silico Digestion Parameters", "help": "", "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "search_enzyme_name", "argument": "-digest:search_enzyme_name", "type": "select", "label": "Name of the enzyme to be written to the pepXML file", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "Trypsin", "options": [["proline endopeptidase", "proline endopeptidase", false], ["glutamyl endopeptidase", "glutamyl endopeptidase", false], ["elastase-trypsin-chymotrypsin", "elastase-trypsin-chymotrypsin", false], ["no cleavage", "no cleavage", false], ["unspecific cleavage", "unspecific cleavage", false], ["Arg-C", "Arg-C", false], ["Arg-C/P", "Arg-C/P", false], ["Asp-N", "Asp-N", false], ["proline-endopeptidase/HKR", "proline-endopeptidase/HKR", false], ["Glu-C+P", "Glu-C+P", false], ["PepsinA + P", "PepsinA + P", false], ["cyanogen-bromide", "cyanogen-bromide", false], ["Clostripain/P", "Clostripain/P", false], ["V8-E", "V8-E", false], ["leukocyte elastase", "leukocyte elastase", false], ["Asp-N/B", "Asp-N/B", false], ["Asp-N_ambic", "Asp-N_ambic", false], ["Chymotrypsin", "Chymotrypsin", false], ["Chymotrypsin/P", "Chymotrypsin/P", false], ["CNBr", "CNBr", false], ["Formic_acid", "Formic_acid", false], ["Lys-C", "Lys-C", false], ["Lys-N", "Lys-N", false], ["Lys-C/P", "Lys-C/P", false], ["PepsinA", "PepsinA", false], ["TrypChymo", "TrypChymo", false], ["Trypsin/P", "Trypsin/P", false], ["V8-DE", "V8-DE", false], ["Alpha-lytic protease", "Alpha-lytic protease", false], ["2-iodobenzoate", "2-iodobenzoate", false], ["iodosobenzoate", "iodosobenzoate", false], ["staphylococcal protease/D", "staphylococcal protease/D", false], ["Trypsin", "Trypsin", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "search_enzyme_cutafter", "argument": "-digest:search_enzyme_cutafter", "type": "text", "label": "Residues after which the enzyme cuts (specified as a string of amino acids)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "KR", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "search_enzyme_nocutbefore", "argument": "-digest:search_enzyme_nocutbefore", "type": "text", "label": "Residues that the enzyme will not cut before", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "P", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "num_enzyme_termini", "argument": "-digest:num_enzyme_termini", "type": "select", "label": "Number of enzyme termini (non-enzymatic (0), semi (1), fully (2)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "fully", "options": [["non-enzymatic", "non-enzymatic", false], ["semi", "semi", false], ["fully", "fully", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "allowed_missed_cleavage", "argument": "-digest:allowed_missed_cleavage", "type": "select", "label": "Allowed number of missed cleavages", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "2", "options": [["0", "0", false], ["1", "1", false], ["2", "2", true], ["3", "3", false], ["4", "4", false], ["5", "5", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "min_length", "argument": "-digest:min_length", "type": "integer", "label": "Minimum length of peptides to be generated during in-silico digestion", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "7", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_length", "argument": "-digest:max_length", "type": "integer", "label": "Maximum length of peptides to be generated during in-silico digestion", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "64", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mass_range_min", "argument": "-digest:mass_range_min", "type": "float", "label": "Min mass of peptides to be generated (Da)", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "500.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mass_range_max", "argument": "-digest:mass_range_max", "type": "float", "label": "Max mass of peptides to be generated (Da)", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "5000.0", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "varmod", "type": "section", "title": "Variable Modification Parameters", "help": "", "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "clip_nterm_m", "argument": "-varmod:clip_nterm_m", "type": "boolean", "label": "Specifies the trimming of a protein N-terminal methionine as a variable modification", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "TextToolParameter", "name": "masses", "argument": "-varmod:masses", "type": "text", "label": "Masses for variable modifications", "help": " (space separated list, in order to allow for spaces in list items surround them by single quotes)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "syntaxes", "argument": "-varmod:syntaxes", "type": "text", "label": "Syntax Strings for variable modifications", "help": " (space separated list, in order to allow for spaces in list items surround them by single quotes)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "unimod", "argument": "-varmod:unimod", "type": "text", "label": "Variable modifications in unimod syntax, is added to mass+syntax varmod list", "help": " (space separated list, in order to allow for spaces in list items surround them by single quotes)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "enable_common", "argument": "-varmod:enable_common", "type": "boolean", "label": "Enable common variable modifications (15.9949 M and 42.0106 [^)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "not_allow_multiple_variable_mods_on_residue", "argument": "-varmod:not_allow_multiple_variable_mods_on_residue", "type": "boolean", "label": "Do not allow any one amino acid to be modified by multiple variable modifications", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "SelectToolParameter", "name": "max_variable_mods_per_peptide", "argument": "-varmod:max_variable_mods_per_peptide", "type": "select", "label": "Maximum total number of variable modifications per peptide", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "2", "options": [["0", "0", false], ["1", "1", false], ["2", "2", true], ["3", "3", false], ["4", "4", false], ["5", "5", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "max_variable_mods_combinations", "argument": "-varmod:max_variable_mods_combinations", "type": "integer", "label": "Maximum allowed number of modified variably modified peptides from each peptide sequence, (maximum of 65534)", "help": "If a greater number than the maximum is generated, only the unmodified peptide is considered", "refresh_on_change": false, "min": 0, "max": 65534, "optional": true, "hidden": false, "is_dynamic": false, "value": "5000", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "spectrum", "type": "section", "title": "Spectrum Processing Parameters", "help": "", "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "minimum_peaks", "argument": "-spectrum:minimum_peaks", "type": "integer", "label": "Minimum number of peaks in experimental spectrum for matching", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "use_topn_peaks", "argument": "-spectrum:use_topn_peaks", "type": "integer", "label": "Pre-process experimental spectrum to only use top N peaks", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "minimum_ratio", "argument": "-spectrum:minimum_ratio", "type": "float", "label": "Filters out all peaks in experimental spectrum less intense than this multiple of the base peak intensity", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "clear_mz_range_min", "argument": "-spectrum:clear_mz_range_min", "type": "float", "label": "Removes peaks in this m/z range prior to matching (minimum value)", "help": "Useful for iTRAQ/TMT experiments (i.e. 0.0 150.0)", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "clear_mz_range_max", "argument": "-spectrum:clear_mz_range_max", "type": "float", "label": "Removes peaks in this m/z range prior to matching (maximum value)", "help": "Useful for iTRAQ/TMT experiments (i.e. 0.0 150.0)", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "max_fragment_charge", "argument": "-spectrum:max_fragment_charge", "type": "select", "label": "Maximum charge state for theoretical fragments to match", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "2", "options": [["1", "1", false], ["2", "2", true], ["3", "3", false], ["4", "4", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "override_charge", "argument": "-spectrum:override_charge", "type": "boolean", "label": "Ignores precursor charge and uses charge state specified in precursor_charge range (parameters: spectrum:precursor_charge_min and spectrum:precursor_charge_max)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "IntegerToolParameter", "name": "precursor_charge_min", "argument": "-spectrum:precursor_charge_min", "type": "integer", "label": "Min charge of precursor charge range to conside", "help": "If specified, also spectrum:override_charge must be set)", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "precursor_charge_max", "argument": "-spectrum:precursor_charge_max", "type": "integer", "label": "Max charge of precursor charge range to conside", "help": "If specified, also spectrum:override_charge must be set)", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "search", "type": "section", "title": "Open Search Features", "help": "", "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "track_zero_topn", "argument": "-search:track_zero_topn", "type": "integer", "label": "Track top N unmodified peptide results separately from main results internally for boosting features", "help": "Should be set to a number greater than search:output_report_topN if zero bin boosting is desired", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "zero_bin_accept_expect", "argument": "-search:zero_bin_accept_expect", "type": "float", "label": "Ranks a zero-bin hit above all non-zero-bin hit if it has expectation less than this value", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "zero_bin_mult_expect", "argument": "-search:zero_bin_mult_expect", "type": "float", "label": "Multiplies expect value of PSMs in the zero-bin during results ordering (set to less than 1 for boosting)", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "add_topn_complementary", "argument": "-search:add_topn_complementary", "type": "integer", "label": "Inserts complementary ions corresponding to the top N most intense fragments in each experimental spectrum", "help": "Useful for recovery of modified peptides near C-terminus in open search. 0 disables this option", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_fragments_modeling", "argument": "-search:min_fragments_modeling", "type": "integer", "label": "Minimum number of matched peaks in PSM for inclusion in statistical modeling", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_matched_fragments", "argument": "-search:min_matched_fragments", "type": "integer", "label": "Minimum number of matched peaks for PSM to be reported", "help": "MSFragger recommends a minimum of 4 for narrow window searching and 6 for open searches", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "output_report_topn", "argument": "-search:output_report_topn", "type": "integer", "label": "Reports top N PSMs per input spectrum", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "output_max_expect", "argument": "-search:output_max_expect", "type": "float", "label": "Suppresses reporting of PSM if top hit has expectation greater than this threshold", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "50.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "localize_delta_mass", "argument": "-search:localize_delta_mass", "type": "integer", "label": "Include fragment ions mass-shifted by unknown modifications (recommended for open and mass offset searches) (0 for OFF, 1 for ON)", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "statmod", "type": "section", "title": "Static Modification Parameters", "help": "", "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "add_cterm_peptide", "argument": "-statmod:add_cterm_peptide", "type": "float", "label": "Statically add mass in Da to C-terminal of peptide", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_nterm_peptide", "argument": "-statmod:add_nterm_peptide", "type": "float", "label": "Statically add mass in Da to N-terminal of peptide", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_cterm_protein", "argument": "-statmod:add_cterm_protein", "type": "float", "label": "Statically add mass in Da to C-terminal of protein", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_nterm_protein", "argument": "-statmod:add_nterm_protein", "type": "float", "label": "Statically add mass in Da to N-terminal of protein", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_G_glycine", "argument": "-statmod:add_G_glycine", "type": "float", "label": "Statically add mass to glycine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_A_alanine", "argument": "-statmod:add_A_alanine", "type": "float", "label": "Statically add mass to alanine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_S_serine", "argument": "-statmod:add_S_serine", "type": "float", "label": "Statically add mass to serine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_P_proline", "argument": "-statmod:add_P_proline", "type": "float", "label": "Statically add mass to proline", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_V_valine", "argument": "-statmod:add_V_valine", "type": "float", "label": "Statically add mass to valine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_T_threonine", "argument": "-statmod:add_T_threonine", "type": "float", "label": "Statically add mass to threonine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_C_cysteine", "argument": "-statmod:add_C_cysteine", "type": "float", "label": "Statically add mass to cysteine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "57.021464", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_L_leucine", "argument": "-statmod:add_L_leucine", "type": "float", "label": "Statically add mass to leucine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_I_isoleucine", "argument": "-statmod:add_I_isoleucine", "type": "float", "label": "Statically add mass to isoleucine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_N_asparagine", "argument": "-statmod:add_N_asparagine", "type": "float", "label": "Statically add mass to asparagine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_D_aspartic_acid", "argument": "-statmod:add_D_aspartic_acid", "type": "float", "label": "Statically add mass to aspartic_acid", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_Q_glutamine", "argument": "-statmod:add_Q_glutamine", "type": "float", "label": "Statically add mass to glutamine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_K_lysine", "argument": "-statmod:add_K_lysine", "type": "float", "label": "Statically add mass to lysine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_E_glutamic_acid", "argument": "-statmod:add_E_glutamic_acid", "type": "float", "label": "Statically add mass to glutamic_acid", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_M_methionine", "argument": "-statmod:add_M_methionine", "type": "float", "label": "Statically add mass to methionine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_H_histidine", "argument": "-statmod:add_H_histidine", "type": "float", "label": "Statically add mass to histidine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_F_phenylalanine", "argument": "-statmod:add_F_phenylalanine", "type": "float", "label": "Statically add mass to phenylalanine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_R_arginine", "argument": "-statmod:add_R_arginine", "type": "float", "label": "Statically add mass to arginine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_Y_tyrosine", "argument": "-statmod:add_Y_tyrosine", "type": "float", "label": "Statically add mass to tyrosine", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "add_W_tryptophan", "argument": "-statmod:add_W_tryptophan", "type": "float", "label": "Statically add mass to tryptophan", "help": "", "refresh_on_change": false, "min": 0.0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "unimod", "argument": "-statmod:unimod", "type": "text", "label": "Fixed modifications in unimod syntax if specific mass is unknown", "help": "e.g. Carbamidomethylation (C). When multiple different masses are given for one aminoacid this parameter (unimod) will have priority (space separated list, in order to allow for spaces in list items surround them by single quotes)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "PeptideIndexing", "type": "section", "title": "", "help": "", "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "decoy_string", "argument": "-PeptideIndexing:decoy_string", "type": "text", "label": "String that was appended (or prefixed - see 'decoy_string_position' flag below) to the accessions in the protein database to indicate decoy proteins", "help": "If empty (default), it's determined automatically (checking for common terms, both as prefix and suffix)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "decoy_string_position", "argument": "-PeptideIndexing:decoy_string_position", "type": "select", "label": "Is the 'decoy_string' prepended (prefix) or appended (suffix) to the protein accession", "help": "(ignored if decoy_string is empty)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "prefix", "options": [["prefix", "prefix", true], ["suffix", "suffix", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "missing_decoy_action", "argument": "-PeptideIndexing:missing_decoy_action", "type": "select", "label": "Action to take if NO peptide was assigned to a decoy protein (which indicates wrong database or decoy string): 'error' (exit with error, no output), 'warn' (exit with success, warning message), 'silent' (no action is taken, not even a warning)", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "warn", "options": [["error", "error", false], ["warn", "warn", true], ["silent", "silent", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "write_protein_sequence", "argument": "-PeptideIndexing:write_protein_sequence", "type": "boolean", "label": "If set, the protein sequences are stored as well", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "write_protein_description", "argument": "-PeptideIndexing:write_protein_description", "type": "boolean", "label": "If set, the protein description is stored as well", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "keep_unreferenced_proteins", "argument": "-PeptideIndexing:keep_unreferenced_proteins", "type": "boolean", "label": "If set, protein hits which are not referenced by any peptide are kept", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "SelectToolParameter", "name": "unmatched_action", "argument": "-PeptideIndexing:unmatched_action", "type": "select", "label": "If peptide sequences cannot be matched to any protein: 1) raise an error; 2) warn (unmatched PepHits will miss target/decoy annotation with downstream problems); 3) remove the hit", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "error", "options": [["error", "error", true], ["warn", "warn", false], ["remove", "remove", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "aaa_max", "argument": "-PeptideIndexing:aaa_max", "type": "integer", "label": "Maximal number of ambiguous amino acids (AAAs) allowed when matching to a protein database with AAAs", "help": "AAAs are 'B', 'J', 'Z' and 'X'", "refresh_on_change": false, "min": 0, "max": 10, "optional": true, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "mismatches_max", "argument": "-PeptideIndexing:mismatches_max", "type": "integer", "label": "Maximal number of mismatched (mm) amino acids allowed when matching to a protein database", "help": "The required runtime is exponential in the number of mm's; apply with care. MM's are allowed in addition to AAA's", "refresh_on_change": false, "min": 0, "max": 10, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "IL_equivalent", "argument": "-PeptideIndexing:IL_equivalent", "type": "boolean", "label": "Treat the isobaric amino acids isoleucine ('I') and leucine ('L') as equivalent (indistinguishable)", "help": "Also occurrences of 'J' will be treated as 'I' thus avoiding ambiguous matching", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "Section", "name": "enzyme", "type": "section", "title": "", "help": "", "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "name", "argument": "-PeptideIndexing:enzyme:name", "type": "select", "label": "Enzyme which determines valid cleavage sites -", "help": "e.g. trypsin cleaves after lysine (K) or arginine (R), but not before proline (P). Default: deduce from input", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["auto", "auto", true], ["Asp-N/B", "Asp-N/B", false], ["Asp-N_ambic", "Asp-N_ambic", false], ["Chymotrypsin", "Chymotrypsin", false], ["Chymotrypsin/P", "Chymotrypsin/P", false], ["CNBr", "CNBr", false], ["Formic_acid", "Formic_acid", false], ["Trypsin", "Trypsin", false], ["Lys-C", "Lys-C", false], ["Lys-N", "Lys-N", false], ["unspecific cleavage", "unspecific cleavage", false], ["V8-DE", "V8-DE", false], ["V8-E", "V8-E", false], ["leukocyte elastase", "leukocyte elastase", false], ["proline endopeptidase", "proline endopeptidase", false], ["glutamyl endopeptidase", "glutamyl endopeptidase", false], ["Alpha-lytic protease", "Alpha-lytic protease", false], ["2-iodobenzoate", "2-iodobenzoate", false], ["iodosobenzoate", "iodosobenzoate", false], ["staphylococcal protease/D", "staphylococcal protease/D", false], ["proline-endopeptidase/HKR", "proline-endopeptidase/HKR", false], ["Glu-C+P", "Glu-C+P", false], ["PepsinA + P", "PepsinA + P", false], ["cyanogen-bromide", "cyanogen-bromide", false], ["Clostripain/P", "Clostripain/P", false], ["elastase-trypsin-chymotrypsin", "elastase-trypsin-chymotrypsin", false], ["no cleavage", "no cleavage", false], ["Arg-C/P", "Arg-C/P", false], ["Asp-N", "Asp-N", false], ["Lys-C/P", "Lys-C/P", false], ["PepsinA", "PepsinA", false], ["TrypChymo", "TrypChymo", false], ["Trypsin/P", "Trypsin/P", false], ["Arg-C", "Arg-C", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "specificity", "argument": "-PeptideIndexing:enzyme:specificity", "type": "select", "label": "Specificity of the enzyme", "help": "Default: deduce from input..   'full': both internal cleavage sites must match..   'semi': one of two internal cleavage sites must match..   'none': allow all peptide hits no matter their context (enzyme is irrelevant)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["auto", "auto", true], ["full", "full", false], ["semi", "semi", false], ["none", "none", false]], "display": null, "multiple": false, "textable": false}]}]}, {"model_class": "Section", "name": "adv_opts", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "force", "argument": "-force", "type": "boolean", "label": "Overrides tool-specific checks", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "HiddenToolParameter", "name": "test", "argument": "-test", "type": "hidden", "label": "Enables the test mode (needed for internal use only)", "help": "", "refresh_on_change": false, "optional": true, "hidden": true, "is_dynamic": false, "value": "False"}]}, {"model_class": "SelectToolParameter", "name": "OPTIONAL_OUTPUTS", "argument": null, "type": "select", "label": "Optional outputs", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["opt_out (MSFragger optional output file)", "opt_out_FLAG", false], ["Output used ctd (ini) configuration file", "ctd_out_FLAG", false]], "display": null, "multiple": true, "textable": false}], "outputs": [{"model_class": "ToolOutput", "name": "out", "format": "idxml", "label": "${tool.name} on ${on_string}: out", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2032", "edam_data": "data_2536", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "opt_out", "format": "pepxml", "label": "${tool.name} on ${on_string}: opt_out", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3655", "edam_data": "data_2536", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "ctd_out", "format": "xml", "label": "${tool.name} on ${on_string}: ctd", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2332", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "proteomics", "panel_section_name": "Proteomics", "form_style": "regular"}