{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/myrimatch/myrimatch/3.0.11579.0", "name": "MyriMatch", "version": "3.0.11579.0", "description": "Identify peptides in tandem mass spectra.", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "encyclopeDIA", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "myrimatch", "owner": "galaxyp", "changeset_revision": "e26ef51ef341", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Input Raw MS File(s)", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["mzml", "mzxml", "mgf", "ms2", "mz5"], "edam": {"edam_formats": ["format_3244", "format_3654", "format_3651", "format_2330", "format_3590"], "edam_data": ["data_2536", "data_2536", "data_2536", "data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "OutputFormat", "argument": "-OutputFormat", "type": "select", "label": "Output Type", "help": "The file format to use for results of the search.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "pepXML", "options": [["pepXML", "pepXML", false], ["mzIdentML", "mzIdentML", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "DataToolParameter", "name": "ProteinDatabase", "argument": "-ProteinDatabase", "type": "data", "label": "Protein Database", "help": "The FASTA protein database to search against. Only amino-acid type FASTA is supported.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "DecoyPrefix", "argument": "-DecoyPrefix", "type": "text", "label": "Decoy Prefix", "help": "If the protein database contains accessions prefixed with this string, those proteins will be considered decoys. If there are no decoy protein, this prefix will be used to generate an automatic decoy for each target protein. Set this to an empty string to disable automatic decoys.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "rev_", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "CleavageRules", "argument": "-CleavageRules", "type": "select", "label": "Cleavage Agent", "help": "The cleavage agent to generate in silico peptides from the protein database.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Trypsin/P", "options": [["Trypsin/P (allows for cut after K or R)", "Trypsin/P", false], ["Trypsin (normal trypsin cut, disallows cutting when the site is before a proline)", "Trypsin", false], ["Chymotrypsin (allows cut after F,Y,W,L. Disallows cutting before proline)", "Chymotrypsin", false], ["TrypChymo (combines \"Trypsin/P\" and \"Chymotrypsin\" cleavage rules)", "TrypChymo", false], ["Lys-C", "Lys-C", false], ["Lys-C/P (Lys-C, disallowing cutting before proline)", "Lys-C/P", false], ["Asp-N", "Asp-N", false], ["PepsinA (cuts right after F, L)", "PepsinA", false], ["CNBr (cyanogen bromide)", "CNBr", false], ["Formic acid", "Formic_acid", false], ["Glu-C (glutamyl endopeptidase)", "Glu-C", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "MinTerminiCleavages", "argument": "-MinTerminiCleavages", "type": "select", "label": "Cleavage Specificity", "help": "Controls which peptide termini must match the cleavage rules.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["Fully specific (both termini match cleavage rules)", "2", false], ["Semi-specific (at least one terminus must match cleavage rules)", "1", true], ["Non-specific (neither terminus is required to match cleavage rules)", "0", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "MaxMissedCleavages", "argument": "-MaxMissedCleavages", "type": "integer", "label": "Maximum Missed Cleavages", "help": "Candidate peptides with more than this number of uncleaved cleavage sites will be skipped.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "Repeat", "name": "StaticMods", "type": "repeat", "title": "Static Modifications", "help": "Modifications that are always applied to an amino acid. (-StaticMods)", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "aa", "argument": null, "type": "text", "label": "Amino Acid", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mass", "argument": null, "type": "float", "label": "Mass", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}, {"model_class": "Repeat", "name": "DynamicMods", "type": "repeat", "title": "Dynamic Modifications", "help": "Modifications that can either be present or absent on an amino acid. (-DynamicMods)", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "motif", "argument": null, "type": "text", "label": "Amino Acid Motif", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "mass", "argument": null, "type": "float", "label": "Mass", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}, {"model_class": "IntegerToolParameter", "name": "MaxDynamicMods", "argument": "-MaxDynamicMods", "type": "integer", "label": "Maximum Dynamic Mods", "help": "Candidate peptides with more than this number of dynamic modifications will be skipped.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "Section", "name": "tolerance_options", "type": "section", "title": "M/Z Tolerance Options", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "precursor_tolerance", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "auto", "inputs": [{"model_class": "FloatToolParameter", "name": "MonoPrecursorMzTolerance", "argument": "-MonoPrecursorMzTolerance", "type": "float", "label": "Monoisotopic Precursor m/z Tolerance", "help": "This tolerance will be used for spectra that are determined to have monoisotopic precursors. MonoisotopeAdjustmentSet is applied to these.", "refresh_on_change": false, "min": 1e-06, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "mono_precursor_mz_tolerance_units", "argument": null, "type": "select", "label": "Monoisotopic Precursor m/z Tolerance Units", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ppm", "options": [["Parts per million", "ppm", false], ["Daltons", "daltons", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "AvgPrecursorMzTolerance", "argument": "-AvgPrecursorMzTolerance", "type": "float", "label": "Average Precursor m/z Tolerance", "help": "This tolerance will be used for spectra that are determined to have average mass precursors. MonoisotopeAdjustmentSet is not applied to these.", "refresh_on_change": false, "min": 1e-06, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.25", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "avg_precursor_mz_tolerance_units", "argument": null, "type": "select", "label": "Average Precursor m/z Tolerance Units", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "daltons", "options": [["Parts per million", "ppm", false], ["Daltons", "daltons", true]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "avg", "inputs": [{"model_class": "FloatToolParameter", "name": "AvgPrecursorMzTolerance", "argument": "-AvgPrecursorMzTolerance", "type": "float", "label": "Average Precursor m/z Tolerance", "help": "This tolerance will be used for all spectra, but MonoisotopeAdjustmentSet will never be applied.", "refresh_on_change": false, "min": 1e-06, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.25", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "avg_precursor_mz_tolerance_units", "argument": null, "type": "select", "label": "Average Precursor m/z Tolerance Units", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "daltons", "options": [["Parts per million", "ppm", false], ["Daltons", "daltons", true]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "mono", "inputs": [{"model_class": "FloatToolParameter", "name": "MonoPrecursorMzTolerance", "argument": "-MonoPrecursorMzTolerance", "type": "float", "label": "Monoisotopic Precursor m/z Tolerance", "help": "This tolerance will be used for all spectra, and MonoisotopeAdjustmentSet is likewise applied to all spectra.", "refresh_on_change": false, "min": 1e-06, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "mono_precursor_mz_tolerance_units", "argument": null, "type": "select", "label": "Monoisotopic Precursor m/z Tolerance Units", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ppm", "options": [["Parts per million", "ppm", false], ["Daltons", "daltons", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "PrecursorMzToleranceRule", "argument": "-PrecursorMzToleranceRule", "type": "select", "label": "Precursor Mass Type", "help": "For data from Thermo instruments, using the 'auto' setting on a will automatically choose monoisotopic or average mass values, for other instruments monoisotopic or average should be chosen.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["Auto", "auto", false], ["Average", "avg", false], ["Monoisotopic", "mono", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "FloatToolParameter", "name": "FragmentMzTolerance", "argument": "-FragmentMzTolerance", "type": "float", "label": "Fragment m/z Tolerance", "help": "This tolerance is used for matching to fragment ions.", "refresh_on_change": false, "min": 1e-06, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.5", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "fragment_mz_tolerance_units", "argument": null, "type": "select", "label": "Fragment m/z Tolerance Units", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "daltons", "options": [["Parts per million", "ppm", false], ["Daltons", "daltons", true]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "Section", "name": "advanced", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "MaxPeakCount", "argument": "-MaxPeakCount", "type": "integer", "label": "Use Max Peaks", "help": "Filter out all but the specified number of peaks, keep empty to use all peaks.", "refresh_on_change": false, "min": 10, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "Conditional", "name": "fragmentation_rule", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "false", "inputs": []}, {"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "FragmentationRule", "argument": "-FragmentationRule", "type": "text", "label": "Fragmentation Rule", "help": "Specify as a comma-separated list of a, b, c, x, y, z, or z* (z+1), e.g. 'b,y,z'", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "BooleanToolParameter", "name": "FragmentationAutoRule", "argument": "-FragmentationAutoRule", "type": "boolean", "label": "Override Fragmentation Rule (Ion Series)", "help": "If the input file provides mass analyzer information (mzML, mzXML, mz5), MyriMatch can automatically choose the ion series to search on a scan-by-scan basis.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}}, {"model_class": "IntegerToolParameter", "name": "MinPeptideLength", "argument": "-MinPeptideLength", "type": "integer", "label": "Minimum Peptide Length", "help": "Candidate peptides shorter than this will not be compared against any spectrum.", "refresh_on_change": false, "min": 3, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "MaxPeptideLength", "argument": "-MaxPeptideLength", "type": "integer", "label": "Maximum Peptide Length", "help": "Candidate peptides longer than this will not be compared against any spectrum.", "refresh_on_change": false, "min": 3, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "75", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "UseSmartPlusThreeModel", "argument": "-UseSmartPlusThreeModel", "type": "boolean", "label": "Use Smart Plus 3 Model", "help": "For +3 and higher precursors, the fragment ions predicted depend on the way this parameter is set. When this parameter is true, then for each peptide bond, an internal calculation is done to estimate the basicity of the b and y fragment sequence. When this parameter is false, however, ALL possible charge distributions for the fragment ions are generated for every peptide bond.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "true", "falsevalue": "false"}, {"model_class": "IntegerToolParameter", "name": "NumChargeStates", "argument": "-NumChargeStates", "type": "integer", "label": "Number of Charge States", "help": "For spectra with an ambiguous multiple charge state, it will be treated as any charge in the range: [+2,NumChargeStates].", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "MaxResultRank", "argument": "-MaxResultRank", "type": "integer", "label": "Maximum Result Rank", "help": "The maximum rank of a search result (results with the same score occupy the same rank).", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "MonoisotopeAdjustmentSet", "argument": "-MonoisotopeAdjustmentSet", "type": "text", "label": "Monoisotope Adjustment Set", "help": "For monoisotopic precursors where the monoisotope may have been incorrectly assigned to a nearby isotope, this range of adjustments will be considered. Instead of trying a wide precursor tolerance for a spectrum, this tries multiple tight tolerances.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "[-1,2]", "area": false, "datalist": []}]}], "outputs": [{"model_class": "ToolOutput", "name": "output", "format": "raw_pepxml", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output", "edam_format": "format_3655", "edam_data": "data_2536", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "proteomics", "panel_section_name": "Proteomics", "form_style": "regular"}