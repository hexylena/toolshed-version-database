{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/galaxyp/openms_peptideindexer/PeptideIndexer/2.2.0", "name": "PeptideIndexer", "version": "2.2.0", "description": "Refreshes the protein references for all peptide hits.", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "openms_peptideindexer", "owner": "galaxyp", "changeset_revision": "6b0add7e424d", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "param_in", "argument": null, "type": "data", "label": "Input idXML file containing the identifications", "help": "(-in) ", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["idxml"], "edam": {"edam_formats": ["format_2032"], "edam_data": ["data_2536"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "param_fasta", "argument": null, "type": "data", "label": "Input sequence database in FASTA format", "help": "(-fasta) Non-existing relative filenames are looked up via 'OpenMS.ini:id_db_dir'", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "param_decoy_string", "argument": null, "type": "text", "label": "String that was appended (or prefixed - see 'decoy_string_position' flag below) to the accessions in the protein database to indicate decoy proteins", "help": "(-decoy_string) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "DECOY_", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "param_decoy_string_position", "argument": null, "type": "select", "label": "Should the 'decoy_string' be prepended (prefix) or appended (suffix) to the protein accession?", "help": "(-decoy_string_position) ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "prefix", "options": [["prefix", "prefix", true], ["suffix", "suffix", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "param_missing_decoy_action", "argument": null, "type": "select", "label": "Action to take if NO peptide was assigned to a decoy protein (which indicates wrong database or decoy string): 'error' (exit with error, no output), 'warn' (exit with success, warning message)", "help": "(-missing_decoy_action) ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "error", "options": [["error", "error", true], ["warn", "warn", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "param_write_protein_sequence", "argument": null, "type": "boolean", "label": "If set, the protein sequences are stored as well", "help": "(-write_protein_sequence) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-write_protein_sequence", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "param_write_protein_description", "argument": null, "type": "boolean", "label": "If set, the protein description is stored as well", "help": "(-write_protein_description) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-write_protein_description", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "param_keep_unreferenced_proteins", "argument": null, "type": "boolean", "label": "If set, protein hits which are not referenced by any peptide are kept", "help": "(-keep_unreferenced_proteins) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-keep_unreferenced_proteins", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "param_allow_unmatched", "argument": null, "type": "boolean", "label": "If set, unmatched peptide sequences are allowed", "help": "(-allow_unmatched) By default (i.e. if this flag is not set) the program terminates with an error on unmatched peptides", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-allow_unmatched", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "param_full_tolerant_search", "argument": null, "type": "boolean", "label": "If set, all peptide sequences are matched using tolerant search", "help": "(-full_tolerant_search) Thus potentially more proteins (containing ambiguous amino acids) are associated. This is much slower!", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-full_tolerant_search", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "param_aaa_max", "argument": null, "type": "integer", "label": "[tolerant search only] Maximal number of ambiguous amino acids (AAAs) allowed when matching to a protein database with AAAs", "help": "(-aaa_max) AAAs are 'B', 'Z' and 'X'", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "param_mismatches_max", "argument": null, "type": "integer", "label": "[tolerant search only] Maximal number of real mismatches (will be used after checking for ambiguous AA's (see 'aaa_max' option)", "help": "(-mismatches_max) In general this param should only be changed if you want to look for other potential origins of a peptide which might have unknown SNPs or the like", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "param_IL_equivalent", "argument": null, "type": "boolean", "label": "Treat the isobaric amino acids isoleucine ('I') and leucine ('L') as equivalent (indistinguishable)", "help": "(-IL_equivalent) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-IL_equivalent", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "param_filter_aaa_proteins", "argument": null, "type": "boolean", "label": "In the tolerant search for matches to proteins with ambiguous amino acids (AAAs), rebuild the search database to only consider proteins with AAAs", "help": "(-filter_aaa_proteins) This may save time if most proteins don't contain AAAs and if there is a significant number of peptides that enter the tolerant search", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-filter_aaa_proteins", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "param_enzyme_name", "argument": null, "type": "select", "label": "Enzyme which determines valid cleavage sites -", "help": "(-name) e.g. trypsin cleaves after lysine (K) or arginine (R), but not before proline (P)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Trypsin", "options": [["glutamyl endopeptidase", "glutamyl endopeptidase", false], ["CNBr", "CNBr", false], ["Asp-N_ambic", "Asp-N_ambic", false], ["Trypsin", "Trypsin", true], ["Formic_acid", "Formic_acid", false], ["TrypChymo", "TrypChymo", false], ["proline endopeptidase", "proline endopeptidase", false], ["Lys-C/P", "Lys-C/P", false], ["Chymotrypsin", "Chymotrypsin", false], ["Arg-C", "Arg-C", false], ["PepsinA", "PepsinA", false], ["Asp-N", "Asp-N", false], ["Trypsin/P", "Trypsin/P", false], ["Lys-C", "Lys-C", false], ["no cleavage", "no cleavage", false], ["unspecific cleavage", "unspecific cleavage", false], ["2-iodobenzoate", "2-iodobenzoate", false], ["V8-E", "V8-E", false], ["leukocyte elastase", "leukocyte elastase", false], ["V8-DE", "V8-DE", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "param_enzyme_specificity", "argument": null, "type": "select", "label": "Specificity of the enzyme", "help": "(-specificity) <br>  'full': both internal cleavage sites must match. <br>  'semi': one of two internal cleavage sites must match. <br>  'none': allow all peptide hits no matter their context. Therefore, the enzyme chosen does not play a role here", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "full", "options": [["full", "full", true], ["semi", "semi", false], ["none", "none", false]], "display": "radio", "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "adv_opts", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "basic", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "BooleanToolParameter", "name": "param_force", "argument": null, "type": "boolean", "label": "Overwrite tool specific checks", "help": "(-force) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-force", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "adv_opts_selector", "argument": null, "type": "select", "label": "Advanced Options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "basic", "options": [["Hide Advanced Options", "basic", true], ["Show Advanced Options", "advanced", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "param_out", "format": "idxml", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2032", "edam_data": "data_2536", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "proteomics", "panel_section_name": "Proteomics", "form_style": "regular"}