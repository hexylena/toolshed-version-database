{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/ebi-gxa/scater_is_outlier/scater_is_outlier/1.8.4+galaxy0", "name": "Scater DetectOutlier", "version": "1.8.4+galaxy0", "description": "cells based on expression metrics", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "scater_is_outlier", "owner": "ebi-gxa", "changeset_revision": "add247843ef0", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "R_scater_qc", "argument": null, "type": "data", "label": "Input serialized SingleCellExperiment RDS object", "help": "A serialized SingleCellExperiment RDS object with pre-calculated QC metrics", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["rdata"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "metrics", "argument": null, "type": "text", "label": "Name of the QC metric used to detected outlier", "help": "character scalar, name of a numeric QC metric available in the input SingleCellExperiment object.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "outlier_type", "argument": "--type", "type": "select", "label": "Detect outlier from lower/higher/both ends of the distribution", "help": "character scalar, choice indicate whether outliers should be looked for at both tails (default: both) or only at the lower end (lower) or the higher end (higher).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "both", "options": [["Both", "both", false], ["Lower", "lower", false], ["Higher", "higher", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "outlier_log", "argument": "--log", "type": "boolean", "label": "Transform to log10 scale", "help": "logical, should the values of the metric be transformed to the log10 scale before computing median-absolute-deviation for outlier detection", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "IntegerToolParameter", "name": "nmads", "argument": "--nmads", "type": "integer", "label": "Threshold in number of MAD away from the median", "help": "scalar, number of median-absolute-deviations away from median required for a value to be called an outlier.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "outlier_min_diff", "argument": "--min-diff", "type": "integer", "label": "Threshold in value difference from the median", "help": "numeric scalar indicating the minimum difference from the median to consider as an outlier. The outlier threshold is defined from the larger of nmads MADs and min.diff, to avoid calling many outliers when the MAD is very small. If NA, it is ignored.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}], "outputs": [{"model_class": "ToolOutput", "name": "outliers_file", "format": "csv", "label": "${tool.name} on ${on_string}: a one column csv of outliers", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "hca_sc_scater_tools", "panel_section_name": "Scater", "form_style": "regular"}