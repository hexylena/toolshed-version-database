{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/bgruening/sklearn_stacking_ensemble_models/sklearn_stacking_ensemble_models/1.0.8.2", "name": "Stacking Ensembles", "version": "1.0.8.2", "description": "builds stacking, voting ensemble models with numerous base options", "labels": [], "edam_operations": ["operation_2990", "operation_3935", "operation_3659", "operation_3432"], "edam_topics": ["topic_0092", "topic_3474"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "scikit-learn", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "sklearn_stacking_ensemble_models", "owner": "bgruening", "changeset_revision": "b78007bf1cb8", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "algo_selection", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "sklearn.ensemble_VotingClassifier", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "weights", "argument": "weights", "type": "text", "label": "", "help": "Sequence of weights (float or int). Uses uniform weights if None (`[]`).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "[]", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "voting", "argument": "voting", "type": "select", "label": "", "help": "If \u2018hard\u2019, uses predicted class labels for majority rule voting. Else if \u2018soft\u2019, predicts the class label based on the argmax of the sums of the predicted probabilities, which is recommended for an ensemble of well-calibrated classifiers.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "hard", "options": [["hard", "hard", true], ["soft", "soft", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "flatten_transform", "argument": "flatten_transform", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}]}]}, {"model_class": "ConditionalWhen", "value": "sklearn.ensemble_VotingRegressor", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "weights", "argument": "weights", "type": "text", "label": "", "help": "Sequence of weights (float or int). Uses uniform weights if None (`[]`).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "[]", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "mlxtend.classifier_StackingCVClassifier", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "cv_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "KFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "shuffle", "argument": "shuffle", "type": "boolean", "label": "Whether to shuffle data before splitting", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "StratifiedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "shuffle", "argument": "shuffle", "type": "boolean", "label": "Whether to shuffle data before splitting", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "LeaveOneOut", "inputs": []}, {"model_class": "ConditionalWhen", "value": "LeavePOut", "inputs": [{"model_class": "IntegerToolParameter", "name": "p", "argument": "p", "type": "integer", "label": "p", "help": "Integer. Size of the test sets.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "RepeatedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_repeats", "argument": "n_repeats", "type": "integer", "label": "n_repeats", "help": "Number of times cross-validator needs to be repeated.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "RepeatedStratifiedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_repeats", "argument": "n_repeats", "type": "integer", "label": "n_repeats", "help": "Number of times cross-validator needs to be repeated.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ShuffleSplit", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of re-shuffling and splitting iterations.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "test_size", "argument": "test_size", "type": "float", "label": "Portion or number of the test set", "help": "0.0-1.0, proportion of the dataset to include in the test split; >1, integer only, the absolute number of test samples ", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "StratifiedShuffleSplit", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of re-shuffling and splitting iterations.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "test_size", "argument": "test_size", "type": "float", "label": "Portion or number of the test set", "help": "0.0-1.0, proportion of the dataset to include in the test split; >1, integer only, the absolute number of test samples ", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "TimeSeriesSplit", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_train_size", "argument": "max_train_size", "type": "integer", "label": "Maximum size of the training set", "help": "Maximum size for a single training set.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "PredefinedSplit", "inputs": [{"model_class": "TextToolParameter", "name": "test_fold", "argument": "test_fold", "type": "text", "label": "test_fold", "help": "List, e.g., [0, 1, -1, 1], represents two test sets, [X[0]] and [X[1], X[3]], X[2] is excluded from any test set due to '-1'.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": true, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "OrderedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "shuffle", "argument": "shuffle", "type": "boolean", "label": "Whether to shuffle data before splitting", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "RepeatedOrderedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_repeats", "argument": "n_repeats", "type": "integer", "label": "", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_cv", "argument": null, "type": "select", "label": "Select the cv splitter", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["default splitter", "default", true], ["KFold", "KFold", false], ["StratifiedKFold", "StratifiedKFold", false], ["LeaveOneOut", "LeaveOneOut", false], ["LeavePOut", "LeavePOut", false], ["RepeatedKFold", "RepeatedKFold", false], ["RepeatedStratifiedKFold", "RepeatedStratifiedKFold", false], ["ShuffleSplit", "ShuffleSplit", false], ["StratifiedShuffleSplit", "StratifiedShuffleSplit", false], ["TimeSeriesSplit", "TimeSeriesSplit", false], ["PredefinedSplit", "PredefinedSplit", false], ["OrderedKFold", "OrderedKFold", false], ["RepeatedOrderedKFold", "RepeatedOrderedKFold", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "shuffle", "argument": "shuffle", "type": "boolean", "label": "shuffle", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "use_probas", "argument": "use_probas", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "BooleanToolParameter", "name": "use_features_in_secondary", "argument": "use_features_in_secondary", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "BooleanToolParameter", "name": "store_train_meta_features", "argument": "store_train_meta_features", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}]}, {"model_class": "Section", "name": "meta_estimator", "type": "section", "title": "Meta Estimator", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "estimator_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "svm", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "LinearSVC", "options": [["LinearSVC", "LinearSVC", true], ["LinearSVR", "LinearSVR", false], ["NuSVC", "NuSVC", false], ["NuSVR", "NuSVR", false], ["OneClassSVM", "OneClassSVM", false], ["SVC", "SVC", false], ["SVR", "SVR", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "linear_model", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ARDRegression", "options": [["ARDRegression", "ARDRegression", true], ["BayesianRidge", "BayesianRidge", false], ["ElasticNet", "ElasticNet", false], ["ElasticNetCV", "ElasticNetCV", false], ["HuberRegressor", "HuberRegressor", false], ["Lars", "Lars", false], ["LarsCV", "LarsCV", false], ["Lasso", "Lasso", false], ["LassoCV", "LassoCV", false], ["LassoLars", "LassoLars", false], ["LassoLarsCV", "LassoLarsCV", false], ["LassoLarsIC", "LassoLarsIC", false], ["LinearRegression", "LinearRegression", false], ["LogisticRegression", "LogisticRegression", false], ["LogisticRegressionCV", "LogisticRegressionCV", false], ["MultiTaskLasso", "MultiTaskLasso", false], ["MultiTaskElasticNet", "MultiTaskElasticNet", false], ["MultiTaskLassoCV", "MultiTaskLassoCV", false], ["MultiTaskElasticNetCV", "MultiTaskElasticNetCV", false], ["OrthogonalMatchingPursuit", "OrthogonalMatchingPursuit", false], ["OrthogonalMatchingPursuitCV", "OrthogonalMatchingPursuitCV", false], ["PassiveAggressiveClassifier", "PassiveAggressiveClassifier", false], ["PassiveAggressiveRegressor", "PassiveAggressiveRegressor", false], ["Perceptron", "Perceptron", false], ["RANSACRegressor", "RANSACRegressor", false], ["Ridge", "Ridge", false], ["RidgeClassifier", "RidgeClassifier", false], ["RidgeClassifierCV", "RidgeClassifierCV", false], ["RidgeCV", "RidgeCV", false], ["SGDClassifier", "SGDClassifier", false], ["SGDRegressor", "SGDRegressor", false], ["TheilSenRegressor", "TheilSenRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ensemble", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AdaBoostClassifier", "options": [["AdaBoostClassifier", "AdaBoostClassifier", true], ["AdaBoostRegressor", "AdaBoostRegressor", false], ["BaggingClassifier", "BaggingClassifier", false], ["BaggingRegressor", "BaggingRegressor", false], ["ExtraTreesClassifier", "ExtraTreesClassifier", false], ["ExtraTreesRegressor", "ExtraTreesRegressor", false], ["GradientBoostingClassifier", "GradientBoostingClassifier", false], ["GradientBoostingRegressor", "GradientBoostingRegressor", false], ["IsolationForest", "IsolationForest", false], ["HistGradientBoostingClassifier", "HistGradientBoostingClassifier", false], ["HistGradientBoostingRegressor", "HistGradientBoostingRegressor", false], ["RandomForestClassifier", "RandomForestClassifier", false], ["RandomForestRegressor", "RandomForestRegressor", false], ["RandomTreesEmbedding", "RandomTreesEmbedding", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "naive_bayes", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "BernoulliNB", "options": [["BernoulliNB", "BernoulliNB", true], ["GaussianNB", "GaussianNB", false], ["MultinomialNB", "MultinomialNB", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tree", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "DecisionTreeClassifier", "options": [["DecisionTreeClassifier", "DecisionTreeClassifier", true], ["DecisionTreeRegressor", "DecisionTreeRegressor", false], ["ExtraTreeClassifier", "ExtraTreeClassifier", false], ["ExtraTreeRegressor", "ExtraTreeRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "neighbors", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "KNeighborsClassifier", "options": [["KNeighborsClassifier", "KNeighborsClassifier", true], ["KNeighborsRegressor", "KNeighborsRegressor", false], ["KernelDensity", "KernelDensity", false], ["LocalOutlierFactor", "LocalOutlierFactor", false], ["RadiusNeighborsClassifier", "RadiusNeighborsClassifier", false], ["RadiusNeighborsRegressor", "RadiusNeighborsRegressor", false], ["NearestCentroid", "NearestCentroid", false], ["NearestNeighbors", "NearestNeighbors", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "xgboost", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "XGBRegressor", "options": [["XGBRegressor", "XGBRegressor", true], ["XGBClassifier", "XGBClassifier", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "custom_estimator", "inputs": [{"model_class": "DataToolParameter", "name": "c_estimator", "argument": null, "type": "data", "label": "Choose the dataset containing the custom estimator or pipeline", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["zip"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_module", "argument": null, "type": "select", "label": "Choose the module that contains target estimator:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "svm", "options": [["sklearn.svm", "svm", true], ["sklearn.linear_model", "linear_model", false], ["sklearn.ensemble", "ensemble", false], ["sklearn.naive_bayes", "naive_bayes", false], ["sklearn.tree", "tree", false], ["sklearn.neighbors", "neighbors", false], ["xgboost", "xgboost", false], ["Load a custom estimator", "custom_estimator", false]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "ConditionalWhen", "value": "mlxtend.classifier_StackingClassifier", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "use_probas", "argument": "use_probas", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "BooleanToolParameter", "name": "average_probas", "argument": "average_probas", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "BooleanToolParameter", "name": "use_features_in_secondary", "argument": "use_features_in_secondary", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "BooleanToolParameter", "name": "store_train_meta_features", "argument": "store_train_meta_features", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}]}, {"model_class": "Section", "name": "meta_estimator", "type": "section", "title": "Meta Estimator", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "estimator_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "svm", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "LinearSVC", "options": [["LinearSVC", "LinearSVC", true], ["LinearSVR", "LinearSVR", false], ["NuSVC", "NuSVC", false], ["NuSVR", "NuSVR", false], ["OneClassSVM", "OneClassSVM", false], ["SVC", "SVC", false], ["SVR", "SVR", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "linear_model", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ARDRegression", "options": [["ARDRegression", "ARDRegression", true], ["BayesianRidge", "BayesianRidge", false], ["ElasticNet", "ElasticNet", false], ["ElasticNetCV", "ElasticNetCV", false], ["HuberRegressor", "HuberRegressor", false], ["Lars", "Lars", false], ["LarsCV", "LarsCV", false], ["Lasso", "Lasso", false], ["LassoCV", "LassoCV", false], ["LassoLars", "LassoLars", false], ["LassoLarsCV", "LassoLarsCV", false], ["LassoLarsIC", "LassoLarsIC", false], ["LinearRegression", "LinearRegression", false], ["LogisticRegression", "LogisticRegression", false], ["LogisticRegressionCV", "LogisticRegressionCV", false], ["MultiTaskLasso", "MultiTaskLasso", false], ["MultiTaskElasticNet", "MultiTaskElasticNet", false], ["MultiTaskLassoCV", "MultiTaskLassoCV", false], ["MultiTaskElasticNetCV", "MultiTaskElasticNetCV", false], ["OrthogonalMatchingPursuit", "OrthogonalMatchingPursuit", false], ["OrthogonalMatchingPursuitCV", "OrthogonalMatchingPursuitCV", false], ["PassiveAggressiveClassifier", "PassiveAggressiveClassifier", false], ["PassiveAggressiveRegressor", "PassiveAggressiveRegressor", false], ["Perceptron", "Perceptron", false], ["RANSACRegressor", "RANSACRegressor", false], ["Ridge", "Ridge", false], ["RidgeClassifier", "RidgeClassifier", false], ["RidgeClassifierCV", "RidgeClassifierCV", false], ["RidgeCV", "RidgeCV", false], ["SGDClassifier", "SGDClassifier", false], ["SGDRegressor", "SGDRegressor", false], ["TheilSenRegressor", "TheilSenRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ensemble", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AdaBoostClassifier", "options": [["AdaBoostClassifier", "AdaBoostClassifier", true], ["AdaBoostRegressor", "AdaBoostRegressor", false], ["BaggingClassifier", "BaggingClassifier", false], ["BaggingRegressor", "BaggingRegressor", false], ["ExtraTreesClassifier", "ExtraTreesClassifier", false], ["ExtraTreesRegressor", "ExtraTreesRegressor", false], ["GradientBoostingClassifier", "GradientBoostingClassifier", false], ["GradientBoostingRegressor", "GradientBoostingRegressor", false], ["IsolationForest", "IsolationForest", false], ["HistGradientBoostingClassifier", "HistGradientBoostingClassifier", false], ["HistGradientBoostingRegressor", "HistGradientBoostingRegressor", false], ["RandomForestClassifier", "RandomForestClassifier", false], ["RandomForestRegressor", "RandomForestRegressor", false], ["RandomTreesEmbedding", "RandomTreesEmbedding", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "naive_bayes", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "BernoulliNB", "options": [["BernoulliNB", "BernoulliNB", true], ["GaussianNB", "GaussianNB", false], ["MultinomialNB", "MultinomialNB", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tree", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "DecisionTreeClassifier", "options": [["DecisionTreeClassifier", "DecisionTreeClassifier", true], ["DecisionTreeRegressor", "DecisionTreeRegressor", false], ["ExtraTreeClassifier", "ExtraTreeClassifier", false], ["ExtraTreeRegressor", "ExtraTreeRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "neighbors", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "KNeighborsClassifier", "options": [["KNeighborsClassifier", "KNeighborsClassifier", true], ["KNeighborsRegressor", "KNeighborsRegressor", false], ["KernelDensity", "KernelDensity", false], ["LocalOutlierFactor", "LocalOutlierFactor", false], ["RadiusNeighborsClassifier", "RadiusNeighborsClassifier", false], ["RadiusNeighborsRegressor", "RadiusNeighborsRegressor", false], ["NearestCentroid", "NearestCentroid", false], ["NearestNeighbors", "NearestNeighbors", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "xgboost", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "XGBRegressor", "options": [["XGBRegressor", "XGBRegressor", true], ["XGBClassifier", "XGBClassifier", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "custom_estimator", "inputs": [{"model_class": "DataToolParameter", "name": "c_estimator", "argument": null, "type": "data", "label": "Choose the dataset containing the custom estimator or pipeline", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["zip"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_module", "argument": null, "type": "select", "label": "Choose the module that contains target estimator:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "svm", "options": [["sklearn.svm", "svm", true], ["sklearn.linear_model", "linear_model", false], ["sklearn.ensemble", "ensemble", false], ["sklearn.naive_bayes", "naive_bayes", false], ["sklearn.tree", "tree", false], ["sklearn.neighbors", "neighbors", false], ["xgboost", "xgboost", false], ["Load a custom estimator", "custom_estimator", false]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "ConditionalWhen", "value": "mlxtend.regressor_StackingCVRegressor", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "Conditional", "name": "cv_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "KFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "shuffle", "argument": "shuffle", "type": "boolean", "label": "Whether to shuffle data before splitting", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "StratifiedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "shuffle", "argument": "shuffle", "type": "boolean", "label": "Whether to shuffle data before splitting", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "LeaveOneOut", "inputs": []}, {"model_class": "ConditionalWhen", "value": "LeavePOut", "inputs": [{"model_class": "IntegerToolParameter", "name": "p", "argument": "p", "type": "integer", "label": "p", "help": "Integer. Size of the test sets.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "RepeatedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_repeats", "argument": "n_repeats", "type": "integer", "label": "n_repeats", "help": "Number of times cross-validator needs to be repeated.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "RepeatedStratifiedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_repeats", "argument": "n_repeats", "type": "integer", "label": "n_repeats", "help": "Number of times cross-validator needs to be repeated.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ShuffleSplit", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of re-shuffling and splitting iterations.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "test_size", "argument": "test_size", "type": "float", "label": "Portion or number of the test set", "help": "0.0-1.0, proportion of the dataset to include in the test split; >1, integer only, the absolute number of test samples ", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "StratifiedShuffleSplit", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of re-shuffling and splitting iterations.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "test_size", "argument": "test_size", "type": "float", "label": "Portion or number of the test set", "help": "0.0-1.0, proportion of the dataset to include in the test split; >1, integer only, the absolute number of test samples ", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "TimeSeriesSplit", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_train_size", "argument": "max_train_size", "type": "integer", "label": "Maximum size of the training set", "help": "Maximum size for a single training set.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "PredefinedSplit", "inputs": [{"model_class": "TextToolParameter", "name": "test_fold", "argument": "test_fold", "type": "text", "label": "test_fold", "help": "List, e.g., [0, 1, -1, 1], represents two test sets, [X[0]] and [X[1], X[3]], X[2] is excluded from any test set due to '-1'.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": true, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "OrderedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "shuffle", "argument": "shuffle", "type": "boolean", "label": "Whether to shuffle data before splitting", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "RepeatedOrderedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_repeats", "argument": "n_repeats", "type": "integer", "label": "", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_cv", "argument": null, "type": "select", "label": "Select the cv splitter", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["default splitter", "default", true], ["KFold", "KFold", false], ["StratifiedKFold", "StratifiedKFold", false], ["LeaveOneOut", "LeaveOneOut", false], ["LeavePOut", "LeavePOut", false], ["RepeatedKFold", "RepeatedKFold", false], ["RepeatedStratifiedKFold", "RepeatedStratifiedKFold", false], ["ShuffleSplit", "ShuffleSplit", false], ["StratifiedShuffleSplit", "StratifiedShuffleSplit", false], ["TimeSeriesSplit", "TimeSeriesSplit", false], ["PredefinedSplit", "PredefinedSplit", false], ["OrderedKFold", "OrderedKFold", false], ["RepeatedOrderedKFold", "RepeatedOrderedKFold", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "shuffle", "argument": "shuffle", "type": "boolean", "label": "shuffle", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "refit", "argument": "refit", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "BooleanToolParameter", "name": "use_features_in_secondary", "argument": "use_features_in_secondary", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "BooleanToolParameter", "name": "store_train_meta_features", "argument": "store_train_meta_features", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}]}, {"model_class": "Section", "name": "meta_estimator", "type": "section", "title": "Meta Estimator", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "estimator_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "svm", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "LinearSVC", "options": [["LinearSVC", "LinearSVC", true], ["LinearSVR", "LinearSVR", false], ["NuSVC", "NuSVC", false], ["NuSVR", "NuSVR", false], ["OneClassSVM", "OneClassSVM", false], ["SVC", "SVC", false], ["SVR", "SVR", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "linear_model", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ARDRegression", "options": [["ARDRegression", "ARDRegression", true], ["BayesianRidge", "BayesianRidge", false], ["ElasticNet", "ElasticNet", false], ["ElasticNetCV", "ElasticNetCV", false], ["HuberRegressor", "HuberRegressor", false], ["Lars", "Lars", false], ["LarsCV", "LarsCV", false], ["Lasso", "Lasso", false], ["LassoCV", "LassoCV", false], ["LassoLars", "LassoLars", false], ["LassoLarsCV", "LassoLarsCV", false], ["LassoLarsIC", "LassoLarsIC", false], ["LinearRegression", "LinearRegression", false], ["LogisticRegression", "LogisticRegression", false], ["LogisticRegressionCV", "LogisticRegressionCV", false], ["MultiTaskLasso", "MultiTaskLasso", false], ["MultiTaskElasticNet", "MultiTaskElasticNet", false], ["MultiTaskLassoCV", "MultiTaskLassoCV", false], ["MultiTaskElasticNetCV", "MultiTaskElasticNetCV", false], ["OrthogonalMatchingPursuit", "OrthogonalMatchingPursuit", false], ["OrthogonalMatchingPursuitCV", "OrthogonalMatchingPursuitCV", false], ["PassiveAggressiveClassifier", "PassiveAggressiveClassifier", false], ["PassiveAggressiveRegressor", "PassiveAggressiveRegressor", false], ["Perceptron", "Perceptron", false], ["RANSACRegressor", "RANSACRegressor", false], ["Ridge", "Ridge", false], ["RidgeClassifier", "RidgeClassifier", false], ["RidgeClassifierCV", "RidgeClassifierCV", false], ["RidgeCV", "RidgeCV", false], ["SGDClassifier", "SGDClassifier", false], ["SGDRegressor", "SGDRegressor", false], ["TheilSenRegressor", "TheilSenRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ensemble", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AdaBoostClassifier", "options": [["AdaBoostClassifier", "AdaBoostClassifier", true], ["AdaBoostRegressor", "AdaBoostRegressor", false], ["BaggingClassifier", "BaggingClassifier", false], ["BaggingRegressor", "BaggingRegressor", false], ["ExtraTreesClassifier", "ExtraTreesClassifier", false], ["ExtraTreesRegressor", "ExtraTreesRegressor", false], ["GradientBoostingClassifier", "GradientBoostingClassifier", false], ["GradientBoostingRegressor", "GradientBoostingRegressor", false], ["IsolationForest", "IsolationForest", false], ["HistGradientBoostingClassifier", "HistGradientBoostingClassifier", false], ["HistGradientBoostingRegressor", "HistGradientBoostingRegressor", false], ["RandomForestClassifier", "RandomForestClassifier", false], ["RandomForestRegressor", "RandomForestRegressor", false], ["RandomTreesEmbedding", "RandomTreesEmbedding", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "naive_bayes", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "BernoulliNB", "options": [["BernoulliNB", "BernoulliNB", true], ["GaussianNB", "GaussianNB", false], ["MultinomialNB", "MultinomialNB", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tree", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "DecisionTreeClassifier", "options": [["DecisionTreeClassifier", "DecisionTreeClassifier", true], ["DecisionTreeRegressor", "DecisionTreeRegressor", false], ["ExtraTreeClassifier", "ExtraTreeClassifier", false], ["ExtraTreeRegressor", "ExtraTreeRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "neighbors", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "KNeighborsClassifier", "options": [["KNeighborsClassifier", "KNeighborsClassifier", true], ["KNeighborsRegressor", "KNeighborsRegressor", false], ["KernelDensity", "KernelDensity", false], ["LocalOutlierFactor", "LocalOutlierFactor", false], ["RadiusNeighborsClassifier", "RadiusNeighborsClassifier", false], ["RadiusNeighborsRegressor", "RadiusNeighborsRegressor", false], ["NearestCentroid", "NearestCentroid", false], ["NearestNeighbors", "NearestNeighbors", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "xgboost", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "XGBRegressor", "options": [["XGBRegressor", "XGBRegressor", true], ["XGBClassifier", "XGBClassifier", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "custom_estimator", "inputs": [{"model_class": "DataToolParameter", "name": "c_estimator", "argument": null, "type": "data", "label": "Choose the dataset containing the custom estimator or pipeline", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["zip"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_module", "argument": null, "type": "select", "label": "Choose the module that contains target estimator:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "svm", "options": [["sklearn.svm", "svm", true], ["sklearn.linear_model", "linear_model", false], ["sklearn.ensemble", "ensemble", false], ["sklearn.naive_bayes", "naive_bayes", false], ["sklearn.tree", "tree", false], ["sklearn.neighbors", "neighbors", false], ["xgboost", "xgboost", false], ["Load a custom estimator", "custom_estimator", false]], "display": null, "multiple": false, "textable": false}}]}]}, {"model_class": "ConditionalWhen", "value": "mlxtend.regressor_StackingRegressor", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "refit", "argument": "refit", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "BooleanToolParameter", "name": "use_features_in_secondary", "argument": "use_features_in_secondary", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "BooleanToolParameter", "name": "store_train_meta_features", "argument": "store_train_meta_features", "type": "boolean", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}]}, {"model_class": "Section", "name": "meta_estimator", "type": "section", "title": "Meta Estimator", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "estimator_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "svm", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "LinearSVC", "options": [["LinearSVC", "LinearSVC", true], ["LinearSVR", "LinearSVR", false], ["NuSVC", "NuSVC", false], ["NuSVR", "NuSVR", false], ["OneClassSVM", "OneClassSVM", false], ["SVC", "SVC", false], ["SVR", "SVR", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "linear_model", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ARDRegression", "options": [["ARDRegression", "ARDRegression", true], ["BayesianRidge", "BayesianRidge", false], ["ElasticNet", "ElasticNet", false], ["ElasticNetCV", "ElasticNetCV", false], ["HuberRegressor", "HuberRegressor", false], ["Lars", "Lars", false], ["LarsCV", "LarsCV", false], ["Lasso", "Lasso", false], ["LassoCV", "LassoCV", false], ["LassoLars", "LassoLars", false], ["LassoLarsCV", "LassoLarsCV", false], ["LassoLarsIC", "LassoLarsIC", false], ["LinearRegression", "LinearRegression", false], ["LogisticRegression", "LogisticRegression", false], ["LogisticRegressionCV", "LogisticRegressionCV", false], ["MultiTaskLasso", "MultiTaskLasso", false], ["MultiTaskElasticNet", "MultiTaskElasticNet", false], ["MultiTaskLassoCV", "MultiTaskLassoCV", false], ["MultiTaskElasticNetCV", "MultiTaskElasticNetCV", false], ["OrthogonalMatchingPursuit", "OrthogonalMatchingPursuit", false], ["OrthogonalMatchingPursuitCV", "OrthogonalMatchingPursuitCV", false], ["PassiveAggressiveClassifier", "PassiveAggressiveClassifier", false], ["PassiveAggressiveRegressor", "PassiveAggressiveRegressor", false], ["Perceptron", "Perceptron", false], ["RANSACRegressor", "RANSACRegressor", false], ["Ridge", "Ridge", false], ["RidgeClassifier", "RidgeClassifier", false], ["RidgeClassifierCV", "RidgeClassifierCV", false], ["RidgeCV", "RidgeCV", false], ["SGDClassifier", "SGDClassifier", false], ["SGDRegressor", "SGDRegressor", false], ["TheilSenRegressor", "TheilSenRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ensemble", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AdaBoostClassifier", "options": [["AdaBoostClassifier", "AdaBoostClassifier", true], ["AdaBoostRegressor", "AdaBoostRegressor", false], ["BaggingClassifier", "BaggingClassifier", false], ["BaggingRegressor", "BaggingRegressor", false], ["ExtraTreesClassifier", "ExtraTreesClassifier", false], ["ExtraTreesRegressor", "ExtraTreesRegressor", false], ["GradientBoostingClassifier", "GradientBoostingClassifier", false], ["GradientBoostingRegressor", "GradientBoostingRegressor", false], ["IsolationForest", "IsolationForest", false], ["HistGradientBoostingClassifier", "HistGradientBoostingClassifier", false], ["HistGradientBoostingRegressor", "HistGradientBoostingRegressor", false], ["RandomForestClassifier", "RandomForestClassifier", false], ["RandomForestRegressor", "RandomForestRegressor", false], ["RandomTreesEmbedding", "RandomTreesEmbedding", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "naive_bayes", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "BernoulliNB", "options": [["BernoulliNB", "BernoulliNB", true], ["GaussianNB", "GaussianNB", false], ["MultinomialNB", "MultinomialNB", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tree", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "DecisionTreeClassifier", "options": [["DecisionTreeClassifier", "DecisionTreeClassifier", true], ["DecisionTreeRegressor", "DecisionTreeRegressor", false], ["ExtraTreeClassifier", "ExtraTreeClassifier", false], ["ExtraTreeRegressor", "ExtraTreeRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "neighbors", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "KNeighborsClassifier", "options": [["KNeighborsClassifier", "KNeighborsClassifier", true], ["KNeighborsRegressor", "KNeighborsRegressor", false], ["KernelDensity", "KernelDensity", false], ["LocalOutlierFactor", "LocalOutlierFactor", false], ["RadiusNeighborsClassifier", "RadiusNeighborsClassifier", false], ["RadiusNeighborsRegressor", "RadiusNeighborsRegressor", false], ["NearestCentroid", "NearestCentroid", false], ["NearestNeighbors", "NearestNeighbors", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "xgboost", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "XGBRegressor", "options": [["XGBRegressor", "XGBRegressor", true], ["XGBClassifier", "XGBClassifier", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "custom_estimator", "inputs": [{"model_class": "DataToolParameter", "name": "c_estimator", "argument": null, "type": "data", "label": "Choose the dataset containing the custom estimator or pipeline", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["zip"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_module", "argument": null, "type": "select", "label": "Choose the module that contains target estimator:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "svm", "options": [["sklearn.svm", "svm", true], ["sklearn.linear_model", "linear_model", false], ["sklearn.ensemble", "ensemble", false], ["sklearn.naive_bayes", "naive_bayes", false], ["sklearn.tree", "tree", false], ["sklearn.neighbors", "neighbors", false], ["xgboost", "xgboost", false], ["Load a custom estimator", "custom_estimator", false]], "display": null, "multiple": false, "textable": false}}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "estimator_type", "argument": null, "type": "select", "label": "Choose the stacking ensemble type", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "sklearn.ensemble_VotingClassifier", "options": [["sklearn.ensemble -- VotingClassifier", "sklearn.ensemble_VotingClassifier", true], ["sklearn.ensemble -- VotingRegressor", "sklearn.ensemble_VotingRegressor", false], ["mlxtend.classifier -- StackingCVClassifier", "mlxtend.classifier_StackingCVClassifier", false], ["mlxtend.classifier -- StackingClassifier", "mlxtend.classifier_StackingClassifier", false], ["mlxtend.regressor -- StackingCVRegressor", "mlxtend.regressor_StackingCVRegressor", false], ["mlxtend.regressor -- StackingRegressor", "mlxtend.regressor_StackingRegressor", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Repeat", "name": "base_est_builder", "type": "repeat", "title": "Base Estimator", "help": null, "default": 1, "min": 1, "max": 20.0, "inputs": [{"model_class": "Conditional", "name": "estimator_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "svm", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "LinearSVC", "options": [["LinearSVC", "LinearSVC", true], ["LinearSVR", "LinearSVR", false], ["NuSVC", "NuSVC", false], ["NuSVR", "NuSVR", false], ["OneClassSVM", "OneClassSVM", false], ["SVC", "SVC", false], ["SVR", "SVR", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "linear_model", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ARDRegression", "options": [["ARDRegression", "ARDRegression", true], ["BayesianRidge", "BayesianRidge", false], ["ElasticNet", "ElasticNet", false], ["ElasticNetCV", "ElasticNetCV", false], ["HuberRegressor", "HuberRegressor", false], ["Lars", "Lars", false], ["LarsCV", "LarsCV", false], ["Lasso", "Lasso", false], ["LassoCV", "LassoCV", false], ["LassoLars", "LassoLars", false], ["LassoLarsCV", "LassoLarsCV", false], ["LassoLarsIC", "LassoLarsIC", false], ["LinearRegression", "LinearRegression", false], ["LogisticRegression", "LogisticRegression", false], ["LogisticRegressionCV", "LogisticRegressionCV", false], ["MultiTaskLasso", "MultiTaskLasso", false], ["MultiTaskElasticNet", "MultiTaskElasticNet", false], ["MultiTaskLassoCV", "MultiTaskLassoCV", false], ["MultiTaskElasticNetCV", "MultiTaskElasticNetCV", false], ["OrthogonalMatchingPursuit", "OrthogonalMatchingPursuit", false], ["OrthogonalMatchingPursuitCV", "OrthogonalMatchingPursuitCV", false], ["PassiveAggressiveClassifier", "PassiveAggressiveClassifier", false], ["PassiveAggressiveRegressor", "PassiveAggressiveRegressor", false], ["Perceptron", "Perceptron", false], ["RANSACRegressor", "RANSACRegressor", false], ["Ridge", "Ridge", false], ["RidgeClassifier", "RidgeClassifier", false], ["RidgeClassifierCV", "RidgeClassifierCV", false], ["RidgeCV", "RidgeCV", false], ["SGDClassifier", "SGDClassifier", false], ["SGDRegressor", "SGDRegressor", false], ["TheilSenRegressor", "TheilSenRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ensemble", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AdaBoostClassifier", "options": [["AdaBoostClassifier", "AdaBoostClassifier", true], ["AdaBoostRegressor", "AdaBoostRegressor", false], ["BaggingClassifier", "BaggingClassifier", false], ["BaggingRegressor", "BaggingRegressor", false], ["ExtraTreesClassifier", "ExtraTreesClassifier", false], ["ExtraTreesRegressor", "ExtraTreesRegressor", false], ["GradientBoostingClassifier", "GradientBoostingClassifier", false], ["GradientBoostingRegressor", "GradientBoostingRegressor", false], ["IsolationForest", "IsolationForest", false], ["HistGradientBoostingClassifier", "HistGradientBoostingClassifier", false], ["HistGradientBoostingRegressor", "HistGradientBoostingRegressor", false], ["RandomForestClassifier", "RandomForestClassifier", false], ["RandomForestRegressor", "RandomForestRegressor", false], ["RandomTreesEmbedding", "RandomTreesEmbedding", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "naive_bayes", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "BernoulliNB", "options": [["BernoulliNB", "BernoulliNB", true], ["GaussianNB", "GaussianNB", false], ["MultinomialNB", "MultinomialNB", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tree", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "DecisionTreeClassifier", "options": [["DecisionTreeClassifier", "DecisionTreeClassifier", true], ["DecisionTreeRegressor", "DecisionTreeRegressor", false], ["ExtraTreeClassifier", "ExtraTreeClassifier", false], ["ExtraTreeRegressor", "ExtraTreeRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "neighbors", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "KNeighborsClassifier", "options": [["KNeighborsClassifier", "KNeighborsClassifier", true], ["KNeighborsRegressor", "KNeighborsRegressor", false], ["KernelDensity", "KernelDensity", false], ["LocalOutlierFactor", "LocalOutlierFactor", false], ["RadiusNeighborsClassifier", "RadiusNeighborsClassifier", false], ["RadiusNeighborsRegressor", "RadiusNeighborsRegressor", false], ["NearestCentroid", "NearestCentroid", false], ["NearestNeighbors", "NearestNeighbors", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "xgboost", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "XGBRegressor", "options": [["XGBRegressor", "XGBRegressor", true], ["XGBClassifier", "XGBClassifier", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "custom_estimator", "inputs": [{"model_class": "DataToolParameter", "name": "c_estimator", "argument": null, "type": "data", "label": "Choose the dataset containing the custom estimator or pipeline", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["zip"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_module", "argument": null, "type": "select", "label": "Choose the module that contains target estimator:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "svm", "options": [["sklearn.svm", "svm", true], ["sklearn.linear_model", "linear_model", false], ["sklearn.ensemble", "ensemble", false], ["sklearn.naive_bayes", "naive_bayes", false], ["sklearn.tree", "tree", false], ["sklearn.neighbors", "neighbors", false], ["xgboost", "xgboost", false], ["Load a custom estimator", "custom_estimator", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "BooleanToolParameter", "name": "get_params", "argument": null, "type": "boolean", "label": "Output parameters for searchCV?", "help": "Optional. Tunable parameters could be obtained through `estimator_attributes` tool.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}], "outputs": [{"model_class": "ToolOutput", "name": "outfile", "format": "zip", "label": "${algo_selection.estimator_type} on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "outfile_params", "format": "tabular", "label": "get_params for ${algo_selection.estimator_type}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "machine_learning", "panel_section_name": "Machine Learning", "form_style": "regular"}