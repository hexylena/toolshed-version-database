{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_alignmentsieve/deeptools_alignmentsieve/3.5.1.0.0", "name": "alignmentsieve", "version": "3.5.1.0.0", "description": "Filter BAM/CRAM files according to specified parameters", "labels": [], "edam_operations": ["operation_0337", "operation_3435"], "edam_topics": ["topic_3169", "topic_0622"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "deeptools", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "deeptools_alignmentsieve", "owner": "bgruening", "changeset_revision": "d8c919d26d0e", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "bamfile", "argument": null, "type": "data", "label": "BAM file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam", "cram"], "edam": {"edam_formats": ["format_2572", "format_3462"], "edam_data": ["data_0863", "data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "BED", "argument": "--BED", "type": "boolean", "label": "Output in BEDPE format?", "help": "Instead of producing BAM files, write output in BEDPE format (as defined by MACS2). Note that only reads/fragments passing filtering criterion are written in BEDPE format.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "TextToolParameter", "name": "shift", "argument": "--shift", "type": "text", "label": "Amount to shift fragments", "help": "Shift the left and right end of a fragment. A positive                   value shift an end to the right (on the + strand) and                   a negative value shifts a fragment to the left. Either                   2 or 4 integers can be provided. For example, '2 -3'                   will shift the left-most fragment end two bases to the                   right and the right-most end 3 bases to the left. If 4                   integers are provided, then the first and last two                   refer to fragments whose read 1 is on the left or                   right, respectively. Consequently, it is possible to                   take strand into consideration for strand-specific                   protocols. Note that only properly paired reads are considered.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "ATACshift", "argument": "--ATACshift", "type": "boolean", "label": "Shift fragment ends as appropriate for ATAC-seq", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "SelectToolParameter", "name": "filterRNAstrand", "argument": "filterRNAstrand", "type": "select", "label": "Only include reads originating from fragments from the forward or reverse strand.", "help": "By default (the no option), all reads are processed, regardless of the strand they originated from. For RNAseq, it can be useful to separately create bigWig files for the forward or reverse strands.                   Note that this tools assumes that a dUTP-based method was used, so fragments will be assigned to the reverse strand if the second read in a pair is reverse complemented.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["no", "no", true], ["forward", "forward", false], ["reverse", "reverse", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "ignoreDuplicates", "argument": "--ignoreDuplicates", "type": "boolean", "label": "Ignore duplicates", "help": "If set, reads that have the same orientation and start position will be considered only once. If reads are paired, the mate position also has to coincide to ignore a read.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--ignoreDuplicates", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "minMappingQuality", "argument": "--minMappingQuality", "type": "integer", "label": "Minimum mapping quality", "help": "If set, only reads with a mapping quality score at least this high are considered.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "samFlagInclude", "argument": "--samFlagInclude", "type": "integer", "label": "Include reads based on the SAM flag", "help": "For example, to get only reads that are the first mate use a flag of 64. This is useful to count properly paired reads only once, otherwise the second mate will be also considered for the coverage.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "samFlagExclude", "argument": "--samFlagExclude", "type": "integer", "label": "Exclude reads based on the SAM flag", "help": "For example, to get only reads that map to the forward strand, use --samFlagExclude 16, where 16 is the SAM flag for reads that map to the reverse strand.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minFragmentLength", "argument": "--minFragmentLength", "type": "integer", "label": "Minimum fragment length for inclusion.", "help": "This is primarily useful in things like ATACseq, where one would like to look specifically at mono- or di-nucleosome fragments.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maxFragmentLength", "argument": "--maxFragmentLength", "type": "integer", "label": "Maximum fragment length for inclusion.", "help": "A value of 0 (the default) is equivalent to no maximum.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "DataToolParameter", "name": "blackListFileName", "argument": "--blackListFileName", "type": "data", "label": "Blacklisted regions in BED/GTF format", "help": "One or more files containing regions to exclude from the analysis", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed", "gtf"], "edam": {"edam_formats": ["format_3003", "format_2306"], "edam_data": ["data_3002", "data_1255"]}, "multiple": true, "min": 0, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "filterMetrics", "argument": "--filterMetrics", "type": "boolean", "label": "Save the total number of reads seen and remaining after filtering to a text file?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "filteredOutReads", "argument": "--filteredOutReads", "type": "boolean", "label": "Save alignments NOT passing the filtering criteria?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}], "outputs": [{"model_class": "ToolOutput", "name": "filterMetricsFile", "format": "tabular", "label": "${tool.name} on ${on_string}: filtering metrics", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "outFileFiltered", "format": "bam", "label": "${tool.name} on ${on_string}: Filtered Out Alignments", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "outFile", "format": "bam", "label": "${tool.name} on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "deeptools", "panel_section_name": "deepTools", "form_style": "regular"}