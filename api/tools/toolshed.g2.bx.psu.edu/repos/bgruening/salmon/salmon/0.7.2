{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/0.7.2", "name": "Salmon", "version": "0.7.2", "description": "Transcript Quantification from RNA-seq data", "labels": [], "edam_operations": ["operation_3800", "operation_0236", "operation_2495"], "edam_topics": ["topic_3308", "topic_3170", "topic_0203"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "salmon", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "salmon", "owner": "bgruening", "changeset_revision": "1b22d8a18acc", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "refTranscriptSource", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "indexed", "inputs": [{"model_class": "SelectToolParameter", "name": "index", "argument": null, "type": "select", "label": "Select a reference transcriptome", "help": "If your transcriptome of interest is not listed, contact your Galaxy admin", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "ownFile", "argument": null, "type": "data", "label": "Select the reference transcriptome", "help": "in FASTA format", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "kmerLen", "argument": "kmerLen", "type": "integer", "label": "The size should be odd number.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "31", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "TranscriptSource", "argument": null, "type": "select", "label": "Select a reference transcriptome from your history or use a built-in index?", "help": "Built-ins were indexed using default options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "history", "options": [["Use a built-in index", "indexed", false], ["Use one from the history", "history", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "single_or_paired", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "input_singles", "argument": null, "type": "data", "label": "FASTQ/FASTA file", "help": "FASTQ file.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930"], "edam_data": ["data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "strandedness", "argument": null, "type": "select", "label": "Specify the strandedness of the reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "U", "options": [["Not stranded (U)", "U", true], ["read 1 (or single-end read) comes from the forward strand (SF)", "SF", false], ["read 1 (or single-end read) comes from the reverse strand (SR)", "SR", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "input_mate1", "argument": null, "type": "data", "label": "Mate pair 1", "help": "FASTQ file.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930"], "edam_data": ["data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_mate2", "argument": null, "type": "data", "label": "Mate pair 2", "help": "FASTQ file.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930"], "edam_data": ["data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "orientation", "argument": null, "type": "select", "label": "Relative orientation of reads within a pair", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "I", "options": [["Mates are oriented in the same direction (M = matching)", "M", false], ["Mates are oriented away from each other (O = outward)", "O", false], ["Mates are oriented toward each other (I = inward)", "I", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "strandedness", "argument": null, "type": "select", "label": "Specify the strandedness of the reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "U", "options": [["Not stranded (U)", "U", true], ["read 1 (or single-end read) comes from the forward strand (SF)", "SF", false], ["read 1 (or single-end read) comes from the reverse strand (SR)", "SR", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "single_or_paired_opts", "argument": null, "type": "select", "label": "Is this library mate-paired?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "single", "options": [["Single-end", "single", false], ["Paired-end", "paired", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "quasi_orphans", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "quasi", "inputs": []}, {"model_class": "ConditionalWhen", "value": "fmd", "inputs": [{"model_class": "BooleanToolParameter", "name": "allowOrphans", "argument": "--allowOrphans", "type": "boolean", "label": "Consider orphaned reads as valid hits when performing lightweight-alignment", "help": "This option will increase sensitivity (allow more reads to map and more transcripts to be detected), but may decrease specificity as orphaned alignments are more likely to be spurious.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "--allowOrphans", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "type", "argument": "--type", "type": "select", "label": "Type of index", "help": "When using quasi, orphaned reads will be considered when performing lightweight-alignment.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "quasi", "options": [["quasi", "quasi", true], ["fmd", "fmd", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "perfectHash", "argument": "--perfectHash", "type": "boolean", "label": "Perfect Hash", "help": "Build the index using a perfect hash rather than a dense hash.  This will require  less memory (especially during quantification), but will take longer to construct ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--perfectHash", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "sasamp", "argument": "--sasamp", "type": "integer", "label": "Suffix Array", "help": "The interval at which the suffix array should be sampled. Smaller values are faster, but produce a larger index. The default should be OK, unless your transcriptome is huge. This value should be a power of 2.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "seqBias", "argument": "--seqBias", "type": "boolean", "label": "Perform sequence-specific bias correction", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--seqBias", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "gcBias", "argument": "--gcBias", "type": "boolean", "label": "Perform fragment GC bias correction", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--gcBias", "falsevalue": ""}, {"model_class": "DataToolParameter", "name": "geneMap", "argument": "--geneMap", "type": "data", "label": "File containing a mapping of transcripts to genes.  If this file is provided Salmon will output both quant.sf and quant.genes.sf files, where the latter contains aggregated gene-level abundance estimates. The transcript to gene mapping should be provided as either a GTF file, or a in a simple tab-delimited format where each line contains the name of a transcript and the gene to which it belongs separated by a tab.", "help": "", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "gff", "gtf"], "edam": {"edam_formats": ["format_3475", "format_2305", "format_2306"], "edam_data": ["data_0006", "data_1255", "data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Section", "name": "adv", "type": "section", "title": "Additional Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "writeMappings", "argument": "--writeMappings", "type": "boolean", "label": "Write Mappings", "help": " Setting this option then the quasi-mapping results will be written out in SAM-cpmpatible format. By default, output will be directed to stdout, but an alternative file name can be provided instead.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--writeMappings", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "incompatPrior", "argument": "--incompatPrior", "type": "float", "label": "Incompatible Prior", "help": "This option sets the prior probability that an alignment that disagrees with the specified library type (--libType) results from the true fragment origin. Setting this to 0 specifies that alignments that disagree with the library type should be 'impossible', while setting it to 1 says that alignments that disagree with the library type are no less likely than those that do", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1e-20", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "dumpEq", "argument": "--dumpEq", "type": "boolean", "label": "Dump the equivalence class counts that were computed during quasi-mapping.", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--dumpEq", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "gcSizeSamp", "argument": "--gcSizeSamp", "type": "integer", "label": "The value by which to down-sample transcripts when representing the GC content", "help": "Larger values will reduce memory usage, but may decrease the fidelity of bias modeling results.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "biasSpeedSamp", "argument": "--biasSpeedSamp", "type": "integer", "label": "The value at which the fragment length PMF is down-sampled when evaluating GC fragment bias.", "help": "Larger values speed up effective length correction, but may decrease the fidelity of bias modeling results.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "strictIntersect", "argument": "--strictIntersect", "type": "boolean", "label": "Modifies how orphans are assigned.", "help": "When this flag is set, if the intersection of the quasi-mappings for the left and right is empty, then all mappings for the left and all mappings for the right read are reported as orphaned quasi-mappings.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--strictIntersect", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "minLen", "argument": "--minLen", "type": "integer", "label": " (S)MEMs smaller than this size won't be considered.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "19", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "sensitive", "argument": "--sensitive", "type": "boolean", "label": "Perform sensitive quantification", "help": " Setting this option enables the splitting of SMEMs that are larger than 1.5 times the minimum seed length (minLen/k above).  This may reveal high scoring chains of MEMs that are masked by long SMEMs.  However, this option makes lightweight-alignment a bit slower and is usually not necessary if the reference is of reasonable quality.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--sensitive", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "consistentHits", "argument": "--consistentHits", "type": "boolean", "label": "Force hits gathered during quasi-mapping to be consistent", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--consistentHits", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "extraSensitive", "argument": "--extraSensitive", "type": "boolean", "label": "Perform extra sensitive quantification", "help": "Setting this option enables an extra pass of 'seed' search. Enabling this option may improve sensitivity (the number of reads having sufficient coverage), but will typically slow down quantification by ~40%.  Consider enabling this option if you find the mapping rate to be significantly lower than expected.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--extraSensitive", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "coverage", "argument": "--coverage", "type": "float", "label": "Required coverage of read by union of SMEMs to consider it a hit", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.7", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "fldMax", "argument": "--fldMax", "type": "integer", "label": "The maximum fragment length to consider when building the empirical distribution.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "fldMean", "argument": "--fldMean", "type": "integer", "label": "The mean used in the fragment length distribution prior", "help": "If single end reads are being used for quantification, or there are an insufficient number of uniquely mapping reads when performing paired-end quantification to estimate the empirical fragment length distribution, then use this value to calculate effective lengths.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "200", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "fldSD", "argument": "--fldSD", "type": "integer", "label": "Standard deviation", "help": "The standard deviation used in the fragment length distribution prior.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "80", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "forgettingFactor", "argument": "--forgettingFactor", "type": "float", "label": "The forgetting factor used in the online learning schedule.", "help": " A smaller value results in quicker learning, but higher variance and may be unstable. A larger value results in slower learning but may be more stable.  Value should be in the interval (0.5, 1.0].", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.65", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maxOcc", "argument": "--maxOcc", "type": "integer", "label": "(S)MEMs occuring more than this many times won't be considered", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "200", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "initUniform", "argument": "--initUniform", "type": "boolean", "label": "Initialization with uniform parameters", "help": "initialize the offline inference with uniform parameters, rather than seeding with online parameters.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--initUniform", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "maxReadOcc", "argument": "--maxReadOcc", "type": "integer", "label": "Maximal read mapping occurence", "help": "Reads mapping to more than this many places won't be considered.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "noEffectiveLengthCorrection", "argument": "--noEffectiveLengthCorrection", "type": "boolean", "label": "Disable effective length correction", "help": "Disables effective length correction when computing the probability that a fragment was generated from a transcript. If this flag is passed in, the fragment length distribution is not taken into account when computing this probability.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--noEffectiveLengthCorrection", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "noFragLengthDist", "argument": "--noFragLengthDist", "type": "boolean", "label": "Ignore fragment length distribution", "help": "[experimental] : Don't consider concordance with the learned fragment length distribution when trying to determine the probability that a fragment has originated from a specified location.  Normally, Fragments with unlikely lengths will be assigned a smaller relative probability than those with more likely lengths. When this flag is passed in, the observed fragment length has no effect on that fragment's a priori probability.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--noFragLengthDist", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "noBiasLengthThreshold", "argument": "--noBiasLengthThreshold", "type": "boolean", "label": "[experimental] : If this option is enabled, then no (lower) threshold will be set on how short bias correction can make effecctive lengths.", "help": "This can increase the precision of bias correction, but harm robustness. The difault correction applies a threshold.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--noBiasLengthThreshold", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "numBiasSamples", "argument": "--numBiasSamples", "type": "integer", "label": "Number of fragment mappings to use when learning the sequence-specific bias model.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "2000000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "numAuxModelSamples", "argument": "--numAuxModelSamples", "type": "integer", "label": "The first numAuxModelSamples are used to train the auxiliary model parameters.", "help": "(e.g. fragment length distribution, bias, etc.). After ther first numAuxModelSamples observations the auxiliary model parameters will be assumed to have converged and will be fixed.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "5000000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "numPreAuxModelSamples", "argument": "--numPreAuxModelSamples", "type": "integer", "label": "The first numPreAuxModelSamples will have their assignment likelihoods and contributions to the transcript abundances computed without applying any auxiliary models.", "help": " The purpose of ignoring the auxiliary models for the first numPreAuxModelSamples observations is to avoid applying these models before thier parameters have been learned sufficiently well.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1000000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "splitWidth", "argument": "--splitWidth", "type": "integer", "label": " If (S)MEM occurs fewer than this many times, search for smaller, contained  MEMs", "help": "The default value will not split (S)MEMs, a higher value will result in more MEMs being explore and, thus, will result in increased running time.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "splitSpanningSeeds", "argument": "--splitSpanningSeeds", "type": "boolean", "label": "Attempt to split seeds that happen to fall on the boundary between two transcripts.", "help": "This can improve the fragment hit-rate, but is usually not necessary.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--splitSpanningSeeds", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "useVBOpt", "argument": "--useVBOpt", "type": "boolean", "label": "Use the Variational Bayesian EM rather than the traditional EM algorithm for optimization in the batch passes.", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--useVBOpt", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "numGibbsSamples", "argument": "--numGibbsSamples", "type": "integer", "label": " Number of Gibbs sampling rounds to perform.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "numBootstraps", "argument": "--numBootstraps", "type": "integer", "label": "Number of bootstrap samples to generate. Note: This is mutually exclusive with Gibbs sampling.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "perTranscriptPrior", "argument": "--perTranscriptPrior", "type": "boolean", "label": "The prior will be interpreted as a transcript-level prior.", "help": "either the default or the argument provided via --vbPrior", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--perTranscriptPrior", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "vbPrior", "argument": "--vbPrior", "type": "float", "label": "The prior that will be used in the VBEM algorithm.", "help": "This is interpreted as a per-nucleotide prior, unless the --perTranscriptPrior flag is also given, in which case this is used as a transcript-level prior.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.001", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "writeUnmappedNames", "argument": "--writeUnmappedNames", "type": "boolean", "label": "Write the names of un-mapped reads to the file unmapped_names.txt.", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--writeUnmappedNames", "falsevalue": ""}]}], "outputs": [{"model_class": "ToolOutput", "name": "output_quant", "format": "tabular", "label": "${tool.name} on ${on_string} (Quantification)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/quant.sf", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "output_gene_quant", "format": "tabular", "label": "${tool.name} on ${on_string} (Gene Quantification)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/quant.genes.sf", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "rna_analysis", "panel_section_name": "RNA Analysis", "form_style": "regular"}