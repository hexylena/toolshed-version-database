{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/bgruening/salmon/salmon/0.14.1", "name": "Salmon quant", "version": "0.14.1", "description": "Perform dual-phase, reads or mapping-based estimation of transcript abundance from RNA-seq reads", "labels": [], "edam_operations": ["operation_3800", "operation_0236", "operation_2495"], "edam_topics": ["topic_3308", "topic_3170", "topic_0203"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "salmon", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "salmon", "owner": "bgruening", "changeset_revision": "4de6e2e40c7a", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "quant_type", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "reads", "inputs": [{"model_class": "Conditional", "name": "refTranscriptSource", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "indexed", "inputs": [{"model_class": "SelectToolParameter", "name": "index", "argument": null, "type": "select", "label": "Select a reference transcriptome", "help": "If your transcriptome of interest is not listed, contact your Galaxy admin", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "Actinidia_chinensis_FEI_Lab_v1.0_all_tx_transcriptome_q6", "options": [["Actinidia chinensis FEI Lab v1.0", "Actinidia_chinensis_FEI_Lab_v1.0_all_tx_transcriptome_q6", false], ["Amborella trichopoda Amborella V1.0", "Amborella_trichopoda_Amborella_V1.0_all_tx_transcriptome_q6", false], ["Amborella trichopoda JGI v1.0", "Amborella_trichopoda_JGI_v1.0_all_tx_transcriptome_q6", false], ["Ananas comosus JGI v3.0", "Ananas_comosus_JGI_v3.0_all_tx_transcriptome_q6", false], ["Apostasia shenzhenica v1.0", "Apostasia_shenzhenica_v1.0_all_tx_transcriptome_q6", false], ["Arabidopsis lyrata JGI v1.0", "Arabidopsis_lyrata_JGI_v1.0_all_tx_transcriptome_q6", false], ["Arabidopsis lyrata JGI v2.1", "Arabidopsis_lyrata_JGI_v2.1_all_tx_transcriptome_q6", false], ["Arabidopsis thaliana COL-0 Araport11", "Arabidopsis_thaliana_COL-0_Araport11_all_tx_transcriptome_q6", false], ["Arabidopsis thaliana COL-0 TAIR10", "Arabidopsis_thaliana_COL-0_TAIR10_all_tx_transcriptome_q6", false], ["Arachis ipaensis Peanut Base v1.0", "Arachis_ipaensis_Peanut_Base_v1.0_all_tx_transcriptome_q6", false], ["Asparagus officinalis v1.1", "Asparagus_officinalis_v1.1_all_tx_transcriptome_q6", false], ["Beta vulgaris RefBeet 1.1", "Beta_vulgaris_RefBeet_1.1_all_tx_transcriptome_q6", false], ["Beta vulgaris RefBeet v1.2", "Beta_vulgaris_RefBeet_v1.2_all_tx_transcriptome_q6", false], ["Brachypodium distachyon JGI v3.1", "Brachypodium_distachyon_JGI_v3.1_all_tx_transcriptome_q6", false], ["Brachypodium distachyon MIPS 1.2", "Brachypodium_distachyon_MIPS_1.2_all_tx_transcriptome_q6", false], ["Brassica oleracea Ensembl Genomes v2.1", "Brassica_oleracea_Ensembl_Genomes_v2.1_all_tx_transcriptome_q6", false], ["Brassica rapa Annotation v1.2 on assembly v1.1 (Phytozome 9.1)", "Brassica_rapa_Annotation_v1.2_on_assembly_v1.1_Phytozome_9.1_all_tx_transcriptome_q6", false], ["Brassica rapa JGI FPsc1.3", "Brassica_rapa_JGI_FPsc1.3_all_tx_transcriptome_q6", false], ["Cajanus cajan Penguin Genomics v5.0", "Cajanus_cajan_Penguin_Genomics_v5.0_all_tx_transcriptome_q6", false], ["Capsella rubella JGI annotation v1.0 on assembly v1", "Capsella_rubella_JGI_annotation_v1.0_on_assembly_v1_all_tx_transcriptome_q6", false], ["Capsella rubella JGI v1.0", "Capsella_rubella_JGI_v1.0_all_tx_transcriptome_q6", false], ["Capsicum annuum Pepper Genome v2.0", "Capsicum_annuum_Pepper_Genome_v2.0_all_tx_transcriptome_q6", false], ["Carica papaya Hawaii Agriculture Research Center", "Carica_papaya_Hawaii_Agriculture_Research_Center_all_tx_transcriptome_q6", false], ["Carica papaya JGI ASGPB0.4", "Carica_papaya_JGI_ASGPB0.4_all_tx_transcriptome_q6", false], ["Cenchrus americanus v1.0", "Cenchrus_americanus_v1.0_all_tx_transcriptome_q6", false], ["Chenopodium quinoa JGI v1.0", "Chenopodium_quinoa_JGI_v1.0_all_tx_transcriptome_q6", false], ["Chlamydomonas reinhardtii JGI v5.0 assembly, annot v5.3.1 based on Augustus u11.6", "Chlamydomonas_reinhardtii_JGI_v5.0_assembly_annot_v5.3.1_based_on_Augustus_u11.6_all_tx_transcriptome_q6", false], ["Chlamydomonas reinhardtii JGI v5.5", "Chlamydomonas_reinhardtii_JGI_v5.5_all_tx_transcriptome_q6", false], ["Cicer arietinum LIS v1.0", "Cicer_arietinum_LIS_v1.0_all_tx_transcriptome_q6", false], ["Citrullus lanatus Cucurbit Genomics Database", "Citrullus_lanatus_Cucurbit_Genomics_Database_all_tx_transcriptome_q6", false], ["Citrullus lanatus Cucurbit Genomics Database v1.0", "Citrullus_lanatus_Cucurbit_Genomics_Database_v1.0_all_tx_transcriptome_q6", false], ["Citrus clementina JGI v1.0", "Citrus_clementina_JGI_v1.0_all_tx_transcriptome_q6", false], ["Citrus sinensis JGI v1 assembly and v1.0 annotation", "Citrus_sinensis_JGI_v1_assembly_and_v1.0_annotation_all_tx_transcriptome_q6", false], ["Coffea canephora Coffee Genome Hub v1", "Coffea_canephora_Coffee_Genome_Hub_v1_all_tx_transcriptome_q6", false], ["Corchorus olitorius GenBank v1.0", "Corchorus_olitorius_GenBank_v1.0_all_tx_transcriptome_q6", false], ["Cucumis melo Melonomics v3.5", "Cucumis_melo_Melonomics_v3.5_all_tx_transcriptome_q6", false], ["Cucumis sativus L. JGI v1.0", "Cucumis_sativus_L._JGI_v1.0_all_tx_transcriptome_q6", false], ["Daucus carota JGI v2.0", "Daucus_carota_JGI_v2.0_all_tx_transcriptome_q6", false], ["Elaeis guineensis EG5.1", "Elaeis_guineensis_EG5.1_all_tx_transcriptome_q6", false], ["Elaeis guineensis NCBI Genome v1.0", "Elaeis_guineensis_NCBI_Genome_v1.0_all_tx_transcriptome_q6", false], ["Erythranthe guttata JGI v2.0", "Erythranthe_guttata_JGI_v2.0_all_tx_transcriptome_q6", false], ["Eucalyptus grandis JGI assembly v1.0, annotation v1.1", "Eucalyptus_grandis_JGI_assembly_v1.0_annotation_v1.1_all_tx_transcriptome_q6", false], ["Eucalyptus grandis JGI v2.0", "Eucalyptus_grandis_JGI_v2.0_all_tx_transcriptome_q6", false], ["Fragaria vesca JGI v1.1", "Fragaria_vesca_JGI_v1.1_all_tx_transcriptome_q6", false], ["Fragaria vesca Strawberry Genome 1.0", "Fragaria_vesca_Strawberry_Genome_1.0_all_tx_transcriptome_q6", false], ["Glycine max JGI Glyma1.1 annotation of the chromosome-based Glyma1 assembly", "Glycine_max_JGI_Glyma1.1_annotation_of_the_chromosome-based_Glyma1_assembly_all_tx_transcriptome_q6", false], ["Glycine max JGI Wm82.a2.v1", "Glycine_max_JGI_Wm82.a2.v1_all_tx_transcriptome_q6", false], ["Gossypium raimondii JGI annotation v2.1 on assembly v2.0", "Gossypium_raimondii_JGI_annotation_v2.1_on_assembly_v2.0_all_tx_transcriptome_q6", false], ["Gossypium raimondii JGI v2.1", "Gossypium_raimondii_JGI_v2.1_all_tx_transcriptome_q6", false], ["Hevea brasiliensis NCBI Genomes v1", "Hevea_brasiliensis_NCBI_Genomes_v1_all_tx_transcriptome_q6", false], ["Hordeum vulgare Ensembl Genomes ASM32608v1", "Hordeum_vulgare_Ensembl_Genomes_ASM32608v1_all_tx_transcriptome_q6", false], ["Hordeum vulgare IBC PGSB v2", "Hordeum_vulgare_IBC_PGSB_v2_all_tx_transcriptome_q6", false], ["Hordeum vulgare MIPS", "Hordeum_vulgare_MIPS_all_tx_transcriptome_q6", false], ["Lotus japonicus Kazusa 2.5", "Lotus_japonicus_Kazusa_2.5_all_tx_transcriptome_q6", false], ["Malus domestica IASMA", "Malus_domestica_IASMA_all_tx_transcriptome_q6", false], ["Malus domestica Penguin Genomics v2", "Malus_domestica_Penguin_Genomics_v2_all_tx_transcriptome_q6", false], ["Manihot esculenta Cassava4", "Manihot_esculenta_Cassava4_all_tx_transcriptome_q6", false], ["Manihot esculenta JGI v6.1", "Manihot_esculenta_JGI_v6.1_all_tx_transcriptome_q6", false], ["Marchantia polymorpha JGI v3.1", "Marchantia_polymorpha_JGI_v3.1_all_tx_transcriptome_q6", false], ["Medicago truncatula JCVI 4.0", "Medicago_truncatula_JCVI_4.0_all_tx_transcriptome_q6", false], ["Medicago truncatula JGI Mt4.0v1", "Medicago_truncatula_JGI_Mt4.0v1_all_tx_transcriptome_q6", false], ["Micromonas commoda JGI v3.0", "Micromonas_commoda_JGI_v3.0_all_tx_transcriptome_q6", false], ["Musa acuminata Banana Genome v1.0", "Musa_acuminata_Banana_Genome_v1.0_all_tx_transcriptome_q6", false], ["Musa acuminata Banana Genome v2.0", "Musa_acuminata_Banana_Genome_v2.0_all_tx_transcriptome_q6", false], ["Musa acuminata Genescope-Cirad", "Musa_acuminata_Genescope-Cirad_all_tx_transcriptome_q6", false], ["Nelumbo nucifera LOTUS-DB v1.1", "Nelumbo_nucifera_LOTUS-DB_v1.1_all_tx_transcriptome_q6", false], ["Oropetium thomaeum JGI v1.0", "Oropetium_thomaeum_JGI_v1.0_all_tx_transcriptome_q6", false], ["Oryza brachyantha Ensembl Plants v1.4b", "Oryza_brachyantha_Ensembl_Plants_v1.4b_all_tx_transcriptome_q6", false], ["Oryza sativa ssp. indica 9311_BGF_2005", "Oryza_sativa_ssp._indica_9311_BGF_2005_all_tx_transcriptome_q6", false], ["Oryza sativa ssp. indica MBKBASE v1.0", "Oryza_sativa_ssp._indica_MBKBASE_v1.0_all_tx_transcriptome_q6", false], ["Oryza sativa ssp. japonica JGI v7.0", "Oryza_sativa_ssp._japonica_JGI_v7.0_all_tx_transcriptome_q6", false], ["Oryza sativa ssp. japonica MSU RGAP 7", "Oryza_sativa_ssp._japonica_MSU_RGAP_7_all_tx_transcriptome_q6", false], ["Ostreococcus lucimarinus JGI 2.0", "Ostreococcus_lucimarinus_JGI_2.0_all_tx_transcriptome_q6", false], ["Ostreococcus lucimarinus JGI v2.0 assembly and annotation", "Ostreococcus_lucimarinus_JGI_v2.0_assembly_and_annotation_all_tx_transcriptome_q6", false], ["Petunia axillaris Sol Genomics v1.6.2", "Petunia_axillaris_Sol_Genomics_v1.6.2_all_tx_transcriptome_q6", false], ["Phalaenopsis equestris Genomics v1.0", "Phalaenopsis_equestris_Genomics_v1.0_all_tx_transcriptome_q6", false], ["Phyllostachys edulis NCGR v1.0", "Phyllostachys_edulis_NCGR_v1.0_all_tx_transcriptome_q6", false], ["Physcomitrella patens JGI assembly release v1.1 and COSMOSS annotation v1.6", "Physcomitrella_patens_JGI_assembly_release_v1.1_and_COSMOSS_annotation_v1.6_all_tx_transcriptome_q6", false], ["Physcomitrella patens JGI v3.3", "Physcomitrella_patens_JGI_v3.3_all_tx_transcriptome_q6", false], ["Picea abies ConGenIE v1.0", "Picea_abies_ConGenIE_v1.0_all_tx_transcriptome_q6", false], ["Populus trichocarpa JGI assembly release v3.0, annotation v3.0", "Populus_trichocarpa_JGI_assembly_release_v3.0_annotation_v3.0_all_tx_transcriptome_q6", false], ["Populus trichocarpa JGI v3.1", "Populus_trichocarpa_JGI_v3.1_all_tx_transcriptome_q6", false], ["Prunus persica JGI release v1.0", "Prunus_persica_JGI_release_v1.0_all_tx_transcriptome_q6", false], ["Prunus persica JGI v2.1", "Prunus_persica_JGI_v2.1_all_tx_transcriptome_q6", false], ["Pyrus bretschneideri Pear Genome Project v1.0", "Pyrus_bretschneideri_Pear_Genome_Project_v1.0_all_tx_transcriptome_q6", false], ["Ricinus communis JCVI 1.0", "Ricinus_communis_JCVI_1.0_all_tx_transcriptome_q6", false], ["Ricinus communis JGI v0.1", "Ricinus_communis_JGI_v0.1_all_tx_transcriptome_q6", false], ["Saccharum spontaneum v20190103", "Saccharum_spontaneum_v20190103_all_tx_transcriptome_q6", false], ["Schrenkiella parvula Thellungiella v2.0 (TpV84)", "Schrenkiella_parvula_Thellungiella_v2.0_TpV84_all_tx_transcriptome_q6", false], ["Selaginella moellendorffii JGI v1.0", "Selaginella_moellendorffii_JGI_v1.0_all_tx_transcriptome_q6", false], ["Selaginella moellendorffii NCBIr100", "Selaginella_moellendorffii_NCBIr100_all_tx_transcriptome_q6", false], ["Setaria italica JGI 8.3X chromosome-scale assembly release 2.0, annotation version 2.1", "Setaria_italica_JGI_8.3X_chromosome-scale_assembly_release_2.0_annotation_version_2.1_all_tx_transcriptome_q6", false], ["Setaria italica JGI v2.2", "Setaria_italica_JGI_v2.2_all_tx_transcriptome_q6", false], ["Solanum lycopersicum ITAG 2.3", "Solanum_lycopersicum_ITAG_2.3_all_tx_transcriptome_q6", false], ["Solanum lycopersicum Sol Genomics itag2.4", "Solanum_lycopersicum_Sol_Genomics_itag2.4_all_tx_transcriptome_q6", false], ["Solanum tuberosum ITAG 001", "Solanum_tuberosum_ITAG_001_all_tx_transcriptome_q6", false], ["Solanum tuberosum JGI v4.03", "Solanum_tuberosum_JGI_v4.03_all_tx_transcriptome_q6", false], ["Sorghum bicolor JGI 1.4", "Sorghum_bicolor_JGI_1.4_all_tx_transcriptome_q6", false], ["Sorghum bicolor JGI v3.1", "Sorghum_bicolor_JGI_v3.1_all_tx_transcriptome_q6", false], ["Spirodela polyrhiza JGI v2.0", "Spirodela_polyrhiza_JGI_v2.0_all_tx_transcriptome_q6", false], ["Tarenaya hassleriana RefSeq v1", "Tarenaya_hassleriana_RefSeq_v1_all_tx_transcriptome_q6", false], ["Thellungiella parvula TpV84", "Thellungiella_parvula_TpV84_all_tx_transcriptome_q6", false], ["Theobroma cacao D. Gilbert public gene set 8 Mar 2012 on assembly v1.1", "Theobroma_cacao_D._Gilbert_public_gene_set_8_Mar_2012_on_assembly_v1.1_all_tx_transcriptome_q6", false], ["Theobroma cacao RefSeq v1.1", "Theobroma_cacao_RefSeq_v1.1_all_tx_transcriptome_q6", false], ["Trifolium pratense JGI v2", "Trifolium_pratense_JGI_v2_all_tx_transcriptome_q6", false], ["Triticum aestivum Ensembl Plants TGACv1", "Triticum_aestivum_Ensembl_Plants_TGACv1_all_tx_transcriptome_q6", false], ["Triticum aestivum IWGSC1.1", "Triticum_aestivum_IWGSC1.1_all_tx_transcriptome_q6", false], ["Triticum turgidum Svevo v1.0", "Triticum_turgidum_Svevo_v1.0_all_tx_transcriptome_q6", false], ["Utricularia gibba CoGe v4", "Utricularia_gibba_CoGe_v4_all_tx_transcriptome_q6", false], ["Vigna radiata var. radiata LIS v6", "Vigna_radiata_var._radiata_LIS_v6_all_tx_transcriptome_q6", false], ["Vitis vinifera JGI 12xMarch2010", "Vitis_vinifera_JGI_12xMarch2010_all_tx_transcriptome_q6", false], ["Vitis vinifera genescope v1", "Vitis_vinifera_genescope_v1_all_tx_transcriptome_q6", false], ["Zea mays B73 AGP v4.0", "Zea_mays_B73_AGP_v4.0_all_tx_transcriptome_q6", false], ["Zea mays PH207 v1.0", "Zea_mays_PH207_v1.0_all_tx_transcriptome_q6", false], ["Zostera marina JGI v2.2", "Zostera_marina_JGI_v2.2_all_tx_transcriptome_q6", false], ["Zoysia japonica ssp. nagirizaki Zoysia Genome Database v1.1", "Zoysia_japonica_ssp._nagirizaki_Zoysia_Genome_Database_v1.1_all_tx_transcriptome_q6", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "Section", "name": "s_index", "type": "section", "title": "Salmon index", "help": null, "expanded": true, "inputs": [{"model_class": "DataToolParameter", "name": "fasta", "argument": null, "type": "data", "label": "Transcripts fasta file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "kmer", "argument": null, "type": "integer", "label": "Kmer length", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "31", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "phash", "argument": null, "type": "boolean", "label": "Perfect Hash", "help": "Build the index using a perfect hash rather than a dense hash.  This will require less memory (especially during quantification), but will take longer to construct", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--perfectHash", "falsevalue": ""}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "TranscriptSource", "argument": null, "type": "select", "label": "Select a reference transcriptome from your history or use a built-in index?", "help": "Built-ins were indexed using default options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "history", "options": [["Use a built-in index", "indexed", false], ["Use one from the history", "history", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "input", "type": "section", "title": "Data input", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "single_or_paired", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "single", "inputs": [{"model_class": "DataToolParameter", "name": "input_singles", "argument": null, "type": "data", "label": "FASTQ/FASTA file", "help": "FASTQ file.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastq.bz2"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930", "format_1930"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "strandedness", "argument": null, "type": "select", "label": "Specify the strandedness of the reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "U", "options": [["Not stranded (U)", "U", true], ["read comes from the forward strand (SF)", "SF", false], ["read comes from the reverse strand (SR)", "SR", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "paired", "inputs": [{"model_class": "DataToolParameter", "name": "input_mate1", "argument": null, "type": "data", "label": "Mate pair 1", "help": "FASTQ file.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastq.bz2", "fastqsanger", "fastqsanger.gz", "fastqsanger.bz2"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930", "format_1930", "format_1932", "format_1932", "format_1932"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_mate2", "argument": null, "type": "data", "label": "Mate pair 2", "help": "FASTQ file.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastq.bz2", "fastqsanger", "fastqsanger.gz", "fastqsanger.bz2"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930", "format_1930", "format_1932", "format_1932", "format_1932"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "orientation", "argument": null, "type": "select", "label": "Relative orientation of reads within a pair", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "I", "options": [["Mates are oriented in the same direction (M = matching)", "M", false], ["Mates are oriented away from each other (O = outward)", "O", false], ["Mates are oriented toward each other (I = inward)", "I", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "strandedness", "argument": null, "type": "select", "label": "Specify the strandedness of the reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "U", "options": [["Not stranded (U)", "U", true], ["read comes from the forward strand (SF)", "SF", false], ["read comes from the reverse strand (SR)", "SR", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "paired_collection", "inputs": [{"model_class": "DataCollectionToolParameter", "name": "input_1", "argument": null, "type": "data_collection", "label": "FASTQ Paired Dataset", "help": "Must be of datatype \"fastqsanger\" or \"fasta\"", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastq.bz2", "fastqsanger", "fastqsanger.gz", "fastqsanger.bz2"], "multiple": false, "options": {"hda": [], "hdca": [], "dce": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "orientation", "argument": null, "type": "select", "label": "Relative orientation of reads within a pair", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "I", "options": [["Mates are oriented in the same direction (M = matching)", "M", false], ["Mates are oriented away from each other (O = outward)", "O", false], ["Mates are oriented toward each other (I = inward)", "I", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "strandedness", "argument": null, "type": "select", "label": "Specify the strandedness of the reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "U", "options": [["Not stranded (U)", "U", true], ["read comes from the forward strand (SF)", "SF", false], ["read comes from the reverse strand (SR)", "SR", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "paired_interleaved", "inputs": [{"model_class": "DataToolParameter", "name": "input_1", "argument": null, "type": "data", "label": "Interleaved FASTQ file", "help": "Must be of datatype \"fastqsanger\" or \"fasta\". --interleaved", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq", "fasta", "fastq.gz", "fastq.bz2", "fastqsanger", "fastqsanger.gz", "fastqsanger.bz2"], "edam": {"edam_formats": ["format_1930", "format_1929", "format_1930", "format_1930", "format_1932", "format_1932", "format_1932"], "edam_data": ["data_2044", "data_2044", "data_2044", "data_2044", "data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "orientation", "argument": null, "type": "select", "label": "Relative orientation of reads within a pair", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "I", "options": [["Mates are oriented in the same direction (M = matching)", "M", false], ["Mates are oriented away from each other (O = outward)", "O", false], ["Mates are oriented toward each other (I = inward)", "I", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "strandedness", "argument": null, "type": "select", "label": "Specify the strandedness of the reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "U", "options": [["Not stranded (U)", "U", true], ["read comes from the forward strand (SF)", "SF", false], ["read comes from the reverse strand (SR)", "SR", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "single_or_paired_opts", "argument": null, "type": "select", "label": "Is this library mate-paired?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "single", "options": [["Single-end", "single", false], ["Paired-end", "paired", false], ["Paired-end Dataset Collection", "paired_collection", false], ["Paired-end data from single interleaved dataset", "paired_interleaved", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "SelectToolParameter", "name": "type", "argument": "--type", "type": "select", "label": "Type of index", "help": "When using quasi, orphaned reads will be considered when performing lightweight-alignment.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "quasi", "options": [["quasi", "quasi", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "discardOrphansQuasi", "argument": null, "type": "boolean", "label": "Discard orphan quasi", "help": "Discard orphan mappings in quasi-mapping mode. If this flag is passed then only paired mappings will be considered toward quantification estimates.  The default behavior is to consider orphan mappings if no valid paired mappings exist.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--discardOrphansQuasi", "falsevalue": ""}, {"model_class": "Conditional", "name": "validmap", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "--validateMappings", "inputs": [{"model_class": "FloatToolParameter", "name": "minScoreFraction", "argument": null, "type": "float", "label": "Min Score Fraction", "help": "The fraction of the optimal possible alignment score that a mapping must achieve in order to be considered valid. Should be in (0,1].", "refresh_on_change": false, "min": 0.0, "max": 0.99, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.65", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maxMMPExtension", "argument": null, "type": "integer", "label": "Sets the maximum allowable MMP extension when collecting suffix array intervals to be used in chaining. This prevents MMPs from becoming too long, and potentially masking intervals that would uncover other good quasi-mappings for the read. This heuristic mimics the idea of the maximum mappable safe prefix (MMSP) in selective alignment.  Setting a smaller value will potentially allow for more sensitive, but slower, mapping.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "matchScore", "argument": "--ma", "type": "integer", "label": "Match Score", "help": "The value given to a match between read and reference nucleotides in an alignment.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "mismatchPenalty", "argument": "--mp", "type": "integer", "label": "Mismatch Penalty", "help": "The value given to a mis-match between read and reference nucleotides in an alignment. This will be cast to a negative value.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "gapOpenPenalty", "argument": "--go", "type": "integer", "label": "Gap Open Penalty", "help": "The value given to a gap opening in an alignment.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "gapExtensionPenalty", "argument": "--ge", "type": "integer", "label": "Gap Extension Penalty", "help": "The value given to a gap extension in an alignment.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "mimicBT2", "argument": null, "type": "boolean", "label": "Mimic Bowtie 2", "help": " Set flags to mimic parameters similar to Bowtie2 with --no-discordant and --no-mixed flags. This increases disallows dovetailing reads, and discards orphans. Note, this does not impose the very strict parameters assumed by RSEM+Bowtie2, like gapless alignments. For that behavior, use the --mimiStrictBT2 flag ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--mimicBT2", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "mimicStrictBT2", "argument": null, "type": "boolean", "label": "Mimic Strict Bowtie 2", "help": "Set flags to mimic the very strict parameters used by RSEM+Bowtie2. This increases --minScoreFraction to 0.8, disallows dovetailing reads, discards orphans, and disallows gaps in alignments.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--mimicStrictBT2", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "hardFilter", "argument": null, "type": "boolean", "label": "Hard Filter", "help": "Instead of weighting mappings by their alignment score, this flag will discard any mappings with sub-optimal alignment score. The default option of soft-filtering (i.e. weighting mappings by their alignment score) usually yields slightly more accurate abundance estimates but this flag may be desirable if you want more accurate 'naive' equivalence classes, rather than range factorized equivalence classes.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--hardFilter", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "", "inputs": []}], "test_param": {"model_class": "BooleanToolParameter", "name": "validateMappings", "argument": null, "type": "boolean", "label": "Validate mappings", "help": "Validate mappings using alignment-based verifcation. If this flag is passed, quasi-mappings will be validated to ensure that they could give rise to a reasonable alignment before they are further used for quantification.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--validateMappings", "falsevalue": ""}}, {"model_class": "IntegerToolParameter", "name": "consensusSlack", "argument": null, "type": "integer", "label": "Consensus Slack", "help": "The amount of slack allowed in the quasi-mapping consensus mechanism.  Normally, a transcript must cover all hits to be considered for mapping. If this is set to a value, X, greater than 0, then a transcript can fail to cover up to X hits before it is discounted as a mapping candidate.  The default value of this option is 1 if --validateMappings is given and 0 otherwise.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "dovetail", "argument": null, "type": "boolean", "label": "Allow Dovetail", "help": "Allow dovetail mappings", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--allowDovetail", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "recoverOrphans", "argument": null, "type": "boolean", "label": "Recover Orphans", "help": "Attempt to recover the mates of orphaned reads. This uses edlib for orphan recovery, and so introduces some computational overhead, but it can improve sensitivity.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--recoverOrphans", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "writeMappings", "argument": null, "type": "boolean", "label": "Write Mappings to Bam File", "help": "If this option is provided, then the quasi-mapping results will be written out in SAM-compatible format.  By default, output will be directed to stdout, but an alternative file name can be provided instead", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--writeMappings=./output/samout.sam", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "consistentHits", "argument": null, "type": "boolean", "label": "Consistent Hits", "help": "Force hits gathered during quasi-mapping to be 'consistent' (i.e. co-linear and approximately the right distance apart).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--consistentHits", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "quasiCoverage", "argument": null, "type": "integer", "label": "Quasi Coverage", "help": "[Experimental]: The fraction of the read that must be covered by MMPs (of length >= 31) if this read is to be considered as 'mapped'. This may help to avoid 'spurious' mappings. A value of 0 (the default) denotes no coverage threshold (a single 31-mer can yield a mapping). Since coverage by exact matching, large, MMPs is a rather strict condition, this value should likely be set to something low, if used.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "alignment", "inputs": [{"model_class": "DataToolParameter", "name": "afile", "argument": null, "type": "data", "label": "Alignment file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam"], "edam": {"edam_formats": ["format_2572"], "edam_data": ["data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "transcript", "argument": null, "type": "data", "label": "Transcript file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta", "fa"], "edam": {"edam_formats": ["format_1929", null], "edam_data": ["data_2044", null]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "strandedness", "argument": null, "type": "select", "label": "Specify the strandedness of the reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "U", "options": [["Not stranded (U)", "U", true], ["read comes from the forward strand (SF)", "SF", false], ["read comes from the reverse strand (SR)", "SR", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "discardOrphans", "argument": null, "type": "boolean", "label": "Discard orphans", "help": "Discard orphan alignments in the input. If this flag is passed, then only paired alignments will be considered toward quantification estimates. The default behavior is to consider orphan alignments if no valid paired mappings exist.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--discardOrphans", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "noErrorModel", "argument": null, "type": "boolean", "label": "No Error Model", "help": "Turn off the alignment error model, which takes into account the the observed frequency of different types of mismatches / indels when computing the likelihood of a given alignment. Turning this off can speed up alignment-based salmon, but can harm quantification accuracy.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--noErrorModel", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "numErrorBins", "argument": null, "type": "integer", "label": "Number of Error Bins", "help": "The number of bins into which to divideeach read when learning and applying the error model. For example, a value of 10 would mean that effectively, a separate error model is learned and applied to each 10th of the read, whilea value of 3 would mean that a separate error model is applied to the read beginning (first third), middle (second third) and end (final third).", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "6", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "sampleOut", "argument": null, "type": "boolean", "label": "Sample out", "help": "Write a 'postSample.bam' file in the output directory that will sample the input alignments according to the estimated transcript abundances. If you're going to perform downstream analysis of the alignments with tools which don't, themselves, take fragment assignment ambiguity into account, you should use this output", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--sampleOut", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "sampleUnaligned", "argument": null, "type": "boolean", "label": "Sample unaligned", "help": "In addition to sampling the aligned reads, also write the un-aligned reads to 'postSample.bam'.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--sampleUnaligned", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "gencode", "argument": null, "type": "boolean", "label": "Gencode", "help": "This flag will expect the input transcript fasta to be in GENCODE format, and will split the transcript name at the first '|' character.  These reduced names will be used in the output and when looking for these transcripts in a gene to transcript GTF.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--gencode", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "qtype", "argument": null, "type": "select", "label": "Select salmon quantification mode:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "reads", "options": [["Reads", "reads", true], ["Alignment", "alignment", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "DataToolParameter", "name": "geneMap", "argument": null, "type": "data", "label": "File containing a mapping of transcripts to genes", "help": "If this file is provided Salmon will output both quant.sf and quant.genes.sf files, where the latter contains aggregated gene-level abundance estimates. The transcript to gene mapping should be provided as either a GTF file, or a in a simple tab-delimited format where each line contains the name of a transcript and the gene to which it belongs separated by a tab.", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tabular", "gff", "gtf"], "edam": {"edam_formats": ["format_3475", "format_2305", "format_2306"], "edam_data": ["data_0006", "data_1255", "data_1255"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "seqBias", "argument": null, "type": "boolean", "label": "Perform sequence-specific bias correction", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--seqBias", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "gcBias", "argument": null, "type": "boolean", "label": "Perform fragment GC bias correction", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--gcBias", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "incompatPrior", "argument": null, "type": "float", "label": "", "help": "Sets the prior probability that an alignment that disagrees with the specified library type (orientation and strandedness) results from the true fragment origin. Setting this to 0 specifies that alignments that disagree with the library type should be 'impossible', while setting it to 1 says that alignments that disagree with the library type are no less likely than those that do", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "meta", "argument": null, "type": "boolean", "label": "Meta", "help": "If you're using Salmon on a metagenomic dataset, consider setting this flag to disable parts of the abundance estimation model that make less sense for metagenomic data.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--meta", "falsevalue": ""}, {"model_class": "Section", "name": "adv", "type": "section", "title": "Additional Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "skipQuant", "argument": null, "type": "boolean", "label": "skipQuant", "help": "Skip performing the actual transcript quantification (including any Gibbs sampling or bootstrapping).", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--skipQuant", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "dumpEq", "argument": null, "type": "boolean", "label": "Dump equivalence class counts", "help": "Dump the equivalence class counts that were computed during quasi-mapping.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--dumpEq", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "dumpEqWeights", "argument": null, "type": "boolean", "label": "Dump equivalence class counts including rich weights", "help": "Includes 'rich' equivlance class weights in the output when equivalence class information is being dumped to file.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--dumpEqWeights", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "minAssignedFrags", "argument": null, "type": "integer", "label": "Minimum assigned fragments", "help": "The minimum number of fragments that must be assigned to the transcriptome for quantification to proceed.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "biasSpeedSamp", "argument": null, "type": "integer", "label": "The value at which the fragment length PMF is down-sampled when evaluating GC fragment bias.", "help": "Larger values speed up effective length correction, but may decrease the fidelity of bias modeling results.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "fldMax", "argument": null, "type": "integer", "label": "The maximum fragment length to consider when building the empirical distribution.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "fldMean", "argument": null, "type": "integer", "label": "The mean used in the fragment length distribution prior", "help": "If single end reads are being used for quantification, or there are an insufficient number of uniquely mapping reads when performing paired-end quantification to estimate the empirical fragment length distribution, then use this value to calculate effective lengths.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "250", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "fldSD", "argument": null, "type": "integer", "label": "Standard deviation", "help": "The standard deviation used in the fragment length distribution prior.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "25", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "forgettingFactor", "argument": null, "type": "float", "label": "The forgetting factor used in the online learning schedule.", "help": " A smaller value results in quicker learning, but higher variance and may be unstable. A larger value results in slower learning but may be more stable.  Value should be in the interval (0.5, 1.0].", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.65", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "initUniform", "argument": null, "type": "boolean", "label": "Initialization with uniform parameters", "help": "initialize the offline inference with uniform parameters, rather than seeding with online parameters.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--initUniform", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "maxReadOcc", "argument": null, "type": "integer", "label": "Maximal read mapping occurence", "help": "Reads mapping to more than this many places won't be considered.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "noLengthCorrection", "argument": null, "type": "boolean", "label": "No length correction", "help": "[experimental] : Entirely disables length correction when estimating the abundance of transcripts.  This option can be used with protocols where one expects that fragments derive from their underlying targets without regard to that target's length (e.g. QuantSeq)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--noLengthCorrection", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "noEffectiveLengthCorrection", "argument": null, "type": "boolean", "label": "Disable effective length correction", "help": "Disables effective length correction when computing the probability that a fragment was generated from a transcript. If this flag is passed in, the fragment length distribution is not taken into account when computing this probability.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--noEffectiveLengthCorrection", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "noFragLengthDist", "argument": null, "type": "boolean", "label": "Ignore fragment length distribution", "help": "[experimental] : Don't consider concordance with the learned fragment length distribution when trying to determine the probability that a fragment has originated from a specified location.  Normally, Fragments with unlikely lengths will be assigned a smaller relative probability than those with more likely lengths. When this flag is passed in, the observed fragment length has no effect on that fragment's a priori probability.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--noFragLengthDist", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "noBiasLengthThreshold", "argument": null, "type": "boolean", "label": "[experimental] : If this option is enabled, then no (lower) threshold will be set on how short bias correction can make effecctive lengths.", "help": "This can increase the precision of bias correction, but harm robustness. The default correction applies a threshold.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--noBiasLengthThreshold", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "numBiasSamples", "argument": null, "type": "integer", "label": "Number of fragment mappings to use when learning the sequence-specific bias model.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "2000000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "numAuxModelSamples", "argument": null, "type": "integer", "label": "The first numAuxModelSamples are used to train the auxiliary model parameters.", "help": "(e.g. fragment length distribution, bias, etc.). After ther first numAuxModelSamples observations the auxiliary model parameters will be assumed to have converged and will be fixed.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "5000000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "numPreAuxModelSamples", "argument": null, "type": "integer", "label": "The first numPreAuxModelSamples will have their assignment likelihoods and contributions to the transcript abundances computed without applying any auxiliary models.", "help": " The purpose of ignoring the auxiliary models for the first numPreAuxModelSamples observations is to avoid applying these models before thier parameters have been learned sufficiently well.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "5000", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "useEM", "argument": null, "type": "boolean", "label": "Use the traditional EM algorithm for optimization in the batch passes.", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--useEM", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "rangeFactorizationBins", "argument": null, "type": "integer", "label": "Range of factorization bins", "help": "Factorizes the likelihood used in quantification by adopting a new notionof equivalence classes based on the conditional probabilities with which fragments are generated from different transcripts. This is a more fine-grained factorization than the normal rich equivalence classes. The default value (0) corresponds to the standard rich equivalence classes, and larger values imply a more fine-grained factorization. If range factorization is enabled, a common value to select for this parameter is 4.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "numGibbsSamples", "argument": null, "type": "integer", "label": "Number of Gibbs sampling rounds to perform.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "noGammaDraw", "argument": null, "type": "boolean", "label": "No gamma draw", "help": "This switch will disable drawing transcript fractions from a Gamma distribution during Gibbs sampling. In this case the sampler does not account for shot-noise, but only assignment ambiguity", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--noGammaDraw", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "numBootstraps", "argument": null, "type": "integer", "label": "Number of bootstrap samples to generate. Note: This is mutually exclusive with Gibbs sampling.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "bootstrapReproject", "argument": null, "type": "boolean", "label": "Bootstrap reproject", "help": "This switch will learn the parameter distribution from the bootstrapped counts for each sample, but will reproject those parameters onto the original equivalence class counts.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--bootstrapReproject", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "thinningFactor", "argument": null, "type": "integer", "label": "Thinning factor", "help": "Number of steps to discard for every sample kept from the Gibbs chain. The larger this number, the less chance that subsequent samples are auto-correlated, but the slower sampling becomes.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "16", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "perTranscriptPrior", "argument": null, "type": "boolean", "label": "The prior will be interpreted as a transcript-level prior.", "help": "either the default or the argument provided via --vbPrior", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--perTranscriptPrior", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "sigDigits", "argument": null, "type": "integer", "label": "Significant Digits", "help": "The number of significant digits to write when outputting the EffectiveLength and NumReads columns.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "vbPrior", "argument": null, "type": "float", "label": "The prior that will be used in the VBEM algorithm.", "help": "This is interpreted as a per-nucleotide prior, unless the --perTranscriptPrior flag is also given, in which case this is used as a transcript-level prior.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1e-05", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "writeOrphanLinks", "argument": null, "type": "boolean", "label": "Write orphan links", "help": "Write the transcripts that are linked by orphaned reads.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--writeOrphanLinks", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "writeUnmappedNames", "argument": null, "type": "boolean", "label": "Write the names of un-mapped reads to the file unmapped_names.txt.", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--writeUnmappedNames", "falsevalue": ""}]}], "outputs": [{"model_class": "ToolOutput", "name": "output_quant", "format": "tabular", "label": "${tool.name} on ${on_string} (Quantification)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/quant.sf", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "output_gene_quant", "format": "tabular", "label": "${tool.name} on ${on_string} (Gene Quantification)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/quant.genes.sf", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "output_bam", "format": "bam", "label": "${tool.name} on ${on_string} (BAM format)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/bamout.bam", "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "postSample", "format": "bam", "label": "Sampled input alignments on ${on_string}(BAM format)", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "./output/postSample_sorted.bam", "edam_format": "format_2572", "edam_data": "data_0863", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "rna_analysis", "panel_section_name": "RNA Analysis", "form_style": "regular"}