{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/bgruening/cp_track_objects/cp_track_objects/3.1.9+galaxy1", "name": "TrackObjects", "version": "3.1.9+galaxy1", "description": "with CellProfiler", "labels": [], "edam_operations": ["operation_3443"], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "CellProfiler", "reftype": "bio.tools"}, {"value": "cellprofiler", "reftype": "biii"}], "tool_shed_repository": {"name": "cp_track_objects", "owner": "bgruening", "changeset_revision": "972d2c365739", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input_pipeline", "argument": null, "type": "data", "label": "Select the input CellProfiler pipeline", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["data"], "edam": {"edam_formats": ["format_1915"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "object_to_track", "argument": null, "type": "text", "label": "Enter the name of the objects to track", "help": "The object to track from previous IdentifyPrimaryObjects module", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "Conditional", "name": "con_tracking_method", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Overlap", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_distance", "argument": null, "type": "integer", "label": "Maximum pixel distance to consider matches", "help": "Objects in the subsequent frame will be considered potential matches if they are within this distance.                         To determine a suitable pixel distance, you can look at the axis increments on each image (shown in pixel units) or use the distance measurement tool.                         To measure distances in an open image, use the \u201cMeasure length\u201d tool under Tools in the display window menu bar. If you click on an image and drag, a line will appear between the two endpoints, and the distance between them will be shown at the right-most portion of the bottom panel.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "con_filter_by_lifetime", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "Conditional", "name": "con_use_min", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_lifetime", "argument": null, "type": "integer", "label": "Minimum lifetime", "help": " Enter the minimum number of frames an object is permitted to persist. Objects which last this number of frames or lower are filtered out.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_min", "argument": null, "type": "select", "label": "Filter using a minimum lifetime?", "help": "Select Yes to filter the object on the basis of a minimum number of frames. ", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "con_use_max", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_lifetime", "argument": null, "type": "integer", "label": "Maximum lifetime", "help": "Enter the maximum number of frames an object is permitted to persist. Objects which last this number of frames or more are filtered out", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_max", "argument": null, "type": "select", "label": "Filter using a maximum lifetime?", "help": "Select Yes to filter the object on the basis of a maximum number of frames.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "filter_by_lifetime", "argument": null, "type": "select", "label": "Filter objects by lifetime?", "help": "Select Yes if you want objects to be filtered by their lifetime, i.e., total duration in frames. This is useful for marking objects which transiently appear and disappear, such as the results of a mis-segmentation.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "display_option", "argument": null, "type": "select", "label": "Select display option", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Color and Number", "options": [["Color and Number", "Color and Number", false], ["Color only", "Color only", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "con_save_coded_img", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "TextToolParameter", "name": "name_output_img", "argument": null, "type": "text", "label": "Name the output image", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "save_coded_img", "argument": null, "type": "select", "label": "Save color-coded image?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "Distance", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_distance", "argument": null, "type": "integer", "label": "Maximum pixel distance to consider matches", "help": "Objects in the subsequent frame will be considered potential matches if they are within this distance.                         To determine a suitable pixel distance, you can look at the axis increments on each image (shown in pixel units) or use the distance measurement tool.                         To measure distances in an open image, use the \u201cMeasure length\u201d tool under Tools in the display window menu bar. If you click on an image and drag, a line will appear between the two endpoints, and the distance between them will be shown at the right-most portion of the bottom panel.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "con_filter_by_lifetime", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "Conditional", "name": "con_use_min", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_lifetime", "argument": null, "type": "integer", "label": "Minimum lifetime", "help": " Enter the minimum number of frames an object is permitted to persist. Objects which last this number of frames or lower are filtered out.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_min", "argument": null, "type": "select", "label": "Filter using a minimum lifetime?", "help": "Select Yes to filter the object on the basis of a minimum number of frames. ", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "con_use_max", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_lifetime", "argument": null, "type": "integer", "label": "Maximum lifetime", "help": "Enter the maximum number of frames an object is permitted to persist. Objects which last this number of frames or more are filtered out", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_max", "argument": null, "type": "select", "label": "Filter using a maximum lifetime?", "help": "Select Yes to filter the object on the basis of a maximum number of frames.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "filter_by_lifetime", "argument": null, "type": "select", "label": "Filter objects by lifetime?", "help": "Select Yes if you want objects to be filtered by their lifetime, i.e., total duration in frames. This is useful for marking objects which transiently appear and disappear, such as the results of a mis-segmentation.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "display_option", "argument": null, "type": "select", "label": "Select display option", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Color and Number", "options": [["Color and Number", "Color and Number", false], ["Color only", "Color only", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "con_save_coded_img", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "TextToolParameter", "name": "name_output_img", "argument": null, "type": "text", "label": "Name the output image", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "save_coded_img", "argument": null, "type": "select", "label": "Save color-coded image?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "Measurements", "inputs": [{"model_class": "Conditional", "name": "con_measurement_category", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "AreaShape", "inputs": [{"model_class": "SelectToolParameter", "name": "measurement", "argument": null, "type": "select", "label": "Select object measurement to use for tracking", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Area", "options": [["Area", "Area", false], ["Center_X", "Center_X", false], ["Center_Y", "Center_Y", false], ["Center_Z", "Center_Z", false], ["Compactness", "Compactness", false], ["Eccentricity", "Eccentricity", false], ["EulerNumber", "EulerNumber", false], ["Extent", "Extent", false], ["FormFactor", "FormFactor", false], ["MajorAxisLength", "MajorAxisLength", false], ["MaxFeretDiameter", "MaxFeretDiameter", false], ["MaximumRadius", "MaximumRadius", false], ["MeanRadius", "MeanRadius", false], ["MedianRadius", "MedianRadius", false], ["MinFeretDiameter", "MinFeretDiameter", false], ["MinorAxisLength", "MinorAxisLength", false], ["Orientation", "Orientation", false], ["Perimeter", "Perimeter", false], ["Solidity", "Solidity", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "Intensity", "inputs": [{"model_class": "SelectToolParameter", "name": "measurement", "argument": null, "type": "select", "label": "Select object measurement to use for tracking", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "IntegratedIntensity", "options": [["IntegratedIntensity", "IntegratedIntensity", false], ["IntegratedIntensityEdge", "IntegratedIntensityEdge", false], ["LowerQuartileIntensity", "LowerQuartileIntensity", false], ["MADIntensity", "MADIntensity", false], ["MassDisplacement", "MassDisplacement", false], ["MaxIntensity", "MaxIntensity", false], ["MaxIntensityEdge", "MaxIntensityEdge", false], ["MeanIntensity", "MeanIntensity", false], ["MeanIntensityEdge", "MeanIntensityEdge", false], ["MedianIntensity", "MedianIntensity", false], ["MinIntensity", "MinIntensity", false], ["MinIntensityEdge", "MinIntensityEdge", false], ["StdIntensity", "StdIntensity", false], ["StdIntensityEdge", "StdIntensityEdge", false], ["UpperQuartileIntensity", "UpperQuartileIntensity", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "img_measure", "argument": null, "type": "text", "label": "Image", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "Location", "inputs": [{"model_class": "SelectToolParameter", "name": "measurement", "argument": null, "type": "select", "label": "Select object measurement to use for tracking", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "CenterMassIntensity_X", "options": [["CenterMassIntensity_X", "CenterMassIntensity_X", false], ["CenterMassIntensity_Y", "CenterMassIntensity_Y", false], ["CenterMassIntensity_Z", "CenterMassIntensity_Z", false], ["Center_X", "Center_X", false], ["Center_Y", "Center_Y", false], ["Center_Z", "Center_Z", false], ["MaxIntensity_X", "MaxIntensity_X", false], ["MaxIntensity_Y", "MaxIntensity_Y", false], ["MaxIntensity_Z", "MaxIntensity_Z", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "img_measure", "argument": null, "type": "text", "label": "Image", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "Number", "inputs": [{"model_class": "SelectToolParameter", "name": "measurement", "argument": null, "type": "select", "label": "Select object measurement to use for tracking", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ObjectNumber", "options": [["ObjectNumber", "ObjectNumber", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "measurement_category", "argument": null, "type": "select", "label": "Select object measurement category to use for tracking", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "AreaShape", "options": [["AreaShape", "AreaShape", false], ["Intensity", "Intensity", false], ["Location", "Location", false], ["Number", "Number", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "max_distance", "argument": null, "type": "integer", "label": "Maximum pixel distance to consider matches", "help": "Objects in the subsequent frame will be considered potential matches if they are within this distance.                         To determine a suitable pixel distance, you can look at the axis increments on each image (shown in pixel units) or use the distance measurement tool.                         To measure distances in an open image, use the \u201cMeasure length\u201d tool under Tools in the display window menu bar. If you click on an image and drag, a line will appear between the two endpoints, and the distance between them will be shown at the right-most portion of the bottom panel. \"", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "con_filter_by_lifetime", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "Conditional", "name": "con_use_min", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_lifetime", "argument": null, "type": "integer", "label": "Minimum lifetime", "help": " Enter the minimum number of frames an object is permitted to persist. Objects which last this number of frames or lower are filtered out.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_min", "argument": null, "type": "select", "label": "Filter using a minimum lifetime?", "help": "Select Yes to filter the object on the basis of a minimum number of frames. ", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "con_use_max", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_lifetime", "argument": null, "type": "integer", "label": "Maximum lifetime", "help": "Enter the maximum number of frames an object is permitted to persist. Objects which last this number of frames or more are filtered out", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_max", "argument": null, "type": "select", "label": "Filter using a maximum lifetime?", "help": "Select Yes to filter the object on the basis of a maximum number of frames.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "filter_by_lifetime", "argument": null, "type": "select", "label": "Filter objects by lifetime?", "help": "Select Yes if you want objects to be filtered by their lifetime, i.e., total duration in frames. This is useful for marking objects which transiently appear and disappear, such as the results of a mis-segmentation.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "display_option", "argument": null, "type": "select", "label": "Select display option", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Color and Number", "options": [["Color and Number", "Color and Number", false], ["Color only", "Color only", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "con_save_coded_img", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "TextToolParameter", "name": "name_output_img", "argument": null, "type": "text", "label": "Name the output image", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "save_coded_img", "argument": null, "type": "select", "label": "Save color-coded image?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "LAP", "inputs": [{"model_class": "SelectToolParameter", "name": "movement_method", "argument": null, "type": "select", "label": "Select the movement model", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Random", "options": [["Random", "Random", false], ["Velocity", "Velocity", false], ["Both", "Both", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "no_std_radius", "argument": null, "type": "float", "label": "Number of standard deviations for search radius", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_radius", "argument": null, "type": "float", "label": "Minimum search radius in pixel units", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "2.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_radius", "argument": null, "type": "float", "label": "Maximum search radius in pixel units", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10.0", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "con_second_lap", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "gap_closing", "argument": null, "type": "integer", "label": "Gap closing cost", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "split_alt", "argument": null, "type": "integer", "label": "Split alternative cost", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "merge_alt", "argument": null, "type": "integer", "label": "Merge alternative cost", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "mitosis_alt", "argument": null, "type": "integer", "label": "Mitosis alternative cost", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_gap_displacement", "argument": null, "type": "integer", "label": "Maximum gap displacement, in pixel units", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_split", "argument": null, "type": "integer", "label": "Maximum split score", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_merge", "argument": null, "type": "integer", "label": "Maximum merge score", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_temporal", "argument": null, "type": "integer", "label": "Maximum temporal gap, in frames", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_mitosis_distance", "argument": null, "type": "integer", "label": "Maximum mitosis distance, in pixel units", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "second_lap", "argument": null, "type": "select", "label": "Run the second phase of the LAP algorithm?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "con_filter_by_lifetime", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "Conditional", "name": "con_use_min", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_lifetime", "argument": null, "type": "integer", "label": "Minimum lifetime", "help": " Enter the minimum number of frames an object is permitted to persist. Objects which last this number of frames or lower are filtered out.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_min", "argument": null, "type": "select", "label": "Filter using a minimum lifetime?", "help": "Select Yes to filter the object on the basis of a minimum number of frames. ", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "con_use_max", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_lifetime", "argument": null, "type": "integer", "label": "Maximum lifetime", "help": "Enter the maximum number of frames an object is permitted to persist. Objects which last this number of frames or more are filtered out", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_max", "argument": null, "type": "select", "label": "Filter using a maximum lifetime?", "help": "Select Yes to filter the object on the basis of a maximum number of frames.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "filter_by_lifetime", "argument": null, "type": "select", "label": "Filter objects by lifetime?", "help": "Select Yes if you want objects to be filtered by their lifetime, i.e., total duration in frames. This is useful for marking objects which transiently appear and disappear, such as the results of a mis-segmentation.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "display_option", "argument": null, "type": "select", "label": "Select display option", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Color and Number", "options": [["Color and Number", "Color and Number", false], ["Color only", "Color only", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "con_save_coded_img", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "TextToolParameter", "name": "name_output_img", "argument": null, "type": "text", "label": "Name the output image", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "save_coded_img", "argument": null, "type": "select", "label": "Save color-coded image?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "Follow Neighbors", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_distance", "argument": null, "type": "integer", "label": "Maximum pixel distance to consider matches", "help": "Objects in the subsequent frame will be considered potential matches if they are within this distance.                         To determine a suitable pixel distance, you can look at the axis increments on each image (shown in pixel units) or use the distance measurement tool.                        To measure distances in an open image, use the \u201cMeasure length\u201d tool under Tools in the display window menu bar. If you click on an image and drag, a line will appear between the two endpoints, and the distance between them will be shown at the right-most portion of the bottom panel.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "avg_diameter", "argument": null, "type": "float", "label": "Average cell diameter in pixels", "help": "The average cell diameter is used to scale many Follow Neighbors algorithm parameters.                        To measure distances in an open image, use the \u201cMeasure length\u201d tool under Tools in the display window menu bar. If you click on an image and drag, a line will appear between the two endpoints, and the distance between them will be shown at the right-most portion of the bottom panel.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "35.0", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "con_adv_parameter", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "FloatToolParameter", "name": "cost", "argument": null, "type": "float", "label": "Cost of cell to empty matching", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "15.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "weight", "argument": null, "type": "float", "label": "Weight of area difference in function matching cost", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "25.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "adv_parameter", "argument": null, "type": "select", "label": "Use advanced configuration parameters", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "con_filter_by_lifetime", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "Conditional", "name": "con_use_min", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "min_lifetime", "argument": null, "type": "integer", "label": "Minimum lifetime", "help": " Enter the minimum number of frames an object is permitted to persist. Objects which last this number of frames or lower are filtered out.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_min", "argument": null, "type": "select", "label": "Filter using a minimum lifetime?", "help": "Select Yes to filter the object on the basis of a minimum number of frames. ", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "con_use_max", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "max_lifetime", "argument": null, "type": "integer", "label": "Maximum lifetime", "help": "Enter the maximum number of frames an object is permitted to persist. Objects which last this number of frames or more are filtered out", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "use_max", "argument": null, "type": "select", "label": "Filter using a maximum lifetime?", "help": "Select Yes to filter the object on the basis of a maximum number of frames.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "filter_by_lifetime", "argument": null, "type": "select", "label": "Filter objects by lifetime?", "help": "Select Yes if you want objects to be filtered by their lifetime, i.e., total duration in frames. This is useful for marking objects which transiently appear and disappear, such as the results of a mis-segmentation.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "display_option", "argument": null, "type": "select", "label": "Select display option", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "Color and Number", "options": [["Color and Number", "Color and Number", false], ["Color only", "Color only", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "con_save_coded_img", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "TextToolParameter", "name": "name_output_img", "argument": null, "type": "text", "label": "Name the output image", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "No", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "save_coded_img", "argument": null, "type": "select", "label": "Save color-coded image?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Yes", "options": [["Yes", "Yes", false], ["No", "No", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "tracking_method", "argument": null, "type": "select", "label": "Choose a tracking method", "help": "<i>Overlap:</i> Compares the amount of spatial overlap between identified objects in the previous frame with those in the current frame. The object with the greatest amount of spatial overlap will be assigned the same number.                        <i>Distance:</i> Compares the distance between each identified object in the previous frame with that of the current frame. The closest objects to each other will be assigned the same number (label). Distances are measured from the perimeter of each object.                         <i>Measurements:</i> Compares each object in the current frame with objects in the previous frame based on a particular feature you have measured for the objects. This approach assumes objects move in a coordinated way (contrary to LAP). An object's movement direction is more likely to be in agreement with the movement directions of its neighbors. The problem is formulated as an optimization problem and solved using LAP algorithm (same as in LAP method).                        <i>LAP:</i> Uses the linear assignment problem (LAP) framework. The linear assignment problem (LAP) algorithm (Jaqaman et al., 2008) addresses the challenges of high object density, motion heterogeneity, temporary disappearances, and object merging and splitting.                         <i>Follow Neighbors:</i> Uses the multiobject tracking approach described by Delgado-Gonzalo et al., 2010. This approach assumes objects move in a coordinated way (contrary to LAP). An object's movement direction is more likely to be in agreement with the movement directions of its \"neighbor\" The problem is formulated as an optimization problem and solved using LAP algorithm (same as in LAP method).\"", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Overlap", "options": [["Overlap", "Overlap", false], ["Distance", "Distance", false], ["Measurements", "Measurements", false], ["LAP", "LAP", false], ["Follow Neighbors", "Follow Neighbors", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "output_pipeline", "format": "txt", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output.cppipe", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "imaging", "panel_section_name": "Imaging", "form_style": "regular"}