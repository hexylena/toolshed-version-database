{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_profile/deeptools_plot_profile/3.5.1.0.0", "name": "plotProfile", "version": "3.5.1.0.0", "description": "creates a profile plot for score distributions across genomic regions", "labels": [], "edam_operations": ["operation_0337", "operation_3435"], "edam_topics": ["topic_0622", "topic_3169"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "deeptools", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "deeptools_plot_profile", "owner": "bgruening", "changeset_revision": "a2d70c4fd406", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "matrixFile", "argument": "--matrixFile", "type": "data", "label": "Matrix file from the computeMatrix tool", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["deeptools_compute_matrix_archive"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "scaleRegions", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "TextToolParameter", "name": "startLabel", "argument": "--startLabel", "type": "text", "label": "Label for the region start", "help": "Label shown in the plot                     for the start of the region. Default is TSS (transcription start site),                     but could be changed to anything, e.g. \"peak start\".", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "TSS", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "endLabel", "argument": "--endLabel", "type": "text", "label": "Label for the region end", "help": "Label shown in the plot for the region end. Default is TES (transcription end site).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "TES", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "showScaleRegionsOpt", "argument": null, "type": "select", "label": "The input matrix was computed in scale-regions mode", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["no", "no", true], ["yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "output", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "SelectToolParameter", "name": "outFileFormat", "argument": "--outFileFormat", "type": "select", "label": "Image file format", "help": "Note that the plotly output can be very large and not all options are supported.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "png", "options": [["png", "png", true], ["pdf", "pdf", false], ["svg", "svg", false], ["eps", "eps", false], ["plotly", "plotly", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "dpi", "argument": "--dpi", "type": "integer", "label": "Image dpi", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "200", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "saveSortedRegions", "argument": "--outFileSortedRegions", "type": "boolean", "label": "Save the regions after skipping zeros or min/max threshold values", "help": "The order of the regions in the file follows the sorting order selected. This is useful,                        for example, to generate other heatmaps keeping the sorting of the first heatmap.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "showOutputSettings", "argument": null, "type": "select", "label": "Show advanced output settings", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["no", "no", true], ["yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "advancedOpt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "SelectToolParameter", "name": "averageType", "argument": null, "type": "select", "label": "Define the type of statistic that should be used for the profile.", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "mean", "options": [["mean", "mean", true], ["median", "median", false], ["min", "min", false], ["max", "max", false], ["sum", "sum", false], ["std", "std", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "plotHeight", "argument": "--plotHeight", "type": "integer", "label": "Plot height", "help": "Height in cm. The default for the plot height is 5 centimeters. The minimum value is 3 cm.", "refresh_on_change": false, "min": 3, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "plotWidth", "argument": "--plotWidth", "type": "integer", "label": "Plot width", "help": "Width in cm. The default value is 11 centimeters. The minimum value is 1 cm.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "11", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "plotType", "argument": "--plotType", "type": "select", "label": "Plot type", "help": "The \"lines\" option will                     plot the profile line based on the average type selected. The \"fill\"                     option fills the region between zero and the profile curve. The filled in color is                     semi-transparent. The \"add standard error\"                     option colors the region between the profile and the standard error of the data.                     As in the case of fill, a semi-transparent color is used.                     The option \"overlapped_lines\" plots each region's value, one on top of                     the other.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "lines", "options": [["lines", "lines", true], ["fill", "fill", false], ["add standard error", "se", false], ["add standard deviation", "std", false], ["overlapped lines", "overlapped_lines", false], ["heatmap", "heatmap", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "samplesLabel", "argument": "--samplesLabel", "type": "text", "label": "Labels for the samples (each bigwig) plotted", "help": "The default is to use the file name of the sample. The sample labels should be separated by                     spaces and quoted if a label itself contains a space, e.g., label-1 \"label 2\"", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "regionsLabel", "argument": "--regionsLabel", "type": "text", "label": "Labels for the regions plotted in the heatmap", "help": "If more than one region is being plotted a list of labels separated by space is required.                           If a label itself contains a space, then quotes are needed.                           For example, label_1 \"label 2\"", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "plotTitle", "argument": "--plotTitle", "type": "text", "label": "Title of the plot", "help": "Title of the plot, to be printed on top of the generated image.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colors", "argument": "--colors", "type": "text", "label": "List of colors to use for the plotted lines", "help": "Color names and html hex strings (e.g. #eeff22) are accepted.                     The color names should be separated by spaces. (--colors red blue green)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "legendLocation", "argument": "--legendLocation", "type": "select", "label": "Legend location", "help": "Location for the legend in the summary plot. Note that none cannot be used in plotProfile.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "best", "options": [["Best (automatic)", "best", true], ["upper-right", "upper-right", false], ["upper-left", "upper-left", false], ["upper-center", "upper-center", false], ["lower-right", "lower-right", false], ["lower-left", "lower-left", false], ["lower-center", "lower-center", false], ["center-right", "center-right", false], ["center-left", "center-left", false], ["center", "center", false], ["none (only works for heatmaps", "none", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "labelRotation", "argument": "--labelRotation", "type": "integer", "label": "Rotation of the X-axis labels (in degrees)", "help": "The rotation of things like TSS or TES on the X-axis of profile plots in both plotHeatmap and plotProfile. The default is 0, positive values denome a counter-clockwise rotation.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "perGroup", "argument": "--perGroup", "type": "boolean", "label": "Make one plot per group of regions", "help": "The default is to make one plot per bigWig file, i.e., all samples next to each other. Choosing this option will make one plot per group of regions. ", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--perGroup", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "outFileNameData", "argument": "--outFileNameData", "type": "boolean", "label": "Save the data underlying the average profile", "help": "This option will create an additional output file.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "FloatToolParameter", "name": "yMin", "argument": "--yMin", "type": "float", "label": "Minimum value for the Y-axis of the summary plot. Leave empty for automatic values", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "yMax", "argument": "--yMax", "type": "float", "label": "Maximum value for Y-axis of the summary plot. Leave empty for automatic values", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "Conditional", "name": "used_multiple_regions", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": [{"model_class": "Conditional", "name": "clustering", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "kmeans", "inputs": [{"model_class": "IntegerToolParameter", "name": "k_kmeans", "argument": null, "type": "integer", "label": "Number of clusters to compute", "help": "When this option is set, the matrix is split into clusters using the k-means algorithm.                             This only works for data that is not grouped, otherwise only the first group will be clustered.                             If more specific clustering methods are required it is advisable to save the underlying matrix and                             run the clustering using other software.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "hclust", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_hclust", "argument": null, "type": "integer", "label": "number of clusters to compute.", "help": "WARNING: This option causes the tool to run for a very long time! When this option is                             set, the matrix is split into clusters using the hierarchical clustering algorithm, using ward linkage.                             This only works for data that is not grouped, otherwise only the first group will be clustered.                             Note that you must have used the '--missingDataAsZero' option within computeMatrix!                             If more specific clustering methods are required it is advisable to save the underlying matrix and                             run the clustering using other software.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "none", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "clustering_options", "argument": null, "type": "select", "label": "Clustering algorithm", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["No clustering", "none", false], ["Kmeans clustering", "kmeans", false], ["Hierarchical clustering", "hclust", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "silhouette", "argument": "--silhouette", "type": "boolean", "label": "Compute the silhouette score for each region", "help": "Compute the silhouette score for regions. This is only applicable if clustering has been performed.                     The silhouette score is a measure of how similar a region is to other regions in the same cluster as                     opposed to those in other clusters. It will be reported in the final column of the BED file with regions.                     The silhouette evaluation can be very slow when you have more than 100 000 regions.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--silhouette", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "used_multiple_regions_options", "argument": null, "type": "select", "label": "Did you compute the matrix with more than one groups of regions?", "help": "Would you like to cluster the regions according to the similarity of the signal distribution? This is only possible if you used computeMatrix on only one group of regions.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["Yes, I used multiple groups of regions", "yes", false], ["No, I used only one group", "no", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "showAdvancedOpt", "argument": null, "type": "select", "label": "Show advanced options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["no", "no", true], ["yes", "yes", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "outFileName", "format": "png", "label": "${tool.name} on ${on_string}: Image", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3603", "edam_data": "data_2968", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "outFileSortedRegions", "format": "bed", "label": "${tool.name} on ${on_string}: sorted/filtered regions", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3003", "edam_data": "data_3002", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output_outFileNameData", "format": "tabular", "label": "${tool.name} on ${on_string}: Underlying data", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "deeptools", "panel_section_name": "deepTools", "form_style": "regular"}