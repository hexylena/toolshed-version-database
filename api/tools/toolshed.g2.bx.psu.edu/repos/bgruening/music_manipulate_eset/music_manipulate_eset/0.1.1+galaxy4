{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/bgruening/music_manipulate_eset/music_manipulate_eset/0.1.1+galaxy4", "name": "Manipulate Expression Set Object", "version": "0.1.1+galaxy4", "description": "Manipulate ExpressionSet objects by a variety of attributes", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "music_manipulate_eset", "owner": "bgruening", "changeset_revision": "22232092be53", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "rds_eset", "argument": null, "type": "data", "label": "Expression Set Dataset", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["rdata"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "combine_eset", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "Repeat", "name": "eset_group", "type": "repeat", "title": "Additional Dataset", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "eset", "argument": null, "type": "data", "label": "Expression Set Dataset", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["rdata"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "do", "argument": null, "type": "select", "label": "Concatenate other Expression Set objects?", "help": "Phenotype data must match between objects, and objects will be concatenated in the order given below.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", true], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "subset_eset", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": []}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "Conditional", "name": "subset_yes", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "subsample", "inputs": [{"model_class": "IntegerToolParameter", "name": "samples", "argument": null, "type": "integer", "label": "Select N Samples", "help": "e.g. '10' will select 10 random samples.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "genes", "argument": null, "type": "integer", "label": "Select N Genes", "help": "e.g. '123' will select 123 random genes.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "labels", "inputs": [{"model_class": "TextToolParameter", "name": "samples", "argument": null, "type": "text", "label": "List of Sample Labels, comma-delimited", "help": "e.g. 'Control1,ALPOL56,SampleX' would select just those 3 samples.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "genes", "argument": null, "type": "text", "label": "List of Gene Labels , comma-delimited", "help": "e.g. 'GeneA,GeneX,Gene123' would select just those 3 genes.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "range_and_index", "inputs": [{"model_class": "TextToolParameter", "name": "samples", "argument": null, "type": "text", "label": "List of Sample Indexes, ranges are colon-delimited, seperated by commas.", "help": "e.g. '5:3,57:60,27' would yield '5,4,3,57,58,59,60,27' ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "genes", "argument": null, "type": "text", "label": "List of Gene Indexes, ranges are colon-delimited, seperated by commas.", "help": "e.g. '15:18,26,27,3:1' would yield '15,16,17,18,26,27,3,2,1' ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "phenotype", "inputs": [{"model_class": "Repeat", "name": "pheno_samples", "type": "repeat", "title": "Filter Samples by Condition", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "column", "argument": null, "type": "text", "label": "Name of phenotype column", "help": "e.g. 'gender' or 'control' etc", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "List of values in this column to filter for, comma-delimited", "help": "e.g. 'female,unknown' selects only samples with values in the above phenotype column of 'female' and 'unknown'.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "Repeat", "name": "pheno_genes", "type": "repeat", "title": "Filter Genes by Condition", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "TextToolParameter", "name": "column", "argument": null, "type": "text", "label": "Name of phenotype column", "help": "e.g. 'housekeeping' or 'marker' etc", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "values", "argument": null, "type": "text", "label": "List of values in this column to filter for, comma-delimited", "help": "e.g. '' selects only samples with values in the above phenotype column of 'female' and 'unknown'.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "by", "argument": null, "type": "select", "label": "By", "help": "e.g. random subsampling, index ranges and indices, specific labels, phenotype conditions", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "subsample", "options": [["Random Subsample", "subsample", true], ["Specific Labels", "labels", false], ["Index Ranges and Specific Indices", "range_and_index", false], ["Filter Samples and Genes by Phenotype Values", "phenotype", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "do", "argument": null, "type": "select", "label": "Subset the dataset?", "help": "If multiple objects are concatenated as in the above section, the resulting object will be subsetted.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", true], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "out_eset", "format": "rdata", "label": "${tool.name} on ${on_string}: ExpressionSet Object", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "single_cell", "panel_section_name": "Single-cell", "form_style": "regular"}