{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bigwig_compare/deeptools_bigwig_compare/2.4.1.0", "name": "bigwigCompare", "version": "2.4.1.0", "description": "normalizes and compares two bigWig files to obtain the ratio, log2ratio or difference between them", "labels": [], "edam_operations": ["operation_3435", "operation_0337"], "edam_topics": ["topic_0622", "topic_3169"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "deeptools", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "deeptools_bigwig_compare", "owner": "bgruening", "changeset_revision": "163f2951146c", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "bigwigFile1", "argument": null, "type": "data", "label": "Treatment bigwig file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bigwig"], "edam": {"edam_formats": ["format_3006"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "bigwigFile2", "argument": null, "type": "data", "label": "bigWig file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bigwig"], "edam": {"edam_formats": ["format_3006"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "comparison", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "log2", "inputs": [{"model_class": "FloatToolParameter", "name": "pseudocount", "argument": "--pseudocount", "type": "float", "label": "Pseudocount", "help": "Small number to avoid dividing by zero.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ratio", "inputs": [{"model_class": "FloatToolParameter", "name": "pseudocount", "argument": "--pseudocount", "type": "float", "label": "Pseudocount", "help": "Small number to avoid dividing by zero.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "subtract", "inputs": []}, {"model_class": "ConditionalWhen", "value": "add", "inputs": []}, {"model_class": "ConditionalWhen", "value": "first", "inputs": []}, {"model_class": "ConditionalWhen", "value": "second", "inputs": []}, {"model_class": "ConditionalWhen", "value": "reciprocal_ratio", "inputs": [{"model_class": "FloatToolParameter", "name": "pseudocount", "argument": "--pseudocount", "type": "float", "label": "Pseudocount", "help": "Small number to avoid dividing by zero.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "comparison_select", "argument": null, "type": "select", "label": "How to compare the two files", "help": "The default is to output the log2ratio between the two samples.                 The reciprocal ratio returns the negative of the inverse of the ratio if                 the ratio is less than 0. The resulting values are interpreted as negative                 fold changes. To output the scaled values from the first or second BAM file,                 select 'first' or 'second'.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "log2", "options": [["Compute log2 of the number of reads ratio", "log2", true], ["Compute the ratio of the number of reads", "ratio", false], ["Compute difference (subtract input from treatment) of the number of reads", "subtract", false], ["Compute the sum of number of reads", "add", false], ["Computes the fold change. If the fold change is less than 1, the negative of the inverse is reported. E.g. A fold change of 10 to 5 would be reported not as 0.5 but as -2", "reciprocal_ratio", false], ["Returns the scaled value of the first BAM file", "first", false], ["Returns the scaled value of the second BAM file", "second", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "outFileFormat", "argument": null, "type": "select", "label": "Coverage file format", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "bigwig", "options": [["bigwig", "bigwig", true], ["bedgraph", "bedgraph", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "region", "argument": "--region", "type": "text", "label": "Region of the genome to limit the operation to", "help": "This is useful when testing parameters to reduce the time required. The format is chr:start:end, for example \"chr10\" or \"chr10:456700:891000\".", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "advancedOpt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "binSize", "argument": "--binSize", "type": "integer", "label": "Length, in bases, of the non-overlapping bins used for averaging the score over the regions length", "help": "Size of the bins in bases for the output of the bigwig/bedgraph file.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "50", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "skipNAs", "argument": "--skipNAs", "type": "boolean", "label": "Ignore missing data?", "help": "This parameter determines if non-covered regions                  (regions without overlapping reads) in a bam/bigWig file                  should be skipped. The default is to treat those                  regions as having a value of zero. The decision to                  skip non-covered regions depends on the interpretation                  of the data. Non-covered regions may represent, for                  example, repetitive regions that should be ignored.                  (default: False)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--skipNAs", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "scaleFactor1", "argument": null, "type": "float", "label": "Scale factor for treatment", "help": "(--scaleFactors)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "scaleFactor2", "argument": null, "type": "float", "label": "Scale factor for input", "help": "(--scaleFactors)", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "plotTitle", "argument": "--plotTitle", "type": "text", "label": "Title of the plot", "help": "Title of the plot, to be printed on top of the generated image.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "DataToolParameter", "name": "blackListFileName", "argument": "--blackListFileName", "type": "data", "label": "Blacklisted regions in BED/GTF format", "help": "One or more files containing regions to exclude from the analysis", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed", "gtf"], "edam": {"edam_formats": ["format_3003", "format_2306"], "edam_data": ["data_3002", "data_1255"]}, "multiple": true, "min": 0, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "showAdvancedOpt", "argument": null, "type": "select", "label": "Show advanced options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["no", "no", true], ["yes", "yes", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "outFileName", "format": "bigwig", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3006", "edam_data": "data_3002", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "deeptools", "panel_section_name": "deepTools", "form_style": "regular"}