{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_heatmap/deeptools_plot_heatmap/3.0.0.0", "name": "plotHeatmap", "version": "3.0.0.0", "description": "creates a heatmap for score distributions across genomic regions", "labels": [], "edam_operations": ["operation_0337", "operation_3435"], "edam_topics": ["topic_3169", "topic_0622"], "hidden": true, "is_workflow_compatible": true, "xrefs": [{"value": "deeptools", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "deeptools_plot_heatmap", "owner": "bgruening", "changeset_revision": "0d6dfbd66443", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "matrixFile", "argument": "matrixFile", "type": "data", "label": "Matrix file from the computeMatrix tool", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["deeptools_compute_matrix_archive"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "output", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "SelectToolParameter", "name": "outFileFormat", "argument": "--outFileFormat", "type": "select", "label": "Image file format", "help": "Note that the plotly output can be very large and not all options are supported.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "png", "options": [["png", "png", true], ["pdf", "pdf", false], ["svg", "svg", false], ["eps", "eps", false], ["plotly", "plotly", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "dpi", "argument": "--dpi", "type": "integer", "label": "Image dpi", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "200", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "saveMatrix", "argument": "--saveMatrix", "type": "boolean", "label": "Save the matrix of values underlying the heatmap", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "BooleanToolParameter", "name": "saveSortedRegions", "argument": "--outFileSortedRegions", "type": "boolean", "label": "Save the regions after skipping zeros or min/max threshold values", "help": "The order of the regions in the file follows the sorting order selected. This is useful,                        for example, to generate other heatmaps keeping the sorting of the first heatmap.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "showOutputSettings", "argument": null, "type": "select", "label": "Show advanced output settings", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["no", "no", true], ["yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "advancedOpt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "SelectToolParameter", "name": "sortRegions", "argument": "--sortRegions", "type": "select", "label": "Sort regions", "help": "Whether the heatmap should present the regions sorted. The default is to sort in descending order based on the mean value per region.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "descend", "options": [["maintain the same ordering as the input files", "no", false], ["descending order", "descend", true], ["ascending order", "ascend", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "sortUsing", "argument": "--sortUsing", "type": "select", "label": "Method used for sorting", "help": "For each row the method is computed.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "mean", "options": [["mean", "mean", true], ["median", "median", false], ["min", "min", false], ["max", "max", false], ["sum", "sum", false], ["region length", "region_length", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "averageTypeSummaryPlot", "argument": "--averageTypeSummaryPlot", "type": "select", "label": "Type of statistic that should be plotted in the summary image above the heatmap", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "mean", "options": [["mean", "mean", true], ["median", "median", false], ["min", "min", false], ["max", "max", false], ["sum", "sum", false], ["std", "std", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "missingDataColor", "argument": "--missingDataColor", "type": "text", "label": "Missing data color", "help": "If 'Represent missing data as zero' is not set, such cases will be colored in black by default.                     By using this parameter a different color can be set. A value between 0 and 1 will be used for a gray scale (black is 0).                     Also color names can be used, see a list here: http://packages.python.org/ete2/reference/reference_svgcolors.html.                     Alternatively colors can be specified using the #rrggbb notation.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "black", "area": false, "datalist": []}, {"model_class": "Repeat", "name": "colorMapRepeat", "type": "repeat", "title": "Colormap to use for each sample", "help": "A different colormap can be applied to each column of the heatmap. If you select fewer colormaps than you have samples in your matrix, then the select colormap(s) will be repeated (e.g., if you select one colormap then it will be applied to all samples).", "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "SelectToolParameter", "name": "colorMap", "argument": null, "type": "select", "label": "Color map to use for the heatmap", "help": " Available color map names can be found here: http://matplotlib.org/examples/color/colormaps_reference.html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "RdYlBu", "options": [["RdYlBu", "RdYlBu", true], ["Accent", "Accent", false], ["Spectral", "Spectral", false], ["Set1", "Set1", false], ["Set2", "Set2", false], ["Set3", "Set3", false], ["Dark2", "Dark2", false], ["Reds", "Reds", false], ["Oranges", "Oranges", false], ["Greens", "Greens", false], ["Blues", "Blues", false], ["Greys", "Greys", false], ["Purples", "Purples", false], ["Paired", "Paired", false], ["Pastel1", "Pastel1", false], ["Pastel2", "Pastel2", false], ["spring", "spring", false], ["summer", "summer", false], ["autumn", "autumn", false], ["winter", "winter", false], ["hot", "hot", false], ["coolwarm", "coolwarm", false], ["cool", "cool", false], ["seismic", "seismic", false], ["terrain", "terrain", false], ["ocean", "ocean", false], ["rainbow", "rainbow", false], ["bone", "bone", false], ["flag", "flag", false], ["prism", "prism", false], ["cubehelix", "cubehelix", false], ["binary", "binary", false], ["pink", "pink", false], ["gray", "gray", false], ["copper", "copper", false], ["BrBG", "BrBG", false], ["BuGn", "BuGn", false], ["BuPu", "BuPu", false], ["GnBu", "GnBu", false], ["OrRd", "OrRd", false], ["PiYG", "PiYG", false], ["PRGn", "PRGn", false], ["PuOr", "PuOr", false], ["PuRd", "PuRd", false], ["PuBu", "PuBu", false], ["RdBu", "RdBu", false], ["RdGy", "RdGy", false], ["RdPu", "RdPu", false], ["YlGn", "YlGn", false], ["PuBuGn", "PuBuGn", false], ["RdYlGn", "RdYlGn", false], ["YlGnBu", "YlGnBu", false], ["YlOrBr", "YlOrBr", false], ["YlOrRd", "YlOrRd", false], ["gist_gray", "gist_gray", false], ["gist_stern", "gist_stern", false], ["gist_earth", "gist_earth", false], ["gist_yarg", "gist_yarg", false], ["gist_ncar", "gist_ncar", false], ["gist_rainbow", "gist_rainbow", false], ["gist_heat", "gist_heat", false], ["gnuplot", "gnuplot", false], ["gnuplot2", "gnuplot2", false], ["CMRmap", "CMRmap", false], ["bwr", "bwr", false], ["hsv", "hsv", false], ["brg", "brg", false], ["jet", "jet", false], ["afmhot", "afmhot", false], ["Accent reversed", "Accent_r", false], ["Spectral reversed", "Spectral_r", false], ["Set1 reversed", "Set1_r", false], ["Set2 reversed", "Set2_r", false], ["Set3 reversed", "Set3_r", false], ["Dark2 reversed", "Dark2_r", false], ["Reds reversed", "Reds_r", false], ["Oranges reversed", "Oranges_r", false], ["Greens reversed", "Greens_r", false], ["Blues reversed", "Blues_r", false], ["Greys reversed", "Greys_r", false], ["Purples reversed", "Purples_r", false], ["Paired reversed", "Paired_r", false], ["Pastel1 reversed", "Pastel1_r", false], ["Pastel2 reversed", "Pastel2_r", false], ["spring reversed", "spring_r", false], ["summer reversed", "summer_r", false], ["autumn reversed", "autumn_r", false], ["winter reversed", "winter_r", false], ["hot reversed", "hot_r", false], ["coolwarm reversed", "coolwarm_r", false], ["cool reversed", "cool_r", false], ["seismic reversed", "seismic_r", false], ["terrain reversed", "terrain_r", false], ["ocean reversed", "ocean_r", false], ["rainbow reversed", "rainbow_r", false], ["bone reversed", "bone_r", false], ["flag reversed", "flag_r", false], ["prism reversed", "prism_r", false], ["cubehelix reversed", "cubehelix_r", false], ["binary reversed", "binary_r", false], ["pink reversed", "pink_r", false], ["gray reversed", "gray_r", false], ["copper reversed", "copper_r", false], ["BrBG reversed", "BrBG_r", false], ["BuGn reversed", "BuGn_r", false], ["BuPu reversed", "BuPu_r", false], ["GnBu reversed", "GnBu_r", false], ["OrRd reversed", "OrRd_r", false], ["PiYG reversed", "PiYG_r", false], ["PRGn reversed", "PRGn_r", false], ["PuOr reversed", "PuOr_r", false], ["PuRd reversed", "PuRd_r", false], ["PuBu reversed", "PuBu_r", false], ["RdBu reversed", "RdBu_r", false], ["RdGy reversed", "RdGy_r", false], ["RdPu reversed", "RdPu_r", false], ["YlGn reversed", "YlGn_r", false], ["PuBuGn reversed", "PuBuGn_r", false], ["RdYlBu reversed", "RdYlBu_r", false], ["RdYlGn reversed", "RdYlGn_r", false], ["YlGnBu reversed", "YlGnBu_r", false], ["YlOrBr reversed", "YlOrBr_r", false], ["YlOrRd reversed", "YlOrRd_r", false], ["gist_gray reversed", "gist_gray_r", false], ["gist_stern reversed", "gist_stern_r", false], ["gist_earth reversed", "gist_earth_r", false], ["gist_yarg reversed", "gist_yarg_r", false], ["gist_ncar reversed", "gist_ncar_r", false], ["gist_rainbow reversed", "gist_rainbow_r", false], ["gist_heat reversed", "gist_heat_r", false], ["gnuplot reversed", "gnuplot_r", false], ["gnuplot2 reversed", "gnuplot2_r", false], ["CMRmap reversed", "CMRmap_r", false], ["bwr reversed", "bwr_r", false], ["hsv reversed", "hsv_r", false], ["brg reversed", "brg_r", false], ["jet reversed", "jet_r", false], ["afmhot reversed", "afmhot_r", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "FloatToolParameter", "name": "alpha", "argument": "--alpha", "type": "float", "label": "Alpha channel (transparency)", "help": "The alpha channel (transparency) to use for the heatmaps. The default is 1.0 and values must                     be between 0 and 1. A value of 0.0 would be fully transparent.", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": true, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colorList", "argument": "--colorList", "type": "text", "label": "List of colors for each heatmap. Separate lists by spaces and the colors in the list by comas", "help": "The color of the heatmaps can be specified as a list of colors separated by comas with                     not space in between. For example: white,blue white,green will set a color map from white                     to blue for the first heatmap and for white to green for the next heatmap.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "zMin", "argument": "--zMin", "type": "text", "label": "Minimum value for the heatmap intensities", "help": "If not specified the value is set automatically.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "zMax", "argument": "--zMax", "type": "text", "label": "Maximum value for the heatmap intensities", "help": "If not specified the value is set automatically.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "yMin", "argument": "--yMin", "type": "float", "label": "Minimum value for the Y-axis of the summary plot. Leave empty for automatic values", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "yMax", "argument": "--yMax", "type": "float", "label": "Maximum value for Y-axis of the summary plot. Leave empty for automatic values", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "xAxisLabel", "argument": "--xAxisLabel", "type": "text", "label": "The x-axis label", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "distance from TSS (bp)", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "yAxisLabel", "argument": "--yAxisLabel", "type": "text", "label": "The y-axis label for the top panel", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "genes", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "heatmapWidth", "argument": "--heatmapWidth", "type": "float", "label": "Heatmap width in cm", "help": "The minimum value is 1 and the maximum is 100.", "refresh_on_change": false, "min": 1.0, "max": 100.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "7.5", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "heatmapHeight", "argument": "--heatmapHeight", "type": "float", "label": "Heatmap height in cm", "help": "The minimum value is 3 and the maximum is 100.", "refresh_on_change": false, "min": 3.0, "max": 100.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "25.0", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "whatToShow", "argument": "--whatToShow", "type": "select", "label": "What to show", "help": "The default is to include a summary or profile plot on top of the heatmap and a heatmap colorbar.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "plot, heatmap and colorbar", "options": [["summary plot, heatmap and colorbar", "plot, heatmap and colorbar", true], ["summary plot and heatmap (no colorbar)", "plot and heatmap", false], ["heatmap and colorbar", "heatmap and colorbar", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "startLabel", "argument": "--startLabel", "type": "text", "label": "Label for the region start", "help": "Only for scale-regions mode. Label shown in the plot for the start of the region. Default is TSS (transcription start site), but could be changed to anything, e.g. \"peak start\".", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "TSS", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "endLabel", "argument": "--endLabel", "type": "text", "label": "Label for the region end", "help": "Only for scale-regions mode. Label shown in the plot for the region end. Default is TES (transcription end site).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "TES", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "referencePointLabel", "argument": "--referencePointLabel", "type": "text", "label": "Reference point label", "help": "Label shown in the plot for the reference-point. Default is the same as the reference point selected (e.g. TSS), but could be anything, e.g. \"peak start\" etc.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "TSS", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "samplesLabel", "argument": "--samplesLabel", "type": "text", "label": "Labels for the samples (each bigwig) plotted", "help": "The default is to use the file name of the sample. The sample labels should be separated by                     spaces and quoted if a label itself contains a space E.g. label-1 \"label 2\"", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "regionsLabel", "argument": "--regionsLabel", "type": "text", "label": "Labels for the regions plotted in the heatmap", "help": "If more than one region is being plotted a list of labels separated by space is required.                           If a label itself contains a space, then quotes are needed.                           For example, label_1 \"label 2\"", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "plotTitle", "argument": "--plotTitle", "type": "text", "label": "Title of the plot", "help": "Title of the plot, to be printed on top of the generated image.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "labelRotation", "argument": "--labelRotation", "type": "integer", "label": "Rotation of the X-axis labels (in degrees)", "help": "The rotation of things like TSS or TES on the X-axis of profile plots in both plotHeatmap and plotProfile. The default is 0, positive values denome a counter-clockwise rotation.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "perGroup", "argument": "--perGroup", "type": "boolean", "label": "Make one plot per group of regions", "help": "The default is to make one plot per bigWig file, i.e., all samples next to each other. Choosing this option will make one plot per group of regions.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--perGroup", "falsevalue": ""}, {"model_class": "Conditional", "name": "used_multiple_regions", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": [{"model_class": "Conditional", "name": "clustering", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "kmeans", "inputs": [{"model_class": "IntegerToolParameter", "name": "k_kmeans", "argument": null, "type": "integer", "label": "Number of clusters to compute", "help": "When this option is set, the matrix is split into clusters using the k-means algorithm.                             This only works for data that is not grouped, otherwise only the first group will be clustered.                             If more specific clustering methods are required it is advisable to save the underlying matrix and                             run the clustering using other software.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "hclust", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_hclust", "argument": null, "type": "integer", "label": "number of clusters to compute.", "help": "WARNING: This option causes the tool to run for a very long time! When this option is                             set, the matrix is split into clusters using the hierarchical clustering algorithm, using ward linkage.                             This only works for data that is not grouped, otherwise only the first group will be clustered.                             Note that you must have used the '--missingDataAsZero' option within computeMatrix!                             If more specific clustering methods are required it is advisable to save the underlying matrix and                             run the clustering using other software.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "none", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "clustering_options", "argument": null, "type": "select", "label": "Clustering algorithm", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["No clustering", "none", false], ["Kmeans clustering", "kmeans", false], ["Hierarchical clustering", "hclust", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "used_multiple_regions_options", "argument": null, "type": "select", "label": "Did you compute the matrix with more than one groups of regions?", "help": "Would you like to cluster the regions according to the similarity of the signal distribution? This is only possible if you used computeMatrix on only one group of regions.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "yes", "options": [["Yes, I used multiple groups of regions", "yes", false], ["No, I used only one group", "no", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "showAdvancedOpt", "argument": null, "type": "select", "label": "Show advanced options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["no", "no", true], ["yes", "yes", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "outFileName", "format": "png", "label": "${tool.name} image", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3603", "edam_data": "data_2968", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "outFileSortedRegions", "format": "bed", "label": "${tool.name} on ${on_string}: sorted/filtered regions", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3003", "edam_data": "data_3002", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "outFileNameMatrix", "format": "tabular", "label": "${tool.name} on ${on_string}: Heatmap values", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "deeptools", "panel_section_name": "deepTools", "form_style": "regular"}