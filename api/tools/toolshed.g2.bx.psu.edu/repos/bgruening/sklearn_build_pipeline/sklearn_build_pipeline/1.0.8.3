{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/bgruening/sklearn_build_pipeline/sklearn_build_pipeline/1.0.8.3", "name": "Pipeline Builder", "version": "1.0.8.3", "description": "an all-in-one platform to build pipeline, single estimator, preprocessor and custom wrappers", "labels": [], "edam_operations": ["operation_3935", "operation_2990", "operation_3432", "operation_3659"], "edam_topics": ["topic_0092", "topic_3474"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "scikit-learn", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "sklearn_build_pipeline", "owner": "bgruening", "changeset_revision": "aef56d0e7a61", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Repeat", "name": "pipeline_component", "type": "repeat", "title": "Pre-processing step", "help": null, "default": 1, "min": 1, "max": 5.0, "inputs": [{"model_class": "Conditional", "name": "component_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "None", "inputs": []}, {"model_class": "ConditionalWhen", "value": "pre_processor", "inputs": [{"model_class": "Conditional", "name": "pre_processors", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Binarizer", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "copy", "argument": "copy", "type": "boolean", "label": "Use a copy of data for precomputing binarization", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "FloatToolParameter", "name": "threshold", "argument": "threshold", "type": "float", "label": "Threshold", "help": "Feature values below or equal to this are replaced by 0, above it by 1. Threshold may not be less than 0 for operations on sparse matrices. ", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "StandardScaler", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "copy", "argument": "copy", "type": "boolean", "label": "Use a copy of data for performing inplace scaling", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "BooleanToolParameter", "name": "with_mean", "argument": "with_mean", "type": "boolean", "label": "Center the data before scaling", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "BooleanToolParameter", "name": "with_std", "argument": "with_std", "type": "boolean", "label": "Scale the data to unit variance (or unit standard deviation)", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}]}]}, {"model_class": "ConditionalWhen", "value": "MaxAbsScaler", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "copy", "argument": "copy", "type": "boolean", "label": "Use a copy of data for precomputing scaling", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}]}]}, {"model_class": "ConditionalWhen", "value": "Normalizer", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "norm", "argument": "norm", "type": "select", "label": "The norm to use to normalize non zero samples", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "l1", "options": [["l1", "l1", true], ["l2", "l2", false], ["max", "max", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "copy", "argument": "copy", "type": "boolean", "label": "Use a copy of data for precomputing row normalization", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}]}]}, {"model_class": "ConditionalWhen", "value": "KernelCenterer", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": []}]}, {"model_class": "ConditionalWhen", "value": "MinMaxScaler", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "feature_range", "argument": "feature_range", "type": "text", "label": "", "help": "Desired range of transformed data. None or tuple (min, max). None equals to (0, 1)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "(0, 1)", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "copy", "argument": "copy", "type": "boolean", "label": "Use a copy of data for precomputing normalization", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolflase"}]}]}, {"model_class": "ConditionalWhen", "value": "PolynomialFeatures", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "degree", "argument": "degree", "type": "integer", "label": "The degree of the polynomial features ", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "2", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "interaction_only", "argument": "interaction_only", "type": "boolean", "label": "Produce interaction features only", "help": "(Features that are products of at most degree distinct input features) ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolflase"}, {"model_class": "BooleanToolParameter", "name": "include_bias", "argument": "include_bias", "type": "boolean", "label": "Include a bias column", "help": "Feature in which all polynomial powers are zero ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolflase"}]}]}, {"model_class": "ConditionalWhen", "value": "RobustScaler", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "BooleanToolParameter", "name": "with_centering", "argument": "with_centering", "type": "boolean", "label": "Center the data before scaling", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolflase"}, {"model_class": "BooleanToolParameter", "name": "with_scaling", "argument": "with_scaling", "type": "boolean", "label": "Scale the data to interquartile range", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolflase"}, {"model_class": "BooleanToolParameter", "name": "copy", "argument": "copy", "type": "boolean", "label": "Use a copy of data for inplace scaling", "help": " ", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolflase"}]}]}, {"model_class": "ConditionalWhen", "value": "QuantileTransformer", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "n_quantiles", "argument": null, "type": "integer", "label": "Number of quantiles to be computed", "help": "", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1000", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "output_distribution", "argument": null, "type": "select", "label": "Marginal distribution for the transformed data", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "uniform", "options": [["uniform", "uniform", true], ["normal", "normal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "ignore_implicit_zeros", "argument": null, "type": "boolean", "label": "Whether to discard sparse entries", "help": "Only applies to sparse matrices. If False, sparse entries are treated as zeros", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "IntegerToolParameter", "name": "subsample", "argument": null, "type": "integer", "label": "Maximum number of samples used to estimate the quantiles for computational efficiency", "help": "Note that the subsampling procedure may differ for value-identical sparse and dense matrices.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "100000", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "This is used by subsampling and smoothing noise", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "PowerTransformer", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "method", "argument": null, "type": "select", "label": "The power transform method", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "yeo-johnson", "options": [["yeo-johnson (works with positive and negative values)", "yeo-johnson", true], ["box-cox (might perform better, but only works with strictly positive values)", "box-cox", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "standardize", "argument": null, "type": "boolean", "label": "Whether to apply zero-mean, unit-variance normalization to the transformed output.", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}]}]}, {"model_class": "ConditionalWhen", "value": "KBinsDiscretizer", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "n_bins", "argument": null, "type": "integer", "label": "The number of bins to produce", "help": "", "refresh_on_change": false, "min": 2, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "encode", "argument": null, "type": "select", "label": "Method used to encode the transformed result", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "onehot", "options": [["onehot (encode the transformed result with one-hot encoding and return a sparse matrix)", "onehot", true], ["onehot-dense (encode the transformed result with one-hot encoding and return a dense array)", "onehot-dense", false], ["ordinal (return the bin identifier encoded as an integer value)", "ordinal", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "strategy", "argument": null, "type": "select", "label": "Strategy used to define the widths of the bins", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "quantile", "options": [["uniform (all bins in each feature have identical widths)", "uniform", false], ["quantile (all bins in each feature have the same number of points)", "quantile", true], ["kmeans (values in each bin have the same nearest center of a 1D k-means cluster)", "kmeans", false]], "display": null, "multiple": false, "textable": false}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_pre_processor", "argument": null, "type": "select", "label": "Select a preprocessor:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "StandardScaler", "options": [["Standard Scaler (Standardizes features by removing the mean and scaling to unit variance)", "StandardScaler", true], ["Binarizer (Binarizes data)", "Binarizer", false], ["Max Abs Scaler (Scales features by their maximum absolute value)", "MaxAbsScaler", false], ["Normalizer (Normalizes samples individually to unit norm)", "Normalizer", false], ["Kernel Centerer (Centers a kernel matrix)", "KernelCenterer", false], ["Minmax Scaler (Scales features to a range)", "MinMaxScaler", false], ["Polynomial Features (Generates polynomial and interaction features)", "PolynomialFeatures", false], ["Robust Scaler (Scales features using outlier-invariance statistics)", "RobustScaler", false], ["QuantileTransformer (Transform features using quantiles information)", "QuantileTransformer", false], ["PowerTransformer (Apply a power transform featurewise to make data more Gaussian-like)", "PowerTransformer", false], ["KBinsDiscretizer (Bin continuous data into intervals.)", "KBinsDiscretizer", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "feature_selection", "inputs": [{"model_class": "Conditional", "name": "fs_algorithm_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "GenericUnivariateSelect", "inputs": [{"model_class": "SelectToolParameter", "name": "score_func", "argument": "score_func", "type": "select", "label": "Select a score function", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "chi2", "options": [["chi2 - Compute chi-squared stats between each non-negative feature and class", "chi2", false], ["f_classif - Compute the ANOVA F-value for the provided sample", "f_classif", false], ["f_regression - Univariate linear regression tests", "f_regression", false], ["mutual_info_classif - Estimate mutual information for a discrete target variable", "mutual_info_classif", false], ["mutual_info_regression - Estimate mutual information for a continuous target variable", "mutual_info_regression", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "SelectToolParameter", "name": "mode", "argument": "mode", "type": "select", "label": "Feature selection mode", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "percentile", "options": [["percentile", "percentile", false], ["k_best", "k_best", false], ["fpr", "fpr", false], ["fdr", "fdr", false], ["fwe", "fwe", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "param", "argument": "param", "type": "float", "label": "Parameter of the corresponding mode", "help": "float or int depending on the feature selection mode", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "SelectPercentile", "inputs": [{"model_class": "SelectToolParameter", "name": "score_func", "argument": "score_func", "type": "select", "label": "Select a score function", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "chi2", "options": [["chi2 - Compute chi-squared stats between each non-negative feature and class", "chi2", false], ["f_classif - Compute the ANOVA F-value for the provided sample", "f_classif", false], ["f_regression - Univariate linear regression tests", "f_regression", false], ["mutual_info_classif - Estimate mutual information for a discrete target variable", "mutual_info_classif", false], ["mutual_info_regression - Estimate mutual information for a continuous target variable", "mutual_info_regression", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "percentile", "argument": "percentile", "type": "integer", "label": "Percent of features to keep", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "SelectKBest", "inputs": [{"model_class": "SelectToolParameter", "name": "score_func", "argument": "score_func", "type": "select", "label": "Select a score function", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "chi2", "options": [["chi2 - Compute chi-squared stats between each non-negative feature and class", "chi2", false], ["f_classif - Compute the ANOVA F-value for the provided sample", "f_classif", false], ["f_regression - Univariate linear regression tests", "f_regression", false], ["mutual_info_classif - Estimate mutual information for a discrete target variable", "mutual_info_classif", false], ["mutual_info_regression - Estimate mutual information for a continuous target variable", "mutual_info_regression", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "k", "argument": "k", "type": "integer", "label": "Number of top features to select", "help": "No 'all' option is supported.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "SelectFpr", "inputs": [{"model_class": "SelectToolParameter", "name": "score_func", "argument": "score_func", "type": "select", "label": "Select a score function", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "chi2", "options": [["chi2 - Compute chi-squared stats between each non-negative feature and class", "chi2", false], ["f_classif - Compute the ANOVA F-value for the provided sample", "f_classif", false], ["f_regression - Univariate linear regression tests", "f_regression", false], ["mutual_info_classif - Estimate mutual information for a discrete target variable", "mutual_info_classif", false], ["mutual_info_regression - Estimate mutual information for a continuous target variable", "mutual_info_regression", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "alpha", "argument": "alpha", "type": "float", "label": "Alpha", "help": "The highest p-value for features to be kept.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "SelectFdr", "inputs": [{"model_class": "SelectToolParameter", "name": "score_func", "argument": "score_func", "type": "select", "label": "Select a score function", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "chi2", "options": [["chi2 - Compute chi-squared stats between each non-negative feature and class", "chi2", false], ["f_classif - Compute the ANOVA F-value for the provided sample", "f_classif", false], ["f_regression - Univariate linear regression tests", "f_regression", false], ["mutual_info_classif - Estimate mutual information for a discrete target variable", "mutual_info_classif", false], ["mutual_info_regression - Estimate mutual information for a continuous target variable", "mutual_info_regression", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "alpha", "argument": "alpha", "type": "float", "label": "Alpha", "help": "The highest uncorrected p-value for features to keep.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "SelectFwe", "inputs": [{"model_class": "SelectToolParameter", "name": "score_func", "argument": "score_func", "type": "select", "label": "Select a score function", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "chi2", "options": [["chi2 - Compute chi-squared stats between each non-negative feature and class", "chi2", false], ["f_classif - Compute the ANOVA F-value for the provided sample", "f_classif", false], ["f_regression - Univariate linear regression tests", "f_regression", false], ["mutual_info_classif - Estimate mutual information for a discrete target variable", "mutual_info_classif", false], ["mutual_info_regression - Estimate mutual information for a continuous target variable", "mutual_info_regression", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "alpha", "argument": "alpha", "type": "float", "label": "Alpha", "help": "The highest uncorrected p-value for features to keep.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "VarianceThreshold", "inputs": [{"model_class": "Section", "name": "options", "type": "section", "title": "Options", "help": null, "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "threshold", "argument": "threshold", "type": "float", "label": "Threshold", "help": "Features with a training-set variance lower than this threshold will be removed.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "SelectFromModel", "inputs": [{"model_class": "Conditional", "name": "model_inputter", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "new", "inputs": [{"model_class": "Conditional", "name": "estimator_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "svm", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "LinearSVC", "options": [["LinearSVC", "LinearSVC", true], ["LinearSVR", "LinearSVR", false], ["NuSVC", "NuSVC", false], ["NuSVR", "NuSVR", false], ["OneClassSVM", "OneClassSVM", false], ["SVC", "SVC", false], ["SVR", "SVR", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "linear_model", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ARDRegression", "options": [["ARDRegression", "ARDRegression", true], ["BayesianRidge", "BayesianRidge", false], ["ElasticNet", "ElasticNet", false], ["ElasticNetCV", "ElasticNetCV", false], ["HuberRegressor", "HuberRegressor", false], ["Lars", "Lars", false], ["LarsCV", "LarsCV", false], ["Lasso", "Lasso", false], ["LassoCV", "LassoCV", false], ["LassoLars", "LassoLars", false], ["LassoLarsCV", "LassoLarsCV", false], ["LassoLarsIC", "LassoLarsIC", false], ["LinearRegression", "LinearRegression", false], ["LogisticRegression", "LogisticRegression", false], ["LogisticRegressionCV", "LogisticRegressionCV", false], ["MultiTaskLasso", "MultiTaskLasso", false], ["MultiTaskElasticNet", "MultiTaskElasticNet", false], ["MultiTaskLassoCV", "MultiTaskLassoCV", false], ["MultiTaskElasticNetCV", "MultiTaskElasticNetCV", false], ["OrthogonalMatchingPursuit", "OrthogonalMatchingPursuit", false], ["OrthogonalMatchingPursuitCV", "OrthogonalMatchingPursuitCV", false], ["PassiveAggressiveClassifier", "PassiveAggressiveClassifier", false], ["PassiveAggressiveRegressor", "PassiveAggressiveRegressor", false], ["Perceptron", "Perceptron", false], ["RANSACRegressor", "RANSACRegressor", false], ["Ridge", "Ridge", false], ["RidgeClassifier", "RidgeClassifier", false], ["RidgeClassifierCV", "RidgeClassifierCV", false], ["RidgeCV", "RidgeCV", false], ["SGDClassifier", "SGDClassifier", false], ["SGDRegressor", "SGDRegressor", false], ["TheilSenRegressor", "TheilSenRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ensemble", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AdaBoostClassifier", "options": [["AdaBoostClassifier", "AdaBoostClassifier", true], ["AdaBoostRegressor", "AdaBoostRegressor", false], ["BaggingClassifier", "BaggingClassifier", false], ["BaggingRegressor", "BaggingRegressor", false], ["ExtraTreesClassifier", "ExtraTreesClassifier", false], ["ExtraTreesRegressor", "ExtraTreesRegressor", false], ["GradientBoostingClassifier", "GradientBoostingClassifier", false], ["GradientBoostingRegressor", "GradientBoostingRegressor", false], ["IsolationForest", "IsolationForest", false], ["HistGradientBoostingClassifier", "HistGradientBoostingClassifier", false], ["HistGradientBoostingRegressor", "HistGradientBoostingRegressor", false], ["RandomForestClassifier", "RandomForestClassifier", false], ["RandomForestRegressor", "RandomForestRegressor", false], ["RandomTreesEmbedding", "RandomTreesEmbedding", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "naive_bayes", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "BernoulliNB", "options": [["BernoulliNB", "BernoulliNB", true], ["GaussianNB", "GaussianNB", false], ["MultinomialNB", "MultinomialNB", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tree", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "DecisionTreeClassifier", "options": [["DecisionTreeClassifier", "DecisionTreeClassifier", true], ["DecisionTreeRegressor", "DecisionTreeRegressor", false], ["ExtraTreeClassifier", "ExtraTreeClassifier", false], ["ExtraTreeRegressor", "ExtraTreeRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "neighbors", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "KNeighborsClassifier", "options": [["KNeighborsClassifier", "KNeighborsClassifier", true], ["KNeighborsRegressor", "KNeighborsRegressor", false], ["KernelDensity", "KernelDensity", false], ["LocalOutlierFactor", "LocalOutlierFactor", false], ["RadiusNeighborsClassifier", "RadiusNeighborsClassifier", false], ["RadiusNeighborsRegressor", "RadiusNeighborsRegressor", false], ["NearestCentroid", "NearestCentroid", false], ["NearestNeighbors", "NearestNeighbors", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "xgboost", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "XGBRegressor", "options": [["XGBRegressor", "XGBRegressor", true], ["XGBClassifier", "XGBClassifier", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_module", "argument": null, "type": "select", "label": "Choose the module that contains target estimator:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "svm", "options": [["sklearn.svm", "svm", true], ["sklearn.linear_model", "linear_model", false], ["sklearn.ensemble", "ensemble", false], ["sklearn.naive_bayes", "naive_bayes", false], ["sklearn.tree", "tree", false], ["sklearn.neighbors", "neighbors", false], ["xgboost", "xgboost", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "input_mode", "argument": null, "type": "select", "label": "Construct a new estimator from a selection list?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "new", "options": [["Yes", "new", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "TextToolParameter", "name": "threshold", "argument": "threshold", "type": "text", "label": "threshold", "help": "The threshold value to use for feature selection. e.g. 'mean', 'median', '1.25*mean'.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "norm_order", "argument": "norm_order", "type": "integer", "label": "norm_order", "help": "Order of the norm used to filter the vectors of coefficients below threshold in the case where the coef_ attribute of the estimator is of dimension 2. ", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_features", "argument": "max_features", "type": "integer", "label": "The maximum number of features selected scoring above threshold", "help": "To disable threshold and only select based on max_features, set threshold=-np.inf.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "RFE", "inputs": [{"model_class": "Conditional", "name": "estimator_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "svm", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "LinearSVC", "options": [["LinearSVC", "LinearSVC", true], ["LinearSVR", "LinearSVR", false], ["NuSVC", "NuSVC", false], ["NuSVR", "NuSVR", false], ["OneClassSVM", "OneClassSVM", false], ["SVC", "SVC", false], ["SVR", "SVR", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "linear_model", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ARDRegression", "options": [["ARDRegression", "ARDRegression", true], ["BayesianRidge", "BayesianRidge", false], ["ElasticNet", "ElasticNet", false], ["ElasticNetCV", "ElasticNetCV", false], ["HuberRegressor", "HuberRegressor", false], ["Lars", "Lars", false], ["LarsCV", "LarsCV", false], ["Lasso", "Lasso", false], ["LassoCV", "LassoCV", false], ["LassoLars", "LassoLars", false], ["LassoLarsCV", "LassoLarsCV", false], ["LassoLarsIC", "LassoLarsIC", false], ["LinearRegression", "LinearRegression", false], ["LogisticRegression", "LogisticRegression", false], ["LogisticRegressionCV", "LogisticRegressionCV", false], ["MultiTaskLasso", "MultiTaskLasso", false], ["MultiTaskElasticNet", "MultiTaskElasticNet", false], ["MultiTaskLassoCV", "MultiTaskLassoCV", false], ["MultiTaskElasticNetCV", "MultiTaskElasticNetCV", false], ["OrthogonalMatchingPursuit", "OrthogonalMatchingPursuit", false], ["OrthogonalMatchingPursuitCV", "OrthogonalMatchingPursuitCV", false], ["PassiveAggressiveClassifier", "PassiveAggressiveClassifier", false], ["PassiveAggressiveRegressor", "PassiveAggressiveRegressor", false], ["Perceptron", "Perceptron", false], ["RANSACRegressor", "RANSACRegressor", false], ["Ridge", "Ridge", false], ["RidgeClassifier", "RidgeClassifier", false], ["RidgeClassifierCV", "RidgeClassifierCV", false], ["RidgeCV", "RidgeCV", false], ["SGDClassifier", "SGDClassifier", false], ["SGDRegressor", "SGDRegressor", false], ["TheilSenRegressor", "TheilSenRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ensemble", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AdaBoostClassifier", "options": [["AdaBoostClassifier", "AdaBoostClassifier", true], ["AdaBoostRegressor", "AdaBoostRegressor", false], ["BaggingClassifier", "BaggingClassifier", false], ["BaggingRegressor", "BaggingRegressor", false], ["ExtraTreesClassifier", "ExtraTreesClassifier", false], ["ExtraTreesRegressor", "ExtraTreesRegressor", false], ["GradientBoostingClassifier", "GradientBoostingClassifier", false], ["GradientBoostingRegressor", "GradientBoostingRegressor", false], ["IsolationForest", "IsolationForest", false], ["HistGradientBoostingClassifier", "HistGradientBoostingClassifier", false], ["HistGradientBoostingRegressor", "HistGradientBoostingRegressor", false], ["RandomForestClassifier", "RandomForestClassifier", false], ["RandomForestRegressor", "RandomForestRegressor", false], ["RandomTreesEmbedding", "RandomTreesEmbedding", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "naive_bayes", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "BernoulliNB", "options": [["BernoulliNB", "BernoulliNB", true], ["GaussianNB", "GaussianNB", false], ["MultinomialNB", "MultinomialNB", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tree", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "DecisionTreeClassifier", "options": [["DecisionTreeClassifier", "DecisionTreeClassifier", true], ["DecisionTreeRegressor", "DecisionTreeRegressor", false], ["ExtraTreeClassifier", "ExtraTreeClassifier", false], ["ExtraTreeRegressor", "ExtraTreeRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "neighbors", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "KNeighborsClassifier", "options": [["KNeighborsClassifier", "KNeighborsClassifier", true], ["KNeighborsRegressor", "KNeighborsRegressor", false], ["KernelDensity", "KernelDensity", false], ["LocalOutlierFactor", "LocalOutlierFactor", false], ["RadiusNeighborsClassifier", "RadiusNeighborsClassifier", false], ["RadiusNeighborsRegressor", "RadiusNeighborsRegressor", false], ["NearestCentroid", "NearestCentroid", false], ["NearestNeighbors", "NearestNeighbors", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "xgboost", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "XGBRegressor", "options": [["XGBRegressor", "XGBRegressor", true], ["XGBClassifier", "XGBClassifier", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_module", "argument": null, "type": "select", "label": "Choose the module that contains target estimator:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "svm", "options": [["sklearn.svm", "svm", true], ["sklearn.linear_model", "linear_model", false], ["sklearn.ensemble", "ensemble", false], ["sklearn.naive_bayes", "naive_bayes", false], ["sklearn.tree", "tree", false], ["sklearn.neighbors", "neighbors", false], ["xgboost", "xgboost", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "IntegerToolParameter", "name": "n_features_to_select", "argument": "n_features_to_select", "type": "integer", "label": "n_features_to_select", "help": "The number of features to select. If None, half of the features are selected.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "step", "argument": "step", "type": "float", "label": "step", "help": "Default = 1. ", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "verbose", "argument": "verbose", "type": "integer", "label": "verbose", "help": "Controls verbosity of output.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}]}, {"model_class": "ConditionalWhen", "value": "RFECV", "inputs": [{"model_class": "Conditional", "name": "estimator_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "svm", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "LinearSVC", "options": [["LinearSVC", "LinearSVC", true], ["LinearSVR", "LinearSVR", false], ["NuSVC", "NuSVC", false], ["NuSVR", "NuSVR", false], ["OneClassSVM", "OneClassSVM", false], ["SVC", "SVC", false], ["SVR", "SVR", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "linear_model", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ARDRegression", "options": [["ARDRegression", "ARDRegression", true], ["BayesianRidge", "BayesianRidge", false], ["ElasticNet", "ElasticNet", false], ["ElasticNetCV", "ElasticNetCV", false], ["HuberRegressor", "HuberRegressor", false], ["Lars", "Lars", false], ["LarsCV", "LarsCV", false], ["Lasso", "Lasso", false], ["LassoCV", "LassoCV", false], ["LassoLars", "LassoLars", false], ["LassoLarsCV", "LassoLarsCV", false], ["LassoLarsIC", "LassoLarsIC", false], ["LinearRegression", "LinearRegression", false], ["LogisticRegression", "LogisticRegression", false], ["LogisticRegressionCV", "LogisticRegressionCV", false], ["MultiTaskLasso", "MultiTaskLasso", false], ["MultiTaskElasticNet", "MultiTaskElasticNet", false], ["MultiTaskLassoCV", "MultiTaskLassoCV", false], ["MultiTaskElasticNetCV", "MultiTaskElasticNetCV", false], ["OrthogonalMatchingPursuit", "OrthogonalMatchingPursuit", false], ["OrthogonalMatchingPursuitCV", "OrthogonalMatchingPursuitCV", false], ["PassiveAggressiveClassifier", "PassiveAggressiveClassifier", false], ["PassiveAggressiveRegressor", "PassiveAggressiveRegressor", false], ["Perceptron", "Perceptron", false], ["RANSACRegressor", "RANSACRegressor", false], ["Ridge", "Ridge", false], ["RidgeClassifier", "RidgeClassifier", false], ["RidgeClassifierCV", "RidgeClassifierCV", false], ["RidgeCV", "RidgeCV", false], ["SGDClassifier", "SGDClassifier", false], ["SGDRegressor", "SGDRegressor", false], ["TheilSenRegressor", "TheilSenRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ensemble", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AdaBoostClassifier", "options": [["AdaBoostClassifier", "AdaBoostClassifier", true], ["AdaBoostRegressor", "AdaBoostRegressor", false], ["BaggingClassifier", "BaggingClassifier", false], ["BaggingRegressor", "BaggingRegressor", false], ["ExtraTreesClassifier", "ExtraTreesClassifier", false], ["ExtraTreesRegressor", "ExtraTreesRegressor", false], ["GradientBoostingClassifier", "GradientBoostingClassifier", false], ["GradientBoostingRegressor", "GradientBoostingRegressor", false], ["IsolationForest", "IsolationForest", false], ["HistGradientBoostingClassifier", "HistGradientBoostingClassifier", false], ["HistGradientBoostingRegressor", "HistGradientBoostingRegressor", false], ["RandomForestClassifier", "RandomForestClassifier", false], ["RandomForestRegressor", "RandomForestRegressor", false], ["RandomTreesEmbedding", "RandomTreesEmbedding", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "naive_bayes", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "BernoulliNB", "options": [["BernoulliNB", "BernoulliNB", true], ["GaussianNB", "GaussianNB", false], ["MultinomialNB", "MultinomialNB", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tree", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "DecisionTreeClassifier", "options": [["DecisionTreeClassifier", "DecisionTreeClassifier", true], ["DecisionTreeRegressor", "DecisionTreeRegressor", false], ["ExtraTreeClassifier", "ExtraTreeClassifier", false], ["ExtraTreeRegressor", "ExtraTreeRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "neighbors", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "KNeighborsClassifier", "options": [["KNeighborsClassifier", "KNeighborsClassifier", true], ["KNeighborsRegressor", "KNeighborsRegressor", false], ["KernelDensity", "KernelDensity", false], ["LocalOutlierFactor", "LocalOutlierFactor", false], ["RadiusNeighborsClassifier", "RadiusNeighborsClassifier", false], ["RadiusNeighborsRegressor", "RadiusNeighborsRegressor", false], ["NearestCentroid", "NearestCentroid", false], ["NearestNeighbors", "NearestNeighbors", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "xgboost", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "XGBRegressor", "options": [["XGBRegressor", "XGBRegressor", true], ["XGBClassifier", "XGBClassifier", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_module", "argument": null, "type": "select", "label": "Choose the module that contains target estimator:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "svm", "options": [["sklearn.svm", "svm", true], ["sklearn.linear_model", "linear_model", false], ["sklearn.ensemble", "ensemble", false], ["sklearn.naive_bayes", "naive_bayes", false], ["sklearn.tree", "tree", false], ["sklearn.neighbors", "neighbors", false], ["xgboost", "xgboost", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "options", "type": "section", "title": "Advanced Options", "help": null, "expanded": false, "inputs": [{"model_class": "FloatToolParameter", "name": "step", "argument": "step", "type": "float", "label": "step", "help": "Default = 1. ", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_features_to_select", "argument": "min_features_to_select", "type": "integer", "label": "The minimum number of features to be selected", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "cv_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "KFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "shuffle", "argument": "shuffle", "type": "boolean", "label": "Whether to shuffle data before splitting", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "StratifiedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "shuffle", "argument": "shuffle", "type": "boolean", "label": "Whether to shuffle data before splitting", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "LeaveOneOut", "inputs": []}, {"model_class": "ConditionalWhen", "value": "LeavePOut", "inputs": [{"model_class": "IntegerToolParameter", "name": "p", "argument": "p", "type": "integer", "label": "p", "help": "Integer. Size of the test sets.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "RepeatedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_repeats", "argument": "n_repeats", "type": "integer", "label": "n_repeats", "help": "Number of times cross-validator needs to be repeated.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "RepeatedStratifiedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_repeats", "argument": "n_repeats", "type": "integer", "label": "n_repeats", "help": "Number of times cross-validator needs to be repeated.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ShuffleSplit", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of re-shuffling and splitting iterations.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "test_size", "argument": "test_size", "type": "float", "label": "Portion or number of the test set", "help": "0.0-1.0, proportion of the dataset to include in the test split; >1, integer only, the absolute number of test samples ", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "StratifiedShuffleSplit", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of re-shuffling and splitting iterations.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "test_size", "argument": "test_size", "type": "float", "label": "Portion or number of the test set", "help": "0.0-1.0, proportion of the dataset to include in the test split; >1, integer only, the absolute number of test samples ", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "TimeSeriesSplit", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_train_size", "argument": "max_train_size", "type": "integer", "label": "Maximum size of the training set", "help": "Maximum size for a single training set.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "PredefinedSplit", "inputs": [{"model_class": "TextToolParameter", "name": "test_fold", "argument": "test_fold", "type": "text", "label": "test_fold", "help": "List, e.g., [0, 1, -1, 1], represents two test sets, [X[0]] and [X[1], X[3]], X[2] is excluded from any test set due to '-1'.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": true, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "OrderedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "shuffle", "argument": "shuffle", "type": "boolean", "label": "Whether to shuffle data before splitting", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "RepeatedOrderedKFold", "inputs": [{"model_class": "IntegerToolParameter", "name": "n_splits", "argument": "n_splits", "type": "integer", "label": "n_splits", "help": "Number of folds. Must be at least 2.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "3", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "n_repeats", "argument": "n_repeats", "type": "integer", "label": "", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "5", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "random_state", "argument": "random_state", "type": "integer", "label": "Random seed number", "help": "Integer number. The seed of the pseudo random number generator to use when shuffling the data. A fixed seed allows reproducible results. default=None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_cv", "argument": null, "type": "select", "label": "Select the cv splitter", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["default splitter", "default", true], ["KFold", "KFold", false], ["StratifiedKFold", "StratifiedKFold", false], ["LeaveOneOut", "LeaveOneOut", false], ["LeavePOut", "LeavePOut", false], ["RepeatedKFold", "RepeatedKFold", false], ["RepeatedStratifiedKFold", "RepeatedStratifiedKFold", false], ["ShuffleSplit", "ShuffleSplit", false], ["StratifiedShuffleSplit", "StratifiedShuffleSplit", false], ["TimeSeriesSplit", "TimeSeriesSplit", false], ["PredefinedSplit", "PredefinedSplit", false], ["OrderedKFold", "OrderedKFold", false], ["RepeatedOrderedKFold", "RepeatedOrderedKFold", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "scoring", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "accuracy", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "balanced_accuracy", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "average_precision", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "f1", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "f1_micro", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "f1_macro", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "f1_weighted", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "f1_samples", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "neg_log_loss", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "precision", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "precision_micro", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "precision_macro", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "precision_wighted", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "precision_samples", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "recall", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "recall_micro", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "recall_macro", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "recall_wighted", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "recall_samples", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "roc_auc", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "explained_variance", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Regression -- 'explained_variance'", "explained_variance", false], ["Regression -- 'neg_mean_absolute_error'", "neg_mean_absolute_error", false], ["Regression -- 'neg_mean_squared_error'", "neg_mean_squared_error", false], ["Regression -- 'neg_mean_squared_log_error'", "neg_mean_squared_log_error", false], ["Regression -- 'neg_median_absolute_error'", "neg_median_absolute_error", false], ["Regression -- 'r2'", "r2", false], ["Regression -- 'max_error'", "max_error", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "neg_mean_absolute_error", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Regression -- 'explained_variance'", "explained_variance", false], ["Regression -- 'neg_mean_absolute_error'", "neg_mean_absolute_error", false], ["Regression -- 'neg_mean_squared_error'", "neg_mean_squared_error", false], ["Regression -- 'neg_mean_squared_log_error'", "neg_mean_squared_log_error", false], ["Regression -- 'neg_median_absolute_error'", "neg_median_absolute_error", false], ["Regression -- 'r2'", "r2", false], ["Regression -- 'max_error'", "max_error", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "neg_mean_squared_error", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Regression -- 'explained_variance'", "explained_variance", false], ["Regression -- 'neg_mean_absolute_error'", "neg_mean_absolute_error", false], ["Regression -- 'neg_mean_squared_error'", "neg_mean_squared_error", false], ["Regression -- 'neg_mean_squared_log_error'", "neg_mean_squared_log_error", false], ["Regression -- 'neg_median_absolute_error'", "neg_median_absolute_error", false], ["Regression -- 'r2'", "r2", false], ["Regression -- 'max_error'", "max_error", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "neg_mean_squared_log_error", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Regression -- 'explained_variance'", "explained_variance", false], ["Regression -- 'neg_mean_absolute_error'", "neg_mean_absolute_error", false], ["Regression -- 'neg_mean_squared_error'", "neg_mean_squared_error", false], ["Regression -- 'neg_mean_squared_log_error'", "neg_mean_squared_log_error", false], ["Regression -- 'neg_median_absolute_error'", "neg_median_absolute_error", false], ["Regression -- 'r2'", "r2", false], ["Regression -- 'max_error'", "max_error", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "neg_median_absolute_error", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Regression -- 'explained_variance'", "explained_variance", false], ["Regression -- 'neg_mean_absolute_error'", "neg_mean_absolute_error", false], ["Regression -- 'neg_mean_squared_error'", "neg_mean_squared_error", false], ["Regression -- 'neg_mean_squared_log_error'", "neg_mean_squared_log_error", false], ["Regression -- 'neg_median_absolute_error'", "neg_median_absolute_error", false], ["Regression -- 'r2'", "r2", false], ["Regression -- 'max_error'", "max_error", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "r2", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Regression -- 'explained_variance'", "explained_variance", false], ["Regression -- 'neg_mean_absolute_error'", "neg_mean_absolute_error", false], ["Regression -- 'neg_mean_squared_error'", "neg_mean_squared_error", false], ["Regression -- 'neg_mean_squared_log_error'", "neg_mean_squared_log_error", false], ["Regression -- 'neg_median_absolute_error'", "neg_median_absolute_error", false], ["Regression -- 'r2'", "r2", false], ["Regression -- 'max_error'", "max_error", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "max_error", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["Regression -- 'explained_variance'", "explained_variance", false], ["Regression -- 'neg_mean_absolute_error'", "neg_mean_absolute_error", false], ["Regression -- 'neg_mean_squared_error'", "neg_mean_squared_error", false], ["Regression -- 'neg_mean_squared_log_error'", "neg_mean_squared_log_error", false], ["Regression -- 'neg_median_absolute_error'", "neg_median_absolute_error", false], ["Regression -- 'r2'", "r2", false], ["Regression -- 'max_error'", "max_error", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "binarize_auc_scorer", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["anomaly detection -- binarize_auc_scorer", "binarize_auc_scorer", false], ["anomaly detection -- binarize_average_precision_scorer", "binarize_average_precision_scorer", false]], "display": null, "multiple": true, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "binarize_average_precision_scorer", "inputs": [{"model_class": "SelectToolParameter", "name": "secondary_scoring", "argument": null, "type": "select", "label": "Additional scoring used in multi-metric mode:", "help": "If the same metric with the primary is chosen, the metric will be ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["anomaly detection -- binarize_auc_scorer", "binarize_auc_scorer", false], ["anomaly detection -- binarize_average_precision_scorer", "binarize_average_precision_scorer", false]], "display": null, "multiple": true, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "primary_scoring", "argument": null, "type": "select", "label": "Select the primary metric (scoring):", "help": "Metric to refit the best estimator.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["default with estimator", "default", true], ["Classification -- 'accuracy'", "accuracy", false], ["Classification -- 'balanced_accuracy'", "balanced_accuracy", false], ["Classification -- 'average_precision'", "average_precision", false], ["Classification -- 'f1'", "f1", false], ["Classification -- 'f1_micro'", "f1_micro", false], ["Classification -- 'f1_macro'", "f1_macro", false], ["Classification -- 'f1_weighted'", "f1_weighted", false], ["Classification -- 'f1_samples'", "f1_samples", false], ["Classification -- 'neg_log_loss'", "neg_log_loss", false], ["Classification -- 'precision'", "precision", false], ["Classification -- 'precision_micro'", "precision_micro", false], ["Classification -- 'precision_macro'", "precision_macro", false], ["Classification -- 'precision_wighted'", "precision_wighted", false], ["Classification -- 'precision_samples'", "precision_samples", false], ["Classification -- 'recall'", "recall", false], ["Classification -- 'recall_micro'", "recall_micro", false], ["Classification -- 'recall_macro'", "recall_macro", false], ["Classification -- 'recall_wighted'", "recall_wighted", false], ["Classification -- 'recall_samples'", "recall_samples", false], ["Classification -- 'roc_auc'", "roc_auc", false], ["Regression -- 'explained_variance'", "explained_variance", false], ["Regression -- 'neg_mean_absolute_error'", "neg_mean_absolute_error", false], ["Regression -- 'neg_mean_squared_error'", "neg_mean_squared_error", false], ["Regression -- 'neg_mean_squared_log_error'", "neg_mean_squared_log_error", false], ["Regression -- 'neg_median_absolute_error'", "neg_median_absolute_error", false], ["Regression -- 'r2'", "r2", false], ["Regression -- 'max_error'", "max_error", false], ["anomaly detection -- binarize_auc_scorer", "binarize_auc_scorer", false], ["anomaly detection -- binarize_average_precision_scorer", "binarize_average_precision_scorer", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "IntegerToolParameter", "name": "verbose", "argument": "verbose", "type": "integer", "label": "verbose", "help": "Controls verbosity of output.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_algorithm", "argument": null, "type": "select", "label": "Select a feature selection algorithm", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "SelectKBest", "options": [["SelectKBest - Select features according to the k highest scores", "SelectKBest", true], ["GenericUnivariateSelect - Univariate feature selector with configurable strategy", "GenericUnivariateSelect", false], ["SelectPercentile - Select features according to a percentile of the highest scores", "SelectPercentile", false], ["SelectFpr - Filter: Select the p-values below alpha based on a FPR test", "SelectFpr", false], ["SelectFdr - Filter: Select the p-values for an estimated false discovery rate", "SelectFdr", false], ["SelectFwe - Filter: Select the p-values corresponding to Family-wise error rate", "SelectFwe", false], ["VarianceThreshold - Feature selector that removes all low-variance features", "VarianceThreshold", false], ["SelectFromModel - Meta-transformer for selecting features based on importance weights", "SelectFromModel", false], ["RFE - Feature ranking with recursive feature elimination", "RFE", false], ["RFECV - Feature ranking with recursive feature elimination and cross-validated selection of the best number of features", "RFECV", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "decomposition", "inputs": [{"model_class": "Conditional", "name": "matrix_decomposition_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "DictionaryLearning", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): alpha=1, code_init=None, dict_init=None, fit_algorithm='lars', max_iter=1000, n_components=None, random_state=None, split_sign=False, tol=1e-08, transform_algorithm='omp', transform_alpha=None, transform_n_nonzero_coefs=None, verbose=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "FactorAnalysis", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): copy=True, iterated_power=3, max_iter=1000, n_components=None, noise_variance_init=None, random_state=0, svd_method='randomized', tol=0.01.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "FastICA", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): algorithm='parallel', fun='logcosh', fun_args=None, max_iter=200, n_components=None, random_state=None, tol=0.0001, w_init=None, whiten=True. No double quotes.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "IncrementalPCA", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): batch_size=None, copy=True, n_components=None, whiten=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "KernelPCA", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): alpha=1.0, coef0=1, copy_X=True, degree=3, eigen_solver='auto', fit_inverse_transform=False, gamma=None, kernel='linear', kernel_params=None, max_iter=None, n_components=None, random_state=None, remove_zero_eig=False, tol=0. No double quotes.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "LatentDirichletAllocation", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): batch_size=128, doc_topic_prior=None, evaluate_every=-1, learning_decay=0.7, learning_method=None, learning_offset=10.0, max_doc_update_iter=100, max_iter=10, mean_change_tol=0.001, n_components=10, n_topics=None, perp_tol=0.1, random_state=None, topic_word_prior=None, total_samples=1000000.0, verbose=0.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "MiniBatchDictionaryLearning", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): alpha=1, batch_size=3, dict_init=None, fit_algorithm='lars', n_components=None, n_iter=1000, random_state=None, shuffle=True, split_sign=False, transform_algorithm='omp', transform_alpha=None, transform_n_nonzero_coefs=None, verbose=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "MiniBatchSparsePCA", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): alpha=1, batch_size=3, callback=None, method='lars', n_components=None, n_iter=100, random_state=None, ridge_alpha=0.01, shuffle=True, verbose=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "NMF", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): alpha=0.0, beta_loss='frobenius', init=None, l1_ratio=0.0, max_iter=200, n_components=None, random_state=None, shuffle=False, solver='cd', tol=0.0001, verbose=0.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "PCA", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): copy=True, iterated_power='auto', n_components=None, random_state=None, svd_solver='auto', tol=0.0, whiten=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "SparsePCA", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): U_init=None, V_init=None, alpha=1, max_iter=1000, method='lars', n_components=None, random_state=None, ridge_alpha=0.01, tol=1e-08, verbose=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "TruncatedSVD", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): algorithm='randomized', n_components=2, n_iter=5, random_state=None, tol=0.0.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "select_algorithm", "argument": null, "type": "select", "label": "Choose a matrix decomposition algorithm:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "DictionaryLearning", "options": [["DictionaryLearning", "DictionaryLearning", true], ["FactorAnalysis", "FactorAnalysis", false], ["FastICA", "FastICA", false], ["IncrementalPCA", "IncrementalPCA", false], ["KernelPCA", "KernelPCA", false], ["LatentDirichletAllocation", "LatentDirichletAllocation", false], ["MiniBatchDictionaryLearning", "MiniBatchDictionaryLearning", false], ["MiniBatchSparsePCA", "MiniBatchSparsePCA", false], ["NMF", "NMF", false], ["PCA", "PCA", false], ["SparsePCA", "SparsePCA", false], ["TruncatedSVD", "TruncatedSVD", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "kernel_approximation", "inputs": [{"model_class": "Conditional", "name": "kernel_approximation_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "Nystroem", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): coef0=None, degree=None, gamma=None, kernel='rbf', kernel_params=None, n_components=100, random_state=None. No double quotes", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "RBFSampler", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): gamma=1.0, n_components=100, random_state=None.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "AdditiveChi2Sampler", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sample_interval=None, sample_steps=2.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "SkewedChi2Sampler", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): n_components=100, random_state=None, skewedness=1.0.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "select_algorithm", "argument": null, "type": "select", "label": "Choose a kernel approximation algorithm:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "Nystroem", "options": [["Nystroem", "Nystroem", true], ["RBFSampler", "RBFSampler", false], ["AdditiveChi2Sampler", "AdditiveChi2Sampler", false], ["SkewedChi2Sampler", "SkewedChi2Sampler", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "FeatureAgglomeration", "inputs": [{"model_class": "Conditional", "name": "FeatureAgglomeration_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "FeatureAgglomeration", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): affinity='euclidean', compute_full_tree='auto', connectivity=None, linkage='ward', memory=None, n_clusters=2, pooling_func=np.mean.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "select_algorithm", "argument": null, "type": "select", "label": "Choose the algorithm:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "FeatureAgglomeration", "options": [["FeatureAgglomeration", "FeatureAgglomeration", true]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "skrebate", "inputs": [{"model_class": "Conditional", "name": "skrebate_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "ReliefF", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): discrete_threshold=10, n_features_to_select=10, n_neighbors=100, verbose=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "SURF", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): discrete_threshold=10, n_features_to_select=10, verbose=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "SURFstar", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): discrete_threshold=10, n_features_to_select=10, verbose=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "MultiSURF", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): discrete_threshold=10, n_features_to_select=10, verbose=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "MultiSURFstar", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): discrete_threshold=10, n_features_to_select=10, verbose=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "select_algorithm", "argument": null, "type": "select", "label": "Choose the algorithm:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "ReliefF", "options": [["ReliefF", "ReliefF", false], ["SURF", "SURF", false], ["SURFstar", "SURFstar", false], ["MultiSURF", "MultiSURF", false], ["MultiSURFstar", "MultiSURFstar", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "imblearn", "inputs": [{"model_class": "Conditional", "name": "imblearn_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "under_sampling.ClusterCentroids", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, estimator=None, voting='auto'.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "under_sampling.CondensedNearestNeighbour", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, n_neighbors=None, n_seeds_S=1.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "under_sampling.EditedNearestNeighbours", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, n_neighbors=3, max_iter=100, kind_sel='all'.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "under_sampling.RepeatedEditedNearestNeighbours", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, n_neighbors=3, max_iter=100, kind_sel='all'.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "under_sampling.AllKNN", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, n_neighbors=3, kind_sel='all', allow_minority=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "under_sampling.InstanceHardnessThreshold", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): estimator=None, sampling_strategy='auto', random_state=None, cv=5.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "under_sampling.NearMiss", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, version=1, n_neighbors=3, n_neighbors_ver3=3.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "under_sampling.NeighbourhoodCleaningRule", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, n_neighbors=3, kind_sel='all', threshold_cleaning=0.5.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "under_sampling.OneSidedSelection", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, n_neighbors=None, n_seeds_S=1.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "under_sampling.RandomUnderSampler", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, replacement=False.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "under_sampling.TomekLinks", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "over_sampling.ADASYN", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, n_neighbors=5.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "over_sampling.RandomOverSampler", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "over_sampling.SMOTE", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, k_neighbors=5.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "over_sampling.SVMSMOTE", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', k_neighbors=5, m_neighbors=10, out_step=0.5, random_state=None, svm_estimator=None.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "over_sampling.BorderlineSMOTE", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', k_neighbors=5, kind='borderline-1', m_neighbors=10, random_state=None.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "over_sampling.SMOTENC", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default: categorical_features=[], sampling_strategy='auto', random_state=None, k_neighbors=5.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "combine.SMOTEENN", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, smote=None, enn=None.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "combine.SMOTETomek", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, smote=None, tomek=None.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "Z_RandomOverSampler", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Default(=blank): sampling_strategy='auto', random_state=None, negative_thres=0, positive_thres=-1.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "select_algorithm", "argument": null, "type": "select", "label": "Choose the algorithm:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "under_sampling.ClusterCentroids", "options": [["under_sampling.ClusterCentroids", "under_sampling.ClusterCentroids", true], ["under_sampling.CondensedNearestNeighbour", "under_sampling.CondensedNearestNeighbour", false], ["under_sampling.EditedNearestNeighbours", "under_sampling.EditedNearestNeighbours", false], ["under_sampling.RepeatedEditedNearestNeighbours", "under_sampling.RepeatedEditedNearestNeighbours", false], ["under_sampling.AllKNN", "under_sampling.AllKNN", false], ["under_sampling.InstanceHardnessThreshold", "under_sampling.InstanceHardnessThreshold", false], ["under_sampling.NearMiss", "under_sampling.NearMiss", false], ["under_sampling.NeighbourhoodCleaningRule", "under_sampling.NeighbourhoodCleaningRule", false], ["under_sampling.OneSidedSelection", "under_sampling.OneSidedSelection", false], ["under_sampling.RandomUnderSampler", "under_sampling.RandomUnderSampler", false], ["under_sampling.TomekLinks", "under_sampling.TomekLinks", false], ["over_sampling.ADASYN", "over_sampling.ADASYN", false], ["over_sampling.RandomOverSampler", "over_sampling.RandomOverSampler", false], ["over_sampling.SMOTE", "over_sampling.SMOTE", false], ["over_sampling.SVMSMOTE", "over_sampling.SVMSMOTE", false], ["over_sampling.BorderlineSMOTE", "over_sampling.BorderlineSMOTE", false], ["over_sampling.SMOTENC", "over_sampling.SMOTENC", false], ["combine.SMOTEENN", "combine.SMOTEENN", false], ["combine.SMOTETomek", "combine.SMOTETomek", false], ["Z_RandomOverSampler - for regression", "Z_RandomOverSampler", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "IRAPS", "inputs": [{"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings for IRAPSCore if different from default:", "help": "Default(=blank): n_iter=1000, responsive_thres=-1, resistant_thres=0, random_state=None. No double quotes", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "p_thres", "argument": "p_thres", "type": "float", "label": "P value threshold", "help": "Float. default=0.001", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.001", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "fc_thres", "argument": "fc_thres", "type": "float", "label": "fold change threshold", "help": "Float. default=0.1", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "occurrence", "argument": "occurrence", "type": "float", "label": "reservation factor", "help": "Float. default=0.7", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.7", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "discretize", "argument": "discretize", "type": "float", "label": "The z_score threshold to discretize target value", "help": "Float. default=-1", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1.0", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "preprocessors", "inputs": [{"model_class": "Conditional", "name": "encoder_selection", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "GenomeOneHotEncoder", "inputs": [{"model_class": "IntegerToolParameter", "name": "seq_length", "argument": "seq_length", "type": "integer", "label": "", "help": "Integer. Sequence length", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "padding", "argument": "padding", "type": "boolean", "label": "", "help": "Whether to pad or truncate sequence to meet the sequence length.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}]}, {"model_class": "ConditionalWhen", "value": "ProteinOneHotEncoder", "inputs": [{"model_class": "IntegerToolParameter", "name": "seq_length", "argument": "seq_length", "type": "integer", "label": "", "help": "Integer. Sequence length", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "padding", "argument": "padding", "type": "boolean", "label": "", "help": "Whether to pad or truncate sequence to meet the sequence length.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}]}], "test_param": {"model_class": "SelectToolParameter", "name": "encoder_type", "argument": null, "type": "select", "label": "Choose the sequence encoder class", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "GenomeOneHotEncoder", "options": [["GenomeOneHotEncoder", "GenomeOneHotEncoder", false], ["ProteinOneHotEncoder", "ProteinOneHotEncoder", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "component_type", "argument": null, "type": "select", "label": "Choose the type of transformation:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "None", "options": [["None", "None", true], ["Sklearn Preprocessor", "pre_processor", false], ["Feature Selection", "feature_selection", false], ["Matrix Decomposition", "decomposition", false], ["Kernel Approximation", "kernel_approximation", false], ["Agglomerate Features", "FeatureAgglomeration", false], ["SK-rebate Feature Selection", "skrebate", false], ["Imbalanced-learn Sampling", "imblearn", false], ["IRAPS -- feature selector and classifier", "IRAPS", false], ["Bio-sequence Encoders", "preprocessors", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "Section", "name": "final_estimator", "type": "section", "title": "Final Estimator", "help": null, "expanded": true, "inputs": [{"model_class": "Conditional", "name": "estimator_selector", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "svm", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "LinearSVC", "options": [["LinearSVC", "LinearSVC", true], ["LinearSVR", "LinearSVR", false], ["NuSVC", "NuSVC", false], ["NuSVR", "NuSVR", false], ["OneClassSVM", "OneClassSVM", false], ["SVC", "SVC", false], ["SVR", "SVR", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "linear_model", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "ARDRegression", "options": [["ARDRegression", "ARDRegression", true], ["BayesianRidge", "BayesianRidge", false], ["ElasticNet", "ElasticNet", false], ["ElasticNetCV", "ElasticNetCV", false], ["HuberRegressor", "HuberRegressor", false], ["Lars", "Lars", false], ["LarsCV", "LarsCV", false], ["Lasso", "Lasso", false], ["LassoCV", "LassoCV", false], ["LassoLars", "LassoLars", false], ["LassoLarsCV", "LassoLarsCV", false], ["LassoLarsIC", "LassoLarsIC", false], ["LinearRegression", "LinearRegression", false], ["LogisticRegression", "LogisticRegression", false], ["LogisticRegressionCV", "LogisticRegressionCV", false], ["MultiTaskLasso", "MultiTaskLasso", false], ["MultiTaskElasticNet", "MultiTaskElasticNet", false], ["MultiTaskLassoCV", "MultiTaskLassoCV", false], ["MultiTaskElasticNetCV", "MultiTaskElasticNetCV", false], ["OrthogonalMatchingPursuit", "OrthogonalMatchingPursuit", false], ["OrthogonalMatchingPursuitCV", "OrthogonalMatchingPursuitCV", false], ["PassiveAggressiveClassifier", "PassiveAggressiveClassifier", false], ["PassiveAggressiveRegressor", "PassiveAggressiveRegressor", false], ["Perceptron", "Perceptron", false], ["RANSACRegressor", "RANSACRegressor", false], ["Ridge", "Ridge", false], ["RidgeClassifier", "RidgeClassifier", false], ["RidgeClassifierCV", "RidgeClassifierCV", false], ["RidgeCV", "RidgeCV", false], ["SGDClassifier", "SGDClassifier", false], ["SGDRegressor", "SGDRegressor", false], ["TheilSenRegressor", "TheilSenRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ensemble", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "AdaBoostClassifier", "options": [["AdaBoostClassifier", "AdaBoostClassifier", true], ["AdaBoostRegressor", "AdaBoostRegressor", false], ["BaggingClassifier", "BaggingClassifier", false], ["BaggingRegressor", "BaggingRegressor", false], ["ExtraTreesClassifier", "ExtraTreesClassifier", false], ["ExtraTreesRegressor", "ExtraTreesRegressor", false], ["GradientBoostingClassifier", "GradientBoostingClassifier", false], ["GradientBoostingRegressor", "GradientBoostingRegressor", false], ["IsolationForest", "IsolationForest", false], ["HistGradientBoostingClassifier", "HistGradientBoostingClassifier", false], ["HistGradientBoostingRegressor", "HistGradientBoostingRegressor", false], ["RandomForestClassifier", "RandomForestClassifier", false], ["RandomForestRegressor", "RandomForestRegressor", false], ["RandomTreesEmbedding", "RandomTreesEmbedding", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "naive_bayes", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "BernoulliNB", "options": [["BernoulliNB", "BernoulliNB", true], ["GaussianNB", "GaussianNB", false], ["MultinomialNB", "MultinomialNB", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tree", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "DecisionTreeClassifier", "options": [["DecisionTreeClassifier", "DecisionTreeClassifier", true], ["DecisionTreeRegressor", "DecisionTreeRegressor", false], ["ExtraTreeClassifier", "ExtraTreeClassifier", false], ["ExtraTreeRegressor", "ExtraTreeRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "neighbors", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "KNeighborsClassifier", "options": [["KNeighborsClassifier", "KNeighborsClassifier", true], ["KNeighborsRegressor", "KNeighborsRegressor", false], ["KernelDensity", "KernelDensity", false], ["LocalOutlierFactor", "LocalOutlierFactor", false], ["RadiusNeighborsClassifier", "RadiusNeighborsClassifier", false], ["RadiusNeighborsRegressor", "RadiusNeighborsRegressor", false], ["NearestCentroid", "NearestCentroid", false], ["NearestNeighbors", "NearestNeighbors", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "xgboost", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "XGBRegressor", "options": [["XGBRegressor", "XGBRegressor", true], ["XGBClassifier", "XGBClassifier", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "text_params", "argument": null, "type": "text", "label": "Type in parameter settings if different from default:", "help": "Dictionary-capable, e.g., C=1, kernel='linear'. No double quotes. Leave this box blank for default estimator.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sklearn.compose", "inputs": [{"model_class": "SelectToolParameter", "name": "selected_estimator", "argument": null, "type": "select", "label": "Choose estimator class:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "TransformedTargetRegressor", "options": [["TransformedTargetRegressor", "TransformedTargetRegressor", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "DataToolParameter", "name": "regressor", "argument": null, "type": "data", "label": "Choose the dataset containing the wrapped regressor", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["zip"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "transformer", "argument": null, "type": "data", "label": "Choose the dataset containing transformer", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["zip"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "binarize_target", "inputs": [{"model_class": "SelectToolParameter", "name": "clf_or_regr", "argument": null, "type": "select", "label": "Classifier or Regressor:", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "BinarizeTargetClassifier", "options": [["BinarizeTargetClassifier", "BinarizeTargetClassifier", false], ["BinarizeTargetRegressor", "BinarizeTargetRegressor", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "DataToolParameter", "name": "wrapped_estimator", "argument": null, "type": "data", "label": "Choose the dataset containing the wrapped estimator or pipeline", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["zip"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "FloatToolParameter", "name": "z_score", "argument": null, "type": "float", "label": "Discrize target values using z_score", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "value", "argument": null, "type": "float", "label": "Discretize target values using a fixed value instead", "help": "Optional. default: None.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "less_is_positive", "argument": null, "type": "boolean", "label": "Are the detecting values smaller than others?", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "booltrue", "falsevalue": "boolfalse"}]}, {"model_class": "ConditionalWhen", "value": "custom_estimator", "inputs": [{"model_class": "DataToolParameter", "name": "c_estimator", "argument": null, "type": "data", "label": "Choose the dataset containing the custom estimator or pipeline", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["zip"], "edam": {"edam_formats": ["format_2333"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "none", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "selected_module", "argument": null, "type": "select", "label": "Choose the module that contains target estimator:", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "svm", "options": [["sklearn.svm", "svm", true], ["sklearn.linear_model", "linear_model", false], ["sklearn.ensemble", "ensemble", false], ["sklearn.naive_bayes", "naive_bayes", false], ["sklearn.tree", "tree", false], ["sklearn.neighbors", "neighbors", false], ["xgboost", "xgboost", false], ["sklearn.compose", "sklearn.compose", false], ["Binarize Target Classifier or Regressor", "binarize_target", false], ["Load a custom estimator", "custom_estimator", false], ["none -- The last component of pre-processing step will turn to a final estimator", "none", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "BooleanToolParameter", "name": "get_params", "argument": null, "type": "boolean", "label": "Output parameters for searchCV?", "help": "Optional. Tunable parameters could be obtained through `estimator_attributes` tool.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "booltrue", "falsevalue": "boolfalse"}], "outputs": [{"model_class": "ToolOutput", "name": "outfile", "format": "zip", "label": "New Pipleline/Estimator", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "outfile_params", "format": "tabular", "label": "get_params for Pipleline/Estimator", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "machine_learning", "panel_section_name": "Machine Learning", "form_style": "regular"}