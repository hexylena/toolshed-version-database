{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_plot_enrichment/deeptools_plot_enrichment/2.5.7.0", "name": "plotEnrichment", "version": "2.5.7.0", "description": "plots read/fragment coverage over sets of regions", "labels": [], "edam_operations": ["operation_0337", "operation_3435"], "edam_topics": ["topic_3169", "topic_0622"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "deeptools", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "deeptools_plot_enrichment", "owner": "bgruening", "changeset_revision": "5e6283701290", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "multibam_conditional", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "No", "inputs": [{"model_class": "DataToolParameter", "name": "bamfiles", "argument": "--bamfiles", "type": "data", "label": "Bam file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam"], "edam": {"edam_formats": ["format_2572"], "edam_data": ["data_0863"]}, "multiple": true, "min": 1, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "Yes", "inputs": [{"model_class": "Repeat", "name": "multibam_repeats", "type": "repeat", "title": "BAM Files", "help": null, "default": 1, "min": 1, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "bamfiles", "argument": "--bamfiles", "type": "data", "label": "BAM file", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bam"], "edam": {"edam_formats": ["format_2572"], "edam_data": ["data_0863"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}]}], "test_param": {"model_class": "SelectToolParameter", "name": "orderMatters", "argument": null, "type": "select", "label": "Sample order matters", "help": "By default, the order of samples given to the program is dependent on their order in your history. If the order of the samples is vital to you, select Yes below.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "No", "options": [["No", "No", true], ["Yes", "Yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "DataToolParameter", "name": "BED", "argument": "--BED", "type": "data", "label": "Regions in BED/GTF format", "help": "One or more files containing regions to include in the analysis", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed", "gtf"], "edam": {"edam_formats": ["format_3003", "format_2306"], "edam_data": ["data_3002", "data_1255"]}, "multiple": true, "min": 1, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "region", "argument": "--region", "type": "text", "label": "Region of the genome to limit the operation to", "help": "This is useful when testing parameters to reduce the time required. The format is chr:start:end, for example \"chr10\" or \"chr10:456700:891000\".", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "outFileFormat", "argument": "--outFileFormat", "type": "select", "label": "Image file format", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "png", "options": [["png", "png", true], ["pdf", "pdf", false], ["svg", "svg", false], ["eps", "eps", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "advancedOpt", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "plotHeight", "argument": "--plotHeight", "type": "integer", "label": "Plot height", "help": "Height in cm. The default for the plot height is 20 centimeters. The minimum value is 3 cm.", "refresh_on_change": false, "min": 3, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "plotWidth", "argument": "--plotWidth", "type": "integer", "label": "Plot width", "help": "Width in cm. The default value is 20 centimeters. The minimum value is 1 cm.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "20", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "labels", "argument": "--labels", "type": "text", "label": "Labels for the samples (each BAM file) plotted", "help": "The default is to use the file name of the sample. The sample labels should be separated by                 spaces and quoted if a label itself contains a space, e.g., label-1 \"label 2\"", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "regionLabels", "argument": "--regionLabels", "type": "text", "label": "Labels for the features", "help": "For BED files, this sets the label for all entries in each file.                       For GTF files this is ignored.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "plotTitle", "argument": "--plotTitle", "type": "text", "label": "Title of the plot", "help": "Title of the plot, to be printed on top of the generated image.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "alpha", "argument": "--alpha", "type": "float", "label": "Alpha channel", "help": "The alpha channel value (between 0 and 1). A value of 0 is transparent. Default: 0.9", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.9", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colors", "argument": "--colors", "type": "text", "label": "List of colors to use for the plotted bars", "help": "Color names and html hex strings (e.g. #eeff22) are accepted.                 The color names should be separated by spaces. (--colors red blue green)", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "perSample", "argument": "--perSample", "type": "boolean", "label": "Create one plot per-sample", "help": "Plot per-sample, rather than per-feature.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--perSample", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "variableScales", "argument": "--variableScales", "type": "boolean", "label": "Allow variable scales", "help": "By default, the y-axis always goes from 0 to 100. If this option is selected, then the maximum value will vary with the dataset.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--variableScales", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "numPlotsPerRow", "argument": "--numPlotsPerRow", "type": "integer", "label": "Number of plots/row", "help": "", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}, {"model_class": "Conditional", "name": "doExtendCustom", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": []}, {"model_class": "ConditionalWhen", "value": "custom", "inputs": [{"model_class": "IntegerToolParameter", "name": "extendReadsValue", "argument": null, "type": "integer", "label": "Extend reads to the given average fragment size", "help": "Extend all reads to this length", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "300", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "doExtend", "argument": null, "type": "select", "label": "Extend reads to the given average fragment size.", "help": "(1) Single-end reads and singletons are extended to match this length. (2) Paired-end reads are extended to match the fragment size, regardless of what is set here.                      By default *each* read mate is extended.                      This can be modified using the SAM flags (see --samFlagInclude and --samFlagExclude options) to keep only the first or the second mate.                      Unmated reads, mate reads that map to different chromosomes or too far apart are extended to the given value.                      Reads are only extended if --extendReads is set to a value greater than the read length. *NOTE*: For spliced-read data, this option is not                      recommended as it will extend reads over skipped regions, e.g. introns in RNA-seq data.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No extension. The default value and most typically appropriate.", "no", true], ["Paired-end extension. Suitable only for paired-end datasets.", "yes", false], ["A custom length, which will be applied to ALL reads.", "custom", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "ignoreDuplicates", "argument": "--ignoreDuplicates", "type": "boolean", "label": "Ignore duplicates", "help": "If set, reads that have the same orientation and start position will be considered only once. If reads are paired, the mate position also has to coincide to ignore a read.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--ignoreDuplicates", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "centerReads", "argument": "--centerReads", "type": "boolean", "label": "Center regions with respect to the fragment length", "help": "For paired-end data the fragment is defined by the bounds of the reads. For single-end data the bounds are defined by the read and the user-definable fragment/extension length. This option is useful to get a sharper signal around enriched regions.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--centerReads", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "minMappingQuality", "argument": "--minMappingQuality", "type": "integer", "label": "Minimum mapping quality", "help": "If set, only reads with a mapping quality score higher than this value are considered.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "samFlagInclude", "argument": "--samFlagInclude", "type": "integer", "label": "Include reads based on the SAM flag", "help": "For example, to get only reads that are the first mate use a flag of 64. This is useful to count properly paired reads only once, otherwise the second mate will be also considered for the coverage.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "samFlagExclude", "argument": "--samFlagExclude", "type": "integer", "label": "Exclude reads based on the SAM flag", "help": "For example, to get only reads that map to the forward strand, use --samFlagExclude 16, where 16 is the SAM flag for reads that map to the reverse strand.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "minFragmentLength", "argument": "--minFragmentLength", "type": "integer", "label": "Minimum fragment length for inclusion.", "help": "This is primarily useful in things like ATACseq, where one would like to look specifically at mono- or di-nucleosome fragments.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "maxFragmentLength", "argument": "--maxFragmentLength", "type": "integer", "label": "Maximum fragment length for inclusion.", "help": "A value of 0 (the default) is equivalent to no maximum.", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "keepExons", "argument": "--keepExons", "type": "boolean", "label": "Include BED12 exons", "help": "Only for BED12 files, include columns 10-12 rather than just 2 and 3.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--keepExons", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "Offset", "argument": "--Offset", "type": "text", "label": "Offset inside each alignment to use for the signal location.", "help": "Uses this offset inside of each read as the signal. This is useful in                     cases like RiboSeq or GROseq, where only the 12th, 15th or 1st base aligned                     should be used to denote where the signal is (rather than the span of the                     whole alignment). This can be paired with the --filterRNAstrand option. Note                     that negative values indicate offsets from the end of each read. A value of                     1 indicates the first base of the alignment (taking alignment orientation                     into account). Likewise, a value of -1 is the last base of the alignment. An                     offset of 0 is not permitted. If two values (separated by spaces) are specified, then they will be                     used to specify a range of positions. Note that specifying something like                     --Offset 5 -1 will result in the 5th through last position being used, which                     is equivalent to trimming 4 bases from the 5-prime end of alignments.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "DataToolParameter", "name": "blackListFileName", "argument": "--blackListFileName", "type": "data", "label": "Blacklisted regions in BED/GTF format", "help": "One or more files containing regions to exclude from the analysis", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed", "gtf"], "edam": {"edam_formats": ["format_3003", "format_2306"], "edam_data": ["data_3002", "data_1255"]}, "multiple": true, "min": 0, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}], "test_param": {"model_class": "SelectToolParameter", "name": "showAdvancedOpt", "argument": null, "type": "select", "label": "Show advanced options", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["no", "no", true], ["yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "outRawCounts", "argument": "--outRawCounts", "type": "boolean", "label": "Save percentages to a file", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}], "outputs": [{"model_class": "ToolOutput", "name": "outFileName", "format": "png", "label": "${tool.name} image", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3603", "edam_data": "data_2968", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "outFileRawCounts", "format": "tabular", "label": "${tool.name} on ${on_string}: percentages", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "deeptools", "panel_section_name": "deepTools", "form_style": "regular"}