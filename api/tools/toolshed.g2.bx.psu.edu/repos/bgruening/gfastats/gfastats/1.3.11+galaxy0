{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/bgruening/gfastats/gfastats/1.3.11+galaxy0", "name": "gfastats", "version": "1.3.11+galaxy0", "description": "The swiss army knife for Genome Assembly", "labels": [], "edam_operations": ["operation_2409"], "edam_topics": ["topic_3307"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "gfastats", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "gfastats", "owner": "bgruening", "changeset_revision": "59150c883ed5", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input_file", "argument": "--fasta", "type": "data", "label": "Input file", "help": "", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta", "fastqsanger", "gfa1", "fasta.gz", "fastqsanger.gz", "gfa1.gz"], "edam": {"edam_formats": ["format_1929", "format_1932", "format_2330", "format_1929", "format_1932", "format_2330"], "edam_data": ["data_2044", "data_2044", "data_0006", "data_2044", "data_2044", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "target_condition", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "false", "inputs": []}, {"model_class": "ConditionalWhen", "value": "true", "inputs": [{"model_class": "TextToolParameter", "name": "target_sequence", "argument": null, "type": "text", "label": "Target sequence", "help": "Target specific sequence by header, optionally with coordinates: header[:start-end]", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "DataToolParameter", "name": "include_bed", "argument": "--include-bed", "type": "data", "label": "Include specific intervals", "help": "Generates output on a subset list of headers or coordinates                            in 0-based bed format. It can be combined with --exclude-bed. Optional.", "help_format": "html", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed"], "edam": {"edam_formats": ["format_3003"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "exclude_bed", "argument": "--exclude-bed", "type": "data", "label": "Exclude specific intervals", "help": "Exclude a subset of headers or coordinates in 0-base bed format. It can be conmbined with --include-bed. Optional.", "help_format": "html", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["bed"], "edam": {"edam_formats": ["format_3003"], "edam_data": ["data_3002"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "false", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "target_option", "argument": null, "type": "select", "label": "Specify target sequences", "help": "", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "options": [["Disabled", "false", false], ["Enabled", "true", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "mode_condition", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "manipulation", "inputs": [{"model_class": "DataToolParameter", "name": "swiss_army_knife", "argument": "--swiss-army-knife", "type": "data", "label": "SAK input file", "help": "Set of instructions provided as an ordered list", "help_format": "html", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Conditional", "name": "output_condition", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "fasta", "inputs": [{"model_class": "IntegerToolParameter", "name": "line_length", "argument": "--line-length", "type": "integer", "label": "Specify line length", "help": "Optional: specifies line length when output format is fasta. Default has no line breaks.", "help_format": "html", "refresh_on_change": false, "min": 0, "max": 80, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fasta.gz", "inputs": [{"model_class": "IntegerToolParameter", "name": "line_length", "argument": "--line-length", "type": "integer", "label": "Specify line length", "help": "Optional: specifies line length when output format is fasta. Default has no line breaks.", "help_format": "html", "refresh_on_change": false, "min": 0, "max": 80, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "fastq", "inputs": []}, {"model_class": "ConditionalWhen", "value": "fastq.gz", "inputs": []}, {"model_class": "ConditionalWhen", "value": "gfa", "inputs": [{"model_class": "Conditional", "name": "terminal_overlaps_condition", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "terminal_overlaps_length", "argument": null, "type": "integer", "label": "Terminal overlaps length", "help": "Integer for minimum length required to count as an overlap for detecting terminal overlaps (minimum is 500)", "help_format": "html", "refresh_on_change": false, "min": 500, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "terminal_overlaps_select", "argument": null, "type": "select", "label": "Terminal overlaps selection", "help": "Optional: Do you want to detect terminal overlaps?", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No (default)", "no", false], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "no_sequence", "argument": "--no-sequence", "type": "boolean", "label": "Do not include sequences in the GFA output", "help": "Select Yes for a lighter GFA file.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-sequence", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "gfa.gz", "inputs": [{"model_class": "Conditional", "name": "terminal_overlaps_condition", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "IntegerToolParameter", "name": "terminal_overlaps_length", "argument": null, "type": "integer", "label": "Terminal overlaps length", "help": "Integer for minimum length required to count as an overlap for detecting terminal overlaps (minimum is 500)", "help_format": "html", "refresh_on_change": false, "min": 500, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "500", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "terminal_overlaps_select", "argument": null, "type": "select", "label": "Terminal overlaps selection", "help": "Optional: Do you want to detect terminal overlaps?", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["No (default)", "no", false], ["Yes", "yes", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "no_sequence", "argument": "--no-sequence", "type": "boolean", "label": "Do not include sequences in the GFA output", "help": "Select Yes for a lighter GFA file.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-sequence", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "out_format", "argument": "--out-format", "type": "select", "label": "Output format", "help": "Outputs selected sequences.", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "fastq.gz", "options": [["FASTA", "fasta", false], ["FASTA.gz", "fasta.gz", false], ["FASTQ", "fastq", false], ["FASTQ.gz", "fastq.gz", true], ["GFA", "gfa", false], ["GFA.gz", "gfa.gz", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "discover_paths", "argument": "--discover-paths", "type": "boolean", "label": "Generates the initial set of paths", "help": "In the graph space, an assembly                      is a collection of segments and edges/gaps between these segments. A path defines a potential walk through the segments and edges/gaps that corresponds to a hypothesis of the actual linear sequence.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--discover-paths", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "sort", "argument": "--sort", "type": "select", "label": "Sort sequences", "help": "Specify how to sort the sequences. Ascending/descending uses the sequence/path header.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Disabled", "", true], ["Ascending", "ascending", false], ["Descending", "descending", false], ["Largest", "largest", false], ["Smallest", "smallest", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "remove_terminal_gaps", "argument": "--remove-terminal-gaps", "type": "boolean", "label": "Remove gaps from the beginning and end of sequences", "help": "", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--remove-terminal-gaps", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "homopolymer_compress", "argument": "--homopolymer-compress", "type": "integer", "label": "Homopolymer compression", "help": "Compress all the homopolymers in the input above the given threshold.", "help_format": "html", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "statistics", "inputs": [{"model_class": "Conditional", "name": "statistics_condition", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "size", "inputs": [{"model_class": "SelectToolParameter", "name": "out_size", "argument": "--out-size", "type": "select", "label": "Feature for reporting sizes", "help": "Generate a tabular file with the sequence sizes", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "s", "options": [["Scaffolds", "s", false], ["Contigs", "c", false], ["Gaps", "g", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "coordinates", "inputs": [{"model_class": "SelectToolParameter", "name": "out_coord", "argument": "--out-coord", "type": "select", "label": "BED coordinares feature", "help": "Generates bed coordinates of given feature. Default: AGP", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "a", "options": [["AGP", "a", false], ["Contigs", "c", false], ["Gaps", "g", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "assembly", "inputs": [{"model_class": "IntegerToolParameter", "name": "expected_genomesize", "argument": null, "type": "integer", "label": "Expected genome size", "help": "Estimated genome size. This parameter is optional, but required for NG* statistics.", "help_format": "html", "refresh_on_change": false, "min": 0, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "sequence", "inputs": [{"model_class": "BooleanToolParameter", "name": "out_sequence", "argument": "--out-sequence", "type": "boolean", "label": "Report actual sequence", "help": "It reports also the actual sequence", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--out-sequence", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selector", "argument": null, "type": "select", "label": "Report mode", "help": "", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "assembly", "options": [["Genome assembly statistics (--nstar-report)", "assembly", true], ["Scaffold, contig or gap sizes (--out-size)", "size", false], ["AGP, contig or gap coordinates (--out-coord)", "coordinates", false], ["Sequence statistics (--segment-report)", "sequence", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "locale", "argument": "--locale", "type": "boolean", "label": "Thousands separator in output", "help": "Use commas for thousands separator in output?", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "--locale en_US.UTF-8", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "tabular", "argument": "--tabular", "type": "boolean", "label": "Tabular-format output", "help": "Generate output in tabular format", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "--tabular", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "discover_paths", "argument": "--discover-paths", "type": "boolean", "label": "Generates the initial set of paths", "help": "In the graph space an assembly                      is a collection of segment and edges/gaps between these segments. A path defines a potential walk through the segments and edges/gaps that corresponds to a hypothesis of the actual linear sequence", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--discover-paths", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "scaffolding", "inputs": [{"model_class": "DataToolParameter", "name": "agp_to_path", "argument": "--agp-to-path", "type": "data", "label": "Input AGP file", "help": "Integrate the AGP information into the assembly graph as paths. The scaffolding information is converted into paths through the graph", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["agp"], "edam": {"edam_formats": ["format_3693"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "BooleanToolParameter", "name": "discover_paths", "argument": "--discover-paths", "type": "boolean", "label": "Generates the initial set of paths", "help": "In the graph space an assembly                      is a collection of segment and edges/gaps between these segments. A path defines a potential walk through the segments and edges/gaps that corresponds to a hypothesis of the actual linear sequence", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--discover-paths", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "no_sequence", "argument": "--no-sequence", "type": "boolean", "label": "Do not include sequences in the GFA output", "help": "Select Yes for a lighter GFA file.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--no-sequence", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "selector", "argument": null, "type": "select", "label": "Tool mode", "help": "", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "statistics", "options": [["Summary statistics generation", "statistics", false], ["Genome assembly manipulation", "manipulation", false], ["Scaffolding", "scaffolding", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "stats", "format": "tabular", "label": "${tool.name} on ${on_string}: stats", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "output", "format": "fastq", "label": "${tool.name} on ${on_string}: edited sequences", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output_dataset", "edam_format": "format_1930", "edam_data": "data_2044", "discover_datasets": []}], "panel_section_id": "fasta_fastq", "panel_section_name": "FASTA/FASTQ", "form_style": "regular"}