{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/chemteam/gmx_trj/gmx_trj/2022+galaxy2", "name": "Modify/convert and concatate GROMACS trajectories", "version": "2022+galaxy2", "description": "using trjconv and trjcat", "labels": [], "edam_operations": ["operation_2476"], "edam_topics": ["topic_0176"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "gromacs", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "gmx_trj", "owner": "chemteam", "changeset_revision": "32052c6c3310", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "trj", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "trjconv", "inputs": [{"model_class": "DataToolParameter", "name": "trj_input", "argument": null, "type": "data", "label": "Input trajectory", "help": "In XTC or TRR format; structure files with PDB or GRO format can also be used.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["xtc", "trr", "pdb", "gro"], "edam": {"edam_formats": ["format_2333", "format_2333", "format_2330", "format_2330"], "edam_data": ["data_0006", "data_0006", "data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "str_input", "argument": null, "type": "data", "label": "Input structure", "help": "In PDB, GRO or TPR format.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["pdb", "gro", "tpr"], "edam": {"edam_formats": ["format_2330", "format_2330", "format_2333"], "edam_data": ["data_0006", "data_0006", "data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "ndx_input", "argument": null, "type": "data", "label": "Index (NDX) file", "help": "In NDX format. Optional.", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["ndx"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "index_output", "argument": null, "type": "text", "label": "Index of group to save in the output", "help": "Index of group to save in the output - i.e. the group's position in the ndx file (using zero-based numbering, so the first group has index 0).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "index_center", "argument": null, "type": "text", "label": "Index of group for centering", "help": "Index of group for centering - i.e. the group's position in the ndx file (using zero-based numbering, so the first group has index 0). Leave blank if centering is not required.", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "sep", "argument": null, "type": "select", "label": "Write each trajectory frame to a separate GRO or PDB file?", "help": "Results will be stored as a Galaxy collection. Only has effect with PDB or GRO output, otherwise ignored", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["No", "", true], ["Yes, write each frame separately", "sep", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "pbc", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "cluster", "inputs": [{"model_class": "TextToolParameter", "name": "index_cluster", "argument": null, "type": "text", "label": "Index of group to use for clustering", "help": "Index of group to use for clustering - i.e. the group's position in the ndx file (using zero-based numbering, so the first group has index 0).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "mol", "inputs": []}, {"model_class": "ConditionalWhen", "value": "res", "inputs": []}, {"model_class": "ConditionalWhen", "value": "atom", "inputs": []}, {"model_class": "ConditionalWhen", "value": "nojump", "inputs": []}, {"model_class": "ConditionalWhen", "value": "whole", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "pbc", "argument": null, "type": "select", "label": "PBC treatment", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["none", "none", false], ["mol", "mol", false], ["res", "res", false], ["atom", "atom", false], ["nojump", "nojump", false], ["cluster", "cluster", false], ["whole", "whole", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "ur", "argument": null, "type": "select", "label": "Unit cell representation", "help": "Only has effect in combination with PBC treatment of mol, res or atom", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "rect", "options": [["rect", "rect", true], ["tric", "tric", false], ["compact", "compact", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "skip", "argument": null, "type": "integer", "label": "Number of frames to skip", "help": "This allows you to compress a trajectory file, by reducing the amount of frames written out into the new trajectory file.", "refresh_on_change": false, "min": 1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "boxcenter", "argument": null, "type": "select", "label": "Center for PBC and centering treatment", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "tric", "options": [["rect", "rect", false], ["tric", "tric", true], ["zero", "zero", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "fit", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "rot+trans", "inputs": [{"model_class": "TextToolParameter", "name": "index_fit", "argument": null, "type": "text", "label": "Index of group to use for fitting", "help": "Index of group to use for fitting - i.e. the group's position in the ndx file (using zero-based numbering, so the first group has index 0).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "rotxy+transxy", "inputs": [{"model_class": "TextToolParameter", "name": "index_fit", "argument": null, "type": "text", "label": "Index of group to use for fitting", "help": "Index of group to use for fitting - i.e. the group's position in the ndx file (using zero-based numbering, so the first group has index 0).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "translation", "inputs": [{"model_class": "TextToolParameter", "name": "index_fit", "argument": null, "type": "text", "label": "Index of group to use for fitting", "help": "Index of group to use for fitting - i.e. the group's position in the ndx file (using zero-based numbering, so the first group has index 0).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "transxy", "inputs": [{"model_class": "TextToolParameter", "name": "index_fit", "argument": null, "type": "text", "label": "Index of group to use for fitting", "help": "Index of group to use for fitting - i.e. the group's position in the ndx file (using zero-based numbering, so the first group has index 0).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "progressive", "inputs": [{"model_class": "TextToolParameter", "name": "index_fit", "argument": null, "type": "text", "label": "Index of group to use for fitting", "help": "Index of group to use for fitting - i.e. the group's position in the ndx file (using zero-based numbering, so the first group has index 0).", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "fit", "argument": null, "type": "select", "label": "Fit molecule to reference structure in the reference file?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["No fitting", "none", true], ["rot+trans", "rot+trans", false], ["rotxy+transxy", "rotxy+transxy", false], ["translation", "translation", false], ["transxy", "transxy", false], ["progressive", "progressive", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "trjcat", "inputs": [{"model_class": "DataToolParameter", "name": "trj_input", "argument": null, "type": "data", "label": "Input trajectories", "help": "In XTC or TRR format, but please do not mix the two. Please note that the order of concatenation is the same as the consecutive order of these selected inputs.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["xtc", "trr"], "edam": {"edam_formats": ["format_2333", "format_2333"], "edam_data": ["data_0006", "data_0006"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "Repeat", "name": "inputtrajs", "type": "repeat", "title": "Select input trajectories", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "trj_input", "argument": null, "type": "data", "label": "Input trajectories", "help": "In XTC or TRR format, but please do not mix the two. Please note that the order of concatenation is the same as the consecutive order of these selected inputs.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["xtc", "trr"], "edam": {"edam_formats": ["format_2333", "format_2333"], "edam_data": ["data_0006", "data_0006"]}, "multiple": true, "min": null, "max": null, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "BooleanToolParameter", "name": "cat", "argument": null, "type": "boolean", "label": "Do not discard double time frames", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "-cat", "falsevalue": "-nocat"}, {"model_class": "HiddenToolParameter", "name": "sep", "argument": null, "type": "hidden", "label": "", "help": "", "refresh_on_change": false, "optional": false, "hidden": true, "is_dynamic": false, "value": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "trj_op", "argument": null, "type": "select", "label": "Modify a trajectory or concatenate multiple trajectories?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "trjconv", "options": [["Modify (trjconv)", "trjconv", false], ["Concatenate (trjcat)", "trjcat", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "SelectToolParameter", "name": "output_format", "argument": null, "type": "select", "label": "Output format", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "xtc", "options": [["XTC", "xtc", false], ["TRR", "trr", false], ["PDB", "pdb", false], ["GRO", "gro", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Section", "name": "time", "type": "section", "title": "Time", "help": null, "expanded": true, "inputs": [{"model_class": "IntegerToolParameter", "name": "b", "argument": null, "type": "integer", "label": "Start time", "help": "Time (ps) of first frame to read from trajectory", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "e", "argument": null, "type": "integer", "label": "End time", "help": "Time (ps) of last frame to read from trajectory", "refresh_on_change": false, "min": -1, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "-1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "dt", "argument": null, "type": "integer", "label": "Write frames at this time interval (ps)", "help": "Only write frame when t is exactly divisible by this value. Leave as 0 to record all frames.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "BooleanToolParameter", "name": "capture_log", "argument": null, "type": "boolean", "label": "Generate detailed log", "help": "Generate detailed log information that can be summarized with ParseLog.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}], "outputs": [{"model_class": "ToolOutputCollection", "name": "gro_frames", "format": null, "label": "Trajectory frames", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "gro", "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<designation>^output[0-9]{9}\\.gro$)", "sort_by": "filename"}]}}, {"model_class": "ToolOutputCollection", "name": "pdb_frames", "format": null, "label": "Trajectory frames", "hidden": false, "output_type": "collection", "default_format": "data", "default_format_source": null, "default_metadata_source": null, "inherit_format": false, "inherit_metadata": false, "structure": {"collection_type": "list", "collection_type_source": null, "collection_type_from_rules": null, "structured_like": null, "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": "pdb", "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "(?P<designation>^output[0-9]{9}\\.pdb$)", "sort_by": "filename"}]}}, {"model_class": "ToolOutput", "name": "output", "format": "xtc", "label": "", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2333", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "report", "format": "txt", "label": "GROMACS log file on ${on_string}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "verbose.txt", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "chemicaltoolbox", "panel_section_name": "ChemicalToolBox", "form_style": "regular"}