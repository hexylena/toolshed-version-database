{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/ecology/aquainfra_ogc_api_processes/aquainfra_ogc_api_processes/0.5.0", "name": "AquaINFRA OGC API Processes", "version": "0.5.0", "description": "", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "aquainfra_ogc_api_processes", "owner": "ecology", "changeset_revision": "5acff8859db2", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "conditional_process", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "points-att-polygon", "inputs": [{"model_class": "DataToolParameter", "name": "input_data", "argument": null, "type": "data", "label": "Table to be merged with study region", "help": "URL to the input table containing the in-situ data points with coordinates. Can be provided as Excel file or CSV file (comma-separated text file). The coordinates have to be in WGS84 coordinate system. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "regions", "argument": null, "type": "data", "label": "Study region or study subregions", "help": "URL to the study region, or several regions, to classify your input data into groups of interest. Currently it has to be provided as a shapefile. It can be in any coordinate system and will be transformed to WGS84 during this process. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "colname_long", "argument": null, "type": "text", "label": "Column name for longitude", "help": "Only needed for data other than geojson. Name of the column that contains longitude values (in WGS84).", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_lat", "argument": null, "type": "text", "label": "Column name for latiitude", "help": "Only needed for data other than geojson. Name of the column that contains latitude values (in WGS84).", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "peri-conv", "inputs": [{"model_class": "DataToolParameter", "name": "input_data", "argument": null, "type": "data", "label": "Table to be grouped by date, with date colum", "help": "URL to the table with a column containing a date. It can have other columns which will not be changed during this process. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "colname_date", "argument": null, "type": "text", "label": "Date column name", "help": "Column name of the date column in the format defined above. Example: 'visit_date'.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "date_format", "argument": null, "type": "select", "label": "Date format", "help": "The date format used to parse the date, i.e. to extract day, month and year from the date column, e.g.  or 'y-m-d' for dates like '1998-08-22' (this is the default) or 'y/m/d' for dates like '1998/08/22'.", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "options": [["y-m-d", "y-m-d", false], ["y/m/d", "y/m/d", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "group_to_periods", "argument": null, "type": "text", "label": "Periods to group the data into", "help": "Define the periods that you want the data to be grouped into. Please follow the example (which is also the default): 'Dec-01:Mar-01,Mar-02:May-30,Jun-01:Aug-30,Sep-01:Nov-30' (first three letters of each month, then a minus/hyphen, then the day (two digits), then comma, then the next period).", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "Dec-01:Mar-01,Mar-02:May-30,Jun-01:Aug-30,Sep-01:Nov-30", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "period_labels", "argument": null, "type": "text", "label": "Period labels", "help": "Define names for the periods defined above, separated by a comma. Example (which is also the default): 'winter,spring,summer,autumn'.", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "winter,spring,summer,autumn", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "year_starts_at_dec1", "argument": null, "type": "boolean", "label": "Include December into next year", "help": "Tell whether the years in your grouping starts at first of December ('true') or not ('false'). This has to be reflected in the period definitions, these should not contradict each other. Defaults to 'true'.", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "True", "falsevalue": "False"}]}, {"model_class": "ConditionalWhen", "value": "mean-by-group", "inputs": [{"model_class": "DataToolParameter", "name": "input_data", "argument": null, "type": "data", "label": "Input table", "help": "URL to the input table containing group identifier(s) and a value column. Groups are defined by one or more columns. Other columns present in the table will be removed in the process, retaining only those specified in cols_to_group_by and value_col. For example, use the result table from peri_conv. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "colnames_to_group_by", "argument": null, "type": "text", "label": "Column names identifying group", "help": "One or more column names identifying the group. A combination of all specified columns will be used to define unique groups for calculating the average value. Example: 'longitude, latitude, Year_adj_generated, group_labels, HELCOM_ID'. Another example: 'Year_adj_generated, group_labels, HELCOM_ID'.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_value", "argument": null, "type": "text", "label": "Column name for column containing values", "help": "The name of the column that contains the values for which the average will be calculated. Only one column name can be included. Examples: 'transparency_m', 'mean'", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "ts-selection-interpolation", "inputs": [{"model_class": "DataToolParameter", "name": "input_data", "argument": null, "type": "data", "label": "Input table", "help": "URL to the input table containing data for selection and interpolation. This table includes grouping variables (if applicable), the year (or other time identifier) and the value columns to be interpolated. For example, use the result from mean_by_group. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "colnames_relevant", "argument": null, "type": "text", "label": "Column names identifying group(s)", "help": "Column name(s) describing relevant values in the dataset. These columns are treated as grouping identifiers, and a combination of all specified columns will be used to define unique groups. For each group, a separate time series is analyzed and interpolated individually.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "missing_threshold_percentage", "argument": null, "type": "float", "label": "Threshold for missing values", "help": "Threshold for the allowed percentage of missing data points (NAs). For example, a value of 80 means series with more than 80% missing data will be removed. Example = '80'.", "help_format": "html", "refresh_on_change": false, "min": 0.0, "max": 100.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "80.0", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_year", "argument": null, "type": "text", "label": "Column name for time", "help": "The name of the column containing the year (or other time identifier, such as quarter, month, or day). Example = 'year'", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_value", "argument": null, "type": "text", "label": "Column name for values", "help": "The name of the column containing the values to be considered for interpolation.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_data_point", "argument": null, "type": "integer", "label": "Minimum number of data points required", "help": "The minimum number of data points required in a time series for it to be included in the interpolation process. Example = '10'.", "help_format": "html", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "10", "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "trend-analysis-mk", "inputs": [{"model_class": "DataToolParameter", "name": "input_data", "argument": null, "type": "data", "label": "Input table", "help": "URL to the input table containing the time series data. This table includes grouping identifiers (if applicable), columns for time (e.g., year, month) and values to be analyzed for trends. For example, use the result from ts_selection_interpolation. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "colnames_relevant", "argument": null, "type": "text", "label": "Column names identifying group(s)", "help": "Column name(s) identifying relevant groups in the dataset. These columns will be used to define unique groups for which separate trend analyses are performed.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_time", "argument": null, "type": "text", "label": "Column name for time", "help": "The name of the column containing the time variable (e.g., year, month) to be used in the trend analysis. Example = 'year'.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_value", "argument": null, "type": "text", "label": "Column name for values", "help": "The name of the column containing the values to be analyzed in the Man-Kendall trend test.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "barplot-trend-results", "inputs": [{"model_class": "DataToolParameter", "name": "input_data", "argument": null, "type": "data", "label": "Input table", "help": "URL to the input table containing statistical analysis results. The table must include columns for test values, p-values, and group identifiers. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "colname_id", "argument": null, "type": "text", "label": "Column name for identifier", "help": "The name of the column containing group or sample identifiers, e.g., polygon id. Example = 'polygon_id'", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_test_value", "argument": null, "type": "text", "label": "Column name for test value", "help": "The name of the column containing the test values (e.g., statistical coefficients) to be plotted on the Y-axis, e.g., Tau for Mann-Kendall test.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_p_value", "argument": null, "type": "text", "label": "Column name for p value", "help": "The name of the column containing p values, used to determine bar transparency. Example = 'p_value'", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "p_value_threshold", "argument": null, "type": "float", "label": "p value threshold for significance", "help": "The threshold for distinguishing significant from insignificant values. It adjusts the transparency of bars in the plot. Example = '0.05'", "help_format": "html", "refresh_on_change": false, "min": 0.01, "max": 0.1, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_group", "argument": null, "type": "text", "label": "Column name for subgroups", "help": "The name of the column that defines the subgroups or categories to be displayed on the X-axis, e.g., seasons for every polygon_id.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "map-trends-static", "inputs": [{"model_class": "DataToolParameter", "name": "regions", "argument": null, "type": "data", "label": "Study region or study subregions", "help": "URL to the study region, or several regions, used to classify the input data into groups of interest. Currently it has to be provided as a shapefile. It can be in any coordinate system and will be transformed to WGS84 during this process. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_data", "argument": null, "type": "data", "label": "Input table", "help": "URL to the input table containing statistical analysis results. The table must include columns for test values, p-values, and identifiers linking to study region. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "colname_id_trend", "argument": null, "type": "text", "label": "Column name of study region identifier", "help": "The name of the column containing identifiers for study regions, which must correspond to the identifiers in the shapefile (shp). Example = 'id'", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_region_id", "argument": null, "type": "text", "label": "Column name of study region identifier", "help": "The name of the column in the input data that contains identifiers for study regions, corresponding to the identifiers in the shapefile. Example = 'id'", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_group", "argument": null, "type": "text", "label": "Column name for subgroups", "help": "The name of the column that defines the subgroups or categories to be displayed on the X-axis, e.g., seasons for every polygon_id.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "p_value_threshold", "argument": null, "type": "float", "label": "p value threshold for significance", "help": "The threshold for distinguishing significant from insignificant values. It adjusts the transparency of bars in the plot. Default = 0.05", "help_format": "html", "refresh_on_change": false, "min": 0.01, "max": 0.1, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.05", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_p_value", "argument": null, "type": "text", "label": "Column name for p value", "help": "The name of the column containing p values, used to determine bar transparency. Example = 'p_value'", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "map-shapefile-points", "inputs": [{"model_class": "DataToolParameter", "name": "regions", "argument": null, "type": "data", "label": "Study region or study subregions", "help": "URL to the study region, or several regions, to classify the input data into groups of interest. Currently it has to be provided as a shapefile. It can be in any coordinate system and will be transformed to WGS84 during this process. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_data", "argument": null, "type": "data", "label": "Data table to be plotted on top of study regions", "help": "URL to the input table containing the in-situ data points with coordinates. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "TextToolParameter", "name": "colname_long", "argument": null, "type": "text", "label": "Column name for longitude", "help": "The name of the column containing longitude values for the data points.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_lat", "argument": null, "type": "text", "label": "Column name for latitude", "help": "The name of the column containing latitude values for the data points.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_value_name", "argument": null, "type": "text", "label": "Column name of data point identifier", "help": "The name of the column containing identifier (e.g., site name) or values (e.g., depth) to color the points according to their corresponding values.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "colname_region_id", "argument": null, "type": "text", "label": "Column name of region identifier", "help": "The name of the column containing identifiers (e.g., basin name) to distinguish the polygons on the map if multiple regions are present.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "owt-classification", "inputs": [{"model_class": "DataToolParameter", "name": "input_data_url", "argument": null, "type": "data", "label": "Input data", "help": "URL to your input file. Find example data on https://github.com/bishun945/pyOWT/tree/main/projects/AquaINFRA. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "input_option", "argument": null, "type": "select", "label": "Type of input", "help": "csv: for text data input (first line wavelength, following lines remote-sensing reflectance). sat: for satellite product input containing reflectance (e.g., Sentinel-3 OLCI Level-2)", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "csv", "options": [["csv", "csv", false], ["sat", "sat", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "sensor", "argument": null, "type": "select", "label": "Sensor name", "help": "Spectral band configuration of satellite mission (includes adaptation to sensor spectral response functions).", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "HYPER", "options": [["HYPER", "HYPER", false], ["AERONET_OC_1", "AERONET_OC_1", false], ["AERONET_OC_2", "AERONET_OC_2", false], ["CMEMS_BAL_HROC", "CMEMS_BAL_HROC", false], ["CMEMS_BAL_NRT", "CMEMS_BAL_NRT", false], ["CMEMS_MED_MYINT", "CMEMS_MED_MYINT", false], ["CZCS", "CZCS", false], ["GOCI", "GOCI", false], ["HawkEye", "HawkEye", false], ["MERIS", "MERIS", false], ["ODIS_Aqua", "ODIS_Aqua", false], ["MODIS_Terra", "MODIS_Terra", false], ["MSI_S2A", "MSI_S2A", false], ["MSI_S2B", "MSI_S2B", false], ["OCTS", "OCTS", false], ["OLCI_S3A", "OLCI_S3A", false], ["OLCI_S3B", "OLCI_S3B", false], ["OLI", "OLI", false], ["SeaWiFS", "SeaWiFS", false], ["VIIRS_JPSS1", "VIIRS_JPSS1", false], ["VIIRS_JPSS2", "VIIRS_JPSS2", false], ["VIIRS_SNPP", "VIIRS_SNPP", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "output_option", "argument": null, "type": "select", "label": "Output option", "help": "1: for standard output with five variables. 2: for extensive output including memberships of all water types.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["1", "1", false], ["2", "2", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "tordera-gloria", "inputs": [{"model_class": "DataToolParameter", "name": "TextInOut_URL", "argument": null, "type": "data", "label": "URL to project folder", "help": "To model a watershed other than the Tordera Basin, users can add a URL to their own zipped project folder. Important: Do not include the SWAT executable to that folder \u2014 AquaINFRA has integrated the executable version rev60.5.7_64rel_linux. Defaults to: https://raw.githubusercontent.com/AmandaBatlle/AquaINFRA_CaseUse_MedInlandModel/refs/heads/main/example_inputs/project.zip", "help_format": "html", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "par_cal", "argument": null, "type": "data", "label": "Parameter inputs", "help": "JSON file including the parameter value change as defined by SWATrunR documentation (https://chrisschuerz.github.io/SWATrunR/articles/SWATrunR.html#parameter-inputs). Defaults to: https://raw.githubusercontent.com/AmandaBatlle/AquaINFRA_CaseUse_MedInlandModel/refs/heads/main/example_inputs/par_cal.json", "help_format": "html", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "IntegerToolParameter", "name": "unit", "argument": null, "type": "integer", "label": "Output Spatial unit", "help": "Specify the spatial unit for which to generate output. This corresponds to the ID of a river reach, HRU (Hydrologic Response Unit), or LSU (Landscape Unit) as defined in the SWAT+ watershed delineation. The value can be entered as a single number (e.g., 1), a range (e.g., 1:10), or a list of values (e.g., (1, 3, 25, 40)). The default unit for the La Tordera SWAT+ model is 1.", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "file", "argument": null, "type": "text", "label": "SWAT Output File", "help": "A SWAT+ output file name consists of three elements separated by underscores (_): spatial unit, output category, and time step. For example, 'channel_sd_day'. The spatial unit defines the scale of the output and can be basin, hru, lsunit, channel, aquifer, or reservoir. The output category specifies the type of data such as wb (water balance), nb (nutrient balance), ls (losses), pw (plant and weather), or sd (streamflow and sediment in channels). The time step indicates the temporal resolution and can be day (daily), mon (monthly), yr (yearly), or aa (annual average). Combining these elements forms the output file name. For more details, refer to the SWAT+ OUTPUT FILES section in the SWAT+ documentation (https://swatplus.gitbook.io/io-docs). Defaults to: 'channel_sd_day'", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "variable", "argument": null, "type": "text", "label": "SWAT Variable", "help": "Variable to simulate. Example: 'flo_out'. For more details and extended capabilities, refer to the SWAT+ OUTPUT FILES section in the SWAT+ documentation (https://swatplus.gitbook.io/io-docs). For one variable, enter the variable name. For multiple variables, enter them separated by comma. Defaults to: 'flo_out,water_temp'", "help_format": "html", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "start_date", "argument": null, "type": "integer", "label": "Start Date", "help": "Start date of the simulation in the format yyyymmdd. Defaults to: 20160101. Earliest possible date for the default input project: 20000101.", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "start_date_print", "argument": null, "type": "integer", "label": "Start Date for printing", "help": "Start date for printing in the format yyyymmdd. Defaults to: 20190601. Earliest possible date for the default input project: 20020101. It is recommended to allow for at least two warm-up years between the model simulation start and the model output printing to ensure relevant results.", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "end_date", "argument": null, "type": "integer", "label": "End Date", "help": "End date of the simulation in the format yyyymmdd. Defaults to: 20201231. Latest possible date for the default input project: 20221231.", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}, {"model_class": "ConditionalWhen", "value": "tordera-gloria-connection", "inputs": [{"model_class": "DataToolParameter", "name": "swat_output_file", "argument": null, "type": "data", "label": "SWAT+ Variable Outputs Database", "help": "SQLite database (thread_1.sqlite) storing the simulated output values based on the defined time range and time step (daily, monthly, yearly, or annual average).", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "riverload", "inputs": [{"model_class": "DataToolParameter", "name": "input_toc_urls", "argument": null, "type": "data", "label": "Input Total Organic Carbon (TOC)", "help": "URL to in situ Total Organic Carbon (TOC) data (date, value). If the data is divided into parts, please provide several URLs separated by a comma. All URLs need to start with http(s). (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "DataToolParameter", "name": "input_discharge_urls", "argument": null, "type": "data", "label": "Input discharge", "help": "URL to the daily discharge data (date, value). If the data is divided into parts, please provide several URLs separated by a comma. All URLs need to start with http(s). (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}]}, {"model_class": "ConditionalWhen", "value": "mitgcm-resultplots", "inputs": [{"model_class": "DataToolParameter", "name": "netcdf_input_file", "argument": null, "type": "data", "label": "NetCDF input file", "help": "The NetCDF input file that should be plotted. It must comply to some specific properties with respect to variables. (URL must be stored in a .txt file)", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["txt"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "variable", "argument": null, "type": "select", "label": "Variable to be plotted", "help": "The variable that should be plotted. You can choose between 'T', 'S', 'U', 'V', 'Eta' and 'W'.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "T", "options": [["T", "T", false], ["S", "S", false], ["U", "U", false], ["V", "V", false], ["Eta", "Eta", false], ["W", "W", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "TextToolParameter", "name": "plot_time", "argument": null, "type": "text", "label": "Hour to be plotted", "help": "The time of day (hourly resolution) that should be plotted. Please specify it in this specific format: '20220703-12:00:00'. We assume that the hour is in the simulation period.", "help_format": "html", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "plot_depth", "argument": null, "type": "float", "label": "Depth to be plotted", "help": "The depth at which should be plotted. The plot will be at the closest vertical level to this depth. Please specify a negative value. We assume the depth is in the range of our depths.", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_var_for_color", "argument": null, "type": "float", "label": "Minimum value to be considered for color limit", "help": "This is a parameter controlling the color limits to display. Example (for salinity): 35. Leave empty to let the color limits be chosen automatically.", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_var_for_color", "argument": null, "type": "float", "label": "Maximum value to be considered for color limit", "help": "This is a parameter controlling the color limits to display. Example (for salinity): 38. Leave empty to let the color limits be chosen automatically.", "help_format": "html", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "select_process", "argument": null, "type": "select", "label": "Select process", "help": "", "help_format": "html", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "points-att-polygon", "options": [["points-att-polygon: Group points by region", "points-att-polygon", false], ["peri-conv: Group data to groups based on date", "peri-conv", false], ["mean-by-group: Return group average", "mean-by-group", false], ["ts-selection-interpolation: Select and Interpolate Time Series", "ts-selection-interpolation", false], ["trend-analysis-mk: Man-Kendall Trend Analysis on Time Series", "trend-analysis-mk", false], ["barplot-trend-results: Visualisation of statistical analysis results", "barplot-trend-results", false], ["map-trends-static: Spatial visualisation of regions and data points", "map-trends-static", false], ["map-shapefile-points: Spatial visualisation of regions and data points", "map-shapefile-points", false], ["owt-classification: OWT Classification", "owt-classification", false], ["tordera-gloria: SWAT+, Soil and Water Assessment Tool", "tordera-gloria", false], ["tordera-gloria-connection: SWAT+ output to MITgcm input connection tool", "tordera-gloria-connection", false], ["riverload: Compute River Load", "riverload", false], ["mitgcm-resultplots: Catalunya MITgcm Plotting Tool", "mitgcm-resultplots", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "output_data", "format": "txt", "label": "$select_process", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "gis_data_handling", "panel_section_name": "GIS Data Handling", "form_style": "regular"}