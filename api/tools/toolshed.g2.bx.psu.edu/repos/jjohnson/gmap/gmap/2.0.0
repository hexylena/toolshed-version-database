{"model_class": "Tool", "id": "testtoolshed.g2.bx.psu.edu/repos/jjohnson/gmap/gmap/3.0.1", "name": "GMAP", "version": "3.0.1", "description": "Genomic Mapping and Alignment Program for mRNA and EST sequences", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "gmap", "owner": "jjohnson", "changeset_revision": "4f358603ee12", "tool_shed": "testtoolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "DataToolParameter", "name": "input", "argument": null, "type": "data", "label": "Input Sequences", "help": "Select an mRNA or EST dataset to map", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta", "fastqsanger", "fastqillumina"], "edam": {"edam_formats": ["format_1929", "format_1932", "format_1931"], "edam_data": ["data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"hda": [], "hdca": []}}, {"model_class": "Repeat", "name": "inputs", "type": "repeat", "title": "addtional mRNA or EST dataset to map", "help": null, "default": 0, "min": 0, "max": "__Infinity__", "inputs": [{"model_class": "DataToolParameter", "name": "added_input", "argument": null, "type": "data", "label": "", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta", "fastqsanger", "fastqillumina"], "edam": {"edam_formats": ["format_1929", "format_1932", "format_1931"], "edam_data": ["data_2044", "data_2044", "data_2044"]}, "multiple": false, "options": {"hda": [], "hdca": []}}]}, {"model_class": "SelectToolParameter", "name": "quality_protocol", "argument": null, "type": "select", "label": "Protocol for input quality scores", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["No quality scores", "", false], ["Sanger quality scores", "sanger", false], ["Illumina quality scores", "illumina", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "refGenomeSource", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "indexed", "inputs": [{"model_class": "SelectToolParameter", "name": "gmapindex", "argument": null, "type": "select", "label": "Select a reference genome", "help": "if your genome of interest is not listed - contact Galaxy team", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "kmer", "argument": null, "type": "select", "label": "kmer size", "help": "Defaults to highest available kmer size", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "", "options": [["", "", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "gmapdb", "inputs": [{"model_class": "DataToolParameter", "name": "gmapdb", "argument": null, "type": "data", "label": "Select a gmapdb", "help": "A GMAP database built with GMAP Build", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gmapdb"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"hda": [], "hdca": []}}, {"model_class": "SelectToolParameter", "name": "kmer", "argument": null, "type": "select", "label": "kmer size", "help": "Defaults to highest available kmer size", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "ownFile", "argument": null, "type": "data", "label": "Select the reference genome", "help": "Fasta containing genomic DNA sequence", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"hda": [], "hdca": []}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "genomeSource", "argument": null, "type": "select", "label": "Map to a reference genome from your history or use a built-in index?", "help": "Built-ins were indexed using default options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "indexed", "options": [["Use a built-in index", "indexed", false], ["Use gmapdb from the history", "gmapdb", false], ["Use a fasta reference sequence from the history", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "computation", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "BooleanToolParameter", "name": "nosplicing", "argument": null, "type": "boolean", "label": "Turn off splicing", "help": "(useful for aligning genomic sequences onto a genome)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--nosplicing", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "min_intronlength", "argument": null, "type": "integer", "label": "Min length for one internal intron (default 9).", "help": "Below this size, a genomic gap will be considered a deletion rather than an intron.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "intronlength", "argument": null, "type": "integer", "label": "Max length for one intron (default 1000000)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "localsplicedist", "argument": null, "type": "integer", "label": "Max length for known splice sites at ends of sequence (default 200000)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "totallength", "argument": null, "type": "integer", "label": "Max total intron length (default 2400000)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "chimera_margin", "argument": null, "type": "integer", "label": "Amount of unaligned sequence that triggers search for a chimera", "help": " default is 40, To turn off, set to 0", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "direction", "argument": null, "type": "select", "label": "cDNA direction", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["auto", "auto", false], ["sense_force", "sense_force", false], ["antisense_force", "antisense_force", false], ["sense_filter", "sense_filter", false], ["antisense_filter", "antisense_filter", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "trimendexons", "argument": null, "type": "integer", "label": "Trim end exons with fewer than given number of matches (in nt, default 12)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "find_shifted_canonical", "argument": null, "type": "boolean", "label": "find-shifted-canonical Use a more sensitive search for canonical splicing", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--find-shifted-canonical-species", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "cross_species", "argument": null, "type": "boolean", "label": "Cross-species alignment", "help": "For cross-species alignments, use a more sensitive search for canonical splicing", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--cross-species", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "canonical", "argument": null, "type": "select", "label": "Reward for canonical and semi-canonical introns", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["high reward (default)", "1", false], ["low reward", "0", false], ["low reward for high-identity sequences", "2", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "allow_close_indels", "argument": null, "type": "select", "label": "Allow an insertion and deletion close to each other", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "options": [["yes (default)", "1", true], ["no", "0", false], ["only for high-quality alignments", "2", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "FloatToolParameter", "name": "microexon_spliceprob", "argument": null, "type": "float", "label": "Micro Exon splice probablility threshold", "help": "Allow microexons only if one of the splice site probabilities is greater than this value (default 0.90)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "prunelevel", "argument": null, "type": "select", "label": "Pruning level", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "options": [["no pruning (default)", "0", false], ["poor sequences", "1", false], ["repetitive sequences", "2", false], ["poor and repetitive sequences", "3", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "options", "argument": null, "type": "select", "label": "Computational Settings", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["Use default settings", "default", false], ["Set Computation Options", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "advanced", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "used", "inputs": [{"model_class": "BooleanToolParameter", "name": "nolengths", "argument": null, "type": "boolean", "label": "No intron lengths in alignment", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--nolengths=true", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "invertmode", "argument": null, "type": "select", "label": " Mode for alignments to genomic (-) strand", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["Don't invert the cDNA (default)", "", false], ["Invert cDNA and print genomic (-) strand", "--invertmode=1", false], ["Invert cDNA and print genomic (+) strand", "--invertmode=2", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "introngap", "argument": null, "type": "integer", "label": "Nucleotides to show on each end of intron (default=3)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "wraplength", "argument": null, "type": "integer", "label": "Line Wrap length for alignment (default=50)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "npaths", "argument": null, "type": "integer", "label": "Maximum number of paths to show.  Ignored if negative.  If 0, prints two paths if chimera detected, else one.", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "suboptimal_score", "argument": null, "type": "integer", "label": "Report only paths whose score is within this value of the best path", "help": "By default the program prints all paths found.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "chimera_overlap", "argument": null, "type": "integer", "label": "Overlap to show, if any, at chimera breakpoint (default 0)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "tolerant", "argument": null, "type": "boolean", "label": "Translates cDNA with corrections for frameshifts", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--tolerant=true", "falsevalue": ""}, {"model_class": "SelectToolParameter", "name": "protein", "argument": null, "type": "select", "label": "Protein alignment", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["default", "", false], ["Assume full-length protein, starting with Met", "--fulllength=true", false], ["Truncate alignment around full-length protein, Met to Stop", "--truncate=true", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "options", "argument": null, "type": "select", "label": "Advanced Settings", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["Use default settings", "default", false], ["Set Options", "used", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "result", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "gmap", "inputs": []}, {"model_class": "ConditionalWhen", "value": "summary", "inputs": []}, {"model_class": "ConditionalWhen", "value": "align", "inputs": []}, {"model_class": "ConditionalWhen", "value": "continuous", "inputs": []}, {"model_class": "ConditionalWhen", "value": "continuous-by-exon", "inputs": []}, {"model_class": "ConditionalWhen", "value": "compress", "inputs": []}, {"model_class": "ConditionalWhen", "value": "exons_dna", "inputs": []}, {"model_class": "ConditionalWhen", "value": "exons_gen", "inputs": []}, {"model_class": "ConditionalWhen", "value": "protein_dna", "inputs": []}, {"model_class": "ConditionalWhen", "value": "protein_gen", "inputs": []}, {"model_class": "ConditionalWhen", "value": "psl", "inputs": []}, {"model_class": "ConditionalWhen", "value": "gff3_gene", "inputs": []}, {"model_class": "ConditionalWhen", "value": "gff3_match_cdna", "inputs": []}, {"model_class": "ConditionalWhen", "value": "gff3_match_est", "inputs": []}, {"model_class": "ConditionalWhen", "value": "splicesites", "inputs": []}, {"model_class": "ConditionalWhen", "value": "introns", "inputs": []}, {"model_class": "ConditionalWhen", "value": "map_exons", "inputs": []}, {"model_class": "ConditionalWhen", "value": "map_ranges", "inputs": []}, {"model_class": "ConditionalWhen", "value": "coords", "inputs": []}, {"model_class": "ConditionalWhen", "value": "sam", "inputs": [{"model_class": "BooleanToolParameter", "name": "sam_paired_read", "argument": null, "type": "boolean", "label": "SAM paired reads", "help": "The sampe option will generate SAM flags to indicate whether the read is the first or second end of a pair", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "sampe", "falsevalue": "samse"}, {"model_class": "BooleanToolParameter", "name": "no_sam_headers", "argument": null, "type": "boolean", "label": "Do not print SAM headers (lines beginning with '@')", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--no-sam-headers", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "read_group_id", "argument": null, "type": "text", "label": "Value to put into read-group id (RG-ID) field", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "read_group_name", "argument": null, "type": "text", "label": "Value to put into read-group name (RG-SM) field", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "read_group_library", "argument": null, "type": "text", "label": "Value to put into read-group library (RG-LB) field", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "read_group_platform", "argument": null, "type": "text", "label": "Value to put into read-group library platform (RG-PL) field", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "sam_use_0M", "argument": null, "type": "boolean", "label": "Insert 0M in CIGAR between adjacent insertions and deletions", "help": "Required by Picard, but can cause errors in other tools", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--sam-use-0M", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "force_xs_dir", "argument": null, "type": "boolean", "label": "Force direction (disallow XS:A:?)", "help": "For RNA-Seq alignments, disallows XS:A:? when the sense direction is unclear, and replaces this value arbitrarily with XS:A:+. May be useful for some programs, such as Cufflinks, that cannot handle XS:A:?.  However, if you use this flag, the reported value of XS:A:+ in these cases will not be meaningful.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--force-xs-dir", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "md_lowercase_snp", "argument": null, "type": "boolean", "label": "MD lowercase SNP", "help": "In MD string, when known SNPs are given by the -v flag, prints difference nucleotides as lower-case when they, differ from reference but match a known alternate allele", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--md-lowercase-snp", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "format", "argument": null, "type": "select", "label": "Output", "help": "Select the output format", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "sam", "options": [["GMAP default output", "gmap", false], ["Summary of alignments", "summary", false], ["Alignment", "align", false], ["Alignment in three continuous lines", "continuous", false], ["Alignment in three lines per exon", "continuous-by-exon", false], ["Print output in compressed format", "compress", false], ["Print exons cDNA", "exons_dna", false], ["Print exons genomic", "exons_gen", false], ["Print protein sequence (cDNA)", "protein_dna", false], ["Print protein sequence (genomic)", "protein_gen", false], ["PSL (BLAT) format", "psl", false], ["GFF3 gene format", "gff3_gene", false], ["GFF3 match cDNA format", "gff3_match_cdna", false], ["GFF3 match EST format", "gff3_match_est", false], ["splicesites output (for GSNAP)", "splicesites", false], ["introns output (for GSNAP)", "introns", false], ["IIT FASTA exon map format", "map_exons", false], ["IIT FASTA map format", "map_ranges", false], ["coords in table format", "coords", false], ["SAM format", "sam", true]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "split_output", "argument": null, "type": "boolean", "label": "Separate outputs for nomapping, uniq, mult, and chimera", "help": "(chimera only when chimera-margin is selected)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--split-output=gmap_out", "falsevalue": ""}], "outputs": [{"model_class": "ToolOutput", "name": "gmap_stderr", "format": "txt", "label": "${tool.name} on ${on_string}: stderr", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "output", "format": "txt", "label": "${tool.name} on ${on_string} ${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "uniq", "format": "txt", "label": "${tool.name} on ${on_string} uniq.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gmap_out.uniq", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "transloc", "format": "txt", "label": "${tool.name} on ${on_string} transloc.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gmap_out.transloc", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "nomapping", "format": "txt", "label": "${tool.name} on ${on_string} nomapping.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gmap_out.nomapping", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "mult", "format": "txt", "label": "${tool.name} on ${on_string} mult.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gmap_out.mult", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "ngs_mapping", "panel_section_name": "NGS:Mapping", "form_style": "regular"}