{"model_class": "Tool", "id": "testtoolshed.g2.bx.psu.edu/repos/jjohnson/gmap/gsnap/3.0.1", "name": "GSNAP", "version": "3.0.1", "description": "Genomic Short-read Nucleotide Alignment Program", "labels": [], "edam_operations": [], "edam_topics": [], "hidden": "", "is_workflow_compatible": true, "xrefs": [], "tool_shed_repository": {"name": "gmap", "owner": "jjohnson", "changeset_revision": "4f358603ee12", "tool_shed": "testtoolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "Conditional", "name": "seq", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "fastq", "inputs": [{"model_class": "DataToolParameter", "name": "fastq", "argument": null, "type": "data", "label": "Select a fastq dataset", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq"], "edam": {"edam_formats": ["format_1930"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"hda": [], "hdca": []}}, {"model_class": "Conditional", "name": "paired", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": []}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "DataToolParameter", "name": "fastq", "argument": null, "type": "data", "label": "Select the paired reads reverse dataset", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fastq"], "edam": {"edam_formats": ["format_1930"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"hda": [], "hdca": []}}, {"model_class": "SelectToolParameter", "name": "orientation", "argument": null, "type": "select", "label": "Orientation of paired-end reads", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "FR", "options": [["fwd-rev, typical Illumina default", "FR", false], ["rev-fwd, for circularized inserts", "RF", false], ["fwd-fwd, same strand", "FF", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "pairmax_dna", "argument": null, "type": "integer", "label": "Max total genomic length for DNA-Seq paired reads, or other reads without splicing (default 1000).", "help": "Used if no splice file is provided and novelsplicing is off.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "pairmax_rna", "argument": null, "type": "integer", "label": "Max total genomic length for RNA-Seq paired reads, or other reads that could have a splice (default 200000).", "help": "Used when novel splicing is specified or a splice file is provided.  Should probably match the value for localsplicedist.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "pairexpect", "argument": null, "type": "integer", "label": "Expected paired-end length", "help": "Used for calling splices in medial part of paired-end reads (default 200)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "pairdev", "argument": null, "type": "integer", "label": "Allowable deviation from expected paired-end length", "help": "Used for calling splices in medial part of paired-end reads (default 25)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "BooleanToolParameter", "name": "ispaired", "argument": null, "type": "boolean", "label": "Use Paired Reads?", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "yes", "falsevalue": "no"}}, {"model_class": "IntegerToolParameter", "name": "barcode_length", "argument": null, "type": "integer", "label": "Amount of barcode to remove from start of read (default 0)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "fastq_id_start", "argument": null, "type": "integer", "label": "Starting field  of identifier in FASTQ header, whitespace-delimited, starting from 1", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "fastq_id_end", "argument": null, "type": "integer", "label": "Ending field  of identifier in FASTQ header, whitespace-delimited, starting from 1", "help": "Examples:                   <br>@HWUSI-EAS100R:6:73:941:1973#0/1                   <br> . start=1, end=1 (default)  => identifier is HWUSI-EAS100R:6:73:941:1973#0/1                   <br>@SRR001666.1 071112_SLXA-EAS1_s_7:5:1:817:345 length=36                   <br> . start=1, end=1  => identifier is SRR001666.1                   <br> . start=2, end=2  => identifier is 071112_SLXA-EAS1_s_7:5:1:817:345                   <br> . start=1, end=2  => identifier is SRR001666.1 071112_SLXA-EAS1_s_7:5:1:817:345", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "filter_chastity", "argument": null, "type": "select", "label": "Skip reads marked by the Illumina chastity program", "help": "String after the accession having a  'Y'  after the first colon, like this:                     <br>@accession 1:Y:0:CTTGTA                     <br>where the  'Y'  signifies filtering by chastity.                     <br> For 'either', a  'Y'  on either end of a paired-end read will be filtered.                     <br>  For 'both', a  'Y'  is required on both ends of a paired-end read (or on the only end of a single-end read)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "off", "options": [["off - no filtering", "off", false], ["either - a 'Y' on either end of a paired-end read", "either", false], ["both - a 'Y' is required on both ends of a paired-end read or the only end of a single-end read", "both", false]], "display": null, "multiple": false, "textable": false}]}, {"model_class": "ConditionalWhen", "value": "gsnap_fasta", "inputs": [{"model_class": "DataToolParameter", "name": "gsnap", "argument": null, "type": "data", "label": "Select a single-end dataset", "help": "GSNAP fasta must have the sequence entirely on one line, a second line is interpreted as the paired-end sequence", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"hda": [], "hdca": []}}, {"model_class": "BooleanToolParameter", "name": "circularinput", "argument": null, "type": "boolean", "label": "Circular-end data (paired reads are on same strand)", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--circular-input=true", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "format", "argument": null, "type": "select", "label": "<H2>Input Sequences</H2>Select the input format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "fastq", "options": [["Fastq", "fastq", false], ["GNSAP fasta", "gsnap_fasta", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "refGenomeSource", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "indexed", "inputs": [{"model_class": "SelectToolParameter", "name": "gmapindex", "argument": null, "type": "select", "label": "Select a reference genome", "help": "if your genome of interest is not listed - contact Galaxy team", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "kmer", "argument": null, "type": "select", "label": "kmer size", "help": "Defaults to highest available kmer size", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "", "options": [["", "", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "mode", "argument": null, "type": "select", "label": "Alignment mode", "help": "Assumes cmetindex and atoiindex were run on the gmap datatbase.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["standard", "", false], ["cmet-stranded   for bisulfite-treated DNA reads (tolerance to C-to-T changes)", "cmet-stranded", false], ["cmet-nonstranded   for bisulfite-treated DNA reads (tolerance to C-to-T changes)", "cmet-nonstranded", false], ["atoi-stranded   for RNA-editing tolerance (A-to-G changes)", "atoi-stranded", false], ["atoi-nonstranded   for RNA-editing tolerance (A-to-G changes)", "atoi-nonstranded", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "use_splicing", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "splicemap", "argument": null, "type": "data", "label": "Select a splicesite map", "help": "built with GMAP IIT", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["splicesites.iit", "introns.iit"], "edam": {"edam_formats": ["format_2330", "format_2330"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"hda": [], "hdca": []}}]}, {"model_class": "ConditionalWhen", "value": "gmapdb", "inputs": [{"model_class": "SelectToolParameter", "name": "splicemap", "argument": null, "type": "select", "label": "Use map for splicing involving known sites or known introns", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "", "options": [["", "", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "src", "argument": null, "type": "select", "label": "<HR>Known Splicesite and Introns", "help": "Look for splicing involving known sites or known introns at short or long distances                   See README instructions for the distinction between known sites and known introns", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["None", "none", true], ["From the GMAP Database", "gmapdb", false], ["A Map in your history", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "use_snps", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "snpindex", "argument": null, "type": "data", "label": "Select a snpindex", "help": "built with GMAP SNP Index", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gmapsnpindex"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"hda": [], "hdca": []}}]}, {"model_class": "ConditionalWhen", "value": "gmapdb", "inputs": [{"model_class": "SelectToolParameter", "name": "snpindex", "argument": null, "type": "select", "label": "Use database containing known SNPs", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": "", "options": [["", "", false]], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "src", "argument": null, "type": "select", "label": "<HR>Known SNPs", "help": "for SNP tolerant alignments", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["None", "none", true], ["From the GMAP Database", "gmapdb", false], ["A SNP Index in your history", "history", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "gmapdb", "inputs": [{"model_class": "DataToolParameter", "name": "gmapdb", "argument": null, "type": "data", "label": "Select a gmapdb", "help": "A GMAP database built with GMAP Build", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gmapdb"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"hda": [], "hdca": []}}, {"model_class": "SelectToolParameter", "name": "kmer", "argument": null, "type": "select", "label": "kmer size", "help": "Defaults to highest available kmer size", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}, {"model_class": "SelectToolParameter", "name": "mode", "argument": null, "type": "select", "label": "Alignment mode", "help": "Assumes cmetindex and atoiindex were run on the gmap datatbase.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "", "options": [["standard", "", false], ["cmet-stranded   for bisulfite-treated DNA reads (tolerance to C-to-T changes)", "cmet-stranded", false], ["cmet-nonstranded   for bisulfite-treated DNA reads (tolerance to C-to-T changes)", "cmet-nonstranded", false], ["atoi-stranded   for RNA-editing tolerance (A-to-G changes)", "atoi-stranded", false], ["atoi-nonstranded   for RNA-editing tolerance (A-to-G changes)", "atoi-nonstranded", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "use_splicing", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "splicemap", "argument": null, "type": "data", "label": "Select a splicesite map", "help": "built with GMAP IIT", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["splicesites.iit", "introns.iit"], "edam": {"edam_formats": ["format_2330", "format_2330"], "edam_data": ["data_0006", "data_0006"]}, "multiple": false, "options": {"hda": [], "hdca": []}}, {"model_class": "BooleanToolParameter", "name": "ambig_splice_noclip", "argument": null, "type": "boolean", "label": "Do not clip at ambiguous splice sites", "help": "For ambiguous known splicing at ends of the read, do not clip at the splice site, but extend instead into the intron.                     This flag makes sense only if you are trying to eliminate all soft clipping with --trim-mismatch-score=0", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--ambig-splice-noclip", "falsevalue": ""}]}, {"model_class": "ConditionalWhen", "value": "gmapdb", "inputs": [{"model_class": "SelectToolParameter", "name": "splicemap", "argument": null, "type": "select", "label": "Use map for splicing involving known sites or known introns", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "ambig_splice_noclip", "argument": null, "type": "boolean", "label": "Do not clip at ambiguous splice sites", "help": "For ambiguous known splicing at ends of the read, do not clip at the splice site, but extend instead into the intron.                     This flag makes sense only if you are trying to eliminate all soft clipping with --trim-mismatch-score=0", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--ambig-splice-noclip", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "src", "argument": null, "type": "select", "label": "<HR>Known Splicesite and Introns", "help": "Look for splicing involving known sites or known introns at short or long distances                   See README instructions for the distinction between known sites and known introns", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["None", "none", true], ["From the GMAP Database", "gmapdb", false], ["A Map in your history", "history", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "use_snps", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "none", "inputs": []}, {"model_class": "ConditionalWhen", "value": "history", "inputs": [{"model_class": "DataToolParameter", "name": "snpindex", "argument": null, "type": "data", "label": "Select a snpindex", "help": "built with GMAP SNP Index", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["gmapsnpindex"], "edam": {"edam_formats": ["format_2330"], "edam_data": ["data_0006"]}, "multiple": false, "options": {"hda": [], "hdca": []}}]}, {"model_class": "ConditionalWhen", "value": "gmapdb", "inputs": [{"model_class": "SelectToolParameter", "name": "snpindex", "argument": null, "type": "select", "label": "Use database containing known SNPs", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}]}], "test_param": {"model_class": "SelectToolParameter", "name": "src", "argument": null, "type": "select", "label": "<HR>Known SNPs", "help": "for SNP tolerant alignments", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "none", "options": [["None", "none", true], ["From the GMAP Database", "gmapdb", false], ["A SNP Index in your history", "history", false]], "display": null, "multiple": false, "textable": false}}]}], "test_param": {"model_class": "SelectToolParameter", "name": "genomeSource", "argument": null, "type": "select", "label": "<HR><H2>Align To</H2>Will you select a reference genome from your history or use a built-in index?", "help": "Built-ins were indexed using default options", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "indexed", "options": [["Use a built-in index", "indexed", false], ["Use a gmapdb from your history", "gmapdb", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "computation", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "FloatToolParameter", "name": "max_mismatches", "argument": null, "type": "float", "label": "Maximum number of mismatches allowed (uses default when negative)", "help": "Maximum number of mismatches allowed (if not specified, then                     defaults to the ultrafast level of ((readlength+index_interval-1)/kmer - 2))                     (By default, the genome index interval is 3, but this can be changed                     by providing a different value for -q to gmap_build when processing the genome.)       If specified between 0.0 and 1.0, then treated as a fraction                     of each read length.  Otherwise, treated as an integral number                     of mismatches (including indel and splicing penalties)                     For RNA-Seq, you may need to increase this value slightly                     to align reads extending past the ends of an exon.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "query_unk_mismatch", "argument": null, "type": "boolean", "label": "Count unknown (N) characters in the query as a mismatch", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--query-unk-mismatch=1", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "genome_unk_mismatch", "argument": null, "type": "boolean", "label": "Count unknown (N) characters in the genome as a mismatch", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "true", "truevalue": "", "falsevalue": "--genome-unk-mismatch=0"}, {"model_class": "IntegerToolParameter", "name": "maxsearch", "argument": null, "type": "integer", "label": "Maximum number of alignments to find (default 1000)", "help": "Must be larger than paths, which is the number to report.                       Keeping this number large will allow for random selection among multiple alignments.                       Reducing this number can speed up the program. ", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "terminal_threshold", "argument": null, "type": "integer", "label": "Threshold for searching for a terminal alignment", "help": "Threshold for searching for a terminal alignment (from one end of the                                    read to the best possible position at the other end) (default 2                                    for standard, atoi-stranded, and atoi-nonstranded mode; default 100                                    for cmet-stranded and cmet-nonstranded mode).                                    For example, if this value is 2, then if GSNAP finds an exact or                                    1-mismatch alignment, it will not try to find a terminal alignment.                                    Note that this default value may not be low enough if you want to                                    obtain terminal alignments for very short reads, although such reads                                    probably don't have enough specificity for terminal alignments anyway.                                    To turn off terminal alignments, set this to a high value, greater                                    than the value for max-mismatches.                                    ", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "indel_penalty", "argument": null, "type": "integer", "label": "Penalty for an indel (default 2)", "help": "Counts against mismatches allowed.  To find indels, make indel-penalty less than or equal to max-mismatches.  A value < 2 can lead to false positives at read ends", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "indel_endlength", "argument": null, "type": "integer", "label": "Minimum length at end required for indel alignments (default 4)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_middle_insertions", "argument": null, "type": "integer", "label": "Maximum number of middle insertions allowed (default 9)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_middle_deletions", "argument": null, "type": "integer", "label": "Maximum number of middle deletions allowed (default 30)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_end_insertions", "argument": null, "type": "integer", "label": "Maximum number of end insertions allowed (default 3)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_end_deletions", "argument": null, "type": "integer", "label": "Maximum number of end deletions allowed (default 6)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "suboptimal_levels", "argument": null, "type": "integer", "label": "Report suboptimal hits beyond best hit (default 0)", "help": "All hits with best score plus suboptimal-levels are reported", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "SelectToolParameter", "name": "adapter_strip", "argument": null, "type": "select", "label": "Method for removing adapters from reads", "help": "Default is 'off'.  To turn on, specify 'paired', which removes adapters                                    from paired-end reads if they appear to be present.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "off", "options": [["paired", "paired", false], ["off", "off", true]], "display": null, "multiple": false, "textable": false}, {"model_class": "IntegerToolParameter", "name": "trim_mismatch_score", "argument": null, "type": "integer", "label": "Score to use for mismatches when trimming at ends (default is -3)", "help": "to turn off trimming, specify 0 (Warning: turning trimming off will give false positive mismatches at the ends of reads)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "trim_indel_score", "argument": null, "type": "integer", "label": "Score to use for indels when trimming at ends (default is -4)", "help": "to turn off trimming, specify 0 (Warning: turning trimming off will give false positive indels at the ends of reads)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "DataToolParameter", "name": "use_tally", "argument": null, "type": "data", "label": "Select a tally IIT file to resolve concordant multiple results", "help": "generated by gsnap_tally and iit_store", "refresh_on_change": true, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["tally.iit"], "edam": {"edam_formats": [null], "edam_data": [null]}, "multiple": false, "options": {"hda": [], "hdca": []}}, {"model_class": "SelectToolParameter", "name": "gmap_mode", "argument": null, "type": "select", "label": "Cases to use GMAP for complex alignments containing multiple splices or indels", "help": "Default: pairsearch,terminal,improve", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": ["pairsearch", "indel_knownsplice", "terminal", "improve"], "options": [["pairsearch", "pairsearch", true], ["indel_knownsplice", "indel_knownsplice", true], ["terminal", "terminal", true], ["improve", "improve", true]], "display": "checkboxes", "multiple": true, "textable": false}, {"model_class": "IntegerToolParameter", "name": "trigger_score_for_gmap", "argument": null, "type": "integer", "label": "GMAP pairsearch threshold (default 5)", "help": "Try GMAP pairsearch on nearby genomic regions if best score (the total of both ends if paired-end) exceeds this value (default 5)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_gmap_pairsearch", "argument": null, "type": "integer", "label": "GMAP pairsearch threshold (default 3)", "help": "Perform GMAP pairsearch on nearby genomic regions up to this many candidate ends (default 3).", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_gmap_terminal", "argument": null, "type": "integer", "label": "GMAP terminal threshold (default 3)", "help": "Perform GMAP terminal on nearby genomic regions up to this many candidate ends (default 3).", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_gmap_improvement", "argument": null, "type": "integer", "label": "GMAP improvement threshold (default 3)", "help": "Perform GMAP improvement on nearby genomic regions up to this many candidate ends (default 3).", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "microexon_spliceprob", "argument": null, "type": "float", "label": "GMAP microexons threshold (default .90)", "help": "Allow microexons only if one of the splice site probabilities is greater than this value.", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "options", "argument": null, "type": "select", "label": "<HR>Computational Settings", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["Use default settings", "default", false], ["Set Computation Options", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "splicing", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "BooleanToolParameter", "name": "novelsplicing", "argument": null, "type": "boolean", "label": "Look for novel splicing ", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--novelsplicing=1", "falsevalue": ""}, {"model_class": "IntegerToolParameter", "name": "localsplicedist", "argument": null, "type": "integer", "label": "Definition of local novel splicing event (default 200000)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "local_splice_penalty", "argument": null, "type": "integer", "label": "Penalty for a local splice (default 0).  Counts against mismatches allowed", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "distant_splice_penalty", "argument": null, "type": "integer", "label": "Penalty for a distant splice (default 3).  Counts against mismatches allowed", "help": "A distant splice is one where the intron length exceeds the value of localsplicedist or is an                      inversion, scramble, or translocation between two different chromosomes. Counts against mismatches allowed", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "distant_splice_endlength", "argument": null, "type": "integer", "label": "Minimum length at end required for distant spliced alignments", "help": "(default 16, min is the kmer length)", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "shortend_splice_endlength", "argument": null, "type": "integer", "label": "Minimum length at end required for short-end spliced alignments", "help": "(default 2, but unless known splice sites are provided,  GSNAP may still need the end length to be the value of kmer size to find a given splice", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "distant_splice_identity", "argument": null, "type": "float", "label": "Minimum identity at end required for distant spliced alignments (default 0.95)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "antistranded_penalty", "argument": null, "type": "integer", "label": "Penalty for antistranded splicing when using stranded RNA-Seq protocols", "help": "A positive value, such as 1, expects antisense on the first read and sense on the second read.                       Default is 0, which treats sense and antisense equally well", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "options", "argument": null, "type": "select", "label": "<HR>Splicing options for RNA-Seq", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["Use default settings", "default", false], ["Set Splicing Options", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "output", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "advanced", "inputs": [{"model_class": "IntegerToolParameter", "name": "npath", "argument": null, "type": "integer", "label": "Maximum number of paths to print (default 100)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}, {"model_class": "BooleanToolParameter", "name": "quiet_if_excessive", "argument": null, "type": "boolean", "label": "Quiet if Excessive", "help": "If more than maximum number of paths are found, then nothing is printed.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--quiet-if-excessive", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "show_refdiff", "argument": null, "type": "boolean", "label": "Show SNP-tolerant alignment", "help": "For GSNAP output in SNP-tolerant alignment, shows all differences relative to the reference genome as lower case (otherwise, it shows all differences relative to both the reference and alternate genome)", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--show-refdiff", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "clip_overlap", "argument": null, "type": "boolean", "label": "Clip Overlap", "help": "For paired-end reads whose alignments overlap, clip the overlapping region.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--clip-overlap", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "options", "argument": null, "type": "select", "label": "<HR><H2>Output</H2>Output options for RNA-Seq", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["Use default settings", "default", false], ["Set Output Options", "advanced", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "result", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "gsnap", "inputs": []}, {"model_class": "ConditionalWhen", "value": "sam", "inputs": [{"model_class": "BooleanToolParameter", "name": "no_sam_headers", "argument": null, "type": "boolean", "label": "Do not print headers beginning with '@'", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--no-sam-headers", "falsevalue": ""}, {"model_class": "TextToolParameter", "name": "read_group_id", "argument": null, "type": "text", "label": "Value to put into read-group id (RG-ID) field", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "read_group_name", "argument": null, "type": "text", "label": "Value to put into read-group name (RG-SM) field", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "read_group_library", "argument": null, "type": "text", "label": "Value to put into read-group library (RG-LB) field", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "TextToolParameter", "name": "read_group_platform", "argument": null, "type": "text", "label": "Value to put into read-group library platform (RG-PL) field", "help": "", "refresh_on_change": false, "optional": true, "hidden": false, "is_dynamic": false, "value": "", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "quality_shift", "argument": null, "type": "integer", "label": "Shift FASTQ quality scores by this amount in SAM output (default -31)", "help": "", "refresh_on_change": false, "min": null, "max": null, "optional": true, "hidden": false, "is_dynamic": false, "value": null, "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "format", "argument": null, "type": "select", "label": "Select the output format", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "sam", "options": [["SAM", "sam", false], ["GSNAP default output", "gsnap", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Conditional", "name": "results", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "no", "inputs": [{"model_class": "Conditional", "name": "fails", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "nofails", "inputs": []}, {"model_class": "ConditionalWhen", "value": "failsonly", "inputs": [{"model_class": "BooleanToolParameter", "name": "fails_as_input", "argument": null, "type": "boolean", "label": "Print completely failed alignments as input FASTA or FASTQ format", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--fails-as-input", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "choice", "argument": null, "type": "select", "label": "How to deal with fails", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["default - include them in results", "default", false], ["nofails - exclude fails from results", "nofails", false], ["failsonly - only output failing results", "failsonly", false]], "display": null, "multiple": false, "textable": false}}]}, {"model_class": "ConditionalWhen", "value": "yes", "inputs": [{"model_class": "Conditional", "name": "fails", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "default", "inputs": []}, {"model_class": "ConditionalWhen", "value": "nofails", "inputs": []}, {"model_class": "ConditionalWhen", "value": "failsonly", "inputs": []}], "test_param": {"model_class": "SelectToolParameter", "name": "choice", "argument": null, "type": "select", "label": "How to deal with fails", "help": "", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "default", "options": [["default - include them in results", "default", false], ["nofails - exclude fails from results", "nofails", false], ["failsonly - only output failing results", "failsonly", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "BooleanToolParameter", "name": "fails_as_input", "argument": null, "type": "boolean", "label": "Print completely failed alignments as input FASTA or FASTQ format", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "false", "truevalue": "--fails-as-input", "falsevalue": ""}]}], "test_param": {"model_class": "SelectToolParameter", "name": "split_output", "argument": null, "type": "select", "label": "<HR>Split outputs", "help": "Separate outputs for: nomapping, halfmapping_uniq, halfmapping_mult, unpaired_uniq, unpaired_mult, paired_uniq, paired_mult, concordant_uniq, and concordant_mult results", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "no", "options": [["no", "no", false], ["yes", "yes", false]], "display": null, "multiple": false, "textable": false}}], "outputs": [{"model_class": "ToolOutput", "name": "gsnap_stderr", "format": "txt", "label": "${tool.name} on ${on_string}: gsnap.log", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "gsnap_out", "format": "txt", "label": "${tool.name} on ${on_string} ${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "gsnap_fq", "format": "fastq", "label": "${tool.name} on ${on_string} fails.fq", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": null, "edam_format": "format_1930", "edam_data": "data_2044", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "unpaired_mult", "format": "txt", "label": "${tool.name} on ${on_string} unpaired_mult.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.unpaired_mult", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "unpaired_uniq", "format": "txt", "label": "${tool.name} on ${on_string} unpaired_uniq.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.unpaired_uniq", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "unpaired_transloc", "format": "txt", "label": "${tool.name} on ${on_string} unpaired_transloc.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.unpaired_transloc", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "halfmapping_mult", "format": "txt", "label": "${tool.name} on ${on_string} halfmapping_mult.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.halfmapping_mult", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "halfmapping_uniq", "format": "txt", "label": "${tool.name} on ${on_string} halfmapping_uniq.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.halfmapping_uniq", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "halfmapping_transloc", "format": "txt", "label": "${tool.name} on ${on_string} halfmapping_transloc.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.halfmapping_transloc", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "paired_mult", "format": "txt", "label": "${tool.name} on ${on_string} paired_mult.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.paired_mult", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "paired_uniq", "format": "txt", "label": "${tool.name} on ${on_string} paired_uniq.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.paired_uniq", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "paired_transloc", "format": "txt", "label": "${tool.name} on ${on_string} paired_transloc.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.paired_transloc", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "concordant_mult", "format": "txt", "label": "${tool.name} on ${on_string} concordant_mult.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.concordant_mult", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "concordant_uniq", "format": "txt", "label": "${tool.name} on ${on_string} concordant_uniq.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.concordant_uniq", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "concordant_transloc", "format": "txt", "label": "${tool.name} on ${on_string} concordant_transloc.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.concordant_transloc", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "nomapping", "format": "txt", "label": "${tool.name} on ${on_string} nomapping.${result.format}", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.nomapping", "edam_format": "format_2330", "edam_data": "data_0006", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "nomapping_fq", "format": "fastq", "label": "${tool.name} on ${on_string} nomapping.fq", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.nomapping.fq", "edam_format": "format_1930", "edam_data": "data_2044", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "nomapping_1_fq", "format": "fastq", "label": "${tool.name} on ${on_string} nomapping.1.fq", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.nomapping.1.fq", "edam_format": "format_1930", "edam_data": "data_2044", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}, {"model_class": "ToolOutput", "name": "nomapping_2_fq", "format": "fastq", "label": "${tool.name} on ${on_string} nomapping.2.fq", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "gsnap_out.nomapping.2.fq", "edam_format": "format_1930", "edam_data": "data_2044", "discover_datasets": [{"discover_via": "pattern", "dbkey": "__input__", "format": null, "visible": false, "assign_primary_output": false, "directory": null, "recurse": false, "match_relative_path": false, "sort_key": "filename", "sort_comp": "lexical", "pattern": "primary_DATASET_ID_(?P<designation>[^_]+)_(?P<visible>[^_]+)_(?P<ext>[^_]+)(_(?P<dbkey>[^_]+))?", "sort_by": "filename"}]}], "panel_section_id": "ngs_mapping", "panel_section_name": "NGS:Mapping", "form_style": "regular"}