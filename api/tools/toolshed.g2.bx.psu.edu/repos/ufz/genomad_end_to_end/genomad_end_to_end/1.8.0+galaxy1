{"model_class": "Tool", "id": "toolshed.g2.bx.psu.edu/repos/ufz/genomad_end_to_end/genomad_end_to_end/1.8.0+galaxy1", "name": "geNomad", "version": "1.8.0+galaxy1", "description": "identify virus and plasmid genomes from nucleotide sequences", "labels": [], "edam_operations": ["operation_3460", "operation_0361"], "edam_topics": ["topic_0080"], "hidden": "", "is_workflow_compatible": true, "xrefs": [{"value": "genomad", "reftype": "bio.tools"}], "tool_shed_repository": {"name": "genomad_end_to_end", "owner": "ufz", "changeset_revision": "edb671f0661e", "tool_shed": "toolshed.g2.bx.psu.edu"}, "inputs": [{"model_class": "BooleanToolParameter", "name": "license", "argument": null, "type": "boolean", "label": "Agree with geNomad license?", "help": "geNomad is free to use for internal use, research & development, non-commercial use, purposes only.", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "true", "falsevalue": "false"}, {"model_class": "DataToolParameter", "name": "INPUT", "argument": "INPUT", "type": "data", "label": "Input sequences", "help": "geNomad will work for isolate genomes, metagenomes, and metatranscriptomes", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": null, "extensions": ["fasta"], "edam": {"edam_formats": ["format_1929"], "edam_data": ["data_2044"]}, "multiple": false, "options": {"dce": [], "ldda": [], "hda": [], "hdca": []}, "tag": null}, {"model_class": "SelectToolParameter", "name": "DATABASE", "argument": null, "type": "select", "label": "Reference data", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": true, "value": null, "options": [], "display": null, "multiple": false, "textable": false}, {"model_class": "Conditional", "name": "filter_cond", "type": "conditional", "cases": [{"model_class": "ConditionalWhen", "value": "--conservative", "inputs": []}, {"model_class": "ConditionalWhen", "value": "--relaxed", "inputs": []}, {"model_class": "ConditionalWhen", "value": "", "inputs": [{"model_class": "FloatToolParameter", "name": "min_score", "argument": "--min-score", "type": "float", "label": "Minimum score to flag a sequence as virus or plasmid", "help": "", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.7", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "max_fdr", "argument": "--max-fdr", "type": "float", "label": "Maximum false discovery rate", "help": "This option will be ignored if the scores were not calibrated", "refresh_on_change": false, "min": 0.0, "max": 1.0, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_plasmid_marker_enrichment", "argument": "--min-plasmid-marker-enrichment", "type": "float", "label": "Minimum allowed value for the plasmid marker enrichment score", "help": "This enrichment score represents the total enrichment of plasmid markers in the sequence. Sequences with multiple plasmid markers will have higher values than the ones that encode few or no markers. This option will be ignored if the annotation module was not executed.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.1", "area": false, "datalist": []}, {"model_class": "FloatToolParameter", "name": "min_virus_marker_enrichment", "argument": "--min-virus-marker-enrichment", "type": "float", "label": "Minimum allowed value for the virus marker enrichment score", "help": "This enrichment score represents the total enrichment of virus markers in the sequence. Sequences with multiple virus markers will have higher values than the ones that encode few or no markers. This option will be ignored if the annotation module was not executed.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0.0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_plasmid_hallmarks", "argument": "--min-plasmid-hallmarks", "type": "integer", "label": "minimum number of plasmid hallmarks in the identified plasmids", "help": "this option will be ignored if the annotation module was not executed.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_plasmid_hallmarks_short_seqs", "argument": "--min-plasmid-hallmarks-short-seqs", "type": "integer", "label": "minimum number of plasmid hallmarks in plasmids shorter than 2,500 bp", "help": "this option will be ignored if the annotation module was not executed.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_virus_hallmarks", "argument": "--min-virus-hallmarks", "type": "integer", "label": "minimum number of virus hallmarks in the identified viruses", "help": "this option will be ignored if the annotation module was not executed.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "min_virus_hallmarks_short_seqs", "argument": "--min-virus-hallmarks-short-seqs", "type": "integer", "label": "minimum number of virus hallmarks in viruses shorter than 2,500 bp", "help": "this option will be ignored if the annotation module was not executed.", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "1", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "max_uscg", "argument": "--max-uscg", "type": "integer", "label": "Maximum allowed number of universal single copy genes (USCGs) in a virus or a plasmid.", "help": "Sequences with more than this number of USCGs will not be classified as viruses or plasmids, regardless of their score. This option will be ignored if the annotation module was not executed.", "refresh_on_change": false, "min": null, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4", "area": false, "datalist": []}]}], "test_param": {"model_class": "SelectToolParameter", "name": "filtering_preset", "argument": null, "type": "select", "label": "Filtering presets", "help": "After classification, sequences are further filtered to remove possible false positives. The --conservative preset makes those filters even more aggressive, resulting in more restricted sets of plasmid and virus, containing only sequences whose classification is strongly supported. The --relaxed preset disables all post-classification filters.", "refresh_on_change": true, "optional": false, "hidden": false, "is_dynamic": false, "value": "--conservative", "options": [["Conservative (--conservative)", "--conservative", false], ["Relaxed (--relaxed)", "--relaxed", false], ["Manual", "", false]], "display": null, "multiple": false, "textable": false}}, {"model_class": "Section", "name": "basic", "type": "section", "title": "basic options", "help": null, "expanded": true, "inputs": [{"model_class": "BooleanToolParameter", "name": "disable_find_proviruses", "argument": "--disable-find-proviruses", "type": "boolean", "label": "Execute the find-proviruses module", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--disable-find-proviruses"}, {"model_class": "BooleanToolParameter", "name": "disable_nn_classification", "argument": "--disable-nn-classification", "type": "boolean", "label": "Execute the find-proviruses module", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": true, "truevalue": "", "falsevalue": "--disable-nn-classification"}, {"model_class": "BooleanToolParameter", "name": "enable_score_calibration", "argument": "--enable-score-calibration", "type": "boolean", "label": "Execute the score-calibration module", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--enable-score-calibration", "falsevalue": ""}]}, {"model_class": "Section", "name": "annotation", "type": "section", "title": "annotation options", "help": null, "expanded": true, "inputs": [{"model_class": "BooleanToolParameter", "name": "conservative_taxonomy", "argument": "--conservative-taxonomy", "type": "boolean", "label": "More conservative virus taxonomic assignment", "help": "This might reduce the amount of genomes assigned to the family level, but will decrease the rate of family misassignment", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--conservative-taxonomy", "falsevalue": ""}, {"model_class": "FloatToolParameter", "name": "sensitivity", "argument": "--sensitivity", "type": "float", "label": "MMseqs2 marker search sensitivity", "help": "Higher values will annotate more proteins, but the search will be slower and consume more memory", "refresh_on_change": false, "min": 0.0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "4.2", "area": false, "datalist": []}, {"model_class": "IntegerToolParameter", "name": "splits", "argument": "--splits", "type": "integer", "label": "Split the data for the MMseqs2 search.", "help": "Higher values will reduce memory usage, but will make the search slower. If the MMseqs2 search is failing, try to increase the number of splits. Consult you Galaxy admin if more memory may be used", "refresh_on_change": false, "min": 0, "max": null, "optional": false, "hidden": false, "is_dynamic": false, "value": "0", "area": false, "datalist": []}]}, {"model_class": "Section", "name": "provirus", "type": "section", "title": "find-proviruses options", "help": null, "expanded": true, "inputs": [{"model_class": "BooleanToolParameter", "name": "skip_integrase_identification", "argument": "--skip-integrase-identification", "type": "boolean", "label": "Disable provirus boundary extension using nearby integrases", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--skip-integrase-identification", "falsevalue": ""}, {"model_class": "BooleanToolParameter", "name": "skip_trna_identification", "argument": "--skip-trna-identification", "type": "boolean", "label": "Disable provirus boundary extension using nearby tRNAs", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--skip-trna-identification", "falsevalue": ""}]}, {"model_class": "Section", "name": "score", "type": "section", "title": "score-calibration options", "help": null, "expanded": true, "inputs": [{"model_class": "SelectToolParameter", "name": "composition", "argument": "--composition", "type": "select", "label": "Method for estimating sample composition", "help": "", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": "auto", "options": [["auto", "auto", true], ["metagenome", "metagenome", false], ["virom", "virom", false]], "display": null, "multiple": false, "textable": false}, {"model_class": "BooleanToolParameter", "name": "force_auto", "argument": "--force-auto", "type": "boolean", "label": "Force automatic composition estimation", "help": "regardless of the sample size", "refresh_on_change": false, "optional": false, "hidden": false, "is_dynamic": false, "value": false, "truevalue": "--force-auto", "falsevalue": ""}]}], "outputs": [{"model_class": "ToolOutput", "name": "summary_plasmid_fna", "format": "fasta", "label": "${tool.name} on ${on_string}: plasmid fasta", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/sequence_summary/sequence_plasmid.fna", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "summary_plasmid_genes", "format": "tabular", "label": "${tool.name} on ${on_string}: plasmid genes", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/sequence_summary/sequence_plasmid_genes.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "summary_plasmid_proteins", "format": "fasta", "label": "${tool.name} on ${on_string}: plasmid proteins fasta", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/sequence_summary/sequence_plasmid_proteins.faa", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "summary_plasmid_summary", "format": "tabular", "label": "${tool.name} on ${on_string}: plasmid summary", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/sequence_summary/sequence_plasmid_summary.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "summary_virus_fna", "format": "fasta", "label": "${tool.name} on ${on_string}: virus fasta", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/sequence_summary/sequence_virus.fna", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "summary_virus_genes", "format": "tabular", "label": "${tool.name} on ${on_string}: virus genes", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/sequence_summary/sequence_virus_genes.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "summary_virus_proteins", "format": "fasta", "label": "${tool.name} on ${on_string}: virus proteins fasta", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/sequence_summary/sequence_virus_proteins.faa", "edam_format": "format_1929", "edam_data": "data_2044", "discover_datasets": []}, {"model_class": "ToolOutput", "name": "summary_virus_summary", "format": "tabular", "label": "${tool.name} on ${on_string}: virus summary", "hidden": false, "output_type": "data", "format_source": null, "default_identifier_source": "None", "metadata_source": "", "parent": null, "count": 1, "from_work_dir": "output/sequence_summary/sequence_virus_summary.tsv", "edam_format": "format_3475", "edam_data": "data_0006", "discover_datasets": []}], "panel_section_id": "metagenomic_analysis", "panel_section_name": "Metagenomic Analysis", "form_style": "regular"}